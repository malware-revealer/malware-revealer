import requests as req

MODEL_STORE = "./models/"
EXTRACTOR_URI = "http://localhost/"

class MalwareRevealer():

    def __init__(self, version):
        model_version_dir = MODEL_STORE + version
        model = importlib.import_module(model_version_dir + "/model.py")
        self.extractor_conf = model_version_dir + "/extractor_conf.yaml"
        self.model = model.new()
        self.version = version


    def get_features_(self, exec):
        files = {
            'exec': exec,
            'extractor_conf': open(self.extractor_conf, 'rb')
        }
        resp = req.post(EXTRACTOR_URI, files=files)

        return resp


    def get_features(self, exec):
        raise NotImplementedError()


    def predict(self, features):
        raise NotImplementedError()


class MalwareRevealerCnn(MalwareRevealer):

    def __init__(self, version):
        super().__init__(version)


    def get_features(self, exec):
        resp = self.get_features_(exec)
        # Get the image from the answer
        image = None
        return image


    def predict(self, features):
        probs = self.model(features)
        return probs


def new(version):
    if version.startswith('cnn'):
        return MalwareRevealerCnn(version)
    else:
        return None
