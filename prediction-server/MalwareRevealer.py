import requests as req
import importlib
import models

MODEL_STORE = "models-data/"
EXTRACTOR_URI = "http://localhost/"

class MalwareRevealer():

    def __init__(self, version):
        model_version_dir = MODEL_STORE + version
        self.extractor_conf = model_version_dir + "/extractor_conf.yaml"
        self.model = models.new(version)
        self.version = version


    def get_features_(self, exec):
        files = {
            'exec': exec,
            'extractor_conf': open(self.extractor_conf, 'rb')
        }
        resp = req.post(EXTRACTOR_URI, files=files)

        return resp


    def get_features(self, exec):
        """
        Should get the features from the appropriate attr according to
        the extractor used.
        """
        raise NotImplementedError()


    def predict(self, features):
        raise NotImplementedError()


class MalwareRevealerCnn(MalwareRevealer):

    def __init__(self, version):
        super().__init__(version)


    def get_features(self, exec):
        resp = self.get_features_(exec)
        image = resp.files['BinaryImage']
        return image


    def predict(self, features):
        probs = self.model(features)
        return probs


def new(version):
    if version.startswith('cnn'):
        return MalwareRevealerCnn(version)
    else:
        return None
