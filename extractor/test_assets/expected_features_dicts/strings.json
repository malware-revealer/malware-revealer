{"strings_count": 94378, "printabales": ["!This", "program", "cannot", "rdata", "vUUVW", "UQh8Y", "VVVVV", "MessageBoxA", "GetFocus", "USER32", "_snprintf", "strncpy", "__argc", "__argv", "strrchr", "strncmp", "malloc", "getenv", "setbuf", "__iob_func", "fprintf", "memcpy", "memset", "qsort", "bsearch", "realloc", "MSVCR90", "_amsg_exit", "__getmainargs", "_cexit", "_exit", "_XcptFilter", "_ismbblead", "_acmdln", "_initterm", "_initterm_e", "_configthreadlocale", "__setusermatherr", "_adjust_fdiv", "__p__commode", "__p__fmode", "_encode_pointer", "__set_app_type", "terminate", "YAXXZ", "_unlock", "__dllonexit", "_lock", "_onexit", "_decode_pointer", "_except_handler4_common", "_invoke_watson", "_controlfp_s", "_crt_debugger_hook", "lstrlenA", "LocalFree", "FormatMessageA", "GetLastError", "GetModuleFileNameA", "LockResource", "LoadResource", "FindResourceA", "MapViewOfFile", "CloseHandle", "CreateFileMappingA", "GetFileSize", "CreateFileA", "UnmapViewOfFile", "GetProcAddress", "LoadLibraryA", "GetFullPathNameA", "OutputDebugStringA", "GetModuleHandleA", "FreeLibrary", "VirtualAlloc", "VirtualProtect", "VirtualFree", "HeapFree", "GetProcessHeap", "SetLastError", "IsBadReadPtr", "HeapAlloc", "InterlockedExchange", "Sleep", "InterlockedCompareExchange", "GetStartupInfoA", "SetUnhandledExceptionFilter", "QueryPerformanceCounter", "GetTickCount", "GetCurrentThreadId", "GetCurrentProcessId", "GetSystemTimeAsFileTime", "TerminateProcess", "GetCurrentProcess", "UnhandledExceptionFilter", "IsDebuggerPresent", "KERNEL32", "_stricmp", "_strdup", "_MessageBox", "windows_exe", "_MessageBox", "Retrieving", "module", "PYTHONSCRIPT", "Could", "locate", "script", "resource", "Could", "script", "resource", "Could", "script", "resource", "Invalid", "script", "resource", "PYTHON27", "PYTHON27", "Could", "python", "pythondll", "PYTHON27", "PYTHON27", "LoadLibrary", "pythondll", "failed", "initzlib", "initzlib", "pythondll", "enough", "space", "PY2EXE_VERBOSE", "PY2EXE_VERBOSE", "frozen", "frozen", "PYTHONINSPECT", "stdin", "stdin", "__main__", "Py_Initialize", "PyRun_SimpleString", "Py_Finalize", "Py_GetPath", "Py_SetPythonHome", "Py_SetProgramName", "PyMarshal_ReadObjectFromString", "PyObject_CallFunction", "PyString_AsStringAndSize", "PyString_AsString", "PyArg_ParseTuple", "PyErr_Format", "PyImport_ImportModule", "PyInt_FromLong", "PyInt_AsLong", "PyLong_FromVoidPtr", "Py_InitModule4", "PyTuple_New", "PyTuple_SetItem", "Py_IsInitialized", "PyObject_SetAttrString", "PyCFunction_NewEx", "PyObject_GetAttrString", "Py_BuildValue", "PyObject_Call", "PySys_WriteStderr", "PyErr_Occurred", "PyErr_Clear", "PyObject_IsInstance", "PyInt_Type", "_Py_NoneStruct", "PyExc_ImportError", "_Py_PackageContext", "PyGILState_Ensure", "PyGILState_Release", "PySys_SetObject", "PySys_GetObject", "PyString_FromString", "Py_FdIsInteractive", "PyRun_InteractiveLoop", "PySys_SetArgv", "PyImport_AddModule", "PyModule_GetDict", "PySequence_Length", "PySequence_GetItem", "PyEval_EvalCode", "PyErr_Print", "PyBool_FromLong", "Py_VerboseFlag", "Py_NoSiteFlag", "Py_OptimizeFlag", "Py_IgnoreEnvironmentFlag", "PyObject_Str", "PyList_New", "PyList_SetItem", "PyList_Append", "undef", "symbol", "undefined", "symbol", "undef", "symbol", "undefined", "symbol", "Importer", "which", "extension", "modules", "memory", "set_find_proc", "import_module", "MemoryLoadLibrary", "failed", "loading", "Could", "function", "import_module", "import_module", "initfunc", "dllname", "finder", "module", "get_verbose_flag", "Return", "Py_Verbose", "set_find_proc", "_memimporter", "!This", "program", "cannot", "Richg", "rdata", "reloc", "WPVhH", "WPVhH", "SVWPQR", "SVWPQR", "SVWPQR", "SVWPQR", "PSRh0", "RQQPh", "SVWti", "Q8RPW", "Rhpg$", "WWWWWWWQRP", "t$Wh4", "t$WhH", "QRPFVS", "u88L7", "u28D7", "RPFVS", "u4f9Lp", "$RPQhD", "$QRPhP", "QSVWh", "QSVWhq", "QVRh4", "QSVWj", "Qhxj&", "T$4R3", "tDVQP", "QhPp&", "9uVWt9", "WVRPh", "t$TVV", "T$4R3", "L$hQ3", "L$XQh", "L$4Q3", "LSVW3", "T$XRh", "T$$Rh", "L$0PWQ", "QRVhx", "D$$Ph", "D$0Ph", "D$0Ph", "D$0Ph", "D$0Ph", "VHQWj", "L$0Qj", "SVHW3", "66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666", "666666666666666666666666666666666666666", "6666666666666666666", "0123466666665", "D$0PS", "D$$PS", "555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555", "5555555555555555555", "5!5555", "012355555554", "VPhL$&", "SWRPQ", "L$DQP", "t$$WPV", "QRPWSh", "SVWP3", "VPQRh", "D$DP3", "D$8PhD", "VPQRh", "T$$WP", "D$0SR", "L$4SR", "PWRQh", "PWRQh", "D$8Ph", "L$8VP", "D$DQPR", "4SVWh", "D$pVP", "L$xVQ", "QSVWh", "T$8Rh$", "D$$Ph", "SVWu$", "D$$Ph", "IpSVWP", "PSVWh", "QSVWh", "$$tvhh", "9t$$t", "T$8RP", "4SVWP", "L$$Qj", "L$0QP", "L$0QV", "L$$Qj", "L$$Qj", "L$$Qj", "L$$QS", "D$4WS", "VWPhLV", "VWPhhV", "f9HHuDP", "QSVW3", "L$$Qh", "QRh4l", "RPhPp", "T$$RP", "T$$RP", "L$4WQ", "D$TSPWj", "L$8QR", "9L$Dt", "T$DRP", "PQhHs", "PQhxu", "SSQPS", "QWhLy", "L$0QP", "D$HPQ", "D$8Ph", "T$$RPWV", "D$4Pj", "u!9t$", "t$VhH", "t$VhP", "T$4QR", "D$H8L$Ht", "tNVh4", "L$tQR", "T$0Rj", "T$0RP", "D$0Ph", "T$8R3", "T$$QR", "t$Vh$", "t$Vh4", "t$VhH", "t$VhT", "t$Vhp", "tU9x$tP", "9O0u$9OPu", "K$VWQ", "Gh9Ghr", "f91ux", "f99uL", "D$$WP", "qTuSP", "D$hSVW", "T$XR3", "T$hRh", "D$pPShD", "L$8RPQVh", "QSVWh", "SVWPQ", "L$$QW", "V0SRP", "N2QPh", "$SVW3", "O2RPQ", "D$4Ph", "D$0RP", "D$HPR", "L$DWPQ", "D$$RWPN", "L$LWQ", "t0QVW", "jpPRQ", "u3h8H", "u3h8H", "trVPQ", "VPQRh", "SVWtC", "uCVSh", "txWSV", "PQRWS", "RWVQP", "RWVQP", "SVWu3h", "uBh4&", "u0h8H", "u0h8H", "QSVWPQ", "u0h4N", "VWu3h", "u3h8H", "QRWVPPPPPQj", "D$TPh", "L$XQh", "T$xRh", "L$pQ3", "D$dSVWQ", "D$TQRP", "H8SVW", "WVPRh", "T$0VR", "T$0RV", "D$0PV", "tJhXd$", "D$$W3", "L$0RSPQh", "tXhXd$", "PQRVh", "RIQPhp", "QSVWh", "QSVWj", "WPRSh", "D$$Ph", "L$$PQ", "L$4QW", "T$0WR", "T$4RV", "L$HQR", "T$$RV", "T$$RS", "D$8tU", "D$LRWQ", "T$4Rh", "D$4Ph", "L$8QR", "VPQhx", "u1Ph8", "Qhpg$", "tg9H$tb", "QPVh0", "T$0RPV", "ITSVW", "jFPQS", "QPVRh", "QSVWhx2", "PRWSV", "QPRWSV", "QPRSV", "QPRSV", "uRSVW", "QWVPR", "VQWRj", "SVSQhL", "SVPQh", "D$XSP", "RWPQV", "D$pPh", "D$P9D$8", "T$P9T$8", "NVWWh", "VWQh0", "VSQhp", "QSVW3", "QRhtO", "PWQhXP", "RPhhP", "S9D$$u", "SVWu!", "QSVW3", "L$HQh", "T$8VR", "D$$Sh", "PQh$&", "IT3HT", "PT3ST", "PT3QT", "FTt0h", "tKWWV", "RPVWQj", "WShdW", "RPhXX", "PQhDY", "QPPhlY", "RPh0Z", "PWWPh", "u3h8H", "uK95x", "WPh$&", "$$$$$$", "$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$", "f94Bt", "0FPhx3", "VPQh$", "QWhlb", "SSSSWPSS", "D$$f9B", "WRPQV", "If92t", "tLPVW", "PWQRV", "PWQRV", "VRSPj", "SQSVhL", "SQPVh", "D$TVP", "L$8PQ", "D$8RP", "T$8VR", "D$0VPR", "L$4tJf", "L$D9L$", "T$D9T$", "PVhxg", "VQRh$h", "SVWP3", "T$DRh", "T$8Pj", "T$4PQR", "t5h8w", "L$0Qj", "t5h8w", "t5h8w", "t5h8w", "QPPPP", "QPPPPR", "4SVWh", "VWPQj", "PQSRV", "SVWQP", "L00QR", "L$4Qh", "f9JHu", "L$H9Q", "L$H9Q", "PPPWS", "ApSVW", "ApSVW", "D$pSV", "D$8jEP", "I$WQP", "iiiiii", "iiiiii", "0123456789", "ABCDEFGHIJKLMNOPQRSTUViiWXXXiYZ", "abciidddeifgh", "VWt4h", "tv93tr", "tjFVj", "SQVRPW", "L$DRWP", "D$$WP", "L$89L$D", "9D$du", "T$89T$D", "D$89D$Duw", "D$89D$D", "L$89L$D", "D$89D$D", "9L$Dt", "SVWPh", "SVAQh", "D$49y", "D$DPVQR", "T$DPj", "L$LQRj", "T$XRj", "D$XPj", "WSVRQPh", "T$8WR", "L$$Qj", "T$0QR", "tcSVW", "tSSh4", "L$8Qh", "SVWh8", "WRVSP", "WQRSV", "8SSSSh", "PVVQh", "RPQVWh", "D$0SV", "t!Pj0", "t!PjN", "t!PjS", "t!PjF", "t!PjT", "D$8PW", "t1Pjg", "L$8QW", "T$8RW", "t0Pjt", "t0Pjs", "T$0VR", "D$4VP", "D$LPW", "T$4Rj", "t$VhT", "D$4PVV", "L$4QRP", "L$$WQV", "L$$SQV", "QSVWh", "T$$QPR", "L$0QP", "T$0RQ", "L$0QP", "D$0RP", "D$$QRP", "T$0RQ", "D$0PR", "L$0QV", "L$0QV", "D$0PR", "L$0QP", "L$0QP", "L$0QP", "L$0QP", "D$0PR", "L$0QP", "D$0PR", "tBhtN", "T$$RV", "D$$QRP", "T$0RQ", "L$0QP", "D$$RP", "T$0RQ", "L$0QP", "T$0RV", "T$0PQR", "L$0QV", "T$0RV", "$$PQR", "T$0RV", "T$0RV", "T$4RV", "T$8RV", "D$$QRP", "D$DPV", "L$HQV", "$DPQR", "T$PRV", "T$LRV", "$LRPQ", "T$TRV", "$PRPQ", "D$$PV", "L$XQV", "L$TQP", "D$XPR", "L$4RPQ", "L$dQV", "L$XSQ", "L$hQV", "L$hQP", "$dQRP", "D$hPR", "$dQRP", "tAhTy", "tehtN", "L$$QP", "PQRhh", "$SVW3", "VSPQR", "RPQh8", "QSVWh", "SVWh8w", "QSVWj$", "L$0QR", "H4WQh", "tHPSVh", "uCWVS", "insort_left", "bisect_left", "insort", "insort_right", "bisect", "bisect_right", "negative", "bisect_right", "insort_right", "insert", "bisect_left", "insort_left", "_bisect", "lookup_error", "register_error", "mbcs_decode", "mbcs_encode", "charbuffer_encode", "readbuffer_encode", "charmap_build", "charmap_decode", "charmap_encode", "ascii_decode", "ascii_encode", "latin_1_decode", "latin_1_encode", "raw_unicode_escape_decode", "raw_unicode_escape_encode", "unicode_internal_decode", "unicode_internal_encode", "unicode_escape_decode", "unicode_escape_encode", "utf_32_ex_decode", "utf_32_be_decode", "utf_32_le_decode", "utf_32_decode", "utf_32_be_encode", "utf_32_le_encode", "utf_32_encode", "utf_16_ex_decode", "utf_16_be_decode", "utf_16_le_decode", "utf_16_decode", "utf_16_be_encode", "utf_16_le_encode", "utf_16_encode", "utf_7_decode", "utf_7_encode", "utf_8_decode", "utf_8_encode", "escape_decode", "escape_encode", "decode", "encode", "lookup", "register", "lookup", "encode", "decode", "escape_decode", "escape_encode", "unicode_internal_decode", "utf_7_decode", "utf_8_decode", "utf_16_decode", "utf_16_le_decode", "utf_16_be_decode", "utf_16_ex_decode", "utf_32_decode", "utf_32_le_decode", "utf_32_be_decode", "utf_32_ex_decode", "unicode_escape_decode", "raw_unicode_escape_decode", "latin_1_decode", "ascii_decode", "charmap_decode", "mbcs_decode", "readbuffer_encode", "charbuffer_encode", "unicode_internal_encode", "utf_7_encode", "utf_8_encode", "utf_16_encode", "utf_16_le_encode", "utf_16_be_encode", "utf_32_encode", "utf_32_le_encode", "utf_32_be_encode", "unicode_escape_encode", "raw_unicode_escape_encode", "latin_1_encode", "ascii_encode", "charmap_encode", "charmap_build", "mbcs_encode", "register_error", "lookup_error", "_codecs", "collections", "defaultdict", "Factory", "default", "value", "called", "__missing__", "default_factory", "__missing__", "deque_reverse_iterator", "deque_iterator", "__length_hint__", "collections", "deque", "__sizeof__", "rotate", "reverse", "__reversed__", "remove", "__reduce__", "popleft", "extendleft", "extend", "count", "__copy__", "clear", "appendleft", "append", "maximum", "deque", "unbounded", "cannot", "blocks", "deque", "empty", "deque", "rotate", "deque", "mutated", "during", "iteration", "deque", "mutated", "during", "remove", "deque", "remove", "deque", "deque", "index", "range", "__dict__", "deque", "maxlen", "deque", "deque", "maxlen", "iterable", "maxlen", "deque", "maxlen", "negative", "iteritems", "defaultdict", "defaultdict", "first", "argument", "callable", "_collections", "deque", "defaultdict", "get_dialect", "unregister_dialect", "register_dialect", "list_dialects", "writer", "reader", "writer", "writerows", "writerow", "reader", "line_num", "Dialect", "dialect", "quoting", "quotechar", "lineterminator", "escapechar", "strict", "doublequote", "skipinitialspace", "delimiter", "QUOTE_NONE", "QUOTE_NONNUMERIC", "QUOTE_ALL", "QUOTE_MINIMAL", "unknown", "dialect", "integer", "string", "character", "string", "string", "quoting", "value", "OOOOOOOOO", "delimiter", "character", "string", "quotechar", "quoting", "enabled", "lineterminator", "field", "larger", "field", "limit", "expected", "after", "character", "unquoted", "field", "universal", "newline", "unexpected", "contains", "argument", "iterator", "escape", "escapechar", "single", "empty", "field", "record", "quoted", "sequence", "expected", "writerows", "argument", "iterable", "write", "argument", "write", "method", "dialect", "string", "unicode", "field_size_limit", "limit", "integer", "__version__", "_dialects", "Dialect", "Error", "Error", "functools", "partial", "__setstate__", "dictionary", "keyword", "arguments", "future", "partial", "calls", "keywords", "tuple", "arguments", "future", "partial", "calls", "function", "object", "future", "partial", "calls", "reduce", "reduce", "support", "iteration", "reduce", "empty", "sequence", "initial", "value", "partial", "takes", "least", "argument", "first", "argument", "callable", "partial", "object", "dictionary", "deleted", "setting", "partial", "object", "dictionary", "invalid", "partial", "state", "_functools", "nsmallest", "nlargest", "heapify", "heappop", "__lt__", "index", "range", "changed", "during", "iteration", "heappush", "argument", "heapreplace", "heappushpop", "nlargest", "nsmallest", "_heapq", "__about__", "resolution", "logreader", "profiler", "coverage", "$Revision$", "_hotshot", "LogReaderType", "logreader", "input", "already", "closed", "Dictionary", "mapping", "informational", "lists", "values", "_hotshot", "ProfilerType", "profiler", "output", "already", "closed", "closed", "linetimings", "lineevents", "frametimings", "start", "runcode", "fileno", "close", "addinfo", "logreader", "object", "already", "closed", "incomplete", "profile", "record", "cannot", "iterate", "closed", "LogReader", "object", "unknown", "record", "events", "string", "large", "internal", "buffer", "profiler", "already", "active", "profiler", "already", "closed", "addinfo", "profiler", "object", "already", "closed", "runcall", "runcode", "locals", "dictionary", "profiler", "active", "logreader", "unexpected", "error", "hotshot", "version", "requested", "frame", "timings", "requested", "events", "requested", "timings", "platform", "executable", "executable", "version", "reported", "performance", "frequency", "current", "directory", "string", "entry", "entry", "profiler", "coverage", "_hotshot", "LogReaderType", "ProfilerType", "hotshot", "ProfilerError", "ProfilerError", "WHAT_ENTER", "WHAT_EXIT", "WHAT_LINENO", "WHAT_OTHER", "WHAT_ADD_INFO", "WHAT_DEFINE_FILE", "WHAT_DEFINE_FUNC", "WHAT_LINE_TIMES", "scanstring", "encode_basestring_ascii", "_json", "Encoder", "_current_indent_level", "allow_nan", "_json", "Scanner", "context", "string", "skipkeys", "sort_keys", "item_separator", "key_separator", "indent", "encoder", "default", "markers", "parse_constant", "parse_int", "parse_float", "object_pairs_hook", "object_hook", "encoding", "0123456789abcdef", "decoder", "errmsg", "bounds", "Invalid", "control", "character", "Unterminated", "string", "starting", "Invalid", "escape", "Invalid", "uXXXX", "escape", "scanstring", "first", "argument", "string", "Expecting", "property", "Expecting", "delimiter", "Expecting", "delimiter", "Expecting", "object", "Expecting", "property", "enclosed", "double", "quotes", "Expecting", "delimiter", "Expecting", "delimiter", "cannot", "negative", "while", "decoding", "object", "string", "while", "decoding", "array", "string", "Infinity", "Infinity", "while", "decoding", "object", "unicode", "string", "while", "decoding", "array", "unicode", "string", "scan_once", "make_scanner", "encoding", "string", "OOOOOOOOO", "make_encoder", "make_encoder", "argument", "_iterencode", "false", "const", "range", "float", "values", "compliant", "while", "encoding", "object", "Circular", "reference", "detected", "string", "_iterencode_list", "needs", "sequence", "_json", "make_scanner", "make_encoder", "_getdefaultlocale", "strxfrm", "localeconv", "setlocale", "strop", "uppercase", "lowercase", "letters", "setlocale", "invalid", "locale", "category", "unsupported", "locale", "setting", "locale", "query", "failed", "decimal_point", "thousands_sep", "grouping", "int_curr_symbol", "currency_symbol", "mon_decimal_point", "mon_thousands_sep", "mon_grouping", "positive_sign", "negative_sign", "int_frac_digits", "frac_digits", "p_cs_precedes", "p_sep_by_space", "n_cs_precedes", "n_sep_by_space", "p_sign_posn", "n_sign_posn", "strcoll", "strcoll", "arguments", "strings", "strxfrm", "_locale", "LC_CTYPE", "LC_TIME", "LC_COLLATE", "LC_MONETARY", "LC_NUMERIC", "LC_ALL", "CHAR_MAX", "locale", "Error", "__doc__", "_lsprof", "Profiler", "disable", "enable", "getstats", "timeunit", "timer", "builtins", "subcalls", "_lsprof", "profiler_subentry", "_lsprof", "profiler_entry", "inline", "further", "subcalls", "total", "spent", "times", "called", "recursively", "times", "called", "called", "object", "built", "function", "details", "calls", "calls", "inline", "entry", "subcalls", "inlinetime", "total", "entry", "totaltime", "times", "called", "recursively", "reccallcount", "times", "called", "callcount", "object", "built", "function", "__builtin__", "built", "method", "memory", "exhausted", "while", "profiling", "Olldd", "OllddO", "enable", "Profiler", "profiler", "_lsprof", "Profiler", "profiler_entry", "profiler_subentry", "$WCRANGE$$WCMODS", "0123456789", "abcdefghijklmnopqrstuvwxyz", "abcdefghijklmnopqrstuvwxyz", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "continue", "properly", "continue", "supported", "inside", "finally", "clause", "Software", "Python", "PythonCore", "PythonPath", "isspace", "Return", "characters", "whitespace", "there", "least", "character", "False", "otherwise", "isalpha", "Return", "characters", "alphabetic", "there", "least", "character", "False", "otherwise", "isalnum", "Return", "characters", "alphanumeric", "there", "least", "character", "False", "otherwise", "isdigit", "Return", "characters", "digits", "there", "least", "character", "False", "otherwise", "islower", "Return", "cased", "characters", "lowercase", "there", "least", "cased", "character", "False", "otherwise", "isupper", "Return", "cased", "characters", "uppercase", "there", "least", "cased", "character", "False", "otherwise", "istitle", "Return", "titlecased", "string", "there", "least", "character", "uppercase", "characters", "follow", "uncased", "characters", "lowercase", "characters", "cased", "Return", "False", "otherwise", "lower", "Return", "ASCII", "characters", "converted", "lowercase", "upper", "Return", "ASCII", "characters", "converted", "uppercase", "title", "Return", "titlecased", "version", "ASCII", "words", "start", "uppercase", "characters", "remaining", "cased", "characters", "lowercase", "capitalize", "Return", "first", "character", "capitalized", "ASCII", "lower", "cased", "swapcase", "Return", "uppercase", "ASCII", "characters", "converted", "lowercase", "ASCII", "versa", "&B&A&", "QaQcQ", "!a!b!c!d!e!f!g!h!i!!0", "0ASDSES!", "QeQkQ", "QENHN_N", "N0N9NKN9", "NCQAQgQmQnQlQ", "S9SHSGSES", "b6bKbNb", "kbkyk", "l4lkp", "rGrYr", "NMNONNN", "NEQDQ", "NJSISaS", "SoSnS", "Y1YtYvYU", "bSbTbRbQb", "l8lAl", "u0u1u2u3u", "NRNSNiN", "OIQGQFQHQhQqQ", "SpSqS", "V3W0W", "Y7Y8Y", "bXb6e", "g4g1g5g!kdk", "lWlYl_l", "lPlUlal", "lMlNlpp_r", "NMOOOGOWO", "OUO0OPOQO", "O8OCOTO", "OFOcO", "ONO6OYO", "OHOZOLQKQMQuQ", "SsSuS", "T&TNT", "TFTCT3THTBT", "TJT9T", "T5T6T", "VJWQW", "WPWOW", "_d_b_w_y_", "bybsb", "f_gNgOgPgQg", "gIgFg", "gSgWgek", "ljlzl", "pxpbrar", "u7u8u", "&NVNsN", "OpOuO", "OzOTQRQUQiQwQvQxQ", "R8R7R", "R6RAR", "RRSTSSSQSfSwSxSyS", "SsTuT", "TqTvT", "TbThT", "WwWjWiWaWfWdW", "YIYGYHYDYTY", "gsgwg", "gogpg", "gjgrg", "kfkgk", "r8rHrgrir", "yzzyz", "QNRCRJRMRLRKRGR", "WUYQYOYNYPY", "f1f$f", "p0rrrortr", "uOuLuNuKu", "xFyIyHyGy", "YWYXYZY", "cUcBcFcOcIc", "cMcLcHeIe", "eBfIfOfCfRfLfEfAf", "g!h8hHhFhSh9hBhTh", "hLhQh", "l&l$l", "mfmxmwmYm", "mnmZmtmim", "p9ryr", "uZuYu", "x4x7x", "x2xUyPy", "y_yVy", "yWyZy", "PGPCPLPZPIPePvPNPUPuPtPwPOP", "PoPmP", "QjRoR", "fFUjUfUDU", "UaUCUJU1UVUOUUU", "UdU8U", "UcU3UAUWU", "YbY6ZAZIZfZjZ", "ZbZZZFZJZp", "5_7_W_l_i_k_", "cwcgc", "cichczc", "eVeQeYeWe_UOeXeUeTe", "fZfdfhfff", "ueufubupu", "w6w8w", "wkxCxNxeyhymy", "QrRtRuRiR", "X4X$X0X1X!X", "efebece", "enfpftfvfof", "n8nTn!n2ngnJn", "nXn$nVnnn", "n&non4nMn", "nNncnDnrnin_n", "q&q0q!q6qnq", "t5t6t4t", "u&ukuju", "xlxox", "XQXXXWXZXTXkXLXmXJXbXRXKXgY", "aNaLaDaMa", "a7a!b", "iTiui0i", "iJihiki", "iSiyi", "iGkrk", "nNqYqiqdqIqgq", "qlqfqLqeq", "qFqhqVq", "rRr7sEs", "sotZtUt_t", "tvuxu", "wkwfw", "wcwywjwlw", "wewhwbw", "Y$YjYiY", "_F_p_", "aKawabaca_aZaXaua", "dXdTd", "dxd_dzdQdgd4dmd", "iIkLk3l3o", "o1o8o2o", "rDsPsdtctjtptmt", "V9V2V", "VSVNVWVtV6V", "_vagana", "apaka", "bidodyd", "duewexe", "jPkNk", "oQofoTo", "oxono", "ozopodo", "rNsWsit", "v$v&v!v", "RYVkVyViVdVxVjVhVeVqVoVlVbVvV", "jYjkjXj9jDjbjajKjGj5j_jHjYkwk", "u4v8v", "yMzNzFzLzKz", "Q!Q2Q", "a2b4b", "q5rFrpsrs", "tFvBvLv", "j_kxk", "qwsus", "uVvXv", "yazbz", "u_vav", "ykziz", "p0p2p", "tbvev&y", "kakQpXp", "unvlv", "pqvrv", "0A0B0C0D0E0F0G0H0I0J0K0L0M0N0O0P0Q0R0S0T0U0V0W0X0Y0Z0", "0a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0", "$a$b$c$d$e$f$g$h$i$t$u$v$w$x$y$z$", "bdbabfbbbYb", "bZbeb", "g9g8g", "lFlRl", "lOlJlTlKlLlqp", "ObOIOSOdO", "OgORO_OAOXO", "ScSrS", "S0T7T", "TTTET", "TOTAT", "T$TGT", "VAWEWLWIWKWRW", "_x_v_", "bzbpb", "brbtb7e", "eEgGgYgUgLgHg", "gMgZgKg", "lxlglkl", "lqlolil", "lflslel", "ltpzpcr", "OvOtO", "OwOLO", "OkOnO", "Q5R2R3RFR1R", "TkTzT", "TeTlTtTfT", "ToTaT", "TcTgTdT", "VoWrWmWkWqWpWvW", "WsWtWbWhW", "_$_T_", "gxgyg", "ODRIR", "bAeCe", "e6f!f2f5f", "f4f9f", "pArIrJrlrprsrnr", "uGuHu", "xJyLyKyEyDy", "O3P7P", "QaRZRRR", "R_RURbR", "3_0_g_", "cDcEc6cCc", "c9cKcJc", "cAc4cXcTcYc", "cGc3cZcQc8cWc", "cHcJeFe", "eJf_fGfQf", "hIh2h3h", "hKhOh", "hNhDh4h", "k1k4kmk", "lzmcmdmvm", "mXmbmmmom", "pBrxr", "x1xTy", "ySyRyQy", "NpPjPaP", "PSPKP", "PrPHPMPAP", "PJPbP", "PEP_PiPkPcPdPFP", "PnPsPWPQP", "QkRmRlRnR", "SuUvU", "UMUPU4U", "UQUbU6U5U0URUEU", "U2UeUNU9UHU", "ZXZUZgZ", "Z8Z5ZmZPZ_ZeZlZSZdZWZCZ", "ZRZDZ", "ZMZ9ZLZpZiZGZQZVZBZ", "cpcSe", "eefaf", "hmhnh", "hVioh", "huhth", "hkhrh", "h6k3k7k8k", "tducu", "w1w2w4w3w", "w5wHxRxIxMxJxLx&xExPxdygyiyjycykyay", "UwUEV", "X9X8X", "c2egejede", "eheee", "fqfyfjfrf", "mFnGn", "nEnbn", "n3nKn", "nan1n", "nqnkn9n", "n0nSnen", "nxndnwnUnynRnfn5n6nZn", "qKrZr", "s1s3s", "t1t$t", "uoulu", "vFwGwDwMwEwJwNwKwLw", "xdxex", "xmxqxjxnxpxixhx", "xbxtysyrypy", "QzRxR", "WSXhXdXOXMXIXoXUXNX", "XYXeX", "XcXqX", "aEa6a2a", "d9d7d", "d&d0d", "dAd5d", "gfi_i8iNibiqi", "iEiji9iBiWiYiziHiIi5ili3i", "hxi4iii", "ioiDiviXiAitiLi", "iKi7i", "iOiQi2iRi", "iFkEkCkBkHkAk", "nGqTqRqcq", "qbqrqxqjqaqBqXqCqKqpq_qPqSq", "DqMqZqOr", "sJsIsDtJtKtRtQtWt", "tOtPtNtBtFtMtTt", "uyuwu", "vUw_w", "wRwVwZwiwgwTwYwmw", "D_C_o_", "aqasaRaSarala", "ataTaza", "ajaaaVa", "dtdvdrdsd", "dudfd", "dKdSd", "dldkdYdedwdse", "iJkMkKk", "qDrSr", "rCsMsQsLsbtstqtutrtgtnt", "zJz0z", "RHVBVLV5VAVJVIVFVXVZV", "bndpd", "dvezeye", "lAo&o", "oboOo", "ovolo", "oUoroRoPoWo", "oaoko", "ocowojo", "rXsRs", "sasZsYs", "yvk9z", "VnVsVfVcVmVrV", "g4jfjIjgj2jhj", "jmjvj", "jAjjjdjPjOjTjojij", "jVjUjMjNjFjUkTkVk", "risfsgslsesksjs", "v5v2v0v", "yDzHzGz", "qssnsos", "uCvHvIvGv", "zVzXzTzZz", "vdvYvPvSvWvZv", "ygzhz3", "p7p4p1pBp8p", "p3pAp", "ynzlzmz", "kCpDpJpHpIpEpFp", "lUpVpWpRp", "ypzqzW", "k_pap", "kbp&r", "&a&e&g&c&", "!m&i&j&l&", "112131415161718191", "1A1B1C1D1E1F1G1H1I1J1K1L1M1N1O1P1Q1R1S1T1U1V1W1X1Y1Z1", "1a1b1c1d1e1f1g1h1i1j1k1l1m1n1o1p1q1r1s1t1u1v1w1x1y1z1", "1p!q!r!s!t!u!v!w!x!y!", "!a!b!c!d!e!f!g!h!i!", "2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2q2r2s2t2u2v2w2x2y2z2", "$a$b$c$d$e$f$g$h$i$j$k$l$m$n$", "$t$u$v$w$x$y$z$", "A0B0C0D0E0F0G0H0I0J0K0L0M0N0O0P0Q0R0S0T0U0V0W0X0Y0Z0", "0a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0", "OsOGP", "a!bbe", "_J_wa_lzu", "QOX7a", "aha9e", "bzlToP", "dleof", "nLuxv", "SJTqT", "b7eEere", "OlQqQ", "OIQ!S", "eNe!hKj", "RGWGu", "XjKQKR", "xAyGyHyzy", "OczcWS!", "W5XWX", "rhscw", "aqgPh", "tYu$vkx", "Uaxdyd", "k_rarAt8w", "vfwFz", "c4fsg", "eYifk", "lirsT", "d4g8j", "d$nQo", "cogCn", "O!X1X", "PVRoR&T", "XTYnY", "aIbyb", "QhajXn", "d6exe9j", "t&vaw", "hoiSj", "cOfHh", "CP0Xf_", "p6qYq", "p0q0tv", "l6nAo", "a2ktm", "NQOvP", "l9mrn", "n2rKt", "o6s7s", "AQkY9", "GONO2Q", "bugni", "PhQxQMRjRaX", "t0u8uQurvL", "bYmdv", "PuPHT", "evfxf", "onogq", "wVyZy", "l2mJn", "jkiAlz", "xIyWy", "dIfKfmh", "SyXXaYa", "P!PuR1U", "iZi5j", "S9T4V6Z1", "b6gUi5", "PSSDU", "VfWH_", "aNkXp", "r6t4xw", "SLciO", "OOPAbGr", "Rj_SaSg", "bmgAh", "awiwm", "_6bHb", "jkpuu", "xkz8N", "cakefSh", "0aLaCfDf", "nboLq", "oppjsj", "kFk8Tp", "g!h!f!i!j!U", "!z!r!s!", "Q!R!g", "&H&G&", "&$&B&A&", "&&&F&E&1&", "&D&C&0&", "&I&J&7&K&L&2&", "&M&N&9&O&P&4&", "&Q&R&8&", "&S&T&3&", "&U&V&", "&W&X&5&", "&Y&Z&", "&a&b&c&d&6&", "4!5!6!7!8!9!", "k!2!3!", "$0$1$2$3$4$5$6$7$8$9$", "$A$B$C$D$E$F$G$H$I$J$K$L$M$N$O$P$Q$R$S$T$U$V$W$X$Y$Z$", "$a$b$c$d$e$f$g$h$i$j$k$l$m$n$o$p$q$r$s$t$u$v$w$x$y$z$", "_N$z2f", "zHLMoUU", "S5V$l", "jgkPQ", "S7nOx", "yejlV", "fOrpZK", "RgCWpv", "0vOoOi", "wsXMw", "RonWUdj", "pPWPT", "OWjkk", "Htjhsu", "$plagOKs", "P7Uqn", "cLV4Y", "aSnCP", "opqvpz", "VYTlKj", "jyNQTn", "gjC_RQbN", "7V3MUxXe", "khheC", "wDkam", "TizaLd", "N5qRoHhqk", "xcij2", "zCf2a", "Vn2jvPYlKZ", "NyUiQc", "ugohyc", "bmvnOjnp", "_StS3a", "t6MyR", "ZcRQO", "NJAx4R", "jjkjzP", "tssxAp", "o_SLyS", "u$rNXOX", "OyZkAJ", "Z4xrk", "7X1NBJ", "zkkxgeY", "yb!bTk", "gY9RCU", "NTcOQuq", "sMOuseBp", "8Y9YIo", "UMsaK", "b9MrjGK", "s_gNBZ", "ZhCZDZET", "EpAcL", "XMVgZL", "cJv_GpFp", "tqptLu", "TYhVJY", "1ZGXb", "YsJSvxfuj", "!T2NJh", "xQxjyj3Z", "zQu3g", "0OYwfs", "bopq4O", "6jzyLfXv", "RYKSwX", "MTtMf", "xnwhk", "jZFZAw", "zYvtz", "tUt6_", "eobK$T", "Lzv2VXR", "gUkwUgo", "qHmCo", "mm8xzw", "mXDcqp", "UreuoY", "YTEnpr", "0h0tjsnZ", "SahlN", "Vtdoa", "lUxUsZ", "6Q7Q3r", "TpdKT", "T3J&M", "LNhuUw", "UDsWK", "N5rdPQ", "pazZpgLtZ", "JmSWzX", "itlVSk", "vwzfX", "VuEY4d", "4eHMHn", "IM7yhqrYu", "pXCxWj", "rO9wsY", "Upczm", "tY&hNMia", "&d$y3p", "gQGYWd", "xbXhS", "uYEyS", "gzcXAt", "tK0T2s7", "uWsceO", "3sXdyOZO", "etBXP", "wjaAN1T", "bwouGO", "acpdqq", "aaOSvt", "dp4snT", "idX3zEb", "JFwHO", "eaUmWQQ", "oDQ1o", "HJnyl", "oytOfw", "Nxpym", "Bjfr6p", "UW6ThyAW", "kilid", "hgWhxZKT", "PvfkyZ", "zOJsW", "RqLRKO", "0010203040K", "7080W", "M0N0O0P0", "Q0R0S0T0", "d0e0f0", "t0u0v0", "W1X1A", "b1c1t", "e1f1x", "n1o1p1", "v1w1x1", "20212", "G2H2I2", "a2b2J", "e2f2g", "g2h2m", "k2l2y", "30313", "2333D", "4353637383E", "A3B3C3T", "D3E3Z", "S3T3U3", "V3W3X3", "t3u3v3", "C4D4E4g", "F4G4l", "I4J4n", "b4c4d4", "e4f4g4h4i4", "j4k4l4", "q4r4s4", "u4v4w4", "1525q", "N5O5L", "R5S5X", "u5v5G", "w5x5y5z5H", "B6C6D6", "G6H6Q", "576777", "G7H7I7", "y7z7A", "D8E8F8", "K8L8M8N8", "X8Y8B", "b8c8T", "d8e8f8U", "g8h8a", "k8l8m8p", "9091929N", "3949S", "8999Y", "R9S9F", "T9U9V9G", "9a9b9M", "c9d9Q", "h9i9X", "l9m9j", "n9o9p9k", "r9s9p", "AABACA", "IAJAW", "NAOAp", "RASAx", "nAoAV", "rAsAh", "0B1BR", "4B5Bd", "6B7B8Be", "BBCBDBS", "IBJBU", "MBNBg", "RBSBn", "fBgBL", "vBwBxBC", "3C4CE", "7C8CQ", "JCKCJ", "NCOCV", "YCZCK", "nCoCt", "7D8DG", "FDGDHD", "IDJDA", "MDNDM", "TDUDh", "VDWDXDi", "bDcDD", "mDnDU", "qDrDg", "0E1EP", "4E5Eb", "8E9Ej", "HEIEJE", "MENEq", "TEUEVE", "dEeEv", "uEvEC", "yEzEO", "1F2Fn", "4F5Ft", "DFEFFFN", "JFKFX", "LFMFNFY", "PFQFd", "TFUFp", "VFWFXFq", "YFZFw", "aFbFcFf", "dFeFl", "hFiFx", "wFxFS", "DGEGT", "TGUGD", "XGYGL", "cGdGA", "hGiGL", "lGmGT", "pGqGf", "tGuGn", "xGyGz", "3H4Hm", "DHEHV", "VHWHD", "eHfHs", "hHiHjHkHv", "PKVKgKOMhM", "P8PPP", "PTQUQXQ", "QbQcQdQeQfQhQiQjQkQmQoQpQrQvQzQ", "RBRCRDRFRGRHRIRJRKRMRNRORPRQRRRSRTRURVRWRYRZR", "R_RaRbRdReRfRgRhRiRjRkRpRqRrRsRtRuRwRxRfT", "U8VMVKWdWE", "3_a_h_q", "amauc!d", "e1e2e9e", "eDeNePeReVeze", "e!f$f", "f0f1f3f7f8f", "fDfFfGfJfRfVfYf", "f_fafdfefffhfjfkflfofqfrfufvfwfyf!g&g", "gAgFgGgKgMgOgPgSg_gdgfgwgghhhphqhwhyh", "iLiwiAjejtjwj", "kAkBkFkGkLkOkPkQkRkXk&l", "l0l1l2l5l8l", "lAlElFlIlJlUl", "laldlglhlwlxlzl!m", "rzr1s", "tnttvvv8wHwSw", "xpx!z", "124789ABCEFGHIJKLMN", "OPQRS", "TUVWXY", "12345679", "BDEFGHJKLMN", "o&m&j&", "A0B0C0D0E0F0G0H0I0J0K0L0M0N0O0P0Q0R0S0T0U0V0W0X0Y0Z0", "0a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0", "pOupu", "W0XDY", "vharYN", "hwmppLu", "kSkWl", "UThXjp", "gBlrl", "QTS!S", "cYeKj", "UzzvP", "RDQSU", "WQYb_", "dleofBh", "kzlTotzP", "N9P&PeP", "Q8RcR", "_8bEe", "OHSIT", "PIQlQ", "fmg!h", "x&xmy", "dce_h", "lEsIy", "cBf!k", "NOOEQAS", "TFU1U", "q&qgq", "dagVgDm", "rsucz", "NHQCS", "U8o6qhQ", "OtPGRsSo", "pSSDU", "_5_k_", "gnoRr", "ipojW", "PuPCR", "T5XWX", "UTXXXWY", "dqgCh", "myrcw", "XpzcK", "esNeQ", "m6t4xFZu", "cWeog", "hsidq", "OeRZS", "4O$RJS", "lNlHr", "cifju", "SQS&T", "enfnm6r&", "NuOuQ", "WUcik", "SFT1XIY", "PVRJW", "d4ggrfwFz", "Y!q_r", "m6s7s1uPy", "qNuSP", "tYukx", "N1N6N", "NBNVNXN", "OZO0O", "OWOGOvO", "OiOpO", "PCPGP", "gUPPPHPZPVPlPxP", "QRQLQTQbQ", "ziQjQnQ", "R3R9RORDRKRLR", "RTRjRtRiRsR", "S1S3S8S", "SFSES", "NISMS", "SiSnS", "T_TqTwTpT", "UcULU", "UEUVUWU8U3U", "UNVPV", "q4V6V2V8VkVdV", "VlVjV", "W&W7W8WNW", "WOWiW", "XrX!XbXKXpX", "Y2Y8Y", "zUYPYNYZYXYbY", "YgYlYiYxY", "ZlZIZ5Z6ZbZjZ", "_8_A_H_L_N_", "_Q_V_W_Y_a_m_s_w_", "aBaDasawaXaYaZakataoaeaqa_a", "aSaua", "b0b2b3bAbNb", "ckcic", "d&d6d", "dgdodvdNd", "e4e5e7e6e8eKuHeVeUeMeXe", "erexe", "esg5f6f4f", "fOfDfIfAf", "fdfgfhf_fbfpf", "g6gAg8g7gFg", "gYgcgdg", "hMh2hNh", "hYhchwh", "hyiwi", "ixikiTi", "ini9iti", "iYi0iai", "jrj6jxjGjbjYjfjHj8j", "k8k7k", "GkCkIkPkYkTk", "k_kakxkyk", "lUlbljl", "lhlsl", "m5m3m", "mdmZmymYm", "nrn_n", "nvnMn", "nNn$n", "ozoxo", "p2pQpcp", "qeqUq", "qfqbqLqVqlq", "r0r2r", "rFrKrXrtr", "sNsOs", "Wsjshspsxsus", "t_tYtAt", "titptctjtvt", "uDuMuJuIu", "uFuZuiudugukumuxuvu", "v$v4v0v", "vGvHvFv", "vXvavbvhvivjvgvlvpvrvvvxv", "w7w8wGwZwhwkw", "yWy_yZyUySyzy", "z7zCzWzIzazbziz", "N0N5N", "NANDNGNQNZN", "NcNhNiNtNuNyN", "O3O5O7O9O", "OBOHOIOKOLOROTOVOXO_OcOjOlOnOqOwOxOyOzO", "P0P2P3P5P", "PAPBPEPFPJPLPNPQPRPSPWPYP_P", "PbPcPfPgPjPmPpPqP", "Q1Q3Q4Q5Q8Q9QBQJQOQSQUQWQXQ_QdQfQ", "R1R2R5R", "RERIRURWRXRZR", "RaRfRnRwRxRyR", "S0S2S5S", "SBSLSKSYS", "SaScSeSlSmSrSyS", "T1T4T5TCTDTGTMTOT", "TbTdTfTgTiTkTmTnTtT", "U2U5U6U", "UAUGUIUJUMUPUQUXUZU", "UaUdUfU", "V0V3V5V7V9V", "VAVCVDVFVIVKVMVOVTV", "VaVbVcVfViVmVoVqVrVuV", "W3W4W", "WEWFWLWMWRWbWeWgWhWkWmWnWoWpWqWsWtWuWwWyWzW", "X2X9X", "XIXLXMXOXPXUX_XaXdXgXhXxX", "Y0Y3Y5Y6Y", "YCYFYRYSYYY", "Y_YaYcYkYmYoYrYuYvYyY", "Z0ZDZEZGZHZLZPZUZ", "ZcZeZgZmZwZzZ", "_0_4_6_", "_D_E_G_M_P_T_X_", "_c_d_g_o_r_t_u_x_z_", "a0a1a5a6a7a9aAaEaFaIa", "alaraxa", "bBbCbDbFbLbPbQbRbTbVbZb", "bdbmbobsbzb", "c5c6c9c", "cAcBcCcDcFcJcKcNcRcScTcXc", "cecfclcmcqctcucxc", "d0d5d", "dKdOdQdRdSdTdZd", "dadcdmdsdtd", "eCeGeIePeReTe_e", "egekeze", "f$f&f", "f0f1f3f9f7f", "fEfFfJfLfQfNfWfXfYf", "fjfkflf", "fsfuf", "fwfxfyf", "gEgGgHgLgTgUg", "gfglgngtgvg", "h0h1h3h", "hDhEhJhLhUhWhXh", "hkhnhohphqhrhuhyhzh", "i1i3i5i8i", "iBiEiIiNiWi", "icidieifihiiilipiqirizi", "j0j2j4j7j", "jEjFjIjJjNjPjQjRjUjVj", "jdjgjjjqjsj", "k5k6k", "kFkJkMkRkVkXk", "kgkkknkpkuk", "l3l5l6l", "lJlKlMlOlRlTlYl", "lklmloltlvlxlyl", "m1m9m", "m_mamemgmompm", "n2n6n9n", "nDnEnHnInKnOnQnRnSnTnWn", "nbncnhnsn", "o0o3o6o", "oOoQoRoSoWoYoZo", "oaoboholo", "p4p7p9p", "pCpDpHpIpJpKpTpUp", "pNpdpeplpnpupvp", "q0q1q8qAqEqFqGqJqKqPqRqWqZq", "qhqyq", "r4r8r9rArBrCrErNrOrPrSrUrVrZr", "rcrhrkrnrorqrwrxr", "s1s2s5s", "sCsMsPsRsVsXs", "sfsgsiskslsnsosqswsys", "t$t&t", "t0t1t9t", "tCtDtFtGtKtMtQtRtWt", "tbtftgthtktmtntqtrt", "u!u$u", "u6u9u", "uCuGuHuNuPuRuWu", "u_uauouquyuzu", "v2v3v5v8v9v", "vAvCvDvEvIvKvUvYv_vdvevmvnvovqvtv", "w4w5w6w9w", "wBwEwFwJwMwNwOwRwVwWw", "wbwdwgwjwlwpwrwswtwzw", "x0x5x7xCxDxGxHxLxNxRx", "xaxcxdxhxjxnxzx", "y1y4y5y", "yDyEyFyJyKyOyQyTyXy", "ygyiykyryyy", "z0z4z5z8z9z", "zDzEzGzHzLzUzVzYz", "zezgzjzmzuzxz", "q!r!p", "&0&1&", "2&3&4&5&6&7&8&e", "A&B&C&D&E&F&G&H&I&J&K&L&M&N&O&P&Q&x", "R&S&T&U&V&W&X&u", "!R!S!T!U!V!W!X!Y!Z!", "$0$1$2$3$4$5$6$7$8$9$", "$A$B$C$D$E$F$G$H$I$J$K$L$M$N$O$P$Q$R$S$T$U$V$W$X$Y$Z$", "$a$b$c$d$e$f$g$h$i$j$k$l$m$n$o$p$q$r$s$", "!5!6!", "!3!4!l0zC!", "cFC83K", "e6p8iL", "3P4P5P4K6P", "r8g0rK", "eBaNJ0", "DPK0V", "8l4zI2HY5X", "MEPGPn", "HP$Up", "SPQPu", "OPs8z", "yKnIt8", "fPoPL", "u8aPT", "oJMCePq7Y", "bPjPdPQNkPAOZ", "qPuPN0d", "PJtPg", "sPwPj", "&BeDv6", "2Q1Q0QS", "5Q8Q7Q", "QHLFEg", "J6Bq65E", "HQnfIQAKJQ", "KQLQi", "ZIPQQQRQ_Ex", "VQTQUQSQc", "WQjLdNy", "LFz1P", "!HbQaE0", "t7kQI", "nQoQ0A", "Qd3uQsQOA", "R$Ih6e03", "H4BnB", "nF1C9", "1u0m4", "BQ5qM", "KR72A", "68NRK", "8E8g6a", "RZRD2fB8", "p3f9J", "g9H5_D", "L!9yMGE", "c6JKg", "4aRbRdRk", "JcR_Rc8", "hDb8p9", "jRsRnR", "kRiRuR", "Sv0$S8", "oB6S&", "n4e3DS", "v7JSHSSAJ5", "NSLSx", "eSE3V", "sSqSoSrS", "xSEQr", "0TZDE", "ATDT!", "!ta1sJ", "IEdE9HMD", "WTQTTTVTP", "eTdTfTgThTiT", "QJjTa", "BlTkLg", "BWIoTpT", "wTUAvT", "eEyTv", "UUVUZ", "5I8WUX3", "WA045", "14hCjD8095uJ", "bUFMY", "cUs4RF", "4w6fU", "hUlUiU", "rUsUS0", "V1V_4", "VGVFVEVAV", "J8aV&LCGbV", "cVu4&", "eVdVgV", "hViVo", "oVkK6", "GtVuV", "944vV88DM", "Mv4xVB", "lDyJ9E", "z7v26G", "J5W!P1P", "5$Dz07W&J09a", "oL98L8h", "AWBWy", "7I&DKIEW", "IWHWB7TB", "FQWPW", "TWyH4", "cWiWaW", "eWgNW", "e1bWx2gW", "lWvWtW", "pWxNb", "oW_Wh", "z2sWuWQC", "82mWxWwW36", "X0XeL", "5X6X5", "r6&0D", "FXIXAXEX", "DXVB292X5", "NXOXPX", "8NSXV0UXV", "LXRXYXD7MXW", "yNaXa", "hXfXeXlXdXnXs", "vXuXwXtXxX$", "yXzXjJ", "Cl!Ya7", "0Y7Y6", "M3Y4Y8YjE5Y39", "Y!2jCO", "YGYCY", "BYoGR", "Yq5sB6YS", "AXYE51", "7BiY6", "AIsD9", "jYqYL", "EZDZTGGZ56", "IZHZP", "eHCHY", "SZVZ9NTZ", "F6Cl5", "eZcZdZ0", "89hZ2", "lZkZpZ", "3nZoZUH", "aIJ7rZ", "K2tZvZ", "HCE0xZR", "J6H199", "oKA3NDJFI1", "e7K7mEX", "0OZ39", "9HDdAL", "bJDOz", "KHGc5", "t5OEj", "_i1fAF", "!LRDS", "5_7_q", "c7yB2_", "M_TFO_0", "f_k_z", "aGe_h_H", "x_m18", "5ObG!", "j8M1q", "DE3MC9", "Dh26a", "a9aBZ&38a4", "aVHAa", "DamFCa", "BAAAE", "WahHQaM", "PaRaR", "daeaTC", "iakalamau", "tarasa", "ayaza", "HPE$brG4I", "is0b1b2b", "7bALQ", "F4WH9bR", "BbDbEb", "GbHbm", "JbMbz", "ab7Lbb", "pLcbE", "qb73lbp", "3cIcX6", "R2wD!J", "z56cl", "Y6S2EF", "IEcFcUC2", "HcGc4", "KcT2N7LcF9r9", "QcRcw", "bCkAZ", "g5RM_c", "v3bcacd", "kclci", "ncocW", "0d9d4d", "FFEdDd", "NdKdW", "BdURIdCd", "QdTdl", "SdvHq", "NmJZd", "ed!42", "mdldkd", "5JlAG9", "GABKw", "&eP7b", "e2ek7c", "Q73B9enA", "eCeGeK9VL", "DeIeKe", "yDNe4", "TJK47", "VePeWe", "ReXeQe", "ceeeV", "jeieZ", "lekeoe_", "resec", "uewexef", "eM1f4f3f", "M9NfT", "WLQfRf", "ef8Off", "gfifhf", "lfjfm", "rfufpf", "$gP9SO", "DgCgFg", "JgKg11k", "MgNgn", "UgR9VgLH", "p1fggg", "kgngNGE", "q1rgjN", "zgqgR", "l6wCU", "ygugxg", "PLwgX2", "h!hcCo", "rIdh!F", "YhrASh", "jhsAv", "VMch83", "Lyhxh", "07tLt", "iBitA", "c2RiSiL", "UiXiW", "_iHIZHbi", "eijimit", "iicix", "viui1", "2j1jS", "BjAjZi", "U9Mja03", "5BWj9", "vNajbjuA", "dJfjN", "qjwjm", "uLJAS", "MOMkLk", "QkOkq", "Xkm8UkVkz", "kgk5D", "ckkkdk", "EKZ1b0", "8jkV9", "lD5Afy", "OI_2NHElS4U", "DlIlyCcL", "JlcG_B", "GKl2Ll", "OBDEO", "8NlMl", "QlRlX9Pl", "nlolm", "sltlYMx", "vlwlyl", "5m7mF", "Bm0537", "FmEmZ7Hme", "LmNmeJKmk", "QmOm15n", "mambm", "fmpegm$C", "vFlmwG", "mqmrmI", "DSEtmxm", "gGLDP", "B$Bum", "WJa2!n", "rH3n2n0ndcT4g", "5n4ni", "SFDn6", "RnPns", "TnSnz", "VnWn!", "Yn$NE", "nLLNZnb6", "dnfnD", "vnt1d", "8Dunrn", "2o3o6oG", "U4HozL", "ToJop", "UoSoVoXo", "eodo2", "nomooo", "$0KBS", "oyo_9", "0plN1p2pq", "QpSsLL7", "TpW39", "epfpP", "qpppp", "rpBMh4RH", "QIjMxp", "i4280", "qn20qT", "3q4qZ", "DqEqa9", "OGGqHq", "LBX1n6", "sCNqp6", "iqkqjq", "rqsqi", "tquqn", "vqwqo", "1Hzqs", "xd459", "3r4r2r", "LrIrHrJrw", "PrOrNr", "WrSrYr", "XrTrRrQr", "o3Mr71", "Fnrmr", "t99Lv", "5s3s6", "2s8s8", "48DsY", "Psm9MLcKwV", "TsP5UsVsWs", "asbs!", "dsesfs", "MAks1", "rssstspNqs", "usvsM", "t!p!s!u!", "J!K!v!", "!c!a!d!", "O!0!2!", "P!C!Q!", "$a$b$c$d$e$f$g$h$i$j$k$l$m$n$o$p$q$r$s$", "!a!b!c!d!e!f!g!h!i!", "363Q3W3", "2122292", "O9OVO", "PFPpPBP", "PJQdQ", "S$SrS", "UYWeW", "!_4_g_", "a7a0a", "f$fefWfYf", "i0jkjFjsj", "qFqGq", "R!xNxdxzx0y", "p!q!r!s!t!u!v!w!x!y!", "p!q!r!s!t!u!v!w!x!y!", "!a!b!c!d!e!f!g!h!i!", "O9OVO", "PFPpPBP", "S$SrS", "UYWeW", "!_4_g_", "a7a0a", "f$fefWfYf", "i0jkjFjsj", "qFqGq", "R!xNxdxzx0y", "304050", "n&k&l&i&", "&b&f&a&e&g&c&", "S!T!U!", "Q2R2S2T2U2V2W2X2Y2Z2", "$p!q!r!s!t!u!v!w!x!y!z!", "$a$b$c$d$e$f$g$h$i$j$k$l$m$n$o$p$q$r$s$", "!a!b!c!d!e!f!g!h!i!j!I3", "363Q3W3", "2122292", "OHOIOVO_OjOlO", "Q5QJQ2", "RIRWRaR", "TkTtT", "U5UPU", "VIVvVfV8", "oVqVrV", "W3W4WpWwW", "aXdX9", "ZgZmZwZ", "_4_6_", "_E_T_X_d_g_", "a0a7a", "bCbVbZbob", "c9cCcec", "dydQd", "f0f1f3f", "fHfLf", "YfZfafefsfwfxf", "3gfgGgHg", "hrhuhD", "5iBiWicidihi", "jEjPjVj", "jkjsj", "k5kFkVk", "kekgkwk", "l3lYl", "ltlvl", "m1m9m", "mXmemE", "o3oQoYo", "oaobo", "pNpdpup", "q0qFqGqQqH", "rUrVr", "t0tDtFtGtKtWtbtktmt", "uouyu", "v5vCvKvdvevmvovqv", "w4w6wFwMwNw", "w_wbwzw", "xCxNxOxQxhxnxK", "y1y4yL", "EyFyN", "NGNHN", "OdO7O", "OTOXO", "wOxOzO", "Ph4BPFPNPSPWPcPfPjPpP", "RlRwR", "S$S5S", "gSlSzS", "SUT$T", "Tn5CTbTfTlT", "5GUJU", "UaUdU", "V0V7V", "EWFWLWMW", "hWoWsWtWuW", "X2X9X", "IXLXgX", "ZUZeZzZ", "_G_c_r_", "ao9AaFa", "bFbLbQbRbabdb", "bmbsb", "cAcDcNc", "e2eDeTekeze", "fEfQfNf", "jfkflfmf", "LgMgTg", "hDhEhIhLhUhWhw", "khnhzh", "Fiiilirizi", "2j3j4j", "jFjIjzjNjRjdj", "kJkXklkukzk", "l5l6l", "m$m&m", "nHnInKnLnOnQnSnTnWncn", "RoWoZo", "pCpGpKp", "Tpepiplpnpvp", "q1qPqJqSq", "r4r8r9r", "NBrSrWrcr", "nrorxr", "s1s3s", "nsosqsws", "t$t1t9tSt", "tCtMtRt", "uHuNuPuRuluruquzu", "xGxdxjx", "yJyXy", "Agyry", "z8zGzLzVzYz", "zgzjzuzxz", "&a&b&c&m&", "h&i&j&k&", "t$u$v$", "n&o&p&q&r&s&t&", "v&w&y&z&", "Lu7u7", "5v6v_", "TwVwu", "dwew1", "6x7xz", "QzRzI", "izjzkzlz", "zuZwow", "aObOPt", "uCueuivwv", "y3y4y7y8y9y", "yMyQydy", "zDzXzt", "J4Q4K4", "0K0w$", "0M0x$", "0O0y$", "0Q0z$", "ExEgrwM", "6GDGGL", "OVQtQ", "Y2Y4Yf", "hehNm", "N7OL4", "Tm5r5", "8Lb5ezk5l", "wLx9J4", "ejtjqj", "n$o4oF", "PpTpop", "!aZan", "kwnCn", "IHCQJ", "OQVhZ", "mCt!Z", "qdeFj", "dkeri", "f$mkf", "K0fpx", "D3jRj", "nGX$mBx", "Qxw22", "sYyAw", "5kUp5", "pbCqJ", "D&mQm", "z8s9s", "VAsHs", "Bumuru", "9xGxQxfxH", "fyzg5", "UFTnTRk", "GbUfU", "fjN4IV", "j_6id!", "UbyCV", "RgWVP", "Vv1UD", "$a$b$c$d$e$f$g$h$i$t$u$v$w$x$y$z$", "$p!q!r!s!t!u!v!w!x!y!6N", "R8SiS", "P_a_4e", "A0B0C0D0E0F0G0H0I0J0K0L0M0N0O0P0Q0R0S0T0U0V0W0X0Y0Z0", "0a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0", "QI6BI", "DmStS", "SIlIN", "mmTSkt", "fMVOV", "eme_e", "HQkZl&", "QVAWA", "eCOqb", "hUrWrU", "i&J9t", "lt07tt", "MuJugunu", "vQvOvovvv", "$t$u$v$w$x$y$z$", "$a$b$c$d$e$f$g$h$i$", "!a!b!c!d!e!f!g!h!i!j!k!", "A0B0C0D0E0F0G0H0I0J0K0L0M0N0O0P0Q0R0S0T0U0V0W0X0Y0Z0", "0a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0", "vFdpO", "gHrnb", "eEu1U!P", "g2Vno", "bHTXN", "YFTyk", "b9NUS", "S_!cZQa", "W5uCO8u", "5XywL", "WExR_", "qWlIl", "SimuT", "LqCfL", "urlsS", "OmyBR", "g9YsO", "Thpgwckw", "pgRPcC", "Z&P7wwS", "S4nKQ", "R$vAm", "nuSqN", "vfwgrFz", "lCNvY", "HYWS7u", "vTu$R", "FZ4xD", "Wnffm1", "hGYgkfu", "eHyAy", "murfb", "dtf0l", "p8vtSJ", "OceQh", "UUlGb", "X$OFUO", "urrGS", "pe1oU", "yYTXms", "plMWJd", "pdlXX", "mkX0u", "zvhEcR", "TTQMn", "NBcHS", "Uf_0q", "yhglboO", "YvtGd", "0iNV6", "1jtZp", "S8xBg", "zp_3o", "bSSLh", "pJmyQ", "OgO8eZO", "O_OWO2O", "OvOtO", "PCPUPHPNPlP", "lXOeO", "W3W9W", "WBWiW", "WhWmWvWsW", "XeXlX", "UYZYXY", "b9cKcCc", "cqczc", "cEdAd", "d&d!d", "TKTRTSTTTVTCT!TWTYT", "TwTqTdT", "TvTfT", "UIUmUAUUU", "U7UVUuUvUwU3U0U", "VXV9VWV", "VMVbVYV", "VLVTV", "VdVqVkV", "s8s1sPsMsWs", "slsos", "aJaua", "b5lTl", "lhliltlvl", "mCmHm", "mOmRmTm3m", "nnnNnkn", "nSnTn2n", "nboFoGo$o", "o6oKoto", "oxoro", "p9p5pOp", "P_W_V_X_", "Z2Z4Z", "ZgZJZUZ", "ZbZuZ", "ZwZzZ", "tWtUtYtwtmt", "gHgig", "gjgsg", "g2h3h", "hahNhbhDhdh", "hUhfhAhgh", "hJhIh", "hthwh", "iqi9i", "ixi4i", "ificiyi", "j7sRs", "f4f1f6f5f", "_fTfAfOfVfafWfwf", "rfror", "l2l5eUekeMrRrVr0rb", "$k7k9kCkFkYk", "q1qsq", "qhqEqrqJqxqzq", "bCbHbIb", "yFyIy", "ySyZybyWy", "yoygyzy", "xNxmxVxWx&xPxGxLxjx", "w&w5w8wPwQwGwCwZwhwbwew", "uNuKuHu", "uruyu", "z9z7zQz", "v5vCv", "v3vMv", "vVvkvov", "zxzyz", "N1N3N5N7N", "NANBNDNFNJNQNUNWNZN", "NbNcNdNeNgNhNjNkNlNmNnNoNrNtNuNvNwNxNyNzN", "O1O3O5O7O9O", "OAOBODOEOGOHOIOJOKOLOROTOVOaObOfOhOjOkOmOnOqOrOuOwOxOyOzO", "P0P1P2P3P4P5P6P7P8P9P", "PAPBPDPEPFPIPJPKPMPPPQPRPSPTPVPWPXPYP", "PaPbPcPdPfPgPhPiPjPkPmPnPoPpPqPrPsPtPuPxPyPzP", "Q0Q1Q2Q3Q4Q5Q6Q7Q8Q9Q", "QBQGQJQLQNQOQPQRQSQWQXQYQ", "QaQcQdQfQgQiQjQoQrQzQ", "R1R2R4R5R", "RDRERFRGRHRIRKRNRORRRSRURWRXR", "RbRcRdRfRhRkRlRmRnRpRqRsRtRuRvRwRxRyRzR", "S0S1S2S3S4S5S6S7S8S", "SBSDSFSKSLSMSPSTSXSYS", "SeShSjSlSmSrSvSyS", "T0T3T6T7T", "TATBTDTETGTITLTMTNTOTQTZT", "TaTcTeTgTiTjTkTlTmTnToTpTtTyTzT", "U2U4U5U6U8U9U", "UBUEUGUHUKULUMUNUOUQURUSUTUWUXUYUZU", "UbUcUhUiUkUoUpUqUrUsUtUyUzU", "V0V3V5V7V8V", "VAVBVCVDVEVFVGVHVIVJVKVOVPVQVRVSVUVVVZV", "cVeVfVgVmVnVoVpVrVsVtVuVwVxVyVzV", "W1W2W4W5W6W7W8W", "WAWCWDWEWFWHWIWKWRWSWTWUWVWXWYWbWcWeWgWlWnWpWqWrWtWuWxWyWzW", "X1X2X3X4X6X7X8X9X", "XAXBXCXEXFXGXHXIXJXKXNXOXPXRXSXUXVXWXYXZX", "XaXbXcXdXfXgXhXiXjXmXnXoXpXqXrXsXtXuXvXwXxXyXzX", "Y0Y2Y3Y5Y6Y", "YCYEYFYJYLYMYPYRYSYYY", "Y_YaYcYdYfYgYhYiYjYkYlYmYnYoYpYqYrYuYwYzY", "Z$Z&Z", "Z0Z3Z5Z7Z8Z9Z", "ZAZBZCZDZEZGZHZKZLZMZNZOZPZQZRZSZTZVZWZXZYZ", "ZaZcZdZeZfZhZiZkZlZmZnZoZpZqZrZsZxZyZ", "_0_2_3_4_5_6_7_8_", "_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_Q_T_Y_Z_", "_c_e_g_h_k_n_o_r_t_u_v_x_z_", "a0a1a2a3a4a5a6a7a8a9a", "aAaBaCaDaEaFaGaIaKaMaOaPaRaSaTaVaWaXaYaZa", "aaacadaeafaiajakalamanaoaqarasatavaxayaza", "b0b1b2b5b6b8b9b", "bBbDbEbFbJbObPbUbVbWbYbZb", "babbbdbebhbqbrbtbubwbxbzb", "c0c1c3c4c5c6c7c8c", "cAcDcGcHcJcQcRcScTcVcWcXcYcZc", "cdcecfchcjckclcocpcrcsctcucxcyc", "d0d1d2d3d5d6d7d8d9d", "dBdCdIdKdLdMdNdOdPdQdSdUdVdWdYdZd", "dadbdcdddedfdhdjdkdldndodpdqdrdsdtdudvdwd", "e$e&e", "e0e1e2e3e7e", "eAeBeCeDeFeGeJeKeMeNePeReSeTeWeXeZe", "eaedeeegeheiejemeneoeqeseuevexeyeze", "f$f&f", "f0f2f3f7f8f9f", "fBfDfEfFfGfHfIfJfMfNfPfQfXf", "fbfcfefgfifjfkflfmfqfrfsfufxfyf", "g0g2g3g6g7g8g9g", "gAgDgEgGgJgKgMgRgTgUgWgXgYgZg", "gbgcgdgfgggkglgngqgtgvg", "xgygzg", "h0h1h4h5h6h", "hGhKhMhOhRhVhWhXhYhZh", "h_hjhlhmhnhohphqhrhshuhxhyhzh", "i1i2i3i5i6i7i8i", "iAiCiDiEiFiGiHiIiJiKiLiMiNiOiPiQiRiSiUiViXiYi", "i_iaibidieigihiiijilimioipirisitiuivizi", "j0j2j3j4j6j7j8j9j", "jAjBjCjEjFjHjIjJjKjLjMjNjOjQjRjSjTjUjVjWjZj", "jbjcjdjfjgjhjijjjkjljmjnjojpjrjsjtjujvjwjxjzj", "k0k1k3k4k5k6k8k", "kAkBkDkEkHkJkKkMkNkOkPkQkRkSkTkUkVkWkXkZk", "kakhkikkklkmknkokpkqkrksktkukvkwkxkzk", "l1l3l6l7l9l", "lClDlElHlKlLlMlNlOlQlRlSlVlXlYlZlblclelflglklllmlnlolqlslulwlxlzl", "m$m&m", "m0m4m6m7m8m", "mBmDmImLmPmUmVmWmXm", "m_mambmdmemgmhmkmlmmmpmqmrmsmumvmymzm", "n0n1n3n5n", "6n7n9n", "nAnBnEnFnGnHnInJnKnLnOnPnQnRnUnWnYnZn", "nanbncndnenfngnhninjnlnmnonpnqnrnsntnunvnwnxnynzn", "o0o2o4o5o7o8o9o", "oAoBo", "CoDoEoHoIoJoLoNoOoPoQoRoSoToUoVoWoYoZo", "oaocodoeogohoiojokolooopoqosouovowoyo", "p0p1p2p3p4p6p7p8p", "pApBpCpDpEpFpGpHpIpJpKpMpNpPpQpRpSpTpUpVpWpXpYpZp", "papbpcpdpepfpgphpipjpnpqprpsptpwpypzp", "q2q3q4q", "5q7q8q9q", "qAqBqCqDqFqGqHqIqKqMqOqPqQqRqSqTqUqVqWqXqYqZq", "qaqbqcqeqiqjqkqlqmqoqpqqqtquqvqwqyq", "r2r3r4r", "rArBrCrDrErFrIrJrKrNrOrPrQrSrTrUrWrXrZr", "rcrdrerhrjrkrlrmrprqrsrtrvrwrxr", "p!q!r!s!t!u!v!w!x!y!5", "s$s&s", "s0s2s3s5s6s", "sAsBsCsDsEsFsGsHs", "IsJsKsLsNsOsQsSsTsUsVsXsYsZs", "s_sasbscsdsesfsgshsisjsksnspsqsrssstsusvswsxsyszs", "t1t2t7t8t9t", "tBtCtDtEtFtGtHtItJtKtLtMt", "NtOtPtQtRtStTtVtXt", "tatbtctdtetftgthtitjtktltntotqtrtstttutxtytzt", "u$u&u", "u4u6u9u", "uAuBuCuDuFuGuIuJuMuPuQuRuSuUuVuWuXu", "uaubucuduguhuiukulumunuoupuqusuuuvuwuzu", "v1v2v6v7v9v", "vAvBvDvEvFvGvHvIvJvKvNvOvPvQvRvSvUvWvXvYvZv", "vavbvdvevfvgvhvivjvlvmvnvpvqvrvsvtvuvvvwvyvzv", "w0w1w2w3w4w9w", "wBwDwEwFwHwIwJwKwLwMwNwOwRwSwTwUwVwWwXwYw", "wdwgwiwjwmwnwowpwqwrwswtwuwvwwwxwzw", "x1x2x3x5x6x", "xAxBxCxDxFxHxIxJxKxMxOxQxSxTxXxYxZx", "xaxbxcxdxexfxgxhxixoxpxqxrxsxtxuxvxxxyxzx", "y0y1y2y3y5y6y7y8y9y", "yByCyDyEyGyJyKyLyMyNyOyPyQyRyTyUyXyYyaycy", "dyfyiyjykylynypyqyrysytyuyvyyy", "z0z1z2z4z5z6z8z", "zAzBzCzDzEzGzHzIzJzKzLzMzNzOzPzRzSzTzUzVzXzYzZz", "zazbzczdzezfzgzhz", "izjzkzlzmznzozqzrzszuz", "&0&1&", "2&3&4&5&6&7&8&", "A&B&C&D&E&F&G&H&I&J&K&L&M&N&O&P&Q&", "R&S&T&U&V&W&X&", "D!E!I!H!R!", "!_!C!K!", "4!5!6!7!8!9!", "!2!3!", "$0$1$2$3$4$5$6$7$8$9$", "$A$B$C$D$E$F$G$H$I$J$K$L$M$N$O$P$Q$R$S$T$U$V$W$X$Y$Z$", "$a$b$c$d$e$f$g$h$i$j$k$l$m$n$o$p$q$r$s$", "HOIBO", "$Xs3E", "15RT4", "1X4CeRY", "9FREGG", "rF2R0OgO_", "rBRBk", "6!XZSw", "XoYvM", "ZR2JJHlXjXFXv", "V2PWKJ", "KLU68IO", "z4nATR", "GRoXGC", "ZVESo", "KIvXWBwX", "NM5!WtWSS", "Xp7wW", "XzX!YcD", "Y4m64YT", "1aS9Yb", "UYTYWYj", "TVPd3WU", "CMnYpY", "9yAbY", "X9KPx1dF_", "dT65s5VXPHU", "V7PGWXW", "kPAuArTU844_", "YXN9j", "H2IL4L", "0Hl0&9S", "49pNHT", "W3NXE", "5tBODg", "BUX1Bk", "TXTNl", "4HQBq", "9QaQGX", "VSf20", "Jd1pP", "L3_7JRS", "OX6RE", "7_p54_", "BMrO8_EO", "B9_pB", "_ALMwRM7A_", "q7I0V6T7", "_B_1TC_", "I_Z_6N", "AK_L_", "W_V_IWc_d_ke", "07FS_L", "0g_Q_FQU_X_Y_", "b_f_h_4SS", "g86Ej_ZI", "q_FLr_p", "!F6I2", "DXy_vD", "B8EXE", "6XrRo", "S0kNX79WBFm", "zKskM", "gY&ObM", "fFNDn7G", "yegHze", "C9&fUP", "ftICfP", "DCBfo", "VWf4oKZfCXNW", "kJneS", "nSXJ20_", "ZWY9fV", "6pMKR&15Jg", "h3sIM", "PRJ6eB", "g4T6BK0Q", "R_3jeaD!", "2NrDV", "JAFle", "6a5akAA", "SaRa6G", "2Q23z", "$9sWIG", "QRHKM0", "&SW5Rbj5", "SEO7Tb", "SbH6yW", "VCRO!", "Bhegeie", "C5GEca", "bX1dR", "LKKdbfbjbkb", "tbuTsbD", "!5ybL", "qbTP9TubV9vbO", "w6!c26qL", "5_9h6", "m9cbR", "jgPyJVH7OI3RNd", "7yKb1", "HIhlil", "KFG0r4SHB", "$G4VP", "IoQ$Eg063EHQ", "6M669", "5p24DiD", "!E&2qT", "W0JCD", "PSD25X", "SIsDh", "6ZJt5e", "FMZQk4", "hCaLI", "j4&It", "Z0!Rw1", "C!D!_", "7j6kUJ", "9l8lCB7l", "QqP8j9j", "ACrWb", "DjGjFjj", "OJjNTMjOj", "VjWjXF", "xTfLnW", "BTPSCksED", "SPD2e4k", "9&VHh", "X03DL8bF", "OhThVh", "q9XhuW", "UNhPh06Sh", "q8TToh", "nhlhp9RLfh&Nr", "80qhph", "bhcheh55ghEGkhmh0", "0MvhN", "7Cp0Y", "S4i5i7iY", "7GN46", "2dNgFh", "bicijQei", "3QbJP2", "l9EN6", "69XH1O1Q1", "OJ5XqC", "k0kU7", "uQ102k4k", "5HBhG", "4QacjH", "hcictMG", "_GJRVNV", "dclcW", "rIA3X", "E$AYBW2h", "P7MSp", "NVSUA94UXQq", "9PvGu", "7wctc", "C14mqcrc", "PCFsT", "8d9diL", "5d0A6dPN", "TLHdI", "GdAdL", "yRc4T", "KdUWBdj", "IdxIn", "T32Wdu", "RWOLxk", "ydxdlE", "Bl6Ac3", "Cl8KC", "37UIGlb", "LlfQMl", "clUUPl", "RV0y5", "4WnaoaLS", "uawaI", "JvaxU", "aAigp", "pApgN", "vgvKR", "zgygc", "5h2h3hb", "J80_uI", "CS&Kf", "8eoLISW", "PDi5j", "0n7Nw", "IRZpG", "_R_pS", "4h7fpep", "FapbpC4T", "cpnUV", "hpgpdp!2", "!Akpnpk", "mppplpl", "5Lrpq", "tpvpa4", "q4q11L", "W0Y0m", "QVhEA", "05UNQ", "G8A5LEG", "lm$CZ", "tmrmt", "fU_Cx", "iCr3Z", "n$n9O", "uVI5s", "8mkB0IN", "FmNmhUb", "iIRTAmBmCmEml", "6KLmMm", "RmrA2SKm7H", "kMb5L", "UmSmWmM", "klnFk", "mFmlp", "qlnlol", "WqInKtl", "nG6q7qU", "NsJsZ5", "Ys8IY", "csbsj", "esfsjsaBlsoshs", "vswsW", "WCaYo", "LtQWu", "PtOtQtZK", "WtZtF", "XtYtH", "RH3N!g", "g4IY8ID", "WZBW7", "VFND7", "g_O$g", "g&g7AiWpI8O", "gKPLL", "xP2g3gB44g5g", "C7gA1q3", "gAg6gP6Bg", "1Eg5TFg", "8HgGgl7", "Igx2JgKgLgMgNgOgPg", "SuKQgRgSgTgIIUgVgWgXgYgI", "8nU0G", "nVUoWL", "Ft_PGtr", "T5d4dt", "ctetA", "k_UHjT", "mqnqoqqqpqUEd", "tDuqr", "A0Vwqw", "2m1mA", "AKXUD", "k&3I9", "t7J7R", "Gk90O", "BkDkvIWVMU2POk8NPk", "VESkj", "Qk_ENk$JUk", "7Xcqo", "JkKkLkMkVk", "kl8Xkq", "TjFTD_k", "8RgkH", "jkkkO", "98YOeDokpkZLHMr0d", "AVBVZ", "6b4Kr", "3tc00ty", "6t7tf602OO4t", "R7E0G", "z069e", "C67QG", "bAF7B", "tOxHc", "hD_Ja", "2B0EGB", "3r5r4rdK", "O2r4JORlBJ", "CN8rv07rQ", "GrDrFrg", "yG_Iu", "HrF905v", "CrIrPrVrx", "ULrMrOrSr", "drjrX", "Seru2_", "vrxrzrr", "orwrmrnr", "iaBRBq92r", "m1Cqt", "C2QAQ", "0WIqS", "Ct9H_", "MqOqc", "VqQqo", "QIaEp", "XqRqZq", "f9YCSJhj", "ijjjkj", "ljmjnjojG", "ZVLCH", "5QiR6QG", "ZmPo6", "OKm7hIC7w", "FgW6J", "U_KoU", "Z_VJ40Z", "kR1Z2Z3ZTJ4Z", "J5Z6ZO3oV7Z0", "58Z9Zn9", "ZC8jOo2", "Z5KPK", "ZkGnVAZ5EA6BZL7N", "KEZw5FZBA", "WGZ8L", "jR1DHZ", "IZ3PJZKZ", "NLZMZNZw2QZOZhQPZUCRZ", "SZTZUZ", "Ry0VZ", "!CXZYZ", "C7LZZ", "Z_ZH9", "96xtM", "19F2pTMO", "JV770L6Fa1", "Va9!7z", "jyLs9", "43CQ7X", "A8B_TJW", "jajdjbjcj", "I38D6ejjJMIM4P", "YbbEfj5", "HSXMX", "bIvtU", "qt08TUO8pF", "EuFuA", "GuKuC", "Huz8D", "PuSuG", "NuOuQue6RuR", "H2YWs", "udueu", "e85cuhu", "ouquU", "Tl9yPa", "WniVBmHd", "oipiqiaVrisiuitiviwiaGxiXTyiN", "O7U$j", "G4Y1f", "f1g1m", "Be57Ce", "FeDeHe", "JeGeO5HF", "KMMKJJSLLeKefD", "!Q7QMe", "8MpVOe", "EJQ3YKlTRej7B", "SeTeP", "_BF1S", "t6ZeXeYe", "bTZUq", "zZOPGD", "OSztuGCWdE", "0u1un", "3u4u5uv", "7u6uz", "DnEnFnkU$6HnGnInJn", "GKnLn", "07v5MnOn", "F8PnQnRn", "3SVFD51V8SnTn", "YN39VnUnXnWn", "EYnZn", "nanjWbncnX", "dnKSzL", "2eAen&G", "fngnhninjnknln", "mnnnon", "pnqnrntnsn", "MABvnwnxn!Uyn3Ozn", "ou8zC", "ozOxK", "oz3x9", "o0obP1o2of7", "P3o4o5oqH", "L6o7o8o9o", "B846Wu", "GOCoAoBoDo", "LCEoFoA", "GoOoHoIoJoBGqoM6KoB", "LoMoF6", "PoQoRorUD", "SowDE", "ToxDUoVod8w0WoXoYoF", "bocoMAdoeofogohoiojokoloX", "AnooopoJ", "ECEcAIFc", "U1JN34rHGcPOHcd", "IcJcFC", "UVDk9ENKcvCLc", "McNcDTOc", "PcKQQcRcScTcVQUc", "WcXcYc", "78bZb", "dZcZd", "7tQuRsUW", "hWhZgZt", "B$BB3jZw", "mZITUOcE", "pZjAUL", "vAvQDc", "8HcQd", "T0yES", "RCfCr", "qnO3KkPoggMK9Y6", "qd0LK", "BlADF1", "$rCR5FH", "rUQn6", "I73Jz", "bAb97", "6DHCb", "v6EbYD", "sAJbKbxBLbMbNbWJ8XeYcOB", "mB&TTM1Q", "JafbfT", "cf$WUMef", "dfffgfnBS", "jfR3iQU", "kfoFlfmfW", "Ipfqfrf9esftfbBufvfhVwfZ", "BwAwDwk", "EwFwr", "wem9m", "IwGFHwq", "JwLwKwr", "QvRvSvTv", "XvYvZv", "vavbvcvdvp", "evfvgvhviv", "mvnvovpvqvrvsvtv", "uvvvwvxv", "zHyvzv", "1p2p3p4p5p", "pl6ApBpCpDp5HEpFpd", "GptEe", "KpLpMpk", "PpQpRpSpTpUpVpXpq", "awbwO", "lwmwnwc", "pwowd", "rwuwi", "jmkmw", "kF4lX", "4vdA5v6v7v8v9v", "i!j!V", "DaFLFC", "!j$s$", "3F4m0H4r4", "DKFYAMF", "DHIyI", "inflate", "Copyright", "Adler", "deflate", "Copyright", "Gailly", "Adler", "Qkkbal", "R1h58", "l6qnk", "1A26b", "1wsHp", "YaRwND9", "A_random", "Random", "getrandbits", "Generates", "random", "getrandbits", "jumpahead", "Create", "state", "existing", "state", "integer", "jumpahead", "setstate", "state", "Restores", "generator", "state", "setstate", "getstate", "tuple", "containing", "current", "state", "getstate", "Defaults", "current", "random", "interval", "random", "state", "vector", "tuple", "state", "vector", "wrong", "invalid", "state", "jumpahead", "requires", "integer", "getrandbits", "number", "greater", "Random", "_random", "Random", "getlower", "getcodesize", "compile", "SRE_Scanner", "SRE_Match", "lastgroup", "lastindex", "expand", "groupdict", "group", "SRE_Pattern", "groupindex", "groups", "flags", "__deepcopy__", "scanner", "finditer", "maxsplit", "source", "pattern", "endpos", "expected", "string", "buffer", "buffer", "negative", "buffer", "mismatch", "maximum", "recursion", "limit", "exceeded", "internal", "error", "regular", "expression", "engine", "takes", "positional", "arguments", "given", "Argument", "given", "position", "keyword", "parameter", "deprecated", "string", "instead", "Required", "argument", "string", "found", "match", "match", "search", "search", "findall", "findall", "split", "split", "_subx", "cannot", "pattern", "object", "cannot", "deepcopy", "pattern", "object", "regular", "expression", "limit", "exceeded", "invalid", "group", "_expand", "groups", "groupdict", "cannot", "match", "object", "cannot", "deepcopy", "match", "object", "scanner", "MAGIC", "CODESIZE", "MAXREPEAT", "copyright", "calcsize", "_clearcache", "Struct", "struct", "bytes", "struct", "format", "string", "unpack_from", "unpack", "pack_into", "unpack_from", "offset", "buffer", "format", "bBhHiIlLqQ", "integer", "argument", "expected", "float", "integer", "argument", "expected", "integer", "implicit", "conversion", "using", "__int__", "deprecated", "__int__", "method", "returned", "integer", "cannot", "convert", "argument", "integer", "format", "requires", "number", "format", "requires", "number", "format", "requires", "number", "ubyte", "format", "requires", "number", "format", "require", "string", "length", "short", "format", "requires", "SHRT_MIN", "number", "SHRT_MAX", "ushort", "format", "requires", "number", "USHRT_MAX", "required", "argument", "float", "struct", "format", "total", "struct", "Struct", "ascii", "Struct", "argument", "string", "unpack", "unpack", "requires", "string", "argument", "length", "unpack_from", "requires", "buffer", "argument", "unpack_from", "requires", "buffer", "least", "bytes", "argument", "string", "argument", "string", "integer", "range", "format", "expected", "items", "packing", "pack_into", "expected", "buffer", "argument", "pack_into", "expected", "offset", "argument", "pack_into", "expected", "items", "packing", "pack_into", "requires", "buffer", "least", "bytes", "missing", "format", "argument", "_struct", "struct", "error", "error", "_PY_STRUCT_RANGE_CHECKING", "_PY_STRUCT_FLOAT_COERCE", "getweakrefs", "getweakrefcount", "proxy", "reference", "support", "module", "_weakref", "ReferenceType", "ProxyType", "CallableProxyType", "arrayiterator", "array", "array", "tounicode", "tostring", "tolist", "tofile", "index", "fromunicode", "fromstring", "fromlist", "fromfile", "byteswap", "buffer_info", "bytes", "array", "itemsize", "typecode", "character", "create", "array", "typecode", "array", "array", "integer", "signed", "minimum", "signed", "greater", "maximum", "array", "integer", "array", "unicode", "character", "array", "unicode", "character", "array", "integer", "unsigned", "short", "minimum", "unsigned", "short", "greater", "maximum", "array", "integer", "unsigned", "minimum", "unsigned", "greater", "maximum", "unsigned", "minimum", "unsigned", "greater", "maximum", "array", "float", "array", "float", "Modules", "arraymodule", "array", "index", "range", "append", "array", "array", "assign", "array", "array", "slice", "array", "assignment", "index", "range", "extend", "array", "extend", "array", "array", "array", "index", "array", "remove", "empty", "array", "index", "range", "insert", "byteswap", "array", "fromfile", "enough", "items", "array", "supported", "array", "fromfile", "array", "write", "supported", "array", "tofile", "fromstring", "array", "fromstring", "cannot", "string", "length", "multiple", "fromunicode", "fromunicode", "called", "arrays", "tounicode", "called", "arrays", "array", "array", "array", "indices", "integers", "array", "indices", "integer", "attempt", "assign", "array", "extended", "slice", "Accessing", "existent", "array", "segment", "array", "array", "array", "array", "argument", "typecode", "string", "ascii", "unicode", "length", "typecode", "array", "ArrayType", "ratecv", "getsample", "tostereo", "tomono", "lin2adpcm", "adpcm2lin", "lin2lin", "lin2alaw", "alaw2lin", "lin2ulaw", "ulaw2lin", "cross", "findfactor", "findmax", "findfit", "avgpp", "maxpp", "minmax", "should", "whole", "number", "frames", "getsample", "Index", "range", "minmax", "findfit", "Strings", "should", "sized", "First", "sample", "should", "longer", "findfactor", "Samples", "should", "findmax", "Input", "sample", "should", "longer", "avgpp", "maxpp", "cross", "tomono", "tostereo", "enough", "memory", "output", "buffer", "Lengths", "should", "reverse", "lin2lin", "iiiiO", "ratecv", "channels", "should", "width", "nchannels", "weightA", "should", "weightB", "should", "sampling", "audioop", "ratecv", "illegal", "state", "argument", "illegal", "state", "argument", "ratecv", "lin2ulaw", "ulaw2lin", "lin2alaw", "alaw2lin", "lin2adpcm", "state", "tuple", "state", "adpcm2lin", "audioop", "audioop", "error", "b2a_qp", "a2b_qp", "crc32", "crc_hqx", "rledecode_hqx", "rlecode_hqx", "unhexlify", "hexlify", "a2b_hex", "b2a_hex", "b2a_hqx", "a2b_hqx", "b2a_base64", "a2b_base64", "b2a_uu", "a2b_uu", "istext", "quotetabs", "header", "a2b_uu", "Illegal", "Trailing", "garbage", "b2a_uu", "bytes", "a2b_base64", "Incorrect", "padding", "b2a_base64", "base64", "a2b_hqx", "String", "incomplete", "number", "bytes", "rlecode_hqx", "b2a_hqx", "rledecode_hqx", "Orphaned", "start", "crc_hqx", "crc32", "b2a_hex", "a2b_hex", "length", "string", "hexadecimal", "digit", "found", "0123456789ABCDEF", "binascii", "binascii", "Error", "binascii", "Incomplete", "Incomplete", "polar", "phase", "log10", "isnan", "isinf", "atanh", "asinh", "acosh", "domain", "error", "range", "error", "phase", "polar", "isnan", "cmath", "Unpickler", "Create", "unpickler", "Unpickler", "Pickler", "protocol", "Create", "pickler", "takes", "object", "writing", "pickle", "stream", "optional", "proto", "argument", "tells", "pickler", "given", "protocol", "supported", "protocols", "default", "protocol", "backwards", "compatible", "Protocol", "protocol", "written", "opened", "successfully", "using", "protocol", "higher", "opened", "binary", "pickling", "unpickling", "Protocol", "efficient", "protocol", "protocol", "efficient", "protocol", "Specifying", "negative", "protocol", "version", "selects", "highest", "protocol", "version", "supported", "higher", "protocol", "recent", "version", "Python", "needed", "pickle", "produced", "parameter", "write", "method", "accepts", "single", "string", "argument", "object", "StringIO", "object", "other", "custom", "object", "meets", "interface", "Pickler", "loads", "string", "pickle", "given", "string", "loads", "pickle", "given", "dumps", "protocol", "Return", "string", "containing", "object", "pickle", "format", "Pickler", "docstring", "meaning", "optional", "argument", "proto", "dumps", "protocol", "Write", "object", "pickle", "format", "given", "Pickler", "docstring", "meaning", "optional", "argument", "proto", "cPickle", "Unpickler", "noload", "pickle", "through", "motions", "function", "pickle", "without", "instantiating", "objects", "importing", "modules", "persistent", "references", "without", "instantiating", "objects", "importing", "modules", "noload", "pickle", "cPickle", "Pickler", "PicklingError", "inst_persistent_id", "binary", "protocol", "getvalue", "Finish", "picking", "based", "pickle", "getvalue", "clear_memo", "Clear", "picklers", "clear_memo", "object", "Write", "object", "pickle", "format", "object", "pickle", "stream", "cPickle", "Pdata", "unpickling", "stack", "underflow", "where", "expected", "__module__", "modules", "pickle", "cyclic", "objects", "including", "object", "large", "pickle", "while", "pickling", "object", "items", "iterator", "return", "tuples", "dictionary", "changed", "during", "iteration", "class", "pickle", "import", "module", "failed", "pickle", "attribute", "lookup", "failed", "pickle", "object", "pickle", "extension", "integer", "pickle", "extension", "range", "persistent", "string", "tuple", "returned", "contain", "through", "elements", "save_reduce", "Second", "element", "tuple", "returned", "tuple", "Fourth", "element", "tuple", "returned", "iterator", "Fifth", "element", "tuple", "returned", "iterator", "__newobj__", "__newobj__", "arglist", "empty", "__new__", "__newobj__", "__new__", "__newobj__", "wrong", "class", "Value", "returned", "string", "tuple", "getvalue", "Attempt", "getvalue", "based", "pickler", "Invalid", "Unexpected", "internal", "pickle", "protocol", "asked", "highest", "available", "protocol", "operation", "closed", "argument", "write", "attribute", "copy_reg", "Pickler", "Pickler", "persistent_id", "attribute", "deletion", "supported", "dictionary", "Global", "instance", "pickles", "supported", "could", "pickle", "truncated", "could", "convert", "string", "pickle", "negative", "count", "could", "convert", "string", "float", "insecure", "string", "pickle", "BINSTRING", "pickle", "negative", "count", "BINUNICODE", "pickle", "negative", "count", "pickle", "NEWOBJ", "expected", "tuple", "NEWOBJ", "class", "argument", "object", "NEWOBJ", "class", "argument", "tp_new", "persistent", "instruction", "encountered", "persistent_load", "function", "specified", "specifies", "unregistered", "extension", "_inverted_registry", "tuple", "strings", "number", "items", "SETITEMS", "state", "dictionary", "state", "dictionary", "unsupported", "pickle", "protocol", "invalid", "argument", "readline", "attributes", "persistent_load", "find_global", "UnpicklingError", "dumps", "loads", "__class__", "__getinitargs__", "__getstate__", "__name__", "__main__", "__reduce_ex__", "readline", "dispatch_table", "_extension_registry", "_inverted_registry", "_extension_cache", "__builtins__", "__str__", "return", "cPickle", "PickleError", "cPickle", "PicklingError", "__str__", "return", "Cannot", "pickle", "objects", "cPickle", "UnpickleableError", "cPickle", "UnpicklingError", "cPickle", "BadPickleGet", "PickleError", "UnpickleableError", "BadPickleGet", "cStringIO", "cStringIO_CAPI", "cPickle", "HIGHEST_PROTOCOL", "sssss", "format_version", "compatible_formats", "cStringIO", "StringI", "cStringIO", "StringO", "indicating", "space", "needs", "printed", "print", "softspace", "writelines", "truncate", "reset", "readlines", "isatty", "flush", "closed", "getval", "length", "large", "readline", "readlines", "truncate", "position", "large", "memory", "write", "StringIO", "StringIO", "cStringIO", "cStringIO_CAPI", "InputType", "OutputType", "datetime", "datetime", "convert", "local", "timezone", "astimezone", "Return", "datetime", "specified", "fields", "string", "format", "DDTHH", "mmmmmm", "separate", "defaults", "Return", "tuple", "compatible", "localtime", "utctimetuple", "Return", "object", "tzinfo", "timetz", "Return", "object", "tzinfo", "Return", "object", "month", "datetime", "fields", "combine", "string", "format", "datetime", "parsed", "string", "strptime", "strptime", "timestamp", "datetime", "POSIX", "timestamp", "utcfromtimestamp", "timestamp", "local", "POSIX", "timestamp", "Return", "datetime", "representing", "utcnow", "datetime", "local", "timestamp", "datetime", "Return", "specified", "fields", "Return", "tzinfo", "Return", "tzinfo", "tzname", "Return", "tzinfo", "utcoffset", "Return", "string", "format", "mmmmmm", "tzinfo", "microsecond", "second", "minute", "datetime", "tzinfo", "state", "datetime", "datetime", "local", "fromutc", "datetime", "offset", "minutes", "datetime", "minutes", "negative", "datetime", "string", "datetime", "Return", "specified", "fields", "Return", "represented", "Monday", "Sunday", "weekday", "Return", "proleptic", "Gregorian", "ordinal", "January", "toordinal", "Return", "represented", "Monday", "Sunday", "isoweekday", "Return", "string", "format", "Return", "tuple", "containing", "number", "weekday", "isocalendar", "Return", "tuple", "compatible", "localtime", "Formats", "strftime", "__format__", "format", "strftime", "style", "string", "Return", "ctime", "style", "string", "ctime", "Current", "datetime", "__class__", "fromtimestamp", "today", "corresponding", "proleptic", "Gregorian", "ordinal", "fromordinal", "timestamp", "local", "POSIX", "timestamp", "month", "datetime", "timedelta", "__reduce__", "state", "Total", "seconds", "duration", "total_seconds", "Number", "microseconds", "second", "Number", "seconds", "Number", "weeks", "hours", "minutes", "milliseconds", "microseconds", "seconds", "magnitude", "range", "month", "range", "month", "minute", "second", "microsecond", "999999", "value", "range", "tzinfo", "argument", "tzinfo", "subclass", "tzinfo", "return", "whole", "number", "minutes", "tzinfo", "return", "timedelta", "tzinfo", "returned", "utcoffset", "tzname", "tzinfo", "tzname", "return", "string", "tzinfo", "before", "datetime", "strftime", "methods", "require", "strftime", "format", "replace", "tzname", "replace", "return", "string", "strftime", "iiiiiiiii", "struct_time", "compare", "normalized", "large", "unsupported", "timedelta", "component", "OOOOOOO", "__new__", "goofy", "result", "PyOS_snprintf", "timestamp", "range", "platform", "localtime", "function", "fromtimestamp", "fromtimestamp", "fromordinal", "ordinal", "isoformat", "strftime", "timetuple", "__format__", "__format__", "expects", "unicode", "replace", "tzinfo", "subclass", "implement", "fromutc", "argument", "datetime", "fromutc", "tzinfo", "fromutc", "utcoffset", "result", "required", "fromutc", "result", "required", "fromutc", "gaveinconsistent", "results", "cannot", "convert", "tzinfo", "state", "iiiiO", "iiiiiiiii", "compare", "offset", "naive", "offset", "aware", "times", "iiiiO", "replace", "iiiiO", "iiiiO", "iiiiiiiO", "timestamp", "range", "platform", "localtime", "gmtime", "function", "fromtimestamp", "utcfromtimestamp", "strptime", "_strptime", "iiiiiii", "unexpected", "value", "_strptime", "_strptime", "combine", "subtract", "offset", "naive", "offset", "aware", "datetimes", "isoformat", "compare", "offset", "naive", "offset", "aware", "datetimes", "iiiiiiiO", "replace", "astimezone", "astimezone", "cannot", "applied", "naive", "datetime", "implementation", "datetime", "datetime", "MINYEAR", "MAXYEAR", "timedelta", "datetime", "datetime_CAPI", "datetime_CAPI", "errno", "errorcode", "ENODEV", "EHOSTUNREACH", "ENOSYS", "EPIPE", "EINVAL", "EINTR", "EUSERS", "ENOTEMPTY", "ENOBUFS", "EREMOTE", "ECHILD", "ELOOP", "EXDEV", "E2BIG", "ESRCH", "EMSGSIZE", "EAFNOSUPPORT", "EHOSTDOWN", "EPFNOSUPPORT", "ENOPROTOOPT", "EBUSY", "EWOULDBLOCK", "EISCONN", "ESHUTDOWN", "EBADF", "EPROTOTYPE", "ENOSPC", "ENOEXEC", "EALREADY", "ENETDOWN", "EACCES", "EILSEQ", "ENOTDIR", "EPERM", "ECONNREFUSED", "EISDIR", "EPROTONOSUPPORT", "EROFS", "EADDRNOTAVAIL", "ENFILE", "ESPIPE", "ENETRESET", "ETIMEDOUT", "ENOENT", "EEXIST", "EDQUOT", "EFAULT", "EFBIG", "EDEADLK", "ENOTCONN", "EDESTADDRREQ", "ENOLCK", "ECONNABORTED", "ENETUNREACH", "ESTALE", "ENOMEM", "ENOTSOCK", "EMLINK", "ERANGE", "ECONNRESET", "EADDRINUSE", "EOPNOTSUPP", "EAGAIN", "ENAMETOOLONG", "ENOTTY", "ESOCKTNOSUPPORT", "EDEADLOCK", "ETOOMANYREFS", "EMFILE", "EINPROGRESS", "ENXIO", "WSAEHOSTDOWN", "WSAENETDOWN", "WSAENOTSOCK", "WSAEHOSTUNREACH", "WSAELOOP", "WSAEMFILE", "WSAESTALE", "WSAVERNOTSUPPORTED", "WSAENETUNREACH", "WSAEPROCLIM", "WSAEFAULT", "WSANOTINITIALISED", "WSAEUSERS", "WSAENOPROTOOPT", "WSAECONNABORTED", "WSAENAMETOOLONG", "WSAENOTEMPTY", "WSAESHUTDOWN", "WSAEAFNOSUPPORT", "WSAETOOMANYREFS", "WSAEACCES", "WSABASEERR", "WSAEMSGSIZE", "WSAEBADF", "WSAECONNRESET", "WSAETIMEDOUT", "WSAENOBUFS", "WSAEDISCON", "WSAEINTR", "WSAEPROTOTYPE", "WSAEADDRINUSE", "WSAEADDRNOTAVAIL", "WSAEALREADY", "WSAEPROTONOSUPPORT", "WSASYSNOTREADY", "WSAEWOULDBLOCK", "WSAEPFNOSUPPORT", "WSAEOPNOTSUPP", "WSAEISCONN", "WSAEDQUOT", "WSAENOTCONN", "WSAEREMOTE", "WSAEINVAL", "WSAEINPROGRESS", "WSAESOCKTNOSUPPORT", "WSAEDESTADDRREQ", "WSAECONNREFUSED", "WSAENETRESET", "ifilter", "future_builtins", "itertools", "get_referents", "get_referrers", "is_tracked", "get_objects", "collect", "get_threshold", "set_threshold", "get_count", "get_debug", "set_debug", "isenabled", "generation", "instance", "couldn", "create", "garbage", "__del__", "couldn", "allocate", "__del__", "collecting", "generation", "objects", "generation", "collectable", "uncollectable", "unreachable", "uncollectable", "elapsed", "garbage", "collection", "unexpected", "exception", "during", "garbage", "collection", "invalid", "generation", "set_debug", "set_threshold", "garbage", "DEBUG_STATS", "DEBUG_COLLECTABLE", "DEBUG_UNCOLLECTABLE", "DEBUG_INSTANCES", "DEBUG_OBJECTS", "DEBUG_SAVEALL", "DEBUG_LEAK", "object", "already", "tracked", "grey2rgb", "rgb2grey", "rgb82rgb", "rgb2rgb8", "tovideo", "grey42grey", "grey22grey", "mono2grey", "dither2grey2", "dither2mono", "grey2grey4", "grey2grey2", "grey2mono", "scale", "value", "negative", "String", "incorrect", "length", "backward_compatible", "iiiiiii", "newy2", "newy1", "newx2", "newx1", "iiiii", "should", "imageop", "module", "removed", "Python", "imageop", "imageop", "error", "itertools", "izip_longest", "itertools", "repeat", "times", "object", "itertools", "itertools", "count", "itertools", "ifilterfalse", "itertools", "ifilter", "itertools", "compress", "selectors", "itertools", "permutations", "itertools", "combinations_with_replacement", "itertools", "combinations", "itertools", "product", "itertools", "chain", "from_iterable", "itertools", "itertools", "starmap", "itertools", "islice", "itertools", "takewhile", "itertools", "dropwhile", "itertools", "cycle", "itertools", "itertools", "tee_dataobject", "itertools", "_grouper", "itertools", "groupby", "groupby", "cycle", "cycle", "dropwhile", "dropwhile", "takewhile", "takewhile", "islice", "islice", "argument", "islice", "integer", "maxint", "Indices", "islice", "integer", "maxint", "islice", "positive", "integer", "starmap", "starmap", "least", "arguments", "chain", "repeat", "product", "repeat", "argument", "cannot", "negative", "repeat", "argument", "large", "combinations", "negative", "combinations_with_replacement", "permutations", "compress", "ifilter", "ifilterfalse", "ifilterfalse", "count", "number", "required", "count", "count", "count", "argument", "support", "iteration", "repeat", "repeat", "repeat", "unsized", "object", "fillvalue", "izip_longest", "unexpected", "keyword", "argument", "izip_longest", "argument", "support", "iteration", "PYTHONHASHSEED", "variable", "random", "effect", "specifying", "option", "random", "value", "hashes", "bytes", "datetime", "objects", "integer", "range", "4294967295", "values", "predictable", "PYTHONHOME", "alternate", "prefix", "directory", "prefix", "exec_prefix", "default", "module", "search", "PYTHONCASEOK", "ignore", "import", "statements", "Windows", "PYTHONIOENCODING", "Encoding", "errors", "stdin", "stdout", "stderr", "about", "Python", "incompatibilities", "cannot", "trivially", "program", "script", "program", "stdin", "default", "interactive", "arguments", "passed", "program", "Other", "environment", "variables", "PYTHONSTARTUP", "executed", "interactive", "startup", "default", "PYTHONPATH", "separated", "directories", "prefixed", "default", "module", "search", "result", "unbuffered", "binary", "stdout", "stderr", "PYTHONUNBUFFERED", "details", "internal", "buffering", "relating", "verbose", "trace", "import", "statements", "PYTHONVERBOSE", "supplied", "multiple", "times", "increase", "verbosity", "print", "Python", "version", "number", "version", "warning", "control", "action", "message", "category", "module", "lineno", "PYTHONWARNINGS", "first", "source", "allowing", "forms", "stdin", "appear", "terminal", "PYTHONINSPECT", "library", "module", "script", "terminates", "option", "optimize", "generated", "bytecode", "slightly", "PYTHONOPTIMIZE", "remove", "strings", "addition", "optimizations", "pseudo", "random", "values", "various", "types", "unpredictable", "between", "separate", "invocations", "interpreter", "defense", "against", "denial", "service", "attacks", "division", "options", "default", "Qwarn", "Qwarnall", "directory", "PYTHONNOUSERSITE", "imply", "import", "initialization", "issue", "warnings", "about", "inconsistent", "usage", "issue", "errors", "Options", "arguments", "corresponding", "environment", "variables", "write", "files", "import", "PYTHONDONTWRITEBYTECODE", "program", "passed", "string", "terminates", "option", "debug", "output", "parser", "PYTHONDEBUG", "ignore", "PYTHON", "environment", "variables", "PYTHONPATH", "print", "message", "inspect", "interactively", "after", "running", "script", "forces", "prompt", "usage", "option", "python", "information", "prefix", "PYTHONSTARTUP", "Could", "PYTHONSTARTUP", "runpy", "Could", "import", "runpy", "module", "_run_module_as_main", "Could", "access", "runpy", "_run_module_as_main", "Could", "create", "arguments", "runpy", "_run_module_as_main", "dEhiJm", "RsStuUvVW", "PYTHONHASHSEED", "enough", "memory", "argument", "enough", "memory", "argument", "warnall", "option", "should", "Qwarn", "Qwarnall", "Python", "PYTHONINSPECT", "PYTHONUNBUFFERED", "PYTHONNOUSERSITE", "PYTHONWARNINGS", "enough", "memory", "PYTHONWARNINGS", "Python", "copyright", "credits", "license", "information", "Errno", "directory", "cannot", "continue", "stdin", "trunc", "radians", "log1p", "lgamma", "ldexp", "gamma", "frexp", "floor", "factorial", "expm1", "degrees", "atan2", "copysign", "partials", "intermediate", "overflow", "factorial", "accepts", "integral", "values", "factorial", "defined", "negative", "values", "__trunc__", "ldexp", "Expected", "second", "argument", "ldexp", "hypot", "digestsize", "block_size", "digest_size", "hexdigest", "digest", "update", "update", "MD5Type", "access", "tagname", "length", "write_byte", "resize", "read_byte", "rfind", "closed", "invalid", "range", "rfind", "modify", "readonly", "memory", "resize", "readonly", "write", "memory", "write", "range", "write_byte", "write", "range", "resize", "range", "flush", "flush", "values", "range", "unknown", "range", "source", "destination", "count", "range", "Accessing", "existent", "segment", "accessing", "existent", "buffer", "segment", "index", "range", "indices", "integers", "mmaps", "support", "concatenation", "mmaps", "support", "repeat", "operation", "object", "doesn", "support", "slice", "deletion", "slice", "assignment", "string", "slice", "assignment", "wrong", "object", "doesn", "support", "deletion", "assignment", "single", "character", "string", "indices", "integer", "invalid", "access", "parameter", "memory", "mapped", "length", "postiive", "memory", "mapped", "offset", "positive", "cannot", "empty", "offset", "greater", "length", "large", "error", "PAGESIZE", "ALLOCATIONGRANULARITY", "ACCESS_READ", "ACCESS_WRITE", "ACCESS_COPY", "operator", "methodcaller", "operator", "attrgetter", "operator", "itemgetter", "_compare_digest", "__ge__", "__gt__", "__ne__", "__eq__", "__le__", "__delslice__", "delslice", "delslice", "__setslice__", "setslice", "setslice", "__getslice__", "getslice", "getslice", "__ipow__", "__pow__", "__delitem__", "delitem", "delitem", "__setitem__", "setitem", "setitem", "__getitem__", "getitem", "getitem", "__irepeat__", "irepeat", "where", "sequence", "integer", "irepeat", "__iconcat__", "iconcat", "sequences", "iconcat", "__repeat__", "repeat", "Return", "where", "sequence", "integer", "__concat__", "concat", "sequences", "concat", "__ior__", "__ixor__", "__iand__", "__irshift__", "irshift", "irshift", "__ilshift__", "ilshift", "ilshift", "__imod__", "__itruediv__", "itruediv", "__future__", "division", "effect", "itruediv", "__ifloordiv__", "ifloordiv", "ifloordiv", "__idiv__", "__future__", "division", "effect", "__imul__", "__isub__", "__iadd__", "__or__", "__xor__", "__and__", "__not__", "__rshift__", "rshift", "rshift", "__lshift__", "lshift", "lshift", "__invert__", "invert", "invert", "__inv__", "__abs__", "__pos__", "__neg__", "__mod__", "__truediv__", "truediv", "__future__", "division", "effect", "truediv", "__floordiv__", "floordiv", "floordiv", "__div__", "__future__", "division", "effect", "__mul__", "__sub__", "__add__", "__index__", "index", "__index__", "is_not", "isMappingType", "Return", "mapping", "False", "otherwise", "isMappingType", "countOf", "Return", "number", "times", "occurs", "indexOf", "Return", "first", "index", "sequenceIncludes", "reversed", "operands", "deprecated", "__contains__", "contains", "reversed", "operands", "contains", "truth", "Return", "False", "otherwise", "truth", "isSequenceType", "Return", "sequence", "False", "otherwise", "isSequenceType", "isNumberType", "Return", "numeric", "False", "otherwise", "isNumberType", "isCallable", "callable", "isCallable", "operator", "isCallable", "supported", "hasattr", "__call__", "operator", "sequenceIncludes", "supported", "operator", "contains", "op_add", "op_sub", "op_mul", "op_div", "op_floordiv", "op_truediv", "op_mod", "op_lshift", "op_rshift", "op_and_", "op_xor", "op_or_", "op_iadd", "op_isub", "op_imul", "op_idiv", "op_ifloordiv", "op_itruediv", "op_imod", "op_ilshift", "op_irshift", "op_iand", "op_ixor", "op_ior", "op_concat", "op_repeat", "op_iconcat", "op_irepeat", "op_contains", "sequenceIncludes", "indexOf", "countOf", "op_getitem", "op_delitem", "op_setitem", "op_lt", "op_le", "op_eq", "op_ne", "op_gt", "op_ge", "is_not", "getslice", "setslice", "delslice", "compare_digest", "unsupported", "operand", "types", "combination", "types", "Buffer", "single", "dimension", "itemgetter", "itemgetter", "attrgetter", "attrgetter", "attribute", "string", "methodcaller", "needs", "least", "argument", "method", "methodcaller", "operator", "Returns", "pickle", "magic", "allow", "objects", "pickled", "_pickler", "tuple2st", "tuple2ast", "st2list", "st2tuple", "sequence2st", "Creates", "object", "representation", "sequence2ast", "Creates", "object", "suite", "Determines", "object", "created", "suite", "Determines", "object", "created", "expression", "Creates", "object", "expression", "compilest", "Compiles", "object", "object", "compileast", "Creates", "representation", "ast2list", "Creates", "tuple", "representation", "ast2tuple", "sequence", "filename", "col_info", "line_info", "Intermediate", "representation", "Python", "parse", "parser", "Returns", "memory", "bytes", "Creates", "tuple", "representation", "totuple", "Creates", "representation", "Determines", "object", "created", "suite", "issuite", "Determines", "object", "created", "expression", "isexpr", "Compile", "object", "object", "unrecognized", "parse", "st2tuple", "totuple", "ast2tuple", "removed", "st2tuple", "st2list", "tolist", "ast2list", "removed", "st2list", "syntax", "compilest", "compile", "compileast", "removed", "compilest", "isexpr", "isexpr", "issuite", "issuite", "suite", "sequence2st", "sequence2st", "requires", "single", "sequence", "argument", "parse", "valid", "start", "symbol", "unspecified", "error", "occurred", "tuple2ast", "removed", "tuple2st", "Illegal", "construct", "terminal", "nodes", "entries", "second", "terminal", "string", "found", "third", "terminal", "integer", "found", "unknown", "unsupported", "number", "child", "nodes", "Illegal", "syntax", "cannot", "start", "terminal", "symbol", "Illegal", "component", "tuple", "Expected", "Illegal", "number", "children", "Illegal", "terminal", "expected", "class", "parameters", "suite", "testlist", "testlist1", "testlist_safe", "expected", "variable", "argument", "trailer", "varargslist", "illegal", "variable", "argument", "trailer", "varargslist", "varargslist", "missing", "child", "nodes", "illegal", "formation", "varargslist", "list_iter", "comp_iter", "list_for", "comp_for", "list_if", "comp_if", "fpdef", "fplist", "simple_stmt", "small_stmt", "illegal", "small_stmt", "child", "Unrecognized", "child", "small_stmt", "compound_stmt", "Illegal", "compound", "statement", "augassign", "illegal", "augmented", "assignment", "operator", "print", "print_stmt", "del_stmt", "return", "raise", "yield", "yield_stmt", "import_as_name", "illegal", "number", "children", "dotted_as_name", "import_name", "import", "import_stmt", "illegal", "import_stmt", "child", "Unrecognized", "child", "import_stmt", "illegal", "global", "statement", "global", "illegal", "statement", "assert", "illegal", "assert", "statement", "while", "except", "Illegal", "number", "children", "finally", "finally", "except", "finally", "illegal", "operator", "illegal", "comparison", "operator", "comp_op", "unknown", "comparison", "operator", "illegal", "number", "nodes", "power", "illegal", "display", "missing", "child", "nodes", "listmaker", "illegal", "trailing", "nodes", "listmaker", "missing", "child", "nodes", "testlist_comp", "illegal", "trailing", "nodes", "testlist_comp", "lambda", "lambdef", "old_lambdef", "arglist", "generator", "expression", "illegal", "arglist", "specification", "extra", "stuff", "illegal", "arglist", "illegal", "arglist", "illegal", "arglist", "specification", "trailer", "subscriptlist", "invalid", "number", "arguments", "subscript", "subscript", "sliceop", "exprlist", "illegal", "number", "nodes", "dictorsetmaker", "illegal", "trailing", "nodes", "dictorsetmaker", "flow_stmt", "illegal", "flow_stmt", "break", "continue", "unrecognized", "could", "validate", "expression", "tuple", "VALIDATION", "FAILURE", "report", "maintainer!", "Error", "Parsing", "encoding_decl", "_pickler", "parser", "parser", "ParserError", "ParserError", "ASTType", "STType", "__copyright__", "pickle", "urandom", "_isdir", "_getfullpathname", "abort", "tmpnam", "tempnam", "tmpfile", "fsync", "strerror", "putenv", "fdopen", "lseek", "closerange", "waitpid", "popen4", "popen3", "popen2", "popen", "getpid", "spawnve", "spawnv", "execve", "execv", "_exit", "unlink", "umask", "system", "stat_float_times", "lstat", "listdir", "getcwd", "statvfs_result", "f_namemax", "f_flag", "f_favail", "f_ffree", "f_files", "f_bavail", "f_bfree", "f_blocks", "f_frsize", "f_bsize", "stat_result", "change", "st_ctime", "modification", "st_mtime", "access", "st_atime", "integer", "change", "integer", "modification", "integer", "access", "total", "bytes", "st_size", "group", "owner", "st_gid", "owner", "st_uid", "number", "links", "st_nlink", "device", "st_dev", "inode", "st_ino", "protection", "st_mode", "stat_float_times", "access", "access", "chdir", "chdir", "chdir", "chmod", "chmod", "chmod", "getcwdu", "listdir", "FindFirstFileW", "FindNextFileW", "FindClose", "listdir", "FindFirstFile", "FindNextFile", "_getfullpathname", "GetFullPathNameW", "_getfullpathname", "GetFullPathName", "mkdir", "mkdir", "mkdir", "rename", "rename", "rename", "rmdir", "rmdir", "rmdir", "system", "umask", "remove", "remove", "utime", "utime", "utime", "utime", "tuple", "atime", "mtime", "_exit", "execv", "execv", "tuple", "execv", "empty", "execv", "contain", "strings", "execve", "execve", "tuple", "execve", "mapping", "object", "execve", "contain", "strings", "values", "execve", "values", "execve", "contains", "string", "execve", "contains", "string", "value", "spawnv", "spawnv", "tuple", "spawnv", "contain", "strings", "ietOO", "spawnve", "spawnve", "tuple", "spawnve", "mapping", "object", "spawnve", "contain", "strings", "spawnve", "values", "spawnve", "contains", "string", "spawnve", "contains", "string", "value", "_isdir", "_isdir", "popen", "popen", "popen", "popen2", "popen2", "popen2", "popen3", "popen3", "popen3", "popen4", "popen4", "popen4", "w9xpopen", "COMSPEC", "command", "locate", "which", "needed", "popen", "shell", "platform", "Cannot", "locate", "COMSPEC", "environment", "variable", "shell", "CreateProcess", "CreatePipe", "DuplicateHandle", "CloseHandle", "waitpid", "lstat", "lstat", "ddddd", "mkdir", "close", "closerange", "lseek", "write", "fstat", "fstat", "fdopen", "isatty", "putenv", "environment", "variable", "longer", "bytes", "strerror", "strerror", "argument", "range", "tempnam", "tempnam", "potential", "security", "program", "tempnam", "removed", "tempfile", "module", "tmpfile", "removed", "tempfile", "module", "tmpfile", "tmpnam", "potential", "security", "program", "tmpnam", "removed", "tempfile", "module", "unexpected", "tmpnam", "abort", "called", "Python", "abort!", "startfile", "startfile", "startfile", "urandom", "negative", "argument", "allowed", "TMP_MAX", "O_RDONLY", "O_WRONLY", "O_RDWR", "O_APPEND", "O_CREAT", "O_EXCL", "O_TRUNC", "O_BINARY", "O_TEXT", "O_NOINHERIT", "O_SHORT_LIVED", "O_TEMPORARY", "O_RANDOM", "O_SEQUENTIAL", "P_WAIT", "P_NOWAIT", "P_OVERLAY", "P_NOWAITO", "P_DETACH", "environ", "stat_result", "statvfs_result", "sha224", "sha256", "_sha256", "sha256", "_sha256", "sha224", "SHA256", "SHA224", "_sha256", "sha384", "sha512", "_sha512", "sha512", "_sha512", "sha384", "SHA512", "SHA384", "_sha512", "blocksize", "default_int_handler", "set_wakeup_fd", "getsignal", "signal", "signal", "invalid", "signal", "value", "signal", "works", "thread", "signal", "number", "range", "signal", "handler", "signal", "SIG_IGN", "signal", "SIG_DFL", "callable", "object", "getsignal", "set_wakeup_fd", "set_wakeup_fd", "works", "thread", "invalid", "SIG_DFL", "SIG_IGN", "SIGINT", "SIGBREAK", "SIGILL", "SIGABRT", "SIGFPE", "SIGSEGV", "SIGTERM", "CTRL_C_EVENT", "CTRL_BREAK_EVENT", "upper", "translate", "swapcase", "strip", "splitfields", "rstrip", "maketrans", "lower", "lstrip", "joinfields", "expandtabs", "capitalize", "strop", "functions", "obsolete", "string", "methods", "split", "empty", "separator", "first", "argument", "sequence", "strings", "input", "first", "argument", "sequence", "rfind", "expandtabs", "tabsize", "least", "result", "count", "invalid", "invalid", "literal", "literal", "large", "invalid", "empty", "string", "invalid", "literal", "empty", "string", "invalid", "literal", "maketrans", "maketrans", "arguments", "length", "translate", "translation", "table", "characters", "replace", "empty", "pattern", "string", "whitespace", "Return", "symbol", "scope", "dictionaries", "internally", "compiler", "symtable", "symtable", "single", "symtable", "single", "_symtable", "DEF_GLOBAL", "DEF_LOCAL", "DEF_PARAM", "DEF_FREE", "DEF_FREE_CLASS", "DEF_IMPORT", "DEF_BOUND", "TYPE_FUNCTION", "TYPE_CLASS", "TYPE_MODULE", "OPT_IMPORT_STAR", "OPT_EXEC", "OPT_BARE_EXEC", "LOCAL", "GLOBAL_EXPLICIT", "GLOBAL_IMPLICIT", "SCOPE_OFF", "SCOPE_MASK", "stack_size", "_count", "get_ident", "interrupt_main", "exit_thread", "allocate", "allocate_lock", "start_new", "Thread", "local", "thread", "_local", "_localdummy_destroyed", "Thread", "local", "dummy", "_thread", "_localdummy", "thread", "__exit__", "__enter__", "locked", "locked_lock", "release", "release_lock", "acquire", "acquire_lock", "acquire", "release", "unlocked", "allocate", "Couldn", "thread", "state", "dictionary", "Initialization", "arguments", "supported", "thread", "local", "object", "attribute", "__dict__", "Unhandled", "exception", "thread", "started", "stderr", "start_new_thread", "first", "callable", "tuple", "optional", "dictionary", "start", "thread", "current", "thread", "ident", "stack_size", "positive", "value", "valid", "bytes", "setting", "stack", "supported", "thread", "thread", "error", "LockType", "_local", "mktime", "localtime", "gmtime", "sleep", "clock", "value", "returned", "gmtime", "localtime", "strptime", "accepted", "asctime", "mktime", "strftime", "considered", "sequence", "integers", "several", "fields", "values", "those", "defined", "language", "standard", "struct", "example", "value", "field", "tm_year", "actual", "individual", "fields", "descriptions", "details", "struct_time", "summer", "effect", "unknown", "tm_isdst", "range", "tm_yday", "range", "Monday", "tm_wday", "seconds", "range", "tm_sec", "minutes", "range", "tm_min", "hours", "range", "tm_hour", "month", "range", "tm_mday", "month", "range", "tm_mon", "example", "tm_year", "timestamp", "range", "platform", "time_t", "sleep", "gmtime", "localtime", "iiiiiiiii", "accept2dyear", "required", "range", "strftime", "month", "range", "month", "range", "range", "minute", "range", "seconds", "range", "range", "range", "aAbBcdHIjmMpSUwWxXyYzZ", "Invalid", "format", "string", "_strptime_time", "asctime", "invalid", "unconvertible", "mktime", "argument", "range", "timezone", "altzone", "daylight", "PYTHONY2K", "sleep", "length", "large", "bench", "xxsubtype", "spamdict", "xxsubtype", "spamlist", "variable", "demonstration", "purposes", "state", "staticmeth", "staticmeth", "classmeth", "classmeth", "setstate", "state", "getstate", "state", "getstate", "setstate", "xxsubtype", "spamlist", "spamdict", "zipimport", "zipimporter", "_files", "prefix", "archive", "is_package", "get_filename", "get_source", "get_code", "get_data", "load_module", "find_module", "zipimporter", "zipimporter", "archive", "empty", "archive", "zipimporter", "object", "zipimporter", "object", "zipimporter", "find_module", "zipimporter", "load_module", "__loader__", "__path__", "import", "loaded", "zipimporter", "get_filename", "zipimporter", "is_package", "module", "zipimporter", "get_data", "zipimporter", "get_code", "zipimporter", "get_source", "__init__", "where", "expected", "central", "directory", "central", "directory", "offset", "central", "directory", "offset", "local", "header", "offset", "sHIIkHHI", "zipimport", "found", "names", "decompress", "available", "UNAVAILABLE", "zipimport", "sHnnlHHI", "negative", "zipimport", "local", "header", "local", "header", "zipimport", "decompress", "available", "magic", "mtime", "compiled", "module", "object", "zipimport", "memory", "allocate", "source", "buffer", "trying", "zipimport", "zipimport", "ZipImportError", "ZipImportError", "zipimporter", "_zip_directory_cache", "Decompress", "Compress", "decompressobj", "compressobj", "adler32", "compress", "library", "version", "mismatch", "incomplete", "truncated", "stream", "inconsistent", "stream", "state", "invalid", "input", "Error", "Error", "compress", "memory", "while", "compressing", "compression", "level", "while", "compressing", "while", "finishing", "compression", "decompress", "memory", "while", "decompressing", "while", "preparing", "decompress", "while", "decompressing", "while", "finishing", "decompression", "iiiii", "compressobj", "allocate", "memory", "compression", "object", "Invalid", "initialization", "option", "while", "creating", "compression", "object", "decompressobj", "allocate", "memory", "decompression", "object", "while", "creating", "decompression", "object", "compress", "decompress", "max_length", "greater", "while", "decompressing", "flush", "while", "flushing", "deflateEnd", "Inconsistent", "stream", "state", "while", "copying", "compression", "object", "while", "copying", "decompression", "object", "flush", "length", "greater", "inflateEnd", "unused_data", "unconsumed_tail", "adler32", "crc32", "error", "MAX_WBITS", "DEFLATED", "DEF_MEM_LEVEL", "Z_BEST_SPEED", "Z_BEST_COMPRESSION", "Z_DEFAULT_COMPRESSION", "Z_FILTERED", "Z_HUFFMAN_ONLY", "Z_DEFAULT_STRATEGY", "Z_FINISH", "Z_NO_FLUSH", "Z_SYNC_FLUSH", "Z_FULL_FLUSH", "ZLIB_VERSION", "unexpected", "internal", "error", "inflate", "stream", "corrupt", "compressed", "error", "requested", "length", "characters", "internal", "error", "deflate", "stream", "corrupt", "invalid", "block", "invalid", "stored", "block", "lengths", "length", "distance", "symbols", "invalid", "lengths", "invalid", "length", "repeat", "invalid", "missing", "block", "invalid", "literal", "lengths", "invalid", "distances", "invalid", "literal", "length", "invalid", "distance", "invalid", "distance", "incorrect", "header", "check", "unknown", "compression", "method", "invalid", "window", "unknown", "header", "flags", "header", "mismatch", "incorrect", "check", "incorrect", "length", "check", "incompatible", "version", "buffer", "error", "insufficient", "memory", "error", "stream", "error", "error", "stream", "dictionary", "gb18030", "gb18030ext", "gbcommon", "gbkext", "gb2312", "getcodec", "_multibytecodec", "__create_codec", "encoding", "string", "codec", "supported", "multibytecodec", "__map_", "__map_", "_codecs_cn", "big5hkscs_nonbmp", "big5hkscs_bmp", "big5hkscs", "Capsule", "__map_big5", "_codecs_tw", "_codecs_hk", "iso2022_jp_ext", "iso2022_jp_3", "iso2022_jp_2004", "iso2022_jp_2", "iso2022_jp_1", "iso2022_jp", "iso2022_kr", "__map_cp949", "_codecs_kr", "__map_ksx1001", "__map_jisxcommon", "_codecs_jp", "__map_jisx0208", "__map_jisx0212", "__map_jisx0213_bmp", "__map_jisx0213_1_bmp", "__map_jisx0213_2_bmp", "__map_jisx0213_emp", "__map_jisx0213_1_emp", "__map_jisx0213_2_emp", "__map_jisx0213_pair", "__map_gbcommon", "__map_gb2312", "_codecs_iso2022", "shift_jisx0213", "euc_jisx0213", "euc_jis_2004", "shift_jis_2004", "euc_jp", "cp932", "shift_jis", "cp932ext", "jisx0213_pair", "jisx0213_emp", "jisx0213_2_emp", "jisx0213_1_emp", "jisx0213_bmp", "jisx0213_2_bmp", "jisx0213_1_bmp", "jisxcommon", "jisx0212", "jisx0208", "johab", "euc_kr", "cp949ext", "cp949", "ksx1001", "cp950", "cp950ext", "MultibyteStreamWriter", "MultibyteStreamReader", "MultibyteIncrementalDecoder", "MultibyteIncrementalEncoder", "MultibyteCodec", "treat", "errors", "stream", "final", "errors", "input", "ignore", "errors", "string", "illegal", "multibyte", "sequence", "incomplete", "multibyte", "sequence", "internal", "codec", "error", "unknown", "runtime", "error", "encoding", "error", "handler", "return", "unicode", "tuple", "position", "error", "handler", "bounds", "decoding", "error", "handler", "return", "unicode", "tuple", "encode", "couldn", "convert", "object", "unicode", "decode", "pending", "buffer", "overflow", "encode", "IncrementalEncoder", "codec", "codec", "unexpected", "decode", "IncrementalDecoder", "stream", "function", "returned", "string", "object", "integer", "StreamReader", "sequence", "object", "StreamWriter", "argument", "invalid", "initialize", "_multibytecodec", "module", "Exception", "raised", "would", "block", "blocking", "stream", "BlockingIOError", "characters_written", "BlockingIOError", "buffering", "newline", "closefd", "sizzzi", "invalid", "invalid", "writing", "binary", "exactly", "write", "append", "binary", "doesn", "encoding", "argument", "binary", "doesn", "errors", "argument", "binary", "doesn", "newline", "argument", "invalid", "buffering", "unbuffered", "unknown", "Osssi", "cannot", "offset", "sized", "integer", "integer", "argument", "expected", "DEFAULT_BUFFER_SIZE", "UnsupportedOperation", "_IOBase", "_RawIOBase", "_BufferedIOBase", "_TextIOBase", "FileIO", "BytesIO", "BufferedReader", "BufferedWriter", "BufferedRWPair", "BufferedRandom", "TextIOWrapper", "IncrementalNewlineDecoder", "newlines", "read1", "readable", "readinto", "seekable", "writable", "BufferedRandom", "BufferedRWPair", "BufferedWriter", "BufferedReader", "_BufferedIOBase", "readinto", "should", "return", "bytes", "detach", "reentrant", "inside", "stream", "detached", "operation", "uninitialized", "object", "stream", "returned", "invalid", "position", "buffer", "strictly", "positive", "allocate", "flush", "closed", "length", "positive", "closed", "read1", "length", "positive", "readline", "closed", "readline", "whence", "between", "closed", "truncate", "readline", "should", "returned", "bytes", "object", "buffer_size", "BufferedReader", "readinto", "returned", "invalid", "length", "should", "between", "max_buffer_size", "deprecated", "max_buffer_size", "BufferedWriter", "write", "returned", "invalid", "length", "should", "between", "write", "could", "complete", "without", "blocking", "write", "closed", "BufferedRWPair", "BufferedRWPair", "object", "being", "garbage", "collected", "BufferedRandom", "BytesIO", "closed", "buffer", "large", "operation", "closed", "integer", "argument", "expected", "readline", "readlines", "negative", "value", "negative", "value", "invalid", "whence", "should", "__setstate__", "argument", "should", "tuple", "second", "state", "integer", "position", "value", "cannot", "negative", "third", "state", "should", "initial_bytes", "BytesIO", "FileIO", "String", "giving", "descriptor", "closed", "close", "readall", "fileio", "negative", "descriptor", "embedded", "character", "encoder", "failed", "return", "bytes", "exactly", "write", "append", "invalid", "Cannot", "closefd", "False", "reading", "unbounded", "returned", "bytes", "Python", "string", "writing", "integer", "required", "FileIO", "closed", "FileIO", "FileIO", "_RawIOBase", "_checkWritable", "_checkReadable", "_checkSeekable", "_checkClosed", "_IOBase", "__IOBase_closed", "stream", "seekable", "stream", "readable", "stream", "writable", "should", "returned", "bytes", "object", "should", "returned", "bytes", "object", "readlines", "writelines", "StringIO", "line_buffering", "readline", "should", "returned", "object", "Negative", "value", "Invalid", "whence", "should", "Negative", "position", "nonzero", "relative", "seeks", "unicode", "argument", "expected", "initial_value", "__init__", "illegal", "newline", "value", "initial_value", "unicode", "__setstate__", "argument", "should", "tuple", "third", "state", "integer", "fourth", "state", "should", "TextIOWrapper", "_CHUNK_SIZE", "iso8859", "IncrementalNewlineDecoder", "_TextIOBase", "decoder", "IncrementalNewlineDecoder", "decoder", "should", "return", "string", "result", "IncrementalNewlineDecoder", "__init__", "called", "IncrementalNewlineDecoder", "fileio", "locale", "getpreferredencoding", "could", "determine", "default", "encoding", "codecs", "underlying", "buffer", "detached", "write", "writable", "readable", "underlying", "read1", "should", "returned", "bytes", "object", "decoder", "getstate", "should", "returned", "bytes", "object", "underlying", "stream", "seekable", "nonzero", "relative", "seeks", "nonzero", "relative", "seeks", "invalid", "whence", "should", "negative", "position", "underlying", "should", "returned", "bytes", "object", "restore", "logical", "position", "telling", "position", "disabled", "reconstruct", "logical", "position", "TextIOWrapper", "encoding", "TextIOWrapper", "encoding", "strictly", "positive", "integer", "required", "__bases__", "__subclasscheck__", "__instancecheck__", "argument", "internal", "routine", "sequence", "index", "integer", "object", "attribute", "__getitem__", "object", "support", "assignment", "object", "support", "deletion", "expected", "string", "other", "character", "buffer", "object", "expected", "single", "segment", "buffer", "object", "expected", "readable", "buffer", "object", "expected", "writeable", "buffer", "object", "buffer", "interface", "destination", "source", "buffer", "interface", "destination", "small", "receive", "source", "Object", "writable", "format", "expects", "string", "unicode", "object", "__format__", "empty", "format", "string", "deprecated", "doesn", "define", "__format__", "__format__", "return", "string", "unicode", "unsupported", "operand", "unsupported", "operand", "unsupported", "operand", "divmod", "multiply", "sequence", "operand", "unary", "operand", "unary", "operand", "unary", "operand", "argument", "__index__", "returned", "object", "cannot", "interpreted", "index", "cannot", "index", "sized", "integer", "__int__", "__int__", "returned", "__trunc__", "returned", "Integral", "argument", "string", "number", "argument", "__long__", "returned", "argument", "string", "number", "__float__", "returned", "float", "PyNumber_ToBase", "index", "object", "object", "concatenated", "object", "repeated", "object", "support", "indexing", "object", "unsliceable", "object", "doesn", "support", "deletion", "object", "doesn", "support", "slice", "assignment", "object", "doesn", "support", "slice", "deletion", "argument", "iterable", "count", "exceeds", "integer", "index", "exceeds", "integer", "sequence", "index", "sequence", "while", "calling", "Python", "object", "result", "without", "error", "PyObject_Call", "object", "callable", "attribute", "callable", "isinstance", "class", "tuple", "classes", "types", "__instancecheck__", "issubclass", "class", "issubclass", "class", "tuple", "classes", "__subclasscheck__", "object", "iterable", "returned", "iterator", "False", "single", "segment", "buffer", "object", "expected", "Py_TPFLAGS_HAVE_GETCHARBUFFER", "needed", "buffer", "available", "positive", "offset", "positive", "buffer", "object", "expected", "buffer", "supported", "buffer", "buffer", "write", "buffer", "buffer", "offset", "writable", "buffers", "hashable", "result", "large", "buffer", "index", "range", "sequence", "index", "integer", "buffer", "buffer", "assignment", "index", "range", "right", "operand", "single", "right", "operand", "length", "match", "slice", "length", "buffer", "indices", "integers", "bytearray_iterator", "bytearray", "zfill", "title", "splitlines", "rsplit", "rpartition", "rjust", "rindex", "partition", "ljust", "isupper", "istitle", "isspace", "islower", "isdigit", "isalpha", "isalnum", "fromhex", "center", "__alloc__", "string", "integer", "string", "required", "range", "accessing", "existent", "bytes", "segment", "doesn", "support", "buffer", "Existing", "exports", "object", "cannot", "sized", "Negative", "passed", "PyByteArray_FromStringAndSize", "concat", "bytearray", "index", "range", "bytearray", "indices", "integers", "bytearray", "slice", "bytearray", "indices", "integer", "assign", "bytes", "buffers", "iterables", "range", "attempt", "assign", "bytes", "extended", "slice", "bytearray", "encoding", "errors", "without", "sequence", "argument", "unicode", "argument", "without", "encoding", "encoding", "errors", "without", "string", "argument", "negative", "count", "bytearray", "bytearray", "object", "large", "Comparison", "between", "bytearray", "string", "deallocated", "bytearray", "object", "exported", "buffers", "expandtabs", "result", "ljust", "rjust", "center", "zfill", "rfind", "index", "rindex", "subsection", "found", "startswith", "endswith", "replace", "string", "replace", "bytes", "replace", "split", "rsplit", "cannot", "objects", "bytearray", "empty", "bytearray", "value", "found", "bytearray", "strip", "lstrip", "rstrip", "decode", "iterable", "iterable", "bytes", "splitlines", "fromhex", "hexadecimal", "number", "found", "fromhex", "position", "latin", "Objects", "bytearrayobject", "PyCapsule", "PyCapsule_New", "called", "pointer", "PyCapsule_GetPointer", "called", "invalid", "PyCapsule", "object", "PyCapsule_GetPointer", "called", "incorrect", "PyCapsule_GetName", "called", "invalid", "PyCapsule", "object", "PyCapsule_GetDestructor", "called", "invalid", "PyCapsule", "object", "PyCapsule_GetContext", "called", "invalid", "PyCapsule", "object", "PyCapsule_SetPointer", "called", "pointer", "PyCapsule_SetPointer", "called", "invalid", "PyCapsule", "object", "PyCapsule_SetName", "called", "invalid", "PyCapsule", "object", "PyCapsule_SetDestructor", "called", "invalid", "PyCapsule", "object", "PyCapsule_SetContext", "called", "invalid", "PyCapsule", "object", "PyCapsule_Import", "could", "import", "module", "PyCapsule_Import", "valid", "capsule", "object", "cell_contents", "Objects", "cellobject", "comparisons", "supported", "empty", "object", "empty", "__self__", "instance", "which", "method", "bound", "unbound", "methods", "im_self", "__func__", "function", "other", "callable", "implementing", "method", "im_func", "class", "associated", "method", "im_class", "instance", "classobj", "bases", "PyClass_New", "string", "PyClass_New", "dictionary", "PyClass_New", "bases", "tuple", "PyClass_New", "class", "__getattr__", "__setattr__", "__delattr__", "Objects", "classobject", "class", "__dict__", "accessible", "restricted", "class", "attribute", "__dict__", "dictionary", "object", "__bases__", "tuple", "object", "__bases__", "items", "classes", "__bases__", "causes", "inheritance", "cycle", "__name__", "string", "object", "__name__", "contain", "bytes", "classes", "restricted", "class", "class", "__init__", "constructor", "takes", "arguments", "__init__", "should", "return", "instance", "instance", "second", "dictionary", "instance", "__dict__", "accessible", "restricted", "instance", "attribute", "__dict__", "accessible", "restricted", "__dict__", "dictionary", "__class__", "accessible", "restricted", "__class__", "class", "__repr__", "instance", "instance", "__str__", "__hash__", "__cmp__", "unhashable", "instance", "__hash__", "should", "return", "__len__", "__len__", "should", "return", "__len__", "should", "return", "__getslice__", "removed", "__getitem__", "__delslice__", "removed", "__delitem__", "__setslice__", "removed", "__setitem__", "__coerce__", "coercion", "should", "return", "tuple", "after", "coercion", "__ror__", "__rand__", "__rxor__", "__rlshift__", "__rrshift__", "__radd__", "__rsub__", "__rmul__", "__rdiv__", "__rmod__", "__rdivmod__", "__divmod__", "__rfloordiv__", "__rtruediv__", "comparison", "return", "__nonzero__", "__nonzero__", "should", "return", "__nonzero__", "should", "return", "object", "cannot", "interpreted", "index", "__long__", "__float__", "__oct__", "__hex__", "__rpow__", "__iter__", "__iter__", "returned", "iterator", "iteration", "sequence", "instance", "method", "__call__", "instance", "__call__", "method", "__call__", "instancemethod", "first", "argument", "callable", "unbound", "methods", "im_class", "unbound", "method", "bound", "method", "nothing", "instance", "unbound", "method", "called", "instance", "first", "argument", "instead", "PyCObject", "CObject", "supported", "Please", "capsule", "objects", "instead", "PyCObject_FromVoidPtrAndDesc", "called", "description", "PyCObject_AsVoidPtr", "object", "PyCObject_AsVoidPtr", "called", "pointer", "PyCObject_GetDesc", "object", "PyCObject_GetDesc", "called", "pointer", "Invalid", "PyCObject_SetVoidPtr", "co_lnotab", "co_firstlineno", "co_name", "co_filename", "co_cellvars", "co_freevars", "co_varnames", "co_names", "co_consts", "co_code", "co_flags", "co_stacksize", "co_nlocals", "co_argcount", "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz", "string", "found", "Objects", "codeobject", "tuples", "contain", "strings", "iiiiSO!O!O!SSiS", "argcount", "negative", "nlocals", "negative", "object", "inequality", "comparisons", "supported", "complex", "imaginary", "complex", "number", "complex", "number", "__getnewargs__", "conjugate", "__complex__", "__complex__", "should", "return", "complex", "object", "complex", "division", "classic", "complex", "division", "complex", "divmod", "deprecated", "complex", "remainder", "complex", "divmod", "complex", "modulo", "negative", "complex", "power", "complex", "exponentiation", "absolute", "value", "large", "ordering", "relation", "defined", "complex", "numbers", "convert", "complex", "convert", "complex", "convert", "complex", "float", "__format__", "requires", "unicode", "complex", "string", "complex", "malformed", "string", "complex", "complex", "second", "first", "string", "complex", "second", "string", "complex", "argument", "string", "number", "float", "return", "float", "property", "deleter", "setter", "getter", "method", "wrapper", "dictproxy", "shallow", "iteritems", "iterator", "value", "items", "itervalues", "iterator", "values", "iterkeys", "iterator", "items", "value", "pairs", "tuples", "values", "values", "has_key", "defaults", "has_key", "False", "has_key", "wrapper_descriptor", "getset_descriptor", "member_descriptor", "classmethod_descriptor", "method_descriptor", "__objclass__", "method", "objects", "member", "objects", "attribute", "objects", "wrapper", "objects", "descriptor", "objects", "doesn", "apply", "object", "descriptor", "needs", "either", "object", "descriptor", "needs", "descriptor", "doesn", "apply", "attribute", "objects", "readable", "descriptor", "objects", "doesn", "apply", "object", "attribute", "objects", "writable", "descriptor", "object", "needs", "argument", "descriptor", "requires", "object", "received", "descriptor", "object", "needs", "argument", "descriptor", "requires", "received", "descriptor", "requires", "subtype", "received", "items", "iterkeys", "itervalues", "dict_proxy", "method", "wrapper", "object", "wrapper", "doesn", "keyword", "arguments", "unreadable", "attribute", "delete", "attribute", "attribute", "property", "dict_values", "dict_items", "dict_keys", "dictionary", "itemiterator", "dictionary", "valueiterator", "dictionary", "keyiterator", "viewvalues", "viewitems", "viewkeys", "popitem", "dummy", "Objects", "dictobject", "fromkeys", "cannot", "convert", "dictionary", "update", "sequence", "element", "sequence", "dictionary", "update", "sequence", "element", "length", "required", "inequality", "comparisons", "supported", "has_key", "supported", "operator", "setdefault", "popitem", "dictionary", "empty", "requires", "argument", "difference_update", "intersection_update", "symmetric_difference_update", "enumerate", "enumerate", "reversed", "reversed", "argument", "reversed", "sequence", "class", "warnings", "about", "bytes", "buffer", "related", "problems", "mostly", "related", "conversion", "comparing", "exceptions", "BytesWarning", "class", "warnings", "about", "Unicode", "related", "problems", "mostly", "related", "conversion", "problems", "exceptions", "UnicodeWarning", "class", "warnings", "about", "probable", "mistakes", "module", "imports", "exceptions", "ImportWarning", "class", "warnings", "about", "constructs", "change", "semantically", "future", "exceptions", "FutureWarning", "class", "warnings", "about", "dubious", "runtime", "behavior", "exceptions", "RuntimeWarning", "class", "warnings", "about", "dubious", "syntax", "exceptions", "SyntaxWarning", "class", "warnings", "about", "features", "which", "deprecated", "future", "exceptions", "PendingDeprecationWarning", "class", "warnings", "about", "deprecated", "features", "exceptions", "DeprecationWarning", "class", "warnings", "generated", "exceptions", "UserWarning", "class", "warning", "categories", "exceptions", "Warning", "Buffer", "error", "exceptions", "BufferError", "memory", "exceptions", "MemoryError", "proxy", "after", "referent", "exceptions", "ReferenceError", "Internal", "error", "Python", "interpreter", "Please", "report", "Python", "maintainer", "along", "traceback", "Python", "version", "hardware", "platform", "version", "exceptions", "SystemError", "Second", "argument", "division", "modulo", "operation", "exceptions", "ZeroDivisionError", "Result", "large", "represented", "exceptions", "OverflowError", "Floating", "point", "operation", "failed", "exceptions", "FloatingPointError", "class", "arithmetic", "errors", "exceptions", "ArithmeticError", "Assertion", "failed", "exceptions", "AssertionError", "Unicode", "translation", "error", "exceptions", "UnicodeTranslateError", "Unicode", "decoding", "error", "exceptions", "UnicodeDecodeError", "Unicode", "encoding", "error", "exceptions", "UnicodeEncodeError", "exception", "reason", "exception", "exception", "start", "exception", "object", "exception", "encoding", "Unicode", "related", "error", "exceptions", "UnicodeError", "Inappropriate", "argument", "value", "correct", "exceptions", "ValueError", "Mapping", "found", "exceptions", "KeyError", "Sequence", "index", "range", "exceptions", "IndexError", "class", "lookup", "errors", "exceptions", "LookupError", "Improper", "mixture", "spaces", "exceptions", "TabError", "Improper", "indentation", "exceptions", "IndentationError", "Invalid", "syntax", "exceptions", "SyntaxError", "exception", "print_file_and_line", "print_file_and_line", "exception", "exception", "offset", "exception", "lineno", "lineno", "exception", "Attribute", "found", "exceptions", "AttributeError", "Local", "referenced", "bound", "value", "exceptions", "UnboundLocalError", "found", "globally", "exceptions", "NameError", "Method", "function", "implemented", "exceptions", "NotImplementedError", "Unspecified", "error", "exceptions", "RuntimeError", "beyond", "exceptions", "EOFError", "Windows", "system", "failed", "exceptions", "WindowsError", "Win32", "exception", "winerror", "POSIX", "exception", "system", "failed", "exceptions", "OSError", "operation", "failed", "exceptions", "IOError", "class", "related", "errors", "exceptions", "EnvironmentError", "exception", "filename", "exception", "strerror", "exception", "errno", "Import", "module", "module", "exceptions", "ImportError", "Program", "interrupted", "exceptions", "KeyboardInterrupt", "Request", "interpreter", "exceptions", "SystemExit", "exception", "Request", "generator", "exceptions", "GeneratorExit", "Signal", "iterator", "exceptions", "StopIteration", "Inappropriate", "argument", "exceptions", "TypeError", "class", "standard", "Python", "exceptions", "represent", "interpreter", "exiting", "exceptions", "StandardError", "Common", "class", "exceptions", "exceptions", "Exception", "Common", "class", "exceptions", "exceptions", "BaseException", "__unicode__", "__getitem__", "supported", "exception", "classes", "attribute", "__getslice__", "supported", "exception", "classes", "attribute", "__dict__", "deleted", "__dict__", "dictionary", "deleted", "message", "message", "attribute", "deleted", "BaseException", "message", "deprecated", "Python", "EnvironmentError", "Errno", "Errno", "Error", "Error", "tuple", "index", "range", "attribute", "attribute", "attribute", "unicode", "reason", "O!O!nnO!", "codec", "encode", "character", "position", "codec", "encode", "characters", "position", "codec", "decode", "position", "codec", "decode", "bytes", "position", "O!nnO!", "translate", "character", "position", "translate", "characters", "position", "exceptions", "bootstrapping", "error", "exceptions", "BaseException", "Module", "dictionary", "insertion", "problem", "Exception", "StandardError", "TypeError", "StopIteration", "GeneratorExit", "SystemExit", "KeyboardInterrupt", "ImportError", "IOError", "OSError", "WindowsError", "EOFError", "RuntimeError", "NotImplementedError", "NameError", "UnboundLocalError", "AttributeError", "SyntaxError", "IndentationError", "TabError", "LookupError", "IndexError", "KeyError", "ValueError", "UnicodeError", "UnicodeEncodeError", "UnicodeDecodeError", "UnicodeTranslateError", "AssertionError", "ArithmeticError", "FloatingPointError", "OverflowError", "ZeroDivisionError", "SystemError", "ReferenceError", "MemoryError", "BufferError", "Warning", "UserWarning", "DeprecationWarning", "PendingDeprecationWarning", "SyntaxWarning", "RuntimeWarning", "FutureWarning", "ImportWarning", "UnicodeWarning", "BytesWarning", "Cannot", "allocate", "MemoryError", "instance", "Cannot", "allocate", "RuntimeError", "instance", "recursion", "errors", "maximum", "recursion", "depth", "exceeded", "cannot", "allocate", "argument", "RuntimeError", "allocation", "cannot", "allocate", "tuple", "RuntimeError", "allocation", "allocated", "RuntimeError", "failed", "convention", "Unicode", "error", "handler", "encoding", "possibly", "added", "xreadlines", "btcnSR", "UNICODE", "empty", "string", "universal", "newline", "modes", "starting", "string", "begin", "Invalid", "constructor", "accessible", "restricted", "invalid", "filename", "close", "called", "during", "concurrent", "operation", "object", "PyFileObject", "locking", "error", "destructor", "refcnt", "close", "Mixing", "iteration", "methods", "would", "close", "failed", "object", "destructor", "requested", "number", "bytes", "Python", "string", "longer", "Python", "string", "Objects", "fileobject", "object", "readline", "returned", "string", "reading", "readlines", "writelines", "requires", "iterable", "argument", "writelines", "argument", "sequence", "strings", "xreadlines", "supported", "instead", "Unknown", "newlines", "value", "softspace", "supported", "delete", "softspace", "attribute", "uninitialized", "writeobject", "PyFile_WriteString", "fileno", "returned", "integer", "argument", "fileno", "method", "descriptor", "cannot", "negative", "integer", "__setformat__", "__getformat__", "Return", "float", "integer", "is_integer", "as_integer_ratio", "Return", "Integral", "closest", "between", "Return", "complex", "conjugate", "float", "float_info", "FLT_ROUNDS", "addition", "rounds", "rounds", "FLT_RADIX", "radix", "exponent", "radix", "DBL_EPSILON", "Difference", "between", "representable", "float", "epsilon", "DBL_MANT_DIG", "mantissa", "digits", "mant_dig", "DBL_DIG", "digits", "DBL_MIN_10_EXP", "minimum", "normalized", "min_10_exp", "DBL_MIN_EXP", "minimum", "radix", "normalized", "float", "min_exp", "DBL_MIN", "Minimum", "positive", "normalizer", "float", "DBL_MAX_10_EXP", "maximum", "representable", "max_10_exp", "DBL_MAX_EXP", "maximum", "radix", "representable", "max_exp", "DBL_MAX", "maximum", "representable", "finite", "float", "float", "argument", "string", "number", "invalid", "literal", "float", "float", "required", "nb_float", "should", "return", "float", "object", "float", "division", "classic", "float", "division", "float", "modulo", "float", "divmod", "argument", "allowed", "unless", "arguments", "integers", "cannot", "raised", "negative", "power", "negative", "number", "cannot", "raised", "fractional", "power", "rounded", "value", "large", "represent", "inity", "hexadecimal", "value", "large", "represent", "float", "invalid", "hexadecimal", "floating", "point", "string", "hexadecimal", "string", "convert", "Cannot", "infinity", "float", "as_integer_ratio", "Cannot", "float", "as_integer_ratio", "float", "__getformat__", "argument", "string", "double", "float", "__getformat__", "argument", "double", "float", "unknown", "little", "endian", "endian", "insane", "float_format", "double_format", "__setformat__", "__setformat__", "argument", "double", "float", "__setformat__", "argument", "unknown", "little", "endian", "endian", "format", "unknown", "detected", "platform", "value", "cleanup", "floats", "unfreed", "float", "float", "refcnt", "frexp", "result", "range", "float", "large", "format", "float", "large", "format", "unpack", "special", "value", "platform", "frame", "f_exc_value", "f_exc_type", "f_exc_traceback", "f_restricted", "f_trace", "f_lineno", "f_locals", "f_lasti", "f_globals", "f_builtins", "f_code", "f_back", "f_exc_traceback", "removed", "f_exc_type", "removed", "f_exc_value", "removed", "lineno", "integer", "f_lineno", "trace", "function", "comes", "before", "current", "block", "comes", "after", "current", "block", "except", "there", "exception", "finally", "block", "middle", "block", "block", "stack", "overflow", "block", "stack", "underflow", "function", "closure", "argdefs", "globals", "func_name", "func_dict", "__defaults__", "func_defaults", "__code__", "func_code", "__globals__", "func_globals", "func_doc", "__closure__", "func_closure", "Objects", "funcobject", "tuple", "default", "expected", "tuple", "closure", "function", "attributes", "accessible", "restricted", "function", "dictionary", "deleted", "setting", "function", "dictionary", "__code__", "object", "requires", "object", "__name__", "string", "object", "__defaults__", "tuple", "object", "function", "string", "defaults", "tuple", "closure", "tuple", "closure", "tuple", "requires", "closure", "length", "closure", "expected", "found", "function", "uninitialized", "classmethod", "object", "classmethod", "uninitialized", "staticmethod", "object", "staticmethod", "generator", "gi_code", "gi_running", "gi_frame", "generator", "already", "executing", "value", "started", "generator", "generator", "ignored", "GeneratorExit", "throw", "throw", "third", "argument", "traceback", "object", "instance", "exception", "separate", "value", "exceptions", "classes", "instances", "generator", "object", "denominator", "rational", "number", "lowest", "terms", "denominator", "numerator", "rational", "number", "lowest", "terms", "numerator", "Truncating", "Integral", "returns", "itself", "bit_length", "Returns", "complex", "conjugate", "__int__", "method", "should", "return", "integer", "Python", "large", "convert", "invalid", "literal", "integer", "division", "modulo", "classic", "division", "division", "argument", "cannot", "negative", "argument", "specified", "argument", "cannot", "negative", "shift", "count", "missing", "string", "argument", "convert", "string", "explicit", "cleanup", "unfreed", "refcnt", "callable", "iterator", "iterator", "Objects", "iterobject", "index", "large", "listreverseiterator", "listiterator", "cmpwrapper", "sortwrapper", "Objects", "listobject", "index", "range", "assignment", "index", "range", "cannot", "objects", "while", "getting", "concatenate", "assign", "iterable", "argument", "iterable", "empty", "comparison", "function", "return", "expected", "sortwrapperobject", "argument", "supported", "modified", "during", "index", "remove", "indices", "integers", "assign", "iterable", "extended", "slice", "attempt", "assign", "sequence", "extended", "slice", "long_info", "bytes", "represent", "digit", "sizeof_digit", "digit", "bits_per_digit", "Returns", "memory", "bytes", "Returns", "complex", "conjugate", "digits", "integer", "cannot", "convert", "float", "infinity", "integer", "cannot", "convert", "float", "integer", "Objects", "longobject", "nb_int", "should", "return", "object", "Python", "large", "convert", "large", "convert", "convert", "negative", "value", "unsigned", "large", "convert", "express", "platform", "size_t", "array", "convert", "convert", "negative", "unsigned", "convert", "integer", "conversion", "failed", "large", "format", "string", "large", "convert", "invalid", "literal", "division", "modulo", "integer", "number", "overflows", "Py_ssize_t", "large", "convert", "float", "classic", "division", "intermediate", "overflow", "during", "division", "integer", "division", "result", "large", "float", "missing", "string", "argument", "convert", "string", "explicit", "memoryview", "tobytes", "readonly", "suboffsets", "strides", "shape", "exported", "buffer", "shape", "information", "associated", "cannot", "memory", "because", "object", "buffer", "interface", "memoryview", "object", "buffer", "interface", "writable", "contiguous", "buffer", "requested", "contiguousobject", "tolist", "supports", "views", "tolist", "supports", "dimensional", "objects", "memory", "invalid", "indexing", "memory", "index", "bounds", "cannot", "index", "memory", "using", "cannot", "modify", "memory", "cannot", "delete", "memory", "mismatching", "sizes", "cannot", "modify", "memoryview", "object", "builtin_function_or_method", "Objects", "methodobject", "takes", "arguments", "given", "takes", "exactly", "argument", "given", "takes", "keyword", "arguments", "method", "__self__", "accessible", "restricted", "built", "function", "built", "method", "object", "builtin_function_or_method", "order", "comparisons", "supported", "__methods__", "__methods__", "supported", "module", "__package__", "Objects", "moduleobject", "nameless", "module", "__file__", "module", "filename", "missing", "clear", "clear", "module", "__init__", "module", "built", "module", "NotImplementedType", "NoneType", "print", "recursion", "stack", "overflow", "refcnt", "object", "refcount", "address", "object", "__repr__", "returned", "string", "while", "getting", "object", "__str__", "returned", "string", "tp_compare", "return", "exception", "tp_compare", "return", "Objects", "object", "comparing", "unequal", "types", "supported", "unhashable", "attribute", "string", "object", "attribute", "assign", "object", "attributes", "object", "attributes", "object", "attribute", "object", "attribute", "number", "coercion", "failed", "__members__", "__members__", "__methods__", "supported", "frame", "exist", "expected", "locals", "__dict__", "dictionary", "__dir__", "__dir__", "return", "deallocating", "NotImplemented", "initialize", "initialize", "weakref", "initialize", "callable", "weakref", "proxy", "initialize", "weakref", "proxy", "initialize", "initialize", "initialize", "bytearray", "initialize", "initialize", "initialize", "NotImplemented", "initialize", "traceback", "initialize", "super", "initialize", "object", "initialize", "xrange", "initialize", "initialize", "initialize", "unicode", "initialize", "slice", "initialize", "static", "method", "initialize", "complex", "initialize", "float", "initialize", "buffer", "initialize", "initialize", "initialize", "frozenset", "initialize", "property", "initialize", "memoryview", "initialize", "tuple", "initialize", "enumerate", "initialize", "reversed", "initialize", "initialize", "frame", "initialize", "builtin", "function", "initialize", "method", "initialize", "function", "initialize", "class", "initialize", "proxy", "initialize", "generator", "initialize", "descriptor", "initialize", "wrapper", "initialize", "instance", "initialize", "ellipsis", "initialize", "member", "descriptor", "initialize", "initialize", "capsule", "initialize", "initialize", "initialize", "sequence", "iterator", "Py_Repr", "rangeiterator", "xrange", "xrange", "xrange", "requires", "arguments", "xrange", "requires", "arguments", "xrange", "xrange", "result", "items", "xrange", "object", "index", "range", "xrange", "xrange", "xrange", "Objects", "rangeobject", "frozenset", "union", "symmetric_difference", "issuperset", "issubset", "isdisjoint", "intersection", "difference", "discard", "setiterator", "empty", "changed", "during", "iteration", "frozenset", "cannot", "compare", "using", "Objects", "setobject", "indices", "ellipsis", "Ellipsis", "slice", "cannot", "slice", "slice", "slice", "unhashable", "basestring", "_formatter_parser", "_formatter_field_name_split", "fieldnameiterator", "formatteriterator", "Negative", "passed", "PyString_FromStringAndSize", "string", "large", "string", "Python", "string", "decoder", "return", "string", "object", "encoder", "return", "string", "object", "deletion", "interned", "string", "failed", "Immortal", "interned", "string", "Inconsistent", "interned", "string", "state", "Trailing", "string", "invalid", "escape", "decoding", "error", "unknown", "error", "handling", "Objects", "stringobject", "expected", "string", "Unicode", "object", "found", "expected", "string", "without", "bytes", "string", "large", "cannot", "concatenate", "objects", "strings", "large", "concat", "repeated", "string", "string", "requires", "string", "operand", "string", "index", "range", "string", "indices", "integers", "accessing", "existent", "string", "segment", "Cannot", "string", "modifiable", "buffer", "sequence", "expected", "string", "found", "result", "Python", "string", "substring", "found", "unicode", "deletions", "implemented", "differently", "unicode", "startswith", "first", "unicode", "tuple", "endswith", "first", "unicode", "tuple", "encode", "encoder", "return", "string", "unicode", "object", "decoder", "return", "string", "unicode", "object", "string", "cannot", "switch", "manual", "field", "specification", "automatic", "field", "numbering", "cannot", "switch", "automatic", "field", "numbering", "manual", "field", "specification", "decimal", "digits", "format", "string", "Missing", "format", "string", "follow", "format", "field", "specifier", "Empty", "attribute", "format", "string", "format", "while", "looking", "conversion", "specifier", "expected", "after", "format", "specifier", "Single", "encountered", "format", "string", "Single", "encountered", "format", "string", "unmatched", "format", "Unknown", "conversion", "specifier", "Unknown", "conversion", "specifier", "string", "recursion", "exceeded", "__format__", "unicode", "basestring", "cannot", "instantiated", "enough", "arguments", "format", "string", "float", "argument", "required", "string", "large", "_PyString_FormatLong", "format", "invalid", "result", "argument", "required", "formatted", "integer", "precision", "large", "requires", "requires", "format", "requires", "mapping", "incomplete", "format", "wants", "width", "incomplete", "format", "argument", "string", "format", "number", "required", "unsupported", "format", "character", "index", "arguments", "converted", "during", "string", "formatting", "PyString_InternInPlace", "strings", "please!", "releasing", "interned", "strings", "total", "interned", "strings", "mortal", "immortal", "unnamed", "field", "structseq", "index", "integer", "structseq", "constructor", "requires", "sequence", "takes", "second", "takes", "least", "sequence", "sequence", "given", "takes", "sequence", "sequence", "given", "takes", "sequence", "sequence", "given", "tupleiterator", "tuple", "Objects", "tupleobject", "tuple", "assignment", "index", "range", "while", "getting", "tuple", "concatenate", "tuple", "tuple", "tuple", "index", "tuple", "tuple", "tuple", "indices", "integers", "instance", "invoking", "super", "__self_class__", "instance", "invoking", "super", "class", "invoking", "super", "__thisclass__", "__contains__", "__delslice__", "negative", "indices", "supported", "__setslice__", "negative", "indices", "supported", "__getslice__", "negative", "indices", "supported", "__rmul__", "__mul__", "__delitem__", "__setitem__", "__getitem__", "__len__", "__index__", "__index__", "__itruediv__", "__ifloordiv__", "__rtruediv__", "__truediv__", "__rfloordiv__", "__floordiv__", "__ior__", "__ixor__", "__iand__", "__irshift__", "__ilshift__", "__ipow__", "__imod__", "__idiv__", "__imul__", "__isub__", "__iadd__", "__hex__", "__oct__", "__float__", "float", "__long__", "__int__", "__coerce__", "coerce", "__ror__", "__or__", "__rxor__", "__xor__", "__rand__", "__and__", "__rrshift__", "__rshift__", "__rlshift__", "__lshift__", "__invert__", "__nonzero__", "__abs__", "__pos__", "__neg__", "__rpow__", "__pow__", "__rdivmod__", "divmod", "__divmod__", "divmod", "__rmod__", "__mod__", "__rdiv__", "__div__", "__rmul__", "__mul__", "__rsub__", "__sub__", "__radd__", "__add__", "__init__", "initializes", "signature", "descr", "__delete__", "descr", "__set__", "value", "descr", "__get__", "value", "value", "raise", "StopIteration", "__iter__", "__ge__", "__gt__", "__ne__", "__eq__", "__le__", "__lt__", "__delattr__", "__setattr__", "value", "value", "__getattribute__", "__str__", "__call__", "__hash__", "__repr__", "__cmp__", "__new__", "object", "subtype", "references", "object", "defined", "__weakref__", "dictionary", "instance", "variables", "defined", "object", "class", "__sizeof__", "object", "memory", "bytes", "default", "object", "formatter", "__subclasshook__", "helper", "pickle", "__abstractmethods__", "__mro__", "__dictoffset__", "__base__", "__weakrefoffset__", "__flags__", "__itemsize__", "__basicsize__", "__subclasscheck__", "check", "class", "subclass", "__instancecheck__", "check", "object", "instance", "__subclasses__", "immediate", "subclasses", "__subclasses__", "return", "method", "resolution", "order", "__name__", "delete", "__name__", "assign", "string", "__name__", "contain", "characters", "__module__", "delete", "__module__", "__bases__", "delete", "__bases__", "assign", "tuple", "__bases__", "assign", "empty", "tuple", "__bases__", "__bases__", "tuple", "style", "classes", "inequality", "comparisons", "supported", "cannot", "create", "instances", "duplicate", "class", "Cannot", "create", "consistent", "method", "resolution", "order", "bases", "returned", "class", "returned", "unsuitable", "layout", "bases", "types", "acceptable", "multiple", "bases", "instance", "conflict", "style", "class", "classic", "bases", "__dict__", "descriptor", "support", "objects", "object", "__dict__", "__dict__", "dictionary", "object", "__weakref__", "__slots__", "items", "strings", "__slots__", "identifiers", "__init__", "takes", "keyword", "arguments", "__init__", "takes", "arguments", "takes", "arguments", "SO!O!", "metaclass", "conflict", "metaclass", "derived", "class", "strict", "subclass", "metaclasses", "bases", "__slots__", "nonempty", "__slots__", "supported", "subtype", "__dict__", "disallowed", "already", "__weakref__", "disallowed", "either", "already", "__itemsize__", "object", "attribute", "attributes", "built", "extension", "object", "__init__", "takes", "parameters", "object", "takes", "parameters", "sorted", "instantiate", "abstract", "class", "abstract", "methods", "object", "assignment", "deallocator", "differs", "assignment", "object", "layout", "differs", "delete", "__class__", "attribute", "__class__", "style", "class", "object", "__class__", "assignment", "types", "__slotnames__", "_slotnames", "copy_reg", "_slotnames", "return", "pickle", "objects", "__getnewargs__", "should", "return", "tuple", "_reduce_ex", "__reduce__", "__reduce_ex__", "argument", "__format__", "unicode", "method", "cannot", "class", "static", "Overriding", "__eq__", "blocks", "inheritance", "__hash__", "define", "tp_name", "field", "dynamically", "allocated", "dynamically", "allocated", "participates", "inappropriate", "tp_free", "PyArg_UnpackTuple", "argument", "tuple", "expected", "arguments", "__cmp__", "requires", "apply", "object", "__get__", "invalid", "__new__", "called", "__new__", "enough", "arguments", "__new__", "object", "__new__", "subtype", "__new__", "__new__", "should", "return", "returned", "__coerce__", "return", "tuple", "__getattribute__", "__get__", "__delete__", "__set__", "__init__", "should", "return", "memory", "interning", "slotdef", "names", "super", "class", "object", "super", "class", "super", "instance", "subtype", "super", "super", "unicode", "isnumeric", "isdecimal", "translating", "error", "handler", "return", "unicode", "tuple", "EncodingMap", "Return", "bytes", "object", "encoding", "error", "handler", "return", "unicode", "tuple", "decoding", "error", "handler", "return", "unicode", "tuple", "resize", "shared", "unicode", "objects", "Objects", "unicodeobject", "Negative", "passed", "PyUnicode_FromStringAndSize", "range", "0x10000", "narrow", "Python", "build", "unichr", "range", "0x10000", "narrow", "Python", "build", "decoding", "Unicode", "supported", "decoding", "bytearray", "supported", "coercing", "Unicode", "string", "buffer", "found", "decoder", "return", "unicode", "object", "decoding", "Unicode", "supported", "decoded", "result", "Python", "string", "partial", "character", "shift", "sequence", "padding", "shift", "sequence", "unexpected", "special", "character", "unterminated", "shift", "sequence", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", "invalid", "start", "internal", "error", "invalid", "continuation", "truncated", "point", "range", "0x110000", "utf32", "illegal", "surrogate", "illegal", "encoding", "utf16", "truncated", "escape", "truncated", "uXXXX", "escape", "truncated", "UXXXXXXXX", "escape", "illegal", "Unicode", "character", "malformed", "character", "escape", "unicodedata", "ucnhash_CAPI", "unknown", "Unicode", "character", "string", "unicodeescape", "escapes", "supported", "unicodedata", "module", "truncated", "uXXXX", "rawunicodeescape", "Uxxxxxxxx", "range", "truncated", "input", "unicode_internal", "ordinal", "range", "ordinal", "range", "xmlcharrefreplace", "encoded", "result", "Python", "string", "character", "undefined", "charmap", "character", "mapping", "range", "0x110000", "character", "mapping", "return", "integer", "unicode", "character", "mapping", "range", "character", "mapping", "return", "integer", "character", "mapping", "range", "decimal", "invalid", "decimal", "Unicode", "string", "sequence", "expected", "string", "Unicode", "found", "padded", "string", "character", "cannot", "converted", "Unicode", "character", "exactly", "character", "center", "Unicode", "equal", "comparison", "failed", "convert", "arguments", "Unicode", "interpreting", "being", "unequal", "Unicode", "unequal", "comparison", "failed", "convert", "arguments", "Unicode", "interpreting", "being", "unequal", "ljust", "unicode", "rjust", "string", "indices", "integers", "accessing", "existent", "unicode", "segment", "cannot", "unicode", "modifiable", "buffer", "requires", "unicode", "initialize", "unicode", "initialize", "field", "iterator", "initialize", "formatter", "weakcallableproxy", "weakproxy", "weakref", "__call__", "object", "weakref", "weakref", "weakref", "cannot", "create", "reference", "object", "weakly", "referenced", "object", "longer", "exists", "weakproxy", "Objects", "weakrefobject", "build", "parser", "accelerators", "states!", "nonterminal", "number!", "ambiguity!", "parser", "accelerators", "bitset", "Adding", "FIRST", "Calculate", "FIRST", "recursion", "calculating", "FIRST", "calcfirstset", "resize", "calcfirstset", "recursion", "below", "FIRST", "grammar", "resize", "adddfa", "resize", "state", "addstate", "resize", "addarc", "resize", "labellist", "addlabel", "Label", "Label", "found", "grammar", "findlabel", "Translating", "label", "Label", "terminal", "Label", "terminal", "translate", "label", "Label", "keyword", "alloc", "Unknown", "label", "translate", "STRING", "label", "translate", "label", "EMPTY", "MSTART", "input", "enter", "readline", "s_push", "parser", "stack", "overflow", "__future__", "with_statement", "print_function", "unicode_literals", "string", "parser", "token", "tabsize", "tabstop", "width", "N_TOKENS", "ERRORTOKEN", "DOUBLESLASHEQUAL", "DOUBLESLASH", "DOUBLESTAREQUAL", "RIGHTSHIFTEQUAL", "LEFTSHIFTEQUAL", "CIRCUMFLEXEQUAL", "VBAREQUAL", "AMPEREQUAL", "PERCENTEQUAL", "SLASHEQUAL", "STAREQUAL", "MINEQUAL", "PLUSEQUAL", "DOUBLESTAR", "RIGHTSHIFT", "LEFTSHIFT", "CIRCUMFLEX", "TILDE", "GREATEREQUAL", "LESSEQUAL", "NOTEQUAL", "EQEQUAL", "RBRACE", "LBRACE", "BACKQUOTE", "PERCENT", "EQUAL", "GREATER", "AMPER", "SLASH", "MINUS", "COMMA", "COLON", "DEDENT", "INDENT", "NEWLINE", "STRING", "NUMBER", "ENDMARKER", "latin", "latin", "latin", "coding", "encoding", "problem", "encoding", "problem", "codec", "return", "unicode", "object", "ASCII", "character", "encoding", "declared", "python", "details", "stdin", "tok_backup", "beginning", "buffer", "inconsistent", "spaces", "indentation", "supported", "GetModuleFileName", "GetVersion", "WaitForSingleObject", "GetExitCodeProcess", "TerminateProcess", "GetCurrentProcess", "GetStdHandle", "_subprocess_handle", "Close", "Detach", "Detach", "Close", "GetStdHandle", "GetCurrentProcess", "lllii", "DuplicateHandle", "CreatePipe", "environment", "dictionary", "environment", "contain", "strings", "zzOOiiOzO", "CreateProcess", "dwFlags", "wShowWindow", "hStdInput", "hStdOutput", "hStdError", "TerminateProcess", "GetExitCodeProcess", "WaitForSingleObject", "GetVersion", "GetModuleFileName", "_subprocess", "STD_INPUT_HANDLE", "STD_OUTPUT_HANDLE", "STD_ERROR_HANDLE", "DUPLICATE_SAME_ACCESS", "STARTF_USESTDHANDLES", "STARTF_USESHOWWINDOW", "SW_HIDE", "INFINITE", "WAIT_OBJECT_0", "CREATE_NEW_CONSOLE", "CREATE_NEW_PROCESS_GROUP", "STILL_ACTIVE", "SetValueEx", "SetValue", "SaveKey", "QueryReflectionKey", "QueryInfoKey", "QueryValueEx", "QueryValue", "OpenKeyEx", "OpenKey", "LoadKey", "FlushKey", "ExpandEnvironmentStrings", "EnumValue", "EnumKey", "EnableReflectionKey", "DisableReflectionKey", "DeleteValue", "DeleteKeyEx", "DeleteKey", "CreateKeyEx", "CreateKey", "ConnectRegistry", "CloseKey", "PyHKEY", "handle", "operand", "PyHKEY", "PyHKEY", "valid", "context", "object", "PyHKEY", "object", "handle", "object", "integer", "Objects", "binary", "registry", "values", "registry", "string", "Python", "string", "CloseKey", "ConnectRegistry", "CreateKey", "CreateKeyEx", "DeleteKey", "DeleteKeyEx", "advapi32", "RegDeleteKeyExA", "implemented", "platform", "DeleteValue", "EnumKey", "EnumValue", "ExpandEnvironmentStrings", "FlushKey", "LoadKey", "OpenKey", "QueryInfoKey", "QueryValue", "QueryValueEx", "SaveKey", "SetValue", "_winreg", "REG_SZ", "OzOiO", "SetValueEx", "Could", "convert", "specified", "DisableReflectionKey", "RegDisableReflectionKey", "EnableReflectionKey", "RegEnableReflectionKey", "QueryReflectionKey", "RegQueryReflectionKey", "_winreg", "HKEYType", "HKEY_CLASSES_ROOT", "HKEY_CURRENT_USER", "HKEY_LOCAL_MACHINE", "HKEY_USERS", "HKEY_PERFORMANCE_DATA", "HKEY_CURRENT_CONFIG", "HKEY_DYN_DATA", "KEY_QUERY_VALUE", "KEY_SET_VALUE", "KEY_CREATE_SUB_KEY", "KEY_ENUMERATE_SUB_KEYS", "KEY_NOTIFY", "KEY_CREATE_LINK", "KEY_READ", "KEY_WRITE", "KEY_EXECUTE", "KEY_ALL_ACCESS", "KEY_WOW64_64KEY", "KEY_WOW64_32KEY", "REG_OPTION_RESERVED", "REG_OPTION_NON_VOLATILE", "REG_OPTION_VOLATILE", "REG_OPTION_CREATE_LINK", "REG_OPTION_BACKUP_RESTORE", "REG_OPTION_OPEN_LINK", "REG_LEGAL_OPTION", "REG_CREATED_NEW_KEY", "REG_OPENED_EXISTING_KEY", "REG_WHOLE_HIVE_VOLATILE", "REG_REFRESH_HIVE", "REG_NO_LAZY_FLUSH", "REG_NOTIFY_CHANGE_NAME", "REG_NOTIFY_CHANGE_ATTRIBUTES", "REG_NOTIFY_CHANGE_LAST_SET", "REG_NOTIFY_CHANGE_SECURITY", "REG_LEGAL_CHANGE_FILTER", "REG_NONE", "REG_SZ", "REG_EXPAND_SZ", "REG_BINARY", "REG_DWORD", "REG_DWORD_LITTLE_ENDIAN", "REG_DWORD_BIG_ENDIAN", "REG_LINK", "REG_MULTI_SZ", "REG_RESOURCE_LIST", "REG_FULL_RESOURCE_DESCRIPTOR", "REG_RESOURCE_REQUIREMENTS_LIST", "_warnings", "marshal", "msvcrt", "GetCurrentActCtx", "ActivateActCtx", "DeactivateActCtx", "AddRefActCtx", "ReleaseActCtx", "Python", "failed", "activate", "activation", "context", "before", "loading", "Python", "failed", "activate", "activation", "context", "Python", "failed", "default", "activation", "context", "buffer", "overflow", "getpathp", "joinpath", "python", "PYTHONPATH", "malloc", "dynamic", "PYTHONPATH", "Using", "environment", "$PYTHONPATH", "Using", "default", "static", "Software", "Python", "PythonCore", "Modules", "Software", "Python", "PythonCore", "Modules", "ungetwch", "putwch", "getwche", "getwch", "ungetch", "putch", "getche", "getch", "kbhit", "get_osfhandle", "open_osfhandle", "setmode", "locking", "heapmin", "heapmin", "locking", "setmode", "open_osfhandle", "get_osfhandle", "kbhit", "getch", "getwch", "getche", "getwche", "putch", "putwch", "Expected", "unicode", "string", "length", "ungetch", "ungetwch", "LK_LOCK", "LK_NBLCK", "LK_NBRLCK", "LK_RLCK", "LK_UNLCK", "1fc8b3b9a1e18e3b", "VC_ASSEMBLY_PUBLICKEYTOKEN", "21022", "CRT_ASSEMBLY_VERSION", "Microsoft", "LIBRARIES_ASSEMBLY_NAME_PREFIX", "warn_explicit", "module_globals", "registry", "stacklevel", "category", "warnings", "onceregistry", "defaultaction", "filters", "_warnings", "filters", "_warnings", "filters", "tuple", "_warnings", "defaultaction", "found", "unknown", "stderr", "registry", "always", "Unrecognized", "action", "warnings", "filters", "showwarning", "warnings", "showwarning", "function", "method", "__warningregistry__", "category", "subclass", "Warning", "warn_explicit", "unknown", "action", "once_registry", "default_action", "cannot", "assign", "__debug__", "cannot", "assign", "__debug__", "assignment", "False", "forbidden", "nonlocal", "nonlocal", "keyword", "statement", "found", "encoding", "declaration", "Unicode", "string", "invalid", "PyAST_FromNode", "function", "generator", "expression", "yield", "expression", "comprehension", "comprehension", "comprehension", "literal", "comparison", "conditional", "expression", "unexpected", "expression", "assignment", "delete", "invalid", "augassign", "invalid", "comp_op", "invalid", "comp_op", "invalid", "comp_op", "children", "parenthesized", "default", "default", "argument", "follows", "default", "argument", "tuple", "parameter", "unpacking", "removed", "parenthesized", "argument", "names", "invalid", "unexpected", "varargslist", "logic", "error", "count_list_fors", "logic", "error", "count_comp_fors", "unicode", "error", "unicode", "error", "unknown", "error", "backquote", "supported", "unhandled", "unhandled", "factor", "unhandled", "Generator", "expression", "parenthesized", "argument", "arguments", "keyword", "after", "keyword", "named", "arguments", "follow", "expression", "lambda", "cannot", "contain", "assignment", "keyword", "expression", "keyword", "argument", "repeated", "illegal", "expression", "augmented", "assignment", "assignment", "yield", "expression", "possible", "unexpected", "flow_stmt", "unhandled", "statement", "unexpected", "import", "unhandled", "import", "condition", "trailing", "comma", "allowed", "without", "surrounding", "parentheses", "Unexpected", "import", "unknown", "import", "statement", "starts", "command", "poorly", "formed", "statement", "parts", "statement", "improper", "number", "parts", "assert", "statement", "unexpected", "token", "statement", "wrong", "number", "tokens", "while", "statement", "wrong", "number", "children", "except", "clause", "malformed", "statement", "unhandled", "small_stmt", "u005c", "Python", "string", "parse", "ascii", "bytes", "literals", "supported", "unichr", "round", "reload", "raw_input", "intern", "execfile", "callable", "__import__", "ndigits", "number", "dont_inherit", "level", "locals", "__import__", "apply", "supported", "kwargs", "apply", "apply", "expected", "sequence", "found", "apply", "expected", "dictionary", "found", "filter", "format", "range", "unichr", "coerce", "supported", "coerce", "compile", "compile", "unrecognised", "flags", "compile", "single", "compile", "expected", "string", "without", "bytes", "divmod", "locals", "mapping", "globals", "mapping", "globals", "given", "globals", "locals", "called", "without", "frame", "object", "passed", "contain", "variables", "string", "object", "execfile", "supported", "execfile", "getattr", "getattr", "attribute", "string", "hasattr", "hasattr", "attribute", "string", "requires", "least", "supported", "object", "iterator", "setattr", "delattr", "argument", "converted", "__hex__", "returned", "string", "embedded", "input", "intern", "intern", "subclass", "string", "callable", "unexpected", "keyword", "argument", "empty", "sequence", "argument", "converted", "__oct__", "returned", "string", "expected", "string", "length", "found", "expected", "character", "string", "length", "found", "print", "stdout", "unicode", "unicode", "range", "integer", "argument", "expected", "__int__", "should", "return", "object", "range", "range", "argument", "range", "result", "items", "range", "requires", "arguments", "range", "requires", "arguments", "input", "input", "stdin", "input", "stdout", "input", "input", "reduce", "supported", "functools", "reduce", "functools", "reload", "renamed", "reload", "round", "sorted", "locals!", "argument", "__dict__", "attribute", "strings", "instead", "isinstance", "issubclass", "argument", "support", "iteration", "bytes", "filter", "unsubscriptable", "tuple", "filter", "__getitem__", "returned", "different", "filter", "unicode", "unicode", "__getitem__", "returned", "different", "PyEval_AcquireThread", "thread", "state", "PyEval_AcquireThread", "thread", "state", "PyEval_ReleaseThread", "thread", "state", "PyEval_ReleaseThread", "wrong", "thread", "state", "threading", "_after_fork", "PyEval_SaveThread", "tstate", "PyEval_RestoreThread", "tstate", "Stack", "overflow", "maximum", "recursion", "depth", "exceeded", "ceval", "tstate", "ceval", "orphan", "tstate", "local", "variable", "referenced", "before", "assignment", "invalid", "argument", "DUP_TOPX", "bytecode", "corruption", "displayhook", "displayhook", "stdout", "RAISE_VARARGS", "oparg", "locals", "finally", "exception", "locals", "found", "storing", "defined", "locals", "deleting", "global", "defined", "locals", "loading", "variable", "referenced", "before", "assignment", "enclosing", "scope", "__import__", "found", "locals", "found", "during", "import", "lineno", "opcode", "unknown", "opcode", "error", "return", "without", "exception", "PyEval_EvalCodeEx", "globals", "exactly", "takes", "argument", "given", "keywords", "strings", "unexpected", "keyword", "argument", "multiple", "values", "keyword", "argument", "least", "takes", "arguments", "given", "exc_type", "exc_value", "exc_traceback", "raise", "traceback", "calling", "should", "returned", "instance", "BaseException", "exceptions", "style", "classes", "derived", "BaseException", "exceptions", "derive", "BaseException", "value", "unpack", "values", "unpack", "argument", "tuple", "keyword", "dictionary", "constructor", "object", "takes", "exactly", "argument", "given", "multiple", "values", "keyword", "argument", "argument", "after", "mapping", "argument", "after", "iterable", "slice", "indices", "integers", "__index__", "method", "catching", "string", "exceptions", "deprecated", "catching", "classes", "inherit", "BaseException", "allowed", "cannot", "import", "__all__", "import", "object", "__dict__", "__all__", "__metaclass__", "Error", "calling", "metaclass", "bases", "globals", "locals", "cannot", "string", "object", "dictionary", "mapping", "object", "passed", "contain", "variables", "Implements", "backslashreplace", "error", "handling", "which", "replaces", "unencodable", "character", "backslashed", "escape", "sequence", "backslashreplace_errors", "backslashreplace", "Implements", "xmlcharrefreplace", "error", "handling", "which", "replaces", "unencodable", "character", "appropriate", "character", "reference", "xmlcharrefreplace_errors", "Implements", "replace", "error", "handling", "which", "replaces", "malformed", "replacement", "marker", "replace_errors", "Implements", "ignore", "error", "handling", "which", "ignores", "malformed", "continues", "ignore_errors", "Implements", "strict", "error", "handling", "which", "raises", "UnicodeError", "coding", "errors", "strict_errors", "argument", "callable", "codec", "search", "functions", "registered", "encoding", "codec", "search", "functions", "return", "tuples", "unknown", "encoding", "incrementaldecoder", "incrementalencoder", "encoder", "return", "tuple", "object", "integer", "decoder", "return", "tuple", "object", "integer", "_is_text_encoding", "encoding", "handle", "arbitrary", "codecs", "codecs", "encode", "codecs", "decode", "handler", "callable", "unknown", "error", "handler", "handle", "error", "callback", "codec", "exception", "instance", "initialize", "codec", "error", "registry", "initialize", "codec", "registry", "encodings", "private", "identifier", "large", "mangled", "symtable", "compile", "compiler", "compiler_exit_scope", "opcode", "opcode_stack_effect", "module", "suite", "should", "possible", "module", "should", "possible", "unknown", "scope", "symbols", "locals", "globals", "lookup", "freevars", "compiler_make_closure", "lambda", "default", "except", "__future__", "imports", "occur", "beginning", "assertion", "always", "perhaps", "remove", "parentheses", "return", "outside", "function", "break", "outside", "unary", "should", "possible", "binary", "should", "possible", "inplace", "binary", "should", "possible", "delete", "variable", "referenced", "nested", "scope", "param", "invalid", "deref", "variable", "param", "invalid", "local", "variable", "param", "invalid", "global", "variable", "param", "invalid", "variable", "unknown", "comprehension", "genexpr", "setcomp", "dictcomp", "yield", "outside", "function", "param", "invalid", "attribute", "expression", "param", "invalid", "subscript", "expression", "invalid", "augmented", "assignment", "statically", "nested", "blocks", "invalid", "subscript", "param", "invalid", "simple", "slice", "extended", "slice", "invalid", "nested", "slice", "extended", "slice", "invalid", "subscript", "failed", "error", "failed", "python", "Module", "conflicts", "version", "Python", "argument", "built", "operation", "Windows", "Error", "argument", "internal", "function", "argument", "internal", "function", "PyErr_NewException", "module", "class", "Exception", "exception", "failed", "object", "failed", "ignored", "Unknown", "format", "object", "Cannot", "specify", "Format", "specifier", "missing", "precision", "Invalid", "conversion", "specification", "allowed", "string", "format", "specifier", "Alternate", "allowed", "string", "format", "specifier", "alignment", "allowed", "string", "format", "specifier", "Precision", "allowed", "integer", "format", "specifier", "allowed", "integer", "format", "specifier", "Thousands", "separators", "allowed", "integer", "format", "specifier", "range", "0x100", "precision", "Alternate", "allowed", "float", "format", "specifier", "Alternate", "allowed", "complex", "format", "specifier", "padding", "allowed", "complex", "format", "specifier", "alignment", "allowed", "complex", "format", "specifier", "Unknown", "format", "object", "Cannot", "specify", "__phello__", "__phello__", "__hello__", "nested_scopes", "generators", "division", "absolute_import", "braces", "chance", "future", "feature", "defined", "getargs", "cleanup_ptr", "getargs", "cleanup_buffer", "tuple", "nesting", "levels", "argument", "format", "string", "excess", "getargs", "format", "missing", "getargs", "format", "takes", "arguments", "takes", "least", "argument", "style", "getargs", "format", "features", "style", "getargs", "format", "argument", "tuple", "takes", "argument", "given", "format", "string", "argument", "argument", "expected", "arguments", "sequence", "expected", "arguments", "sequence", "length", "retrievable", "integer", "unsigned", "integer", "minimum", "unsigned", "integer", "greater", "maximum", "integer", "integer", "signed", "short", "integer", "minimum", "signed", "short", "integer", "greater", "maximum", "integer", "integer", "signed", "integer", "greater", "maximum", "signed", "integer", "minimum", "integer", "integer", "integer", "float", "float", "complex", "unicode", "conversion", "error", "cleanup", "problem", "string", "without", "bytes", "string", "string", "without", "bytes", "unknown", "parser", "marker", "combination", "buffer", "string", "unicode", "buffer", "encoding", "failed", "encoder", "failed", "return", "string", "buffer_len", "memory", "error", "encoded", "string", "maximum", "length", "encoded", "string", "without", "bytes", "cannot", "convert", "buffers", "unicode", "without", "characters", "unspecified", "pinned", "buffer", "write", "buffer", "contiguous", "buffer", "single", "segment", "write", "buffer", "invalid", "format", "character", "string", "character", "buffer", "string", "single", "segment", "buffer", "string", "pinned", "buffer", "impossible", "format", "string", "buffer", "string", "buffer", "convertible", "buffer", "Python", "getargs", "takes", "argument", "given", "keyword", "entries", "format", "specifiers", "Argument", "given", "position", "Required", "argument", "found", "argument", "specifiers", "keyword", "entries", "remaining", "format", "keywords", "strings", "invalid", "keyword", "argument", "function", "Unmatched", "paren", "format", "string", "Unmatched", "right", "paren", "format", "string", "impossible", "format", "least", "expected", "arguments", "unpacked", "tuple", "should", "elements", "keyword", "arguments", "Intel", "version", "reserved", "Jython", "reserved", "implementation", "specific", "arguments", "Unknown", "option", "Argument", "expected", "option", "win32", "yield_expr", "encoding_decl", "classdef", "dictorsetmaker", "testlist_comp", "listmaker", "power", "factor", "arith_expr", "shift_expr", "and_expr", "xor_expr", "not_test", "and_test", "or_test", "old_test", "except_clause", "with_item", "with_stmt", "try_stmt", "for_stmt", "while_stmt", "if_stmt", "assert_stmt", "exec_stmt", "global_stmt", "dotted_name", "dotted_as_names", "import_as_names", "dotted_as_name", "import_from", "raise_stmt", "return_stmt", "continue_stmt", "break_stmt", "pass_stmt", "expr_stmt", "varargslist", "funcdef", "decorated", "decorators", "decorator", "eval_input", "file_input", "single_input", "importer", "object", "NullImporter", "Always", "return", "load_source", "load_package", "load_dynamic", "load_compiled", "is_frozen", "is_builtin", "init_frozen", "init_builtin", "get_frozen_object", "lock_held", "new_module", "get_suffixes", "get_magic", "__stderr__", "__stdout__", "__stdin__", "float_info", "last_traceback", "last_value", "last_type", "exitfunc", "initialize", "import", "table", "installing", "zipimport", "meta_path", "path_importer_cache", "path_hooks", "initializing", "meta_path", "path_hooks", "path_importer_cache", "NullImporter", "failed", "import", "zipimport", "import", "zipimport", "zipimporter", "installed", "zipimport", "PyImport_ReInitLock", "failed", "create", "holding", "import", "PyImport_GetModuleDict", "module", "dictionary!", "clear", "__builtin__", "clear", "restore", "cleanup", "__main__", "cleanup", "cleanup", "cleanup", "cleanup", "__builtin__", "_PyImport_FixupExtension", "module", "loaded", "import", "previously", "loaded", "import", "deleting", "existing", "insys", "modules", "failed", "Loaded", "module", "found", "modules", "matches", "object", "magic", "number", "import", "precompiled", "create", "write", "wrote", "unable", "status", "import", "dont_write_bytecode", "import", "directory", "module", "meta_path", "import", "hooks", "frozen", "module", "frozen", "submodule", "named", "directory", "names", "path_hooks", "import", "hooks", "path_importer_cache", "importing", "directory", "missing", "__init__", "trying", "module", "named", "PYTHONCASEOK", "module", "filename", "object", "required", "import", "builtin", "frozen", "Purported", "module", "found", "module", "properly", "initialized", "import", "without", "loader", "import", "Cannot", "internal", "module", "import", "builtin", "frozen", "object", "named", "Excluded", "frozen", "object", "named", "package", "import", "frozen", "frozen", "object", "object", "frozen", "Failed", "import", "because", "import", "lockis", "another", "thread", "Import", "filename", "supported", "Empty", "module", "__package__", "string", "Attempted", "relative", "import", "package", "Package", "Module", "Could", "__package__", "Attempted", "relative", "import", "beyond", "toplevel", "package", "Parent", "module", "found", "while", "handling", "absolute", "import", "Parent", "module", "loaded", "cannot", "perform", "relative", "import", "PyImport_ReloadModule", "modules_reloading", "dictionary!", "reload", "argument", "module", "reload", "module", "modules", "reload", "parent", "modules", "OOOOi", "find_module", "init_builtin", "init_frozen", "get_frozen_object", "is_builtin", "is_frozen", "closed", "object", "load_compiled", "load_dynamic", "load_source", "load_module", "invalid", "load_module", "should", "load_package", "new_module", "NullImporter", "NullImporter", "empty", "pathname", "existing", "directory", "SEARCH_ERROR", "PY_SOURCE", "PY_COMPILED", "C_EXTENSION", "PY_RESOURCE", "PKG_DIRECTORY", "C_BUILTIN", "PY_FROZEN", "PY_CODERESOURCE", "IMP_HOOK", "NullImporter", "dynamic", "module", "define", "function", "dynamic", "module", "initialized", "properly", "import", "dynamically", "loaded", "marshal", "range", "marshal", "unnormalized", "marshal", "digit", "range", "recursion", "limit", "exceeded", "where", "object", "expected", "marshal", "string", "range", "marshal", "string", "range", "marshal", "unicode", "range", "marshal", "tuple", "range", "object", "marshal", "tuple", "marshal", "range", "object", "marshal", "marshal", "range", "object", "marshal", "cannot", "unmarshal", "objects", "restricted", "execution", "marshal", "unknown", "readobject", "called", "exception", "object", "marshal", "object", "unmarshallable", "object", "object", "deeply", "nested", "marshal", "marshall", "string", "marshal", "marshal", "loads", "version", "Python", "import", "machinery", "initialized", "module", "functions", "cannot", "METH_CLASS", "METH_STATIC", "unmatched", "paren", "format", "Unmatched", "paren", "format", "format", "string", "Python", "string", "object", "passed", "Py_BuildValue", "format", "passed", "Py_BuildValue", "PyModule_AddObject", "needs", "module", "first", "PyModule_AddObject", "needs", "value", "module", "__dict__", "unexpected", "binary", "operation", "constant", "unexpected", "unary", "operation", "constant", "initialize", "threads", "interpreter", "PyInterpreterState_Delete", "invalid", "interp", "PyInterpreterState_Delete", "remaining", "threads", "PyThreadState_Clear", "warning", "thread", "still", "frame", "PyThreadState_Delete", "tstate", "PyThreadState_Delete", "interp", "PyThreadState_Delete", "invalid", "tstate", "PyThreadState_Delete", "small", "circular", "tstate", "found", "PyThreadState_Delete", "circular", "tstate", "found", "PyThreadState_Delete", "tstate", "still", "current", "PyThreadState_DeleteCurrent", "current", "tstate", "PyThreadState_Get", "current", "thread", "Couldn", "create", "autoTLSkey", "mapping", "Couldn", "create", "thread", "state", "thread", "releasing", "thread", "state", "thread", "state", "thread", "thread", "state", "current", "releasing", "PyOS_ascii_strtod", "PyOS_ascii_atof", "deprecated", "PyOS_string_to_double", "instead", "could", "convert", "string", "float", "value", "large", "convert", "float", "PyOS_ascii_formatd", "deprecated", "PyOS_double_to_string", "instead", "Python", "pystrtod", "asname", "defaults", "kwarg", "vararg", "kwargs", "starargs", "comparators", "operand", "right", "names", "finalbody", "handlers", "tback", "optional_vars", "context_expr", "orelse", "target", "targets", "value", "decorator_list", "col_offset", "_fields", "either", "constructor", "takes", "positional", "argument", "_attributes", "identifier", "string", "unicode", "invalid", "integer", "value", "invalid", "boolean", "value", "Module", "Interactive", "Expression", "Suite", "FunctionDef", "ClassDef", "Return", "Delete", "Assign", "AugAssign", "Print", "While", "Raise", "TryExcept", "TryFinally", "Assert", "Import", "ImportFrom", "Global", "Break", "Continue", "BoolOp", "BinOp", "UnaryOp", "Lambda", "IfExp", "ListComp", "SetComp", "DictComp", "GeneratorExp", "Yield", "Compare", "Attribute", "Subscript", "Tuple", "expr_context", "Store", "AugLoad", "AugStore", "Param", "Slice", "ExtSlice", "Index", "boolop", "LShift", "RShift", "BitOr", "BitXor", "BitAnd", "FloorDiv", "unaryop", "Invert", "cmpop", "NotEq", "IsNot", "NotIn", "comprehension", "excepthandler", "ExceptHandler", "arguments", "keyword", "alias", "field", "required", "Expression", "field", "required", "FunctionDef", "field", "required", "FunctionDef", "field", "required", "ClassDef", "field", "value", "required", "Assign", "field", "target", "required", "AugAssign", "field", "required", "AugAssign", "field", "value", "required", "AugAssign", "field", "target", "required", "field", "required", "field", "required", "While", "field", "required", "field", "context_expr", "required", "field", "required", "Assert", "field", "required", "field", "value", "required", "field", "required", "BoolOp", "field", "required", "BinOp", "field", "required", "BinOp", "field", "right", "required", "BinOp", "field", "required", "UnaryOp", "field", "operand", "required", "UnaryOp", "field", "required", "Lambda", "field", "required", "Lambda", "field", "required", "IfExp", "field", "required", "IfExp", "field", "orelse", "required", "IfExp", "field", "required", "ListComp", "field", "required", "SetComp", "field", "required", "DictComp", "field", "value", "required", "DictComp", "field", "required", "GeneratorExp", "field", "required", "Compare", "field", "required", "field", "value", "required", "field", "required", "field", "required", "field", "value", "required", "Attribute", "field", "required", "Attribute", "field", "required", "Attribute", "field", "value", "required", "Subscript", "field", "slice", "required", "Subscript", "field", "required", "Subscript", "field", "required", "field", "required", "field", "required", "field", "required", "Tuple", "field", "value", "required", "Index", "field", "target", "required", "comprehension", "field", "required", "comprehension", "field", "required", "keyword", "field", "value", "required", "keyword", "field", "required", "alias", "unknown", "expr_context", "found", "unknown", "boolop", "found", "unknown", "operator", "found", "unknown", "unaryop", "found", "unknown", "cmpop", "found", "Module", "field", "Module", "field", "changed", "during", "iteration", "required", "field", "missing", "Module", "Interactive", "field", "Interactive", "field", "changed", "during", "iteration", "required", "field", "missing", "Interactive", "required", "field", "missing", "Expression", "Suite", "field", "Suite", "field", "changed", "during", "iteration", "required", "field", "missing", "Suite", "expected", "required", "field", "lineno", "missing", "required", "field", "col_offset", "missing", "required", "field", "missing", "FunctionDef", "required", "field", "missing", "FunctionDef", "FunctionDef", "field", "FunctionDef", "field", "changed", "during", "iteration", "required", "field", "missing", "FunctionDef", "FunctionDef", "field", "decorator_list", "FunctionDef", "field", "decorator_list", "changed", "during", "iteration", "required", "field", "decorator_list", "missing", "FunctionDef", "required", "field", "missing", "ClassDef", "ClassDef", "field", "bases", "ClassDef", "field", "bases", "changed", "during", "iteration", "required", "field", "bases", "missing", "ClassDef", "ClassDef", "field", "ClassDef", "field", "changed", "during", "iteration", "required", "field", "missing", "ClassDef", "ClassDef", "field", "decorator_list", "ClassDef", "field", "decorator_list", "changed", "during", "iteration", "required", "field", "decorator_list", "missing", "ClassDef", "Delete", "field", "targets", "Delete", "field", "targets", "changed", "during", "iteration", "required", "field", "targets", "missing", "Delete", "Assign", "field", "targets", "Assign", "field", "targets", "changed", "during", "iteration", "required", "field", "targets", "missing", "Assign", "required", "field", "value", "missing", "Assign", "required", "field", "target", "missing", "AugAssign", "required", "field", "missing", "AugAssign", "required", "field", "value", "missing", "AugAssign", "Print", "field", "values", "Print", "field", "values", "changed", "during", "iteration", "required", "field", "values", "missing", "Print", "required", "field", "missing", "Print", "required", "field", "target", "missing", "required", "field", "missing", "field", "field", "changed", "during", "iteration", "required", "field", "missing", "field", "orelse", "field", "orelse", "changed", "during", "iteration", "required", "field", "orelse", "missing", "required", "field", "missing", "While", "While", "field", "While", "field", "changed", "during", "iteration", "required", "field", "missing", "While", "While", "field", "orelse", "While", "field", "orelse", "changed", "during", "iteration", "required", "field", "orelse", "missing", "While", "required", "field", "missing", "field", "field", "changed", "during", "iteration", "required", "field", "missing", "field", "orelse", "field", "orelse", "changed", "during", "iteration", "required", "field", "orelse", "missing", "required", "field", "context_expr", "missing", "field", "field", "changed", "during", "iteration", "required", "field", "missing", "TryExcept", "field", "TryExcept", "field", "changed", "during", "iteration", "required", "field", "missing", "TryExcept", "TryExcept", "field", "handlers", "TryExcept", "field", "handlers", "changed", "during", "iteration", "required", "field", "handlers", "missing", "TryExcept", "TryExcept", "field", "orelse", "TryExcept", "field", "orelse", "changed", "during", "iteration", "required", "field", "orelse", "missing", "TryExcept", "TryFinally", "field", "TryFinally", "field", "changed", "during", "iteration", "required", "field", "missing", "TryFinally", "TryFinally", "field", "finalbody", "TryFinally", "field", "finalbody", "changed", "during", "iteration", "required", "field", "finalbody", "missing", "TryFinally", "required", "field", "missing", "Assert", "Import", "field", "names", "Import", "field", "names", "changed", "during", "iteration", "required", "field", "names", "missing", "Import", "ImportFrom", "field", "names", "ImportFrom", "field", "names", "changed", "during", "iteration", "required", "field", "names", "missing", "ImportFrom", "required", "field", "missing", "Global", "field", "names", "Global", "field", "names", "changed", "during", "iteration", "required", "field", "names", "missing", "Global", "required", "field", "value", "missing", "expected", "required", "field", "lineno", "missing", "required", "field", "col_offset", "missing", "required", "field", "missing", "BoolOp", "BoolOp", "field", "values", "BoolOp", "field", "values", "changed", "during", "iteration", "required", "field", "values", "missing", "BoolOp", "required", "field", "missing", "BinOp", "required", "field", "missing", "BinOp", "required", "field", "right", "missing", "BinOp", "required", "field", "missing", "UnaryOp", "required", "field", "operand", "missing", "UnaryOp", "required", "field", "missing", "Lambda", "required", "field", "missing", "Lambda", "required", "field", "missing", "IfExp", "required", "field", "missing", "IfExp", "required", "field", "orelse", "missing", "IfExp", "field", "field", "changed", "during", "iteration", "required", "field", "missing", "field", "values", "field", "values", "changed", "during", "iteration", "required", "field", "values", "missing", "field", "field", "changed", "during", "iteration", "required", "field", "missing", "required", "field", "missing", "ListComp", "ListComp", "field", "generators", "ListComp", "field", "generators", "changed", "during", "iteration", "required", "field", "generators", "missing", "ListComp", "required", "field", "missing", "SetComp", "SetComp", "field", "generators", "SetComp", "field", "generators", "changed", "during", "iteration", "required", "field", "generators", "missing", "SetComp", "required", "field", "missing", "DictComp", "required", "field", "value", "missing", "DictComp", "DictComp", "field", "generators", "DictComp", "field", "generators", "changed", "during", "iteration", "required", "field", "generators", "missing", "DictComp", "required", "field", "missing", "GeneratorExp", "GeneratorExp", "field", "generators", "GeneratorExp", "field", "generators", "changed", "during", "iteration", "required", "field", "generators", "missing", "GeneratorExp", "required", "field", "missing", "Compare", "Compare", "field", "Compare", "field", "changed", "during", "iteration", "required", "field", "missing", "Compare", "Compare", "field", "comparators", "Compare", "field", "comparators", "changed", "during", "iteration", "required", "field", "comparators", "missing", "Compare", "required", "field", "missing", "field", "field", "changed", "during", "iteration", "required", "field", "missing", "field", "keywords", "field", "keywords", "changed", "during", "iteration", "required", "field", "keywords", "missing", "required", "field", "value", "missing", "required", "field", "missing", "required", "field", "missing", "required", "field", "value", "missing", "Attribute", "required", "field", "missing", "Attribute", "required", "field", "missing", "Attribute", "required", "field", "value", "missing", "Subscript", "required", "field", "slice", "missing", "Subscript", "required", "field", "missing", "Subscript", "required", "field", "missing", "required", "field", "missing", "field", "field", "changed", "during", "iteration", "required", "field", "missing", "required", "field", "missing", "Tuple", "field", "Tuple", "field", "changed", "during", "iteration", "required", "field", "missing", "Tuple", "required", "field", "missing", "Tuple", "expected", "expected", "expr_context", "ExtSlice", "field", "ExtSlice", "field", "changed", "during", "iteration", "required", "field", "missing", "ExtSlice", "required", "field", "value", "missing", "Index", "expected", "slice", "expected", "boolop", "expected", "operator", "expected", "unaryop", "expected", "cmpop", "required", "field", "target", "missing", "comprehension", "required", "field", "missing", "comprehension", "comprehension", "field", "comprehension", "field", "changed", "during", "iteration", "required", "field", "missing", "comprehension", "required", "field", "lineno", "missing", "excepthandler", "required", "field", "col_offset", "missing", "excepthandler", "ExceptHandler", "field", "ExceptHandler", "field", "changed", "during", "iteration", "required", "field", "missing", "ExceptHandler", "expected", "excepthandler", "arguments", "field", "arguments", "field", "changed", "during", "iteration", "required", "field", "missing", "arguments", "arguments", "field", "defaults", "arguments", "field", "defaults", "changed", "during", "iteration", "required", "field", "defaults", "missing", "arguments", "required", "field", "missing", "keyword", "required", "field", "value", "missing", "keyword", "required", "field", "missing", "alias", "PyCF_ONLY_AST", "82160", "expected", "PYTHONDEBUG", "PYTHONVERBOSE", "PYTHONOPTIMIZE", "PYTHONDONTWRITEBYTECODE", "Py_Initialize", "first", "interpreter", "Py_Initialize", "first", "thread", "Py_Initialize", "frames", "Py_Initialize", "Py_Initialize", "longs", "Py_Initialize", "bytearray", "Py_Initialize", "modules", "dictionary", "Py_Initialize", "modules_reloading", "dictionary", "Py_Initialize", "initialize", "__builtin__", "Py_Initialize", "initialize", "builtins", "Py_Initialize", "initialize", "Py_Initialize", "initialize", "PYTHONIOENCODING", "Cannot", "codeset", "stdin", "Cannot", "codeset", "stdout", "Cannot", "codeset", "stderr", "Py_NewInterpreter", "Py_Initialize", "first", "Py_EndInterpreter", "thread", "current", "Py_EndInterpreter", "thread", "still", "frame", "Py_EndInterpreter", "thread", "PYTHONHOME", "create", "__main__", "module", "__builtins__", "__main__", "python", "reopen", "excepthook", "Error", "excepthook", "Original", "exception", "excepthook", "missing", "exception", "failed", "magic", "number", "object", "expected", "indented", "block", "unexpected", "indent", "unexpected", "unindent", "invalid", "syntax", "invalid", "token", "while", "scanning", "triple", "quoted", "string", "literal", "while", "scanning", "string", "literal", "unexpected", "while", "parsing", "inconsistent", "spaces", "indentation", "expression", "unindent", "match", "outer", "indentation", "level", "levels", "indentation", "unknown", "decode", "error", "unexpected", "character", "after", "continuation", "character", "error", "unknown", "parsing", "error", "Fatal", "Python", "error", "_shutdown", "Error", "exitfunc", "Could", "reset", "stack!", "CryptAcquireContextA", "CryptGenRandom", "Failed", "initialize", "Windows", "random", "CryptoGen", "Failed", "initialized", "randomized", "secret", "using", "CryptoGen", "PYTHONHASHSEED", "random", "integer", "range", "4294967295", "restricted", "attribute", "memberdescr", "readonly", "attribute", "delete", "numeric", "attribute", "attribute", "value", "Truncation", "value", "Truncation", "value", "unsigned", "Truncation", "value", "short", "Truncation", "value", "unsigned", "short", "Truncation", "value", "Writing", "negative", "value", "unsigned", "field", "Truncation", "value", "unsigned", "memberdescr", "symtable", "entry", "nested", "optimized", "children", "varnames", "symbols", "symtable", "entry", "compiler", "handle", "Suites", "unknown", "symbol", "table", "entry", "local", "global", "failed", "scope", "contains", "nested", "function", "variables", "nested", "function", "import", "allowed", "function", "because", "unqualified", "allowed", "function", "because", "function", "import", "which", "illegal", "because", "duplicate", "argument", "function", "definition", "return", "argument", "inside", "generator", "assigned", "before", "global", "declaration", "prior", "global", "declaration", "invalid", "expression", "parameter", "import", "allowed", "module", "level", "genexpr", "setcomp", "dictcomp", "version_info", "Serial", "release", "number", "serial", "alpha", "candidate", "final", "releaselevel", "Patch", "release", "number", "micro", "Minor", "release", "number", "Major", "release", "number", "flags", "hash_randomization", "bytes_warning", "verbose", "tabcheck", "ignore_environment", "no_site", "no_user_site", "optimize", "interactive", "inspect", "division_new", "division_warning", "py3k_warning", "debug", "call_tracing", "gettrace", "settrace", "setrecursionlimit", "getprofile", "setprofile", "getcheckinterval", "setcheckinterval", "setdefaultencoding", "getwindowsversion", "_getframe", "getsizeof", "getrecursionlimit", "getrefcount", "getfilesystemencoding", "getdefaultencoding", "exc_clear", "exc_info", "_current_frames", "_clear_type_cache", "callstats", "getwindowsversion", "System", "product", "product_type", "identifying", "available", "product", "suites", "suite_mask", "Service", "minor", "version", "number", "service_pack_minor", "Service", "major", "version", "number", "service_pack_major", "Latest", "Service", "installed", "system", "service_pack", "Operating", "system", "platform", "Build", "number", "build", "Minor", "version", "number", "minor", "Major", "version", "number", "major", "c_return", "c_exception", "c_call", "exception", "__builtin__", "exc_clear", "supported", "except", "clauses", "setdefaultencoding", "setcheckinterval", "setrecursionlimit", "recursion", "limit", "positive", "doesn", "define", "__sizeof__", "__sizeof__", "should", "return", "getsizeof", "_getframe", "stack", "enough", "call_tracing", "stdout", "stderr", "__displayhook__", "__excepthook__", "hexversion", "CPython", "subversion", "_mercurial", "api_version", "exec_prefix", "maxsize", "maxint", "py3kwarning", "long_info", "maxunicode", "builtin_module_names", "little", "byteorder", "dllhandle", "winver", "warnoptions", "version_info", "short", "float_repr_style", "create", "assign", "assign", "insertion", "insert", "failed", "truncated", "traceback", "tb_lineno", "tb_lasti", "tb_frame", "tb_next", "Python", "traceback", "tracebacklimit", "Traceback", "recent", "Unversioned", "directory", "a06454b1afa1", "333333", "UUUUUU", "UUUUUU", "UUUUUU", "ffffff", "333333", "build27", "cpython", "PCBuild", "python27", "QueryPerformanceCounter", "QueryPerformanceFrequency", "GetLocaleInfoA", "GetACP", "GetFileSize", "SetFilePointer", "MapViewOfFile", "UnmapViewOfFile", "SetEndOfFile", "GetCurrentProcess", "FlushViewOfFile", "GetLastError", "CreateFileMappingA", "GetSystemInfo", "DuplicateHandle", "CloseHandle", "GetFullPathNameW", "GetFullPathNameA", "CreateFileA", "FindFirstFileW", "SystemTimeToFileTime", "SetEnvironmentVariableW", "CreateDirectoryW", "WaitForSingleObject", "GetFileAttributesExA", "GenerateConsoleCtrlEvent", "SetFileTime", "GetProcessTimes", "OpenProcess", "GetFileAttributesA", "GetExitCodeProcess", "GetFileAttributesW", "CreateProcessA", "TerminateProcess", "CreateFileW", "GetEnvironmentVariableA", "CreateDirectoryA", "SetCurrentDirectoryA", "FindFirstFileA", "GetCurrentDirectoryW", "SetLastError", "MoveFileW", "RemoveDirectoryA", "SetFileAttributesA", "FindClose", "GetFileType", "MoveFileA", "SetCurrentDirectoryW", "RemoveDirectoryW", "CreatePipe", "SetEnvironmentVariableA", "GetModuleFileNameA", "FindNextFileA", "FindNextFileW", "GetCurrentDirectoryA", "GetFileAttributesExW", "GetVersion", "DeleteFileW", "GetFileInformationByHandle", "GetSystemTime", "SetFileAttributesW", "DeleteFileA", "SetEvent", "Sleep", "CreateEventA", "ResetEvent", "SetConsoleCtrlHandler", "WideCharToMultiByte", "IsDBCSLeadByte", "MultiByteToWideChar", "GetStdHandle", "GetProcAddress", "GetModuleHandleA", "ExpandEnvironmentStringsW", "GetModuleHandleW", "OutputDebugStringA", "SetErrorMode", "FreeLibrary", "FormatMessageA", "LoadLibraryExA", "LocalFree", "OutputDebugStringW", "GetConsoleCP", "GetConsoleOutputCP", "GetVersionExA", "TlsGetValue", "HeapAlloc", "InterlockedIncrement", "InterlockedDecrement", "HeapFree", "InterlockedCompareExchange", "GetProcessHeap", "TlsSetValue", "GetCurrentThreadId", "TlsAlloc", "TlsFree", "KERNEL32", "CharPrevA", "LoadStringA", "USER32", "RegSetValueA", "RegSetValueExA", "RegQueryValueExA", "RegDeleteKeyA", "RegEnumKeyExA", "RegCreateKeyA", "RegCreateKeyExA", "RegOpenKeyExA", "RegQueryInfoKeyA", "RegDeleteValueA", "RegQueryValueA", "RegSaveKeyA", "RegEnumValueA", "RegLoadKeyA", "RegFlushKey", "RegConnectRegistryA", "RegCloseKey", "CryptReleaseContext", "ADVAPI32", "ShellExecuteA", "ShellExecuteW", "SHELL32", "memmove", "fputs", "fprintf", "strchr", "malloc", "ungetc", "fflush", "fgetc", "fopen", "isdigit", "fwrite", "fclose", "_finite", "wcscoll", "localeconv", "strcoll", "isalpha", "isupper", "islower", "setlocale", "strxfrm", "_errno", "_copysign", "_isnan", "_HUGE", "_time64", "sprintf", "isalnum", "tolower", "realloc", "isspace", "fread", "ferror", "clearerr", "memchr", "ldexp", "_hypot", "strtol", "_gmtime64", "_localtime64", "_fstat64i32", "strerror", "__iob_func", "strtok", "setvbuf", "_setmode", "getenv", "floor", "frexp", "_get_osfhandle", "abort", "_stricmp", "tmpfile", "_wcsicmp", "strncat", "_lseeki64", "_environ", "_tempnam", "_wopen", "tmpnam", "strncmp", "_msize", "_cwait", "__pioinfo", "_spawnve", "system", "_exit", "strncpy", "wcsrchr", "_spawnv", "_commit", "strrchr", "_open_osfhandle", "wcsncmp", "_stat64i32", "_fdopen", "toupper", "_mktime64", "_ctime64", "clock", "asctime", "_ftime64", "strftime", "ftell", "fseek", "_snprintf", "wcstombs", "fgetpos", "_wfopen", "fsetpos", "fgets", "_fileno", "__control87_2", "fputc", "isxdigit", "printf", "strstr", "_mbstrlen", "_getche", "_getwch", "_putch", "_locking", "_heapmin", "_ungetch", "_getwche", "_kbhit", "_putwch", "_getch", "__sys_nerr", "__sys_errlist", "_vsnprintf", "strpbrk", "rewind", "_resetstkoflw", "signal", "strtoul", "vfprintf", "_endthreadex", "_beginthreadex", "MSVCR90", "_encode_pointer", "_malloc_crt", "_encoded_null", "_decode_pointer", "_initterm", "_initterm_e", "_amsg_exit", "_adjust_fdiv", "__CppXcptFilter", "_crt_debugger_hook", "__clean_type_info_names_internal", "_unlock", "__dllonexit", "_lock", "_onexit", "_except_handler4_common", "InterlockedExchange", "UnhandledExceptionFilter", "SetUnhandledExceptionFilter", "IsDebuggerPresent", "GetTickCount", "GetCurrentProcessId", "GetSystemTimeAsFileTime", "_getcwd", "_isatty", "_lseek", "_execve", "_putenv", "_read", "_umask", "_close", "_open", "_getpid", "_execv", "_write", "_dup2", "_tzset", "_tzname", "_timezone", "_daylight", "_strdup", "_strnicmp", "_unlink", "memset", "memcpy", "_CIsin", "_CIcos", "_CIlog", "_CIexp", "_CIatan2", "_CIpow", "_CIlog10", "_CIfmod", "_CIsqrt", "_CIcosh", "_CItan", "_CItanh", "_CIsinh", "python27", "PyAST_Compile", "PyAST_FromNode", "PyArena_AddPyObject", "PyArena_Free", "PyArena_Malloc", "PyArena_New", "PyArg_Parse", "PyArg_ParseTuple", "PyArg_ParseTupleAndKeywords", "PyArg_UnpackTuple", "PyArg_VaParse", "PyArg_VaParseTupleAndKeywords", "PyBaseObject_Type", "PyBaseString_Type", "PyBool_FromLong", "PyBool_Type", "PyBuffer_FillContiguousStrides", "PyBuffer_FillInfo", "PyBuffer_FromContiguous", "PyBuffer_FromMemory", "PyBuffer_FromObject", "PyBuffer_FromReadWriteMemory", "PyBuffer_FromReadWriteObject", "PyBuffer_GetPointer", "PyBuffer_IsContiguous", "PyBuffer_New", "PyBuffer_Release", "PyBuffer_ToContiguous", "PyBuffer_Type", "PyByteArrayIter_Type", "PyByteArray_AsString", "PyByteArray_Concat", "PyByteArray_Fini", "PyByteArray_FromObject", "PyByteArray_FromStringAndSize", "PyByteArray_Init", "PyByteArray_Resize", "PyByteArray_Size", "PyByteArray_Type", "PyCFunction_Call", "PyCFunction_ClearFreeList", "PyCFunction_Fini", "PyCFunction_GetFlags", "PyCFunction_GetFunction", "PyCFunction_GetSelf", "PyCFunction_New", "PyCFunction_NewEx", "PyCFunction_Type", "PyCObject_AsVoidPtr", "PyCObject_FromVoidPtr", "PyCObject_FromVoidPtrAndDesc", "PyCObject_GetDesc", "PyCObject_Import", "PyCObject_SetVoidPtr", "PyCObject_Type", "PyCallIter_New", "PyCallIter_Type", "PyCallable_Check", "PyCapsule_GetContext", "PyCapsule_GetDestructor", "PyCapsule_GetName", "PyCapsule_GetPointer", "PyCapsule_Import", "PyCapsule_IsValid", "PyCapsule_New", "PyCapsule_SetContext", "PyCapsule_SetDestructor", "PyCapsule_SetName", "PyCapsule_SetPointer", "PyCapsule_Type", "PyCell_Get", "PyCell_New", "PyCell_Set", "PyCell_Type", "PyClassMethod_New", "PyClassMethod_Type", "PyClass_IsSubclass", "PyClass_New", "PyClass_Type", "PyCode_Addr2Line", "PyCode_New", "PyCode_NewEmpty", "PyCode_Optimize", "PyCode_Type", "PyCodec_BackslashReplaceErrors", "PyCodec_Decode", "PyCodec_Decoder", "PyCodec_Encode", "PyCodec_Encoder", "PyCodec_IgnoreErrors", "PyCodec_IncrementalDecoder", "PyCodec_IncrementalEncoder", "PyCodec_LookupError", "PyCodec_Register", "PyCodec_RegisterError", "PyCodec_ReplaceErrors", "PyCodec_StreamReader", "PyCodec_StreamWriter", "PyCodec_StrictErrors", "PyCodec_XMLCharRefReplaceErrors", "PyComplex_AsCComplex", "PyComplex_FromCComplex", "PyComplex_FromDoubles", "PyComplex_ImagAsDouble", "PyComplex_RealAsDouble", "PyComplex_Type", "PyDescr_NewClassMethod", "PyDescr_NewGetSet", "PyDescr_NewMember", "PyDescr_NewMethod", "PyDescr_NewWrapper", "PyDictItems_Type", "PyDictIterItem_Type", "PyDictIterKey_Type", "PyDictIterValue_Type", "PyDictKeys_Type", "PyDictProxy_New", "PyDictProxy_Type", "PyDictValues_Type", "PyDict_Clear", "PyDict_Contains", "PyDict_Copy", "PyDict_DelItem", "PyDict_DelItemString", "PyDict_Fini", "PyDict_GetItem", "PyDict_GetItemString", "PyDict_Items", "PyDict_Keys", "PyDict_Merge", "PyDict_MergeFromSeq2", "PyDict_New", "PyDict_Next", "PyDict_SetItem", "PyDict_SetItemString", "PyDict_Size", "PyDict_Type", "PyDict_Update", "PyDict_Values", "PyEllipsis_Type", "PyEnum_Type", "PyErr_BadArgument", "PyErr_BadInternalCall", "PyErr_CheckSignals", "PyErr_Clear", "PyErr_Display", "PyErr_ExceptionMatches", "PyErr_Fetch", "PyErr_Format", "PyErr_GivenExceptionMatches", "PyErr_NewException", "PyErr_NewExceptionWithDoc", "PyErr_NoMemory", "PyErr_NormalizeException", "PyErr_Occurred", "PyErr_Print", "PyErr_PrintEx", "PyErr_ProgramText", "PyErr_Restore", "PyErr_SetExcFromWindowsErr", "PyErr_SetExcFromWindowsErrWithFilename", "PyErr_SetExcFromWindowsErrWithFilenameObject", "PyErr_SetExcFromWindowsErrWithUnicodeFilename", "PyErr_SetFromErrno", "PyErr_SetFromErrnoWithFilename", "PyErr_SetFromErrnoWithFilenameObject", "PyErr_SetFromErrnoWithUnicodeFilename", "PyErr_SetFromWindowsErr", "PyErr_SetFromWindowsErrWithFilename", "PyErr_SetFromWindowsErrWithUnicodeFilename", "PyErr_SetInterrupt", "PyErr_SetNone", "PyErr_SetObject", "PyErr_SetString", "PyErr_SyntaxLocation", "PyErr_Warn", "PyErr_WarnEx", "PyErr_WarnExplicit", "PyErr_WriteUnraisable", "PyEval_AcquireLock", "PyEval_AcquireThread", "PyEval_CallFunction", "PyEval_CallMethod", "PyEval_CallObjectWithKeywords", "PyEval_EvalCode", "PyEval_EvalCodeEx", "PyEval_EvalFrame", "PyEval_EvalFrameEx", "PyEval_GetBuiltins", "PyEval_GetCallStats", "PyEval_GetFrame", "PyEval_GetFuncDesc", "PyEval_GetFuncName", "PyEval_GetGlobals", "PyEval_GetLocals", "PyEval_GetRestricted", "PyEval_InitThreads", "PyEval_MergeCompilerFlags", "PyEval_ReInitThreads", "PyEval_ReleaseLock", "PyEval_ReleaseThread", "PyEval_RestoreThread", "PyEval_SaveThread", "PyEval_SetProfile", "PyEval_SetTrace", "PyEval_ThreadsInitialized", "PyExc_ArithmeticError", "PyExc_AssertionError", "PyExc_AttributeError", "PyExc_BaseException", "PyExc_BufferError", "PyExc_BytesWarning", "PyExc_DeprecationWarning", "PyExc_EOFError", "PyExc_EnvironmentError", "PyExc_Exception", "PyExc_FloatingPointError", "PyExc_FutureWarning", "PyExc_GeneratorExit", "PyExc_IOError", "PyExc_ImportError", "PyExc_ImportWarning", "PyExc_IndentationError", "PyExc_IndexError", "PyExc_KeyError", "PyExc_KeyboardInterrupt", "PyExc_LookupError", "PyExc_MemoryError", "PyExc_MemoryErrorInst", "PyExc_NameError", "PyExc_NotImplementedError", "PyExc_OSError", "PyExc_OverflowError", "PyExc_PendingDeprecationWarning", "PyExc_RecursionErrorInst", "PyExc_ReferenceError", "PyExc_RuntimeError", "PyExc_RuntimeWarning", "PyExc_StandardError", "PyExc_StopIteration", "PyExc_SyntaxError", "PyExc_SyntaxWarning", "PyExc_SystemError", "PyExc_SystemExit", "PyExc_TabError", "PyExc_TypeError", "PyExc_UnboundLocalError", "PyExc_UnicodeDecodeError", "PyExc_UnicodeEncodeError", "PyExc_UnicodeError", "PyExc_UnicodeTranslateError", "PyExc_UnicodeWarning", "PyExc_UserWarning", "PyExc_ValueError", "PyExc_Warning", "PyExc_WindowsError", "PyExc_ZeroDivisionError", "PyFile_AsFile", "PyFile_DecUseCount", "PyFile_FromFile", "PyFile_FromString", "PyFile_GetLine", "PyFile_IncUseCount", "PyFile_Name", "PyFile_SetBufSize", "PyFile_SetEncoding", "PyFile_SetEncodingAndErrors", "PyFile_SoftSpace", "PyFile_Type", "PyFile_WriteObject", "PyFile_WriteString", "PyFloat_AsDouble", "PyFloat_AsReprString", "PyFloat_AsString", "PyFloat_ClearFreeList", "PyFloat_Fini", "PyFloat_FromDouble", "PyFloat_FromString", "PyFloat_GetInfo", "PyFloat_GetMax", "PyFloat_GetMin", "PyFloat_Type", "PyFrame_BlockPop", "PyFrame_BlockSetup", "PyFrame_ClearFreeList", "PyFrame_FastToLocals", "PyFrame_Fini", "PyFrame_GetLineNumber", "PyFrame_LocalsToFast", "PyFrame_New", "PyFrame_Type", "PyFrozenSet_New", "PyFrozenSet_Type", "PyFunction_GetClosure", "PyFunction_GetCode", "PyFunction_GetDefaults", "PyFunction_GetGlobals", "PyFunction_GetModule", "PyFunction_New", "PyFunction_SetClosure", "PyFunction_SetDefaults", "PyFunction_Type", "PyFuture_FromAST", "PyGC_Collect", "PyGILState_Ensure", "PyGILState_GetThisThreadState", "PyGILState_Release", "PyGen_NeedsFinalizing", "PyGen_New", "PyGen_Type", "PyGetSetDescr_Type", "PyImport_AddModule", "PyImport_AppendInittab", "PyImport_Cleanup", "PyImport_ExecCodeModule", "PyImport_ExecCodeModuleEx", "PyImport_ExtendInittab", "PyImport_FrozenModules", "PyImport_GetImporter", "PyImport_GetMagicNumber", "PyImport_GetModuleDict", "PyImport_Import", "PyImport_ImportFrozenModule", "PyImport_ImportModule", "PyImport_ImportModuleLevel", "PyImport_ImportModuleNoBlock", "PyImport_Inittab", "PyImport_ReloadModule", "PyInstance_New", "PyInstance_NewRaw", "PyInstance_Type", "PyInt_AsLong", "PyInt_AsSsize_t", "PyInt_AsUnsignedLongLongMask", "PyInt_AsUnsignedLongMask", "PyInt_ClearFreeList", "PyInt_Fini", "PyInt_FromLong", "PyInt_FromSize_t", "PyInt_FromSsize_t", "PyInt_FromString", "PyInt_FromUnicode", "PyInt_GetMax", "PyInt_Type", "PyInterpreterState_Clear", "PyInterpreterState_Delete", "PyInterpreterState_Head", "PyInterpreterState_New", "PyInterpreterState_Next", "PyInterpreterState_ThreadHead", "PyIter_Next", "PyList_Append", "PyList_AsTuple", "PyList_Fini", "PyList_GetItem", "PyList_GetSlice", "PyList_Insert", "PyList_New", "PyList_Reverse", "PyList_SetItem", "PyList_SetSlice", "PyList_Size", "PyList_Sort", "PyList_Type", "PyLong_AsDouble", "PyLong_AsLong", "PyLong_AsLongAndOverflow", "PyLong_AsLongLong", "PyLong_AsLongLongAndOverflow", "PyLong_AsSsize_t", "PyLong_AsUnsignedLong", "PyLong_AsUnsignedLongLong", "PyLong_AsUnsignedLongLongMask", "PyLong_AsUnsignedLongMask", "PyLong_AsVoidPtr", "PyLong_FromDouble", "PyLong_FromLong", "PyLong_FromLongLong", "PyLong_FromSize_t", "PyLong_FromSsize_t", "PyLong_FromString", "PyLong_FromUnicode", "PyLong_FromUnsignedLong", "PyLong_FromUnsignedLongLong", "PyLong_FromVoidPtr", "PyLong_GetInfo", "PyLong_Type", "PyMapping_Check", "PyMapping_GetItemString", "PyMapping_HasKey", "PyMapping_HasKeyString", "PyMapping_Length", "PyMapping_SetItemString", "PyMapping_Size", "PyMarshal_ReadLastObjectFromFile", "PyMarshal_ReadLongFromFile", "PyMarshal_ReadObjectFromFile", "PyMarshal_ReadObjectFromString", "PyMarshal_ReadShortFromFile", "PyMarshal_WriteLongToFile", "PyMarshal_WriteObjectToFile", "PyMarshal_WriteObjectToString", "PyMem_Free", "PyMem_Malloc", "PyMem_Realloc", "PyMemberDescr_Type", "PyMember_Get", "PyMember_GetOne", "PyMember_Set", "PyMember_SetOne", "PyMemoryView_FromBuffer", "PyMemoryView_FromObject", "PyMemoryView_GetContiguous", "PyMemoryView_Type", "PyMethod_Class", "PyMethod_ClearFreeList", "PyMethod_Fini", "PyMethod_Function", "PyMethod_New", "PyMethod_Self", "PyMethod_Type", "PyModule_AddIntConstant", "PyModule_AddObject", "PyModule_AddStringConstant", "PyModule_GetDict", "PyModule_GetFilename", "PyModule_GetName", "PyModule_New", "PyModule_Type", "PyNode_AddChild", "PyNode_Compile", "PyNode_Free", "PyNode_ListTree", "PyNode_New", "PyNullImporter_Type", "PyNumber_Absolute", "PyNumber_Add", "PyNumber_And", "PyNumber_AsSsize_t", "PyNumber_Check", "PyNumber_Coerce", "PyNumber_CoerceEx", "PyNumber_Divide", "PyNumber_Divmod", "PyNumber_Float", "PyNumber_FloorDivide", "PyNumber_InPlaceAdd", "PyNumber_InPlaceAnd", "PyNumber_InPlaceDivide", "PyNumber_InPlaceFloorDivide", "PyNumber_InPlaceLshift", "PyNumber_InPlaceMultiply", "PyNumber_InPlaceOr", "PyNumber_InPlacePower", "PyNumber_InPlaceRemainder", "PyNumber_InPlaceRshift", "PyNumber_InPlaceSubtract", "PyNumber_InPlaceTrueDivide", "PyNumber_InPlaceXor", "PyNumber_Index", "PyNumber_Int", "PyNumber_Invert", "PyNumber_Long", "PyNumber_Lshift", "PyNumber_Multiply", "PyNumber_Negative", "PyNumber_Or", "PyNumber_Positive", "PyNumber_Power", "PyNumber_Remainder", "PyNumber_Rshift", "PyNumber_Subtract", "PyNumber_ToBase", "PyNumber_TrueDivide", "PyNumber_Xor", "PyOS_AfterFork", "PyOS_CheckStack", "PyOS_FiniInterrupts", "PyOS_InitInterrupts", "PyOS_InputHook", "PyOS_InterruptOccurred", "PyOS_Readline", "PyOS_ReadlineFunctionPointer", "PyOS_ascii_atof", "PyOS_ascii_formatd", "PyOS_ascii_strtod", "PyOS_double_to_string", "PyOS_getsig", "PyOS_mystricmp", "PyOS_mystrnicmp", "PyOS_setsig", "PyOS_snprintf", "PyOS_string_to_double", "PyOS_strtol", "PyOS_strtoul", "PyOS_vsnprintf", "PyObject_AsCharBuffer", "PyObject_AsFileDescriptor", "PyObject_AsReadBuffer", "PyObject_AsWriteBuffer", "PyObject_Call", "PyObject_CallFunction", "PyObject_CallFunctionObjArgs", "PyObject_CallMethod", "PyObject_CallMethodObjArgs", "PyObject_CallObject", "PyObject_CheckReadBuffer", "PyObject_ClearWeakRefs", "PyObject_Cmp", "PyObject_Compare", "PyObject_CopyData", "PyObject_DelItem", "PyObject_DelItemString", "PyObject_Dir", "PyObject_Format", "PyObject_Free", "PyObject_GC_Del", "PyObject_GC_Track", "PyObject_GC_UnTrack", "PyObject_GenericGetAttr", "PyObject_GenericSetAttr", "PyObject_GetAttr", "PyObject_GetAttrString", "PyObject_GetBuffer", "PyObject_GetItem", "PyObject_GetIter", "PyObject_HasAttr", "PyObject_HasAttrString", "PyObject_Hash", "PyObject_HashNotImplemented", "PyObject_Init", "PyObject_InitVar", "PyObject_IsInstance", "PyObject_IsSubclass", "PyObject_IsTrue", "PyObject_Length", "PyObject_Malloc", "PyObject_Not", "PyObject_Print", "PyObject_Realloc", "PyObject_Repr", "PyObject_RichCompare", "PyObject_RichCompareBool", "PyObject_SelfIter", "PyObject_SetAttr", "PyObject_SetAttrString", "PyObject_SetItem", "PyObject_Size", "PyObject_Str", "PyObject_Type", "PyObject_Unicode", "PyParser_ASTFromFile", "PyParser_ASTFromString", "PyParser_ParseFile", "PyParser_ParseFileFlags", "PyParser_ParseFileFlagsEx", "PyParser_ParseString", "PyParser_ParseStringFlags", "PyParser_ParseStringFlagsFilename", "PyParser_ParseStringFlagsFilenameEx", "PyParser_SetError", "PyParser_SimpleParseFile", "PyParser_SimpleParseFileFlags", "PyParser_SimpleParseString", "PyParser_SimpleParseStringFlags", "PyProperty_Type", "PyRange_Type", "PyReversed_Type", "PyRun_AnyFile", "PyRun_AnyFileEx", "PyRun_AnyFileExFlags", "PyRun_AnyFileFlags", "PyRun_File", "PyRun_FileEx", "PyRun_FileExFlags", "PyRun_FileFlags", "PyRun_InteractiveLoop", "PyRun_InteractiveLoopFlags", "PyRun_InteractiveOne", "PyRun_InteractiveOneFlags", "PyRun_SimpleFile", "PyRun_SimpleFileEx", "PyRun_SimpleFileExFlags", "PyRun_SimpleString", "PyRun_SimpleStringFlags", "PyRun_String", "PyRun_StringFlags", "PySTEntry_Type", "PyST_GetScope", "PySeqIter_New", "PySeqIter_Type", "PySequence_Check", "PySequence_Concat", "PySequence_Contains", "PySequence_Count", "PySequence_DelItem", "PySequence_DelSlice", "PySequence_Fast", "PySequence_GetItem", "PySequence_GetSlice", "PySequence_In", "PySequence_InPlaceConcat", "PySequence_InPlaceRepeat", "PySequence_Index", "PySequence_Length", "PySequence_List", "PySequence_Repeat", "PySequence_SetItem", "PySequence_SetSlice", "PySequence_Size", "PySequence_Tuple", "PySet_Add", "PySet_Clear", "PySet_Contains", "PySet_Discard", "PySet_Fini", "PySet_New", "PySet_Pop", "PySet_Size", "PySet_Type", "PySlice_GetIndices", "PySlice_GetIndicesEx", "PySlice_New", "PySlice_Type", "PyStaticMethod_New", "PyStaticMethod_Type", "PyString_AsDecodedObject", "PyString_AsDecodedString", "PyString_AsEncodedObject", "PyString_AsEncodedString", "PyString_AsString", "PyString_AsStringAndSize", "PyString_Concat", "PyString_ConcatAndDel", "PyString_Decode", "PyString_DecodeEscape", "PyString_Encode", "PyString_Fini", "PyString_Format", "PyString_FromFormat", "PyString_FromFormatV", "PyString_FromString", "PyString_FromStringAndSize", "PyString_InternFromString", "PyString_InternImmortal", "PyString_InternInPlace", "PyString_Repr", "PyString_Size", "PyString_Type", "PyStructSequence_InitType", "PyStructSequence_New", "PySuper_Type", "PySymtable_Build", "PySymtable_Free", "PySymtable_Lookup", "PySys_AddWarnOption", "PySys_GetFile", "PySys_GetObject", "PySys_HasWarnOptions", "PySys_ResetWarnOptions", "PySys_SetArgv", "PySys_SetArgvEx", "PySys_SetObject", "PySys_SetPath", "PySys_WriteStderr", "PySys_WriteStdout", "PyThreadState_Clear", "PyThreadState_Delete", "PyThreadState_DeleteCurrent", "PyThreadState_Get", "PyThreadState_GetDict", "PyThreadState_New", "PyThreadState_Next", "PyThreadState_SetAsyncExc", "PyThreadState_Swap", "PyThread_ReInitTLS", "PyThread_acquire_lock", "PyThread_allocate_lock", "PyThread_create_key", "PyThread_delete_key", "PyThread_delete_key_value", "PyThread_exit_thread", "PyThread_free_lock", "PyThread_get_key_value", "PyThread_get_stacksize", "PyThread_get_thread_ident", "PyThread_init_thread", "PyThread_release_lock", "PyThread_set_key_value", "PyThread_set_stacksize", "PyThread_start_new_thread", "PyToken_OneChar", "PyToken_ThreeChars", "PyToken_TwoChars", "PyTraceBack_Here", "PyTraceBack_Print", "PyTraceBack_Type", "PyTuple_ClearFreeList", "PyTuple_Fini", "PyTuple_GetItem", "PyTuple_GetSlice", "PyTuple_New", "PyTuple_Pack", "PyTuple_SetItem", "PyTuple_Size", "PyTuple_Type", "PyType_ClearCache", "PyType_GenericAlloc", "PyType_GenericNew", "PyType_IsSubtype", "PyType_Modified", "PyType_Ready", "PyType_Type", "PyUnicodeDecodeError_Create", "PyUnicodeDecodeError_GetEncoding", "PyUnicodeDecodeError_GetEnd", "PyUnicodeDecodeError_GetObject", "PyUnicodeDecodeError_GetReason", "PyUnicodeDecodeError_GetStart", "PyUnicodeDecodeError_SetEnd", "PyUnicodeDecodeError_SetReason", "PyUnicodeDecodeError_SetStart", "PyUnicodeEncodeError_Create", "PyUnicodeEncodeError_GetEncoding", "PyUnicodeEncodeError_GetEnd", "PyUnicodeEncodeError_GetObject", "PyUnicodeEncodeError_GetReason", "PyUnicodeEncodeError_GetStart", "PyUnicodeEncodeError_SetEnd", "PyUnicodeEncodeError_SetReason", "PyUnicodeEncodeError_SetStart", "PyUnicodeTranslateError_Create", "PyUnicodeTranslateError_GetEnd", "PyUnicodeTranslateError_GetObject", "PyUnicodeTranslateError_GetReason", "PyUnicodeTranslateError_GetStart", "PyUnicodeTranslateError_SetEnd", "PyUnicodeTranslateError_SetReason", "PyUnicodeTranslateError_SetStart", "PyUnicodeUCS2_AsASCIIString", "PyUnicodeUCS2_AsCharmapString", "PyUnicodeUCS2_AsEncodedObject", "PyUnicodeUCS2_AsEncodedString", "PyUnicodeUCS2_AsLatin1String", "PyUnicodeUCS2_AsRawUnicodeEscapeString", "PyUnicodeUCS2_AsUTF16String", "PyUnicodeUCS2_AsUTF32String", "PyUnicodeUCS2_AsUTF8String", "PyUnicodeUCS2_AsUnicode", "PyUnicodeUCS2_AsUnicodeEscapeString", "PyUnicodeUCS2_AsWideChar", "PyUnicodeUCS2_ClearFreelist", "PyUnicodeUCS2_Compare", "PyUnicodeUCS2_Concat", "PyUnicodeUCS2_Contains", "PyUnicodeUCS2_Count", "PyUnicodeUCS2_Decode", "PyUnicodeUCS2_DecodeASCII", "PyUnicodeUCS2_DecodeCharmap", "PyUnicodeUCS2_DecodeLatin1", "PyUnicodeUCS2_DecodeRawUnicodeEscape", "PyUnicodeUCS2_DecodeUTF16", "PyUnicodeUCS2_DecodeUTF16Stateful", "PyUnicodeUCS2_DecodeUTF32", "PyUnicodeUCS2_DecodeUTF32Stateful", "PyUnicodeUCS2_DecodeUTF8", "PyUnicodeUCS2_DecodeUTF8Stateful", "PyUnicodeUCS2_DecodeUnicodeEscape", "PyUnicodeUCS2_Encode", "PyUnicodeUCS2_EncodeASCII", "PyUnicodeUCS2_EncodeCharmap", "PyUnicodeUCS2_EncodeDecimal", "PyUnicodeUCS2_EncodeLatin1", "PyUnicodeUCS2_EncodeRawUnicodeEscape", "PyUnicodeUCS2_EncodeUTF16", "PyUnicodeUCS2_EncodeUTF32", "PyUnicodeUCS2_EncodeUTF8", "PyUnicodeUCS2_EncodeUnicodeEscape", "PyUnicodeUCS2_Find", "PyUnicodeUCS2_Format", "PyUnicodeUCS2_FromEncodedObject", "PyUnicodeUCS2_FromFormat", "PyUnicodeUCS2_FromFormatV", "PyUnicodeUCS2_FromObject", "PyUnicodeUCS2_FromOrdinal", "PyUnicodeUCS2_FromString", "PyUnicodeUCS2_FromStringAndSize", "PyUnicodeUCS2_FromUnicode", "PyUnicodeUCS2_FromWideChar", "PyUnicodeUCS2_GetDefaultEncoding", "PyUnicodeUCS2_GetMax", "PyUnicodeUCS2_GetSize", "PyUnicodeUCS2_Join", "PyUnicodeUCS2_Partition", "PyUnicodeUCS2_RPartition", "PyUnicodeUCS2_RSplit", "PyUnicodeUCS2_Replace", "PyUnicodeUCS2_Resize", "PyUnicodeUCS2_RichCompare", "PyUnicodeUCS2_SetDefaultEncoding", "PyUnicodeUCS2_Split", "PyUnicodeUCS2_Splitlines", "PyUnicodeUCS2_Tailmatch", "PyUnicodeUCS2_Translate", "PyUnicodeUCS2_TranslateCharmap", "PyUnicode_AsMBCSString", "PyUnicode_BuildEncodingMap", "PyUnicode_DecodeMBCS", "PyUnicode_DecodeMBCSStateful", "PyUnicode_DecodeUTF7", "PyUnicode_DecodeUTF7Stateful", "PyUnicode_EncodeMBCS", "PyUnicode_EncodeUTF7", "PyUnicode_Type", "PyWeakref_GetObject", "PyWeakref_NewProxy", "PyWeakref_NewRef", "PyWrapperDescr_Type", "PyWrapper_New", "Py_AddPendingCall", "Py_AtExit", "Py_BuildValue", "Py_BytesWarningFlag", "Py_CompileString", "Py_CompileStringFlags", "Py_DebugFlag", "Py_DecRef", "Py_DivisionWarningFlag", "Py_DontWriteBytecodeFlag", "Py_EndInterpreter", "Py_Exit", "Py_FatalError", "Py_FdIsInteractive", "Py_FileSystemDefaultEncoding", "Py_Finalize", "Py_FindMethod", "Py_FindMethodInChain", "Py_FlushLine", "Py_FrozenFlag", "Py_GetBuildInfo", "Py_GetCompiler", "Py_GetCopyright", "Py_GetExecPrefix", "Py_GetPath", "Py_GetPlatform", "Py_GetPrefix", "Py_GetProgramFullPath", "Py_GetProgramName", "Py_GetPythonHome", "Py_GetRecursionLimit", "Py_GetVersion", "Py_HashRandomizationFlag", "Py_IgnoreEnvironmentFlag", "Py_IncRef", "Py_InitModule4", "Py_Initialize", "Py_InitializeEx", "Py_InspectFlag", "Py_InteractiveFlag", "Py_IsInitialized", "Py_Main", "Py_MakePendingCalls", "Py_NewInterpreter", "Py_NoSiteFlag", "Py_NoUserSiteDirectory", "Py_OptimizeFlag", "Py_Py3kWarningFlag", "Py_ReprEnter", "Py_ReprLeave", "Py_SetProgramName", "Py_SetPythonHome", "Py_SetRecursionLimit", "Py_SubversionRevision", "Py_SubversionShortBranch", "Py_SymtableString", "Py_TabcheckFlag", "Py_UnicodeFlag", "Py_UseClassExceptionsFlag", "Py_VaBuildValue", "Py_VerboseFlag", "_PyArg_NoKeywords", "_PyArg_ParseTupleAndKeywords_SizeT", "_PyArg_ParseTuple_SizeT", "_PyArg_Parse_SizeT", "_PyArg_VaParseTupleAndKeywords_SizeT", "_PyArg_VaParse_SizeT", "_PyBuiltin_Init", "_PyByteArray_empty_string", "_PyBytes_FormatAdvanced", "_PyCode_CheckLineNumber", "_PyCode_ConstantKey", "_PyCodecInfo_GetIncrementalDecoder", "_PyCodecInfo_GetIncrementalEncoder", "_PyCodec_DecodeText", "_PyCodec_EncodeText", "_PyCodec_Lookup", "_PyCodec_LookupTextEncoding", "_PyComplex_FormatAdvanced", "_PyDict_Contains", "_PyDict_GetItemWithError", "_PyDict_MaybeUntrack", "_PyDict_NewPresized", "_PyDict_Next", "_PyErr_BadInternalCall", "_PyErr_ReplaceException", "_PyEval_CallTracing", "_PyEval_SliceIndex", "_PyExc_Fini", "_PyExc_Init", "_PyFloat_FormatAdvanced", "_PyFloat_Init", "_PyFloat_Pack4", "_PyFloat_Pack8", "_PyFloat_Unpack4", "_PyFloat_Unpack8", "_PyFrame_Init", "_PyImportHooks_Init", "_PyImport_AcquireLock", "_PyImport_FindExtension", "_PyImport_FindModule", "_PyImport_Fini", "_PyImport_FixupExtension", "_PyImport_Init", "_PyImport_IsScript", "_PyImport_ReInitLock", "_PyImport_ReleaseLock", "_PyInstance_Lookup", "_PyInt_AsInt", "_PyInt_Format", "_PyInt_FormatAdvanced", "_PyInt_Init", "_PyList_Extend", "_PyLong_AsByteArray", "_PyLong_AsInt", "_PyLong_Copy", "_PyLong_DigitValue", "_PyLong_Format", "_PyLong_FormatAdvanced", "_PyLong_Frexp", "_PyLong_FromByteArray", "_PyLong_Init", "_PyLong_New", "_PyLong_NumBits", "_PyLong_Sign", "_PyModule_Clear", "_PyNode_SizeOf", "_PyNumber_ConvertIntegralToInt", "_PyOS_ReadlineTState", "_PyOS_URandom", "_PyObject_CallFunction_SizeT", "_PyObject_CallMethod_SizeT", "_PyObject_Dump", "_PyObject_GC_Malloc", "_PyObject_GC_New", "_PyObject_GC_NewVar", "_PyObject_GC_Resize", "_PyObject_GenericGetAttrWithDict", "_PyObject_GenericSetAttrWithDict", "_PyObject_GetDictPtr", "_PyObject_LengthHint", "_PyObject_LookupSpecial", "_PyObject_New", "_PyObject_NewVar", "_PyObject_NextNotImplemented", "_PyObject_RealIsInstance", "_PyObject_RealIsSubclass", "_PyObject_Str", "_PyParser_Grammar", "_PyParser_TokenNames", "_PyRandom_Fini", "_PyRandom_Init", "_PySequence_IterSearch", "_PySet_Next", "_PySet_NextEntry", "_PySet_Update", "_PySlice_FromIndices", "_PyString_Eq", "_PyString_FormatLong", "_PyString_InsertThousandsGrouping", "_PyString_Join", "_PyString_Resize", "_PySys_GetSizeOf", "_PySys_Init", "_PyThreadState_Current", "_PyThreadState_GetFrame", "_PyThreadState_Init", "_PyThreadState_Prealloc", "_PyThread_CurrentFrames", "_PyTime_DoubleToTimet", "_PyTime_FloatTime", "_PyTrash_delete_later", "_PyTrash_delete_nesting", "_PyTrash_deposit_object", "_PyTrash_destroy_chain", "_PyTrash_thread_deposit_object", "_PyTrash_thread_destroy_chain", "_PyTuple_MaybeUntrack", "_PyTuple_Resize", "_PyType_Lookup", "_PyUnicodeUCS2_AsDefaultEncodedString", "_PyUnicodeUCS2_IsAlpha", "_PyUnicodeUCS2_IsDecimalDigit", "_PyUnicodeUCS2_IsDigit", "_PyUnicodeUCS2_IsLinebreak", "_PyUnicodeUCS2_IsLowercase", "_PyUnicodeUCS2_IsNumeric", "_PyUnicodeUCS2_IsTitlecase", "_PyUnicodeUCS2_IsUppercase", "_PyUnicodeUCS2_IsWhitespace", "_PyUnicodeUCS2_ToDecimalDigit", "_PyUnicodeUCS2_ToDigit", "_PyUnicodeUCS2_ToLowercase", "_PyUnicodeUCS2_ToNumeric", "_PyUnicodeUCS2_ToTitlecase", "_PyUnicodeUCS2_ToUppercase", "_PyUnicode_FormatAdvanced", "_PyUnicode_XStrip", "_PyWarnings_Init", "_PyWeakref_CallableProxyType", "_PyWeakref_ClearRef", "_PyWeakref_GetWeakrefCount", "_PyWeakref_ProxyType", "_PyWeakref_RefType", "_Py_BuildValue_SizeT", "_Py_CheckInterval", "_Py_CheckRecursionLimit", "_Py_CheckRecursiveCall", "_Py_DisplaySourceLine", "_Py_EllipsisObject", "_Py_HashDouble", "_Py_HashPointer", "_Py_HashSecret", "_Py_Mangle", "_Py_NoneStruct", "_Py_NotImplementedStruct", "_Py_PackageContext", "_Py_QnewFlag", "_Py_ReleaseInternedStrings", "_Py_SwappedOp", "_Py_Ticker", "_Py_TrueStruct", "_Py_VaBuildValue_SizeT", "_Py_ZeroStruct", "_Py_add_one_to_index_C", "_Py_add_one_to_index_F", "_Py_ascii_whitespace", "_Py_c_abs", "_Py_c_diff", "_Py_c_neg", "_Py_c_pow", "_Py_c_prod", "_Py_c_quot", "_Py_c_sum", "_Py_ctype_table", "_Py_ctype_tolower", "_Py_ctype_toupper", "_Py_dg_dtoa", "_Py_dg_freedtoa", "_Py_dg_strtod", "_Py_double_round", "_Py_hgidentifier", "_Py_hgversion", "_Py_parse_inf_or_nan", "_Py_svnversion", "displayhook", "object", "Print", "object", "stdout", "__builtin__", "excepthook", "exctype", "value", "traceback", "Handle", "exception", "displaying", "traceback", "stderr", "NLSexc_info", "value", "traceback", "Return", "information", "about", "recent", "exception", "caught", "except", "clause", "current", "stack", "frame", "older", "stack", "frame", "Vt0exc_clear", "Clear", "global", "information", "current", "exception", "Subsequent", "calls", "exc_info", "return", "until", "another", "exception", "raised", "current", "thread", "execution", "stack", "returns", "frame", "where", "another", "exception", "being", "handled", "status", "interpreter", "raising", "SystemExit", "status", "status", "omitted", "defaults", "success", "status", "integer", "system", "status", "another", "object", "printed", "system", "status", "failure", "sgetdefaultencoding", "string", "Return", "current", "default", "string", "encoding", "Unicode", "implementation", "setdefaultencoding", "encoding", "current", "default", "string", "encoding", "Unicode", "implementation", "getfilesystemencoding", "string", "Return", "encoding", "convert", "Unicode", "filenames", "operating", "system", "filenames", "settrace", "function", "global", "debug", "tracing", "function", "called", "function", "debugger", "chapter", "library", "manual", "uigettrace", "Return", "global", "debug", "tracing", "function", "settrace", "debugger", "chapter", "library", "manual", "setprofile", "function", "profiling", "function", "called", "function", "return", "profiler", "chapter", "library", "manual", "getprofile", "Return", "profiling", "function", "setprofile", "profiler", "chapter", "library", "manual", "obcsetcheckinterval", "Python", "interpreter", "check", "asynchronous", "events", "every", "instructions", "affects", "often", "thread", "switches", "occur", "getcheckinterval", "current", "check", "interval", "setcheckinterval", "PQsetrecursionlimit", "maximum", "depth", "Python", "interpreter", "stack", "limit", "prevents", "infinite", "recursion", "causing", "overflow", "stack", "crashing", "Python", "highest", "possible", "limit", "platform", "dependent", "getrecursionlimit", "Return", "current", "value", "recursion", "limit", "maximum", "depth", "Python", "interpreter", "stack", "limit", "prevents", "infinite", "recursion", "causing", "overflow", "stack", "crashing", "Python", "getwindowsversion", "Return", "information", "about", "running", "version", "Windows", "named", "tuple", "members", "named", "major", "minor", "build", "platform", "service_pack", "service_pack_major", "service_pack_minor", "suite_mask", "product_type", "backward", "compatibility", "first", "items", "available", "indexing", "elements", "numbers", "except", "service_pack", "which", "string", "Platform", "win32s", "Windows", "Windows", "Vista", "Windows", "Product_type", "workstation", "domain", "controller", "server", "getsizeof", "object", "default", "Return", "object", "bytes", "getrefcount", "object", "integer", "Return", "reference", "count", "object", "count", "returned", "generally", "higher", "might", "expect", "because", "includes", "temporary", "reference", "argument", "getrefcount", "_getframe", "depth", "frameobject", "Return", "frame", "object", "stack", "optional", "integer", "depth", "given", "return", "frame", "object", "calls", "below", "stack", "deeper", "stack", "ValueError", "raised", "default", "depth", "returning", "frame", "stack", "function", "should", "internal", "specialized", "purposes", "_current_frames", "dictionary", "Return", "dictionary", "mapping", "current", "thread", "thread", "current", "stack", "frame", "function", "should", "specialized", "purposes", "call_tracing", "object", "while", "tracing", "enabled", "tracing", "state", "saved", "restored", "afterwards", "intended", "called", "debugger", "checkpoint", "recursively", "debug", "other", "callstats", "tuple", "integers", "Return", "tuple", "function", "statistics", "CALL_PROFILE", "defined", "Python", "built", "Otherwise", "return", "enabled", "function", "returns", "detailed", "implementation", "specific", "details", "about", "number", "function", "calls", "executed", "return", "value", "tuple", "where", "entries", "tuple", "counts", "function", "calls", "calls", "PyFunction_Type", "objects", "PyFunction", "calls", "create", "argument", "tuple", "PyFunction", "calls", "create", "argument", "tuple", "bypass", "PyEval_EvalCodeEx", "PyMethod", "calls", "PyMethod", "calls", "bound", "methods", "PyType", "calls", "PyCFunction", "calls", "generator", "calls", "other", "calls", "Number", "stack", "performed", "call_function", "_clear_type_cache", "Clear", "internal", "lookup", "cache", "module", "provides", "access", "objects", "maintained", "interpreter", "functions", "interact", "strongly", "interpreter", "Dynamic", "objects", "command", "arguments", "script", "pathname", "known", "module", "search", "script", "directory", "modules", "dictionary", "loaded", "modules", "displayhook", "called", "results", "interactive", "session", "excepthook", "called", "handle", "uncaught", "exception", "other", "SystemExit", "customize", "printing", "interactive", "session", "install", "custom", "level", "exception", "handler", "assign", "other", "functions", "replace", "these", "exitfunc", "exitfunc", "exists", "routine", "called", "Python", "exits", "Assigning", "exitfunc", "deprecated", "atexit", "module", "instead", "stdin", "standard", "input", "object", "raw_input", "input", "stdout", "standard", "output", "object", "print", "statement", "stderr", "standard", "error", "object", "error", "messages", "assigning", "other", "objects", "objects", "behave", "files", "these", "possible", "redirect", "interpreter", "last_type", "uncaught", "exception", "last_value", "value", "uncaught", "exception", "last_traceback", "traceback", "uncaught", "exception", "These", "three", "available", "interactive", "session", "after", "traceback", "printed", "exc_type", "exception", "currently", "being", "handled", "exc_value", "value", "exception", "currently", "being", "handled", "exc_traceback", "traceback", "exception", "currently", "being", "handled", "function", "exc_info", "should", "instead", "these", "three", "because", "thread", "Static", "objects", "float_info", "information", "about", "float", "inplementation", "long_info", "struct", "sequence", "information", "about", "implementation", "maxint", "largest", "supported", "integer", "smallest", "maxint", "maxsize", "largest", "supported", "length", "containers", "maxunicode", "largest", "supported", "character", "builtin_module_names", "tuple", "module", "names", "built", "interpreter", "version", "version", "interpreter", "string", "version_info", "version", "information", "named", "tuple", "hexversion", "version", "information", "encoded", "single", "integer", "copyright", "copyright", "notice", "pertaining", "interpreter", "platform", "platform", "identifier", "executable", "absolute", "executable", "binary", "Python", "interpreter", "prefix", "prefix", "Python", "library", "exec_prefix", "prefix", "machine", "specific", "Python", "library", "float_repr_style", "string", "indicating", "style", "output", "floats", "dllhandle", "Windows", "integer", "handle", "Python", "winver", "Windows", "version", "number", "Python", "__stdin__", "original", "stdin", "touch!", "__stdout__", "original", "stdout", "touch!", "__stderr__", "original", "stderr", "touch!", "__displayhook__", "original", "displayhook", "touch!", "__excepthook__", "original", "excepthook", "touch!", "Functions", "displayhook", "print", "object", "screen", "__builtin__", "excepthook", "print", "exception", "traceback", "stderr", "exc_info", "return", "thread", "information", "about", "current", "exception", "exc_clear", "clear", "exception", "state", "current", "thread", "interpreter", "raising", "SystemExit", "getdlopenflags", "returns", "flags", "dlopen", "calls", "getprofile", "global", "profiling", "function", "getrefcount", "return", "reference", "count", "object", "getrecursionlimit", "return", "recursion", "depth", "interpreter", "getsizeof", "return", "object", "bytes", "gettrace", "global", "debug", "tracing", "function", "setcheckinterval", "control", "often", "interpreter", "checks", "events", "setdlopenflags", "flags", "dlopen", "calls", "setprofile", "global", "profiling", "function", "setrecursionlimit", "recursion", "depth", "interpreter", "settrace", "global", "debug", "tracing", "function", "flags", "Flags", "provided", "through", "command", "arguments", "environment", "version_info", "Version", "information", "named", "tuple", "Python", "version", "mismatch", "module", "Python", "version", "module", "version", "value", "version", "Write", "value", "value", "supported", "object", "stdout", "returned", "popen", "opened", "binary", "value", "contains", "object", "unsupported", "ValueError", "exception", "raised", "garbage", "written", "object", "properly", "version", "version", "argument", "indicates", "format", "should", "value", "return", "valid", "value", "because", "different", "Python", "version", "incompatible", "marshal", "format", "raise", "EOFError", "ValueError", "TypeError", "object", "opened", "binary", "object", "containing", "unsupported", "marshalled", "substitute", "unmarshallable", "dumps", "value", "version", "Return", "string", "would", "written", "value", "value", "supported", "Raise", "ValueError", "exception", "value", "contains", "object", "unsupported", "version", "version", "argument", "indicates", "format", "dumps", "should", "loads", "string", "Convert", "string", "value", "valid", "value", "found", "raise", "EOFError", "ValueError", "TypeError", "Extra", "characters", "string", "ignored", "module", "contains", "functions", "write", "Python", "values", "binary", "format", "format", "specific", "Python", "independent", "machine", "architecture", "issues", "Python", "object", "types", "supported", "general", "objects", "whose", "value", "independent", "particular", "invocation", "Python", "written", "module", "following", "types", "supported", "integers", "integers", "floating", "point", "numbers", "strings", "Unicode", "objects", "tuples", "lists", "dictionaries", "objects", "where", "should", "understood", "tuples", "lists", "dictionaries", "supported", "values", "contained", "therein", "themselves", "supported", "recursive", "lists", "dictionaries", "should", "written", "cause", "infinite", "loops", "Variables", "version", "indicates", "format", "module", "Version", "historical", "format", "version", "added", "Python", "shares", "interned", "strings", "version", "added", "Python", "binary", "format", "floating", "point", "numbers", "version", "Functions", "write", "value", "value", "dumps", "write", "value", "string", "loads", "value", "string", "module", "provides", "components", "needed", "build", "__import__", "function", "Undocumented", "functions", "obsolete", "reload", "module", "module", "Reload", "module", "module", "successfully", "imported", "before", "find_module", "filename", "suffix", "Search", "module", "omitted", "search", "built", "frozen", "special", "module", "continue", "search", "module", "cannot", "contain", "search", "submodule", "package", "submodule", "package", "__path__", "load_module", "filename", "suffix", "module", "module", "given", "information", "returned", "find_module", "module", "include", "package", "get_magic", "string", "Return", "magic", "number", "files", "get_suffixes", "suffix", "Return", "suffix", "tuples", "describing", "files", "find_module", "looks", "new_module", "module", "Create", "module", "enter", "modules", "module", "include", "package", "lock_held", "boolean", "Return", "import", "currently", "False", "platforms", "without", "threads", "return", "False", "acquire_lock", "Acquires", "interpreter", "import", "current", "thread", "should", "import", "hooks", "ensure", "thread", "safety", "importing", "modules", "platforms", "without", "threads", "function", "nothing", "release_lock", "Release", "interpreter", "import", "platforms", "without", "threads", "function", "nothing", "Copyright", "Python", "Software", "Foundation", "Rights", "Reserved", "Copyright", "BeOpen", "Rights", "Reserved", "Copyright", "Corporation", "National", "Research", "Initiatives", "Rights", "Reserved", "Copyright", "Stichting", "Mathematisch", "Centrum", "Amsterdam", "Rights", "Reserved", "Hello", "world", "hello", "__import__", "globals", "locals", "fromlist", "level", "module", "Import", "module", "Because", "function", "meant", "Python", "interpreter", "general", "better", "importlib", "import_module", "programmatically", "import", "module", "globals", "argument", "determine", "context", "modified", "locals", "argument", "unused", "fromlist", "should", "names", "emulate", "import", "empty", "emulate", "import", "importing", "module", "package", "__import__", "returns", "package", "fromlist", "empty", "submodule", "fromlist", "empty", "Level", "determine", "whether", "perform", "absolute", "relative", "imports", "original", "strategy", "attempting", "absolute", "relative", "imports", "absolute", "positive", "number", "number", "parent", "directories", "search", "relative", "current", "module", "argument", "support", "iteration", "number", "number", "Return", "absolute", "value", "argument", "iterable", "Return", "values", "iterable", "iterable", "empty", "return", "iterable", "Return", "iterable", "iterable", "empty", "return", "False", "apply", "object", "kwargs", "value", "callable", "object", "positional", "arguments", "taken", "tuple", "keyword", "arguments", "taken", "optional", "dictionary", "kwargs", "classes", "callable", "instances", "__call__", "method", "Deprecated", "since", "release", "Instead", "extended", "syntax", "function", "keywords", "number", "string", "Return", "binary", "representation", "integer", "integer", "callable", "object", "Return", "whether", "object", "callable", "function", "classes", "callable", "instances", "__call__", "method", "filter", "function", "sequence", "tuple", "string", "Return", "those", "items", "sequence", "which", "function", "function", "return", "items", "sequence", "tuple", "string", "return", "return", "format", "value", "format_spec", "string", "Returns", "value", "__format__", "format_spec", "format_spec", "defaults", "character", "Return", "string", "character", "ordinal", "unichr", "Unicode", "character", "Return", "Unicode", "string", "character", "ordinal", "0x10ffff", "integer", "Return", "negative", "positive", "coerce", "Return", "tuple", "consisting", "numeric", "arguments", "converted", "common", "using", "rules", "arithmetic", "operations", "coercion", "possible", "raise", "TypeError", "compile", "source", "filename", "flags", "dont_inherit", "object", "Compile", "source", "string", "Python", "module", "statement", "expression", "object", "executed", "statement", "filename", "error", "messages", "compile", "module", "single", "compile", "single", "interactive", "statement", "compile", "expression", "flags", "argument", "present", "controls", "which", "future", "statements", "influence", "compilation", "dont_inherit", "argument", "stops", "compilation", "inheriting", "effects", "future", "statements", "effect", "calling", "compile", "absent", "these", "statements", "influence", "compilation", "addition", "features", "explicitly", "specified", "object", "strings", "called", "without", "argument", "return", "names", "current", "scope", "return", "alphabetized", "names", "comprising", "attributes", "given", "object", "attributes", "reachable", "object", "supplies", "method", "named", "__dir__", "otherwise", "default", "logic", "returns", "module", "object", "module", "attributes", "class", "object", "attributes", "recursively", "attributes", "bases", "other", "object", "attributes", "class", "attributes", "recursively", "attributes", "class", "classes", "divmod", "quotient", "remainder", "Return", "tuple", "Invariant", "source", "globals", "locals", "value", "Evaluate", "source", "context", "globals", "locals", "source", "string", "representing", "Python", "expression", "object", "returned", "compile", "globals", "dictionary", "locals", "mapping", "defaulting", "current", "globals", "locals", "globals", "given", "locals", "defaults", "execfile", "filename", "globals", "locals", "execute", "Python", "script", "globals", "locals", "dictionaries", "defaulting", "current", "globals", "locals", "globals", "given", "locals", "defaults", "getattr", "object", "default", "value", "named", "attribute", "object", "getattr", "equivalent", "default", "argument", "given", "returned", "attribute", "doesn", "exist", "without", "exception", "raised", "globals", "dictionary", "Return", "dictionary", "containing", "current", "scope", "global", "variables", "hasattr", "object", "Return", "whether", "object", "attribute", "given", "calling", "getattr", "object", "catching", "exceptions", "object", "integer", "Return", "identity", "object", "guaranteed", "unique", "among", "simultaneously", "existing", "objects", "object", "memory", "address", "Issue", "warning", "maybe", "ignore", "raise", "exception", "function", "sequence", "sequence", "Return", "results", "applying", "function", "items", "argument", "sequence", "sequence", "given", "function", "called", "argument", "consisting", "corresponding", "sequence", "substituting", "missing", "values", "sequences", "length", "function", "return", "items", "sequence", "tuples", "sequence", "iterator", "default", "Return", "iterator", "default", "given", "iterator", "exhausted", "returned", "instead", "raising", "StopIteration", "setattr", "object", "value", "named", "attribute", "object", "setattr", "equivalent", "delattr", "object", "Delete", "named", "attribute", "object", "delattr", "equivalent", "object", "integer", "Return", "value", "object", "objects", "value", "value", "reverse", "necessarily", "likely", "number", "string", "Return", "hexadecimal", "representation", "integer", "integer", "input", "prompt", "value", "Equivalent", "raw_input", "prompt", "intern", "string", "string", "Intern", "given", "string", "enters", "string", "global", "table", "interned", "strings", "whose", "purpose", "speed", "dictionary", "lookups", "Return", "string", "itself", "previously", "interned", "string", "object", "value", "collection", "iterator", "callable", "sentinel", "iterator", "iterator", "object", "first", "argument", "supply", "iterator", "sequence", "second", "callable", "called", "until", "returns", "sentinel", "object", "integer", "Return", "number", "items", "sequence", "collection", "locals", "dictionary", "Update", "return", "dictionary", "containing", "current", "scope", "local", "variables", "iterable", "value", "value", "single", "iterable", "argument", "return", "smallest", "arguments", "return", "smallest", "argument", "iterable", "value", "value", "single", "iterable", "argument", "return", "largest", "arguments", "return", "largest", "argument", "number", "string", "Return", "octal", "representation", "integer", "integer", "buffering", "object", "using", "returns", "object", "preferred", "__doc__", "further", "information", "integer", "Return", "integer", "ordinal", "character", "string", "number", "arguments", "equivalent", "three", "arguments", "equivalent", "efficient", "longs", "print", "value", "stdout", "Prints", "values", "stream", "stdout", "default", "Optional", "keyword", "arguments", "object", "stream", "defaults", "current", "stdout", "string", "inserted", "between", "values", "default", "space", "string", "appended", "after", "value", "default", "newline", "range", "integers", "range", "start", "integers", "Return", "containing", "arithmetic", "progression", "integers", "range", "returns", "start", "defaults", "given", "specifies", "increment", "decrement", "example", "range", "returns", "point", "omitted!", "These", "exactly", "valid", "indices", "elements", "raw_input", "prompt", "string", "string", "standard", "input", "trailing", "newline", "stripped", "Windows", "Return", "raise", "EOFError", "readline", "enabled", "prompt", "string", "given", "printed", "without", "trailing", "newline", "before", "reading", "reduce", "function", "sequence", "initial", "value", "Apply", "function", "arguments", "cumulatively", "items", "sequence", "right", "reduce", "sequence", "single", "value", "example", "reduce", "lambda", "calculates", "initial", "present", "placed", "before", "items", "sequence", "calculation", "serves", "default", "sequence", "empty", "reload", "module", "module", "Reload", "module", "module", "successfully", "imported", "before", "object", "string", "Return", "canonical", "string", "representation", "object", "object", "types", "object", "object", "round", "number", "ndigits", "floating", "point", "number", "Round", "number", "given", "precision", "decimal", "digits", "default", "digits", "always", "returns", "floating", "point", "number", "Precision", "negative", "sorted", "iterable", "reverse", "False", "sorted", "object", "dictionary", "Without", "arguments", "equivalent", "locals", "argument", "equivalent", "object", "__dict__", "sequence", "start", "value", "Return", "sequence", "numbers", "strings", "value", "parameter", "start", "which", "defaults", "sequence", "empty", "return", "start", "isinstance", "object", "class", "tuple", "Return", "whether", "object", "instance", "class", "subclass", "thereof", "second", "argument", "return", "whether", "object", "using", "tuple", "isinstance", "shortcut", "isinstance", "isinstance", "issubclass", "Return", "whether", "class", "subclass", "derived", "class", "class", "using", "tuple", "second", "argument", "issubclass", "shortcut", "issubclass", "issubclass", "Return", "tuples", "where", "tuple", "contains", "element", "argument", "sequences", "returned", "truncated", "length", "length", "shortest", "argument", "sequence", "Built", "functions", "exceptions", "other", "objects", "Noteworthy", "object", "Ellipsis", "represents", "slices", "_warnings", "provides", "basic", "warning", "filtering", "support", "helper", "module", "speed", "interpreter", "start", "level", "inferface", "warnings", "functionality", "heapmin", "Force", "malloc", "clean", "itself", "return", "unused", "blocks", "operating", "system", "failure", "raises", "IOError", "locking", "nbytes", "based", "descriptor", "runtime", "Raises", "IOError", "failure", "locked", "region", "extends", "current", "position", "nbytes", "bytes", "continue", "beyond", "constants", "listed", "below", "Multiple", "regions", "locked", "overlap", "Adjacent", "regions", "merged", "unlocked", "individually", "setmode", "Previous", "translation", "descriptor", "flags", "should", "O_TEXT", "binary", "should", "O_BINARY", "open_osfhandle", "handle", "flags", "descriptor", "Create", "runtime", "descriptor", "handle", "handle", "flags", "parameter", "should", "bitwise", "O_APPEND", "O_RDONLY", "O_TEXT", "returned", "descriptor", "parameter", "fdopen", "create", "object", "get_osfhandle", "handle", "Return", "handle", "descriptor", "Raises", "IOError", "recognized", "kbhit", "Return", "keypress", "waiting", "getch", "character", "keypress", "return", "resulting", "character", "Nothing", "echoed", "console", "block", "keypress", "already", "available", "Enter", "pressed", "pressed", "special", "function", "return", "return", "keycode", "Control", "keypress", "cannot", "function", "getwch", "Unicode", "character", "variant", "getch", "returning", "Unicode", "value", "getche", "character", "Similar", "getch", "keypress", "echoed", "represents", "printable", "character", "getwche", "Unicode", "character", "variant", "getche", "returning", "Unicode", "value", "putch", "Print", "character", "console", "without", "buffering", "putwch", "unicode_char", "variant", "putch", "accepting", "Unicode", "value", "ungetch", "Cause", "character", "pushed", "console", "buffer", "character", "getch", "getche", "ungetwch", "unicode_char", "variant", "ungetch", "accepting", "Unicode", "value", "Object", "handle", "module", "provides", "access", "Windows", "registry", "Functions", "CloseKey", "Closes", "registry", "ConnectRegistry", "Establishes", "connection", "predefined", "registry", "handle", "another", "computer", "CreateKey", "Creates", "specified", "opens", "already", "exists", "DeleteKey", "Deletes", "specified", "DeleteValue", "Removes", "named", "value", "specified", "registry", "EnumKey", "Enumerates", "subkeys", "specified", "registry", "EnumValue", "Enumerates", "values", "specified", "registry", "ExpandEnvironmentStrings", "Expand", "strings", "REG_EXPAND_SZ", "string", "FlushKey", "Writes", "attributes", "specified", "registry", "LoadKey", "Creates", "subkey", "under", "HKEY_USER", "HKEY_LOCAL_MACHINE", "stores", "registration", "information", "specified", "subkey", "OpenKey", "Alias", "win32api", "RegOpenKeyEx", "OpenKeyEx", "Opens", "specified", "QueryValue", "Retrieves", "value", "associated", "unnamed", "value", "specified", "registry", "QueryValueEx", "Retrieves", "specified", "value", "associated", "registry", "QueryInfoKey", "Returns", "information", "about", "specified", "SaveKey", "Saves", "specified", "subkeys", "SetValue", "Associates", "value", "specified", "SetValueEx", "Stores", "value", "field", "registry", "Special", "objects", "HKEYType", "object", "objects", "error", "exception", "raised", "Win32", "errors", "Integer", "constants", "constants", "defined", "documentation", "function", "constants", "where", "CloseKey", "Closes", "previously", "opened", "registry", "argument", "specifies", "previously", "opened", "closed", "using", "method", "closed", "object", "destroyed", "Python", "ConnectRegistry", "computer_name", "Establishes", "connection", "predefined", "registry", "handle", "another", "computer", "computer_name", "remote", "computer", "computername", "local", "computer", "predefined", "handle", "connect", "return", "value", "handle", "opened", "function", "fails", "WindowsError", "exception", "raised", "CreateKey", "sub_key", "Creates", "opens", "specified", "already", "predefined", "HKEY_", "constants", "sub_key", "string", "names", "method", "opens", "creates", "predefined", "sub_key", "handle", "returned", "handle", "passed", "function", "already", "exists", "function", "opens", "existing", "return", "value", "handle", "opened", "function", "fails", "exception", "raised", "CreateKeyEx", "sub_key", "Creates", "opens", "specified", "already", "predefined", "HKEY_", "constants", "sub_key", "string", "names", "method", "opens", "creates", "reserved", "integer", "Default", "integer", "specifies", "access", "describes", "desired", "predefined", "sub_key", "handle", "returned", "handle", "passed", "function", "already", "exists", "function", "opens", "existing", "return", "value", "handle", "opened", "function", "fails", "exception", "raised", "DeleteKey", "sub_key", "Deletes", "specified", "already", "predefined", "HKEY_", "constants", "sub_key", "string", "subkey", "identified", "parameter", "value", "subkeys", "method", "delete", "subkeys", "method", "succeeds", "entire", "including", "values", "removed", "method", "fails", "WindowsError", "exception", "raised", "DeleteKeyEx", "sub_key", "Deletes", "specified", "already", "predefined", "HKEY_", "constants", "sub_key", "string", "subkey", "identified", "parameter", "reserved", "integer", "Default", "integer", "specifies", "access", "describes", "desired", "value", "subkeys", "method", "delete", "subkeys", "method", "succeeds", "entire", "including", "values", "removed", "method", "fails", "WindowsError", "exception", "raised", "unsupported", "Windows", "versions", "NotImplementedError", "raised", "DeleteValue", "value", "Removes", "named", "value", "registry", "already", "predefined", "HKEY_", "constants", "value", "string", "identifies", "value", "remove", "string", "EnumKey", "index", "Enumerates", "subkeys", "registry", "already", "predefined", "HKEY_", "constants", "index", "integer", "identifies", "index", "retrieve", "function", "retrieves", "subkey", "called", "typically", "called", "repeatedly", "until", "WindowsError", "exception", "raised", "indicating", "values", "available", "tuple", "EnumValue", "index", "Enumerates", "values", "registry", "already", "predefined", "HKEY_", "constants", "index", "integer", "identifies", "index", "value", "retrieve", "function", "retrieves", "subkey", "called", "typically", "called", "repeatedly", "until", "WindowsError", "exception", "raised", "indicating", "values", "result", "tuple", "items", "value_name", "string", "identifies", "value", "value_data", "object", "holds", "value", "whose", "depends", "underlying", "registry", "data_type", "integer", "identifies", "value", "string", "ExpandEnvironmentStrings", "string", "Expand", "environment", "FlushKey", "Writes", "attributes", "registry", "already", "predefined", "HKEY_", "constants", "necessary", "RegFlushKey", "change", "Registry", "changes", "flushed", "registry", "using", "flusher", "Registry", "changes", "flushed", "system", "shutdown", "Unlike", "CloseKey", "FlushKey", "method", "returns", "written", "registry", "application", "should", "FlushKey", "requires", "absolute", "certainty", "registry", "changes", "whether", "FlushKey", "required", "probably", "LoadKey", "sub_key", "file_name", "Creates", "subkey", "under", "specified", "stores", "registration", "information", "specified", "subkey", "already", "predefined", "HKEY_", "constants", "sub_key", "string", "identifies", "sub_key", "file_name", "registry", "created", "SaveKey", "function", "Under", "allocation", "table", "system", "filename", "extension", "LoadKey", "fails", "calling", "process", "SE_RESTORE_PRIVILEGE", "privilege", "handle", "returned", "ConnectRegistry", "specified", "fileName", "relative", "remote", "computer", "imply", "HKEY_USER", "HKEY_LOCAL_MACHINE", "OpenKey", "sub_key", "KEY_READ", "Opens", "specified", "already", "predefined", "HKEY_", "constants", "sub_key", "string", "identifies", "sub_key", "reserved", "integer", "Default", "integer", "specifies", "access", "describes", "desired", "security", "access", "Default", "KEY_READ", "result", "handle", "specified", "function", "fails", "WindowsError", "exception", "raised", "OpenKey", "tuple", "QueryInfoKey", "Returns", "information", "about", "already", "predefined", "HKEY_", "constants", "result", "tuple", "items", "integer", "identifies", "number", "integer", "identifies", "number", "values", "integer", "identifies", "modified", "available", "nanoseconds", "since", "string", "QueryValue", "sub_key", "retrieves", "unnamed", "value", "already", "predefined", "HKEY_", "constants", "sub_key", "string", "holds", "subkey", "which", "value", "associated", "parameter", "empty", "function", "retrieves", "value", "SetValue", "method", "identified", "Values", "registry", "components", "method", "retrieves", "first", "value", "underlying", "doesn", "return", "THIS!!!", "value", "type_id", "QueryValueEx", "value_name", "Retrieves", "specified", "value", "associated", "registry", "already", "predefined", "HKEY_", "constants", "value_name", "string", "indicating", "value", "query", "SaveKey", "file_name", "Saves", "specified", "subkeys", "specified", "already", "predefined", "HKEY_", "constants", "file_name", "registry", "cannot", "already", "exist", "filename", "includes", "extension", "cannot", "allocation", "table", "systems", "LoadKey", "ReplaceKey", "RestoreKey", "methods", "represents", "remote", "computer", "described", "file_name", "relative", "remote", "computer", "caller", "method", "possess", "SeBackupPrivilege", "security", "privilege", "function", "passes", "security_attributes", "SetValue", "sub_key", "value", "Associates", "value", "specified", "already", "predefined", "HKEY_", "constants", "sub_key", "string", "names", "subkey", "which", "value", "associated", "integer", "specifies", "Currently", "REG_SZ", "meaning", "strings", "supported", "value", "string", "specifies", "value", "specified", "sub_key", "parameter", "exist", "SetValue", "function", "creates", "Value", "lengths", "limited", "available", "memory", "values", "bytes", "should", "stored", "files", "filenames", "stored", "configuration", "registry", "helps", "registry", "perform", "efficiently", "identified", "parameter", "opened", "KEY_SET_VALUE", "access", "SetValueEx", "value_name", "reserved", "value", "Stores", "value", "field", "registry", "already", "predefined", "HKEY_", "constants", "value_name", "string", "containing", "value", "integer", "specifies", "should", "REG_BINARY", "Binary", "REG_DWORD", "number", "REG_DWORD_LITTLE_ENDIAN", "number", "little", "endian", "format", "REG_DWORD_BIG_ENDIAN", "number", "endian", "format", "REG_EXPAND_SZ", "terminated", "string", "contains", "unexpanded", "references", "environment", "variables", "example", "REG_LINK", "Unicode", "symbolic", "REG_MULTI_SZ", "sequence", "terminated", "strings", "terminated", "characters", "Python", "handles", "termination", "automatically", "REG_NONE", "defined", "value", "REG_RESOURCE_LIST", "device", "driver", "resource", "REG_SZ", "terminated", "string", "reserved", "anything", "always", "passed", "value", "string", "specifies", "value", "method", "additional", "value", "information", "specified", "identified", "parameter", "opened", "KEY_SET_VALUE", "access", "CreateKeyEx", "OpenKeyEx", "methods", "Value", "lengths", "limited", "available", "memory", "values", "bytes", "should", "stored", "files", "filenames", "stored", "configuration", "registry", "helps", "registry", "perform", "efficiently", "Disables", "registry", "reflection", "processes", "running", "Operating", "System", "generally", "raise", "NotImplemented", "executed", "Operating", "System", "reflection", "function", "succeeds", "effect", "Disabling", "reflection", "affect", "reflection", "subkeys", "Restores", "registry", "reflection", "specified", "disabled", "generally", "raise", "NotImplemented", "executed", "Operating", "System", "Restoring", "reflection", "affect", "reflection", "subkeys", "QueryReflectionKey", "Determines", "reflection", "state", "specified", "generally", "raise", "NotImplemented", "executed", "Operating", "System", "PyHKEY", "Object", "Python", "object", "representing", "win32", "registry", "object", "wraps", "Windows", "object", "automatically", "closing", "object", "destroyed", "guarantee", "cleanup", "either", "Close", "method", "PyHKEY", "CloseKey", "method", "functions", "which", "accept", "handle", "object", "accept", "integer", "however", "handle", "object", "encouraged", "Functions", "Close", "Closes", "underlying", "handle", "Detach", "Returns", "integer", "Win32", "handle", "detaching", "object", "Properties", "handle", "integer", "Win32", "handle", "Operations", "__nonzero__", "Handles", "object", "return", "otherwise", "false", "__int__", "Converting", "handle", "integer", "returns", "Win32", "handle", "__cmp__", "Handle", "objects", "compared", "using", "handle", "value", "Close", "Closes", "underlying", "Windows", "handle", "handle", "already", "closed", "error", "raised", "Detach", "Detaches", "Windows", "handle", "handle", "object", "result", "value", "handle", "before", "detached", "handle", "already", "detached", "return", "After", "calling", "function", "handle", "effectively", "invalidated", "handle", "closed", "would", "function", "underlying", "win32", "handle", "exist", "beyond", "lifetime", "handle", "object", "windows", "result", "function", "integer", "GetStdHandle", "handle", "integer", "Return", "handle", "specified", "standard", "device", "STD_INPUT_HANDLE", "STD_OUTPUT_HANDLE", "STD_ERROR_HANDLE", "integer", "associated", "handle", "object", "returned", "GetCurrentProcess", "handle", "Return", "handle", "object", "current", "process", "DuplicateHandle", "source_proc_handle", "source_handle", "target_proc_handle", "target_handle", "access", "inherit", "options", "handle", "Return", "duplicate", "handle", "object", "duplicate", "handle", "refers", "object", "original", "handle", "Therefore", "changes", "object", "reflected", "through", "handles", "CreatePipe", "pipe_attrs", "read_handle", "write_handle", "Create", "anonymous", "return", "handles", "write", "pipe_attrs", "ignored", "internally", "CreateProcess", "app_name", "cmd_line", "proc_attrs", "thread_attrs", "inherit", "flags", "env_mapping", "curdir", "startup_info", "proc_handle", "thread_handle", "Create", "process", "primary", "thread", "return", "value", "tuple", "process", "handle", "thread", "handle", "process", "thread", "proc_attrs", "thread_attrs", "ignored", "internally", "TerminateProcess", "handle", "exit_code", "Terminate", "specified", "process", "threads", "GetExitCodeProcess", "handle", "Return", "termination", "status", "specified", "process", "WaitForSingleObject", "handle", "timeout", "result", "until", "specified", "object", "signaled", "state", "interval", "elapses", "timeout", "value", "specified", "milliseconds", "GetVersion", "version", "Return", "version", "number", "current", "operating", "system", "GetModuleFileName", "module", "Return", "fully", "qualified", "contains", "specified", "module", "module", "loaded", "current", "process", "module", "parameter", "should", "handle", "loaded", "module", "whose", "being", "requested", "parameter", "GetModuleFileName", "retrieves", "executable", "current", "process", "ascii", "title", "unicode", "Return", "titlecased", "version", "words", "start", "title", "characters", "remaining", "cased", "characters", "lower", "capitalize", "unicode", "Return", "capitalized", "version", "first", "character", "upper", "lower", "center", "width", "fillchar", "unicode", "Return", "centered", "Unicode", "string", "length", "width", "Padding", "using", "specified", "character", "default", "space", "count", "start", "Return", "number", "overlapping", "occurrences", "substring", "Unicode", "string", "start", "Optional", "arguments", "start", "interpreted", "slice", "notation", "encode", "encoding", "errors", "string", "unicode", "Encodes", "using", "codec", "registered", "encoding", "encoding", "defaults", "default", "encoding", "errors", "given", "different", "error", "handling", "scheme", "Default", "strict", "meaning", "encoding", "errors", "raise", "UnicodeEncodeError", "Other", "possible", "values", "ignore", "replace", "xmlcharrefreplace", "other", "registered", "codecs", "register_error", "handle", "UnicodeEncodeErrors", "decode", "encoding", "errors", "string", "unicode", "Decodes", "using", "codec", "registered", "encoding", "encoding", "defaults", "default", "encoding", "errors", "given", "different", "error", "handling", "scheme", "Default", "strict", "meaning", "encoding", "errors", "raise", "UnicodeDecodeError", "Other", "possible", "values", "ignore", "replace", "other", "registered", "codecs", "register_error", "handle", "UnicodeDecodeErrors", "expandtabs", "tabsize", "unicode", "Return", "where", "characters", "expanded", "using", "spaces", "tabsize", "given", "characters", "assumed", "start", "Return", "lowest", "index", "where", "substring", "found", "contained", "within", "start", "Optional", "arguments", "start", "interpreted", "slice", "notation", "Return", "failure", "index", "start", "raise", "ValueError", "substring", "found", "islower", "Return", "cased", "characters", "lowercase", "there", "least", "cased", "character", "False", "otherwise", "isupper", "Return", "cased", "characters", "uppercase", "there", "least", "cased", "character", "False", "otherwise", "istitle", "Return", "titlecased", "string", "there", "least", "character", "upper", "titlecase", "characters", "follow", "uncased", "characters", "lowercase", "characters", "cased", "Return", "False", "otherwise", "isspace", "Return", "characters", "whitespace", "there", "least", "character", "False", "otherwise", "isalpha", "Return", "characters", "alphabetic", "there", "least", "character", "False", "otherwise", "isalnum", "Return", "characters", "alphanumeric", "there", "least", "character", "False", "otherwise", "isdecimal", "Return", "there", "decimal", "characters", "False", "otherwise", "isdigit", "Return", "characters", "digits", "there", "least", "character", "False", "otherwise", "isnumeric", "Return", "there", "numeric", "characters", "False", "otherwise", "iterable", "unicode", "Return", "string", "which", "concatenation", "strings", "iterable", "separator", "between", "elements", "ljust", "width", "fillchar", "Return", "justified", "Unicode", "string", "length", "width", "Padding", "using", "specified", "character", "default", "space", "lower", "unicode", "Return", "string", "converted", "lowercase", "__sizeof__", "memory", "bytes", "strip", "chars", "unicode", "Return", "string", "leading", "trailing", "whitespace", "removed", "chars", "given", "remove", "characters", "chars", "instead", "chars", "converted", "unicode", "before", "stripping", "lstrip", "chars", "unicode", "Return", "string", "leading", "whitespace", "removed", "chars", "given", "remove", "characters", "chars", "instead", "chars", "converted", "unicode", "before", "stripping", "rstrip", "chars", "unicode", "Return", "string", "trailing", "whitespace", "removed", "chars", "given", "remove", "characters", "chars", "instead", "chars", "converted", "unicode", "before", "stripping", "replace", "count", "unicode", "Return", "occurrences", "substring", "replaced", "optional", "argument", "count", "given", "first", "count", "occurrences", "replaced", "rfind", "start", "Return", "highest", "index", "where", "substring", "found", "contained", "within", "start", "Optional", "arguments", "start", "interpreted", "slice", "notation", "Return", "failure", "rindex", "start", "rfind", "raise", "ValueError", "substring", "found", "rjust", "width", "fillchar", "unicode", "Return", "right", "justified", "Unicode", "string", "length", "width", "Padding", "using", "specified", "character", "default", "space", "split", "maxsplit", "strings", "Return", "words", "using", "delimiter", "string", "maxsplit", "given", "maxsplit", "splits", "specified", "whitespace", "string", "separator", "empty", "strings", "removed", "result", "partition", "Search", "separator", "return", "before", "separator", "itself", "after", "separator", "found", "return", "empty", "strings", "rpartition", "Search", "separator", "starting", "return", "before", "separator", "itself", "after", "separator", "found", "return", "empty", "strings", "rsplit", "maxsplit", "strings", "Return", "words", "using", "delimiter", "string", "starting", "string", "working", "front", "maxsplit", "given", "maxsplit", "splits", "specified", "whitespace", "string", "separator", "splitlines", "keepends", "False", "strings", "Return", "lines", "breaking", "boundaries", "breaks", "included", "resulting", "unless", "keepends", "given", "swapcase", "unicode", "Return", "uppercase", "characters", "converted", "lowercase", "versa", "translate", "table", "unicode", "Return", "string", "where", "characters", "mapped", "through", "given", "translation", "table", "which", "mapping", "Unicode", "ordinals", "Unicode", "ordinals", "Unicode", "strings", "Unmapped", "characters", "untouched", "Characters", "mapped", "deleted", "upper", "unicode", "Return", "converted", "uppercase", "zfill", "width", "unicode", "numeric", "string", "zeros", "field", "specified", "width", "string", "never", "truncated", "startswith", "prefix", "start", "Return", "starts", "specified", "prefix", "False", "otherwise", "optional", "start", "beginning", "position", "optional", "comparing", "position", "prefix", "tuple", "strings", "endswith", "suffix", "start", "Return", "specified", "suffix", "False", "otherwise", "optional", "start", "beginning", "position", "optional", "comparing", "position", "suffix", "tuple", "strings", "n_sequence_fields", "format", "kwargs", "unicode", "Return", "formatted", "version", "using", "substitutions", "kwargs", "substitutions", "identified", "braces", "__format__", "format_spec", "unicode", "Return", "formatted", "version", "described", "format_spec", "n_fields", "unicode", "object", "unicode", "object", "unicode", "string", "encoding", "errors", "unicode", "object", "Create", "Unicode", "object", "given", "encoded", "string", "encoding", "defaults", "current", "default", "string", "encoding", "errors", "strict", "replace", "ignore", "defaults", "strict", "n_unnamed_fields", "0123456789", "HIJKLM", "NOPQRST", "qrstuvwxyz", "123123123", "OPQQR", "aaabcd", "777kkkkkkkkkkkkkkkk", "ffffffffffffffff", "nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn", "oooooooooooooooooooooooooooooooooooooo", "pppppppppppppppppppppppppppppppppppppp", "qrstuv", "qrstuv", "qrstuv", "aaaaa", "qrstuv", "qrstuv", "qrstuv", "qrstuv", "qrstuv", "qrstuv", "qrstuv", "nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn", "ooooooooooooooooooooooooooooooooooooooooooooooo", "qrstuv", "aaaaaaaaaaaaaaaaaaaaaaaaaa", "aaaaaaaaaaaaaaaaaaaaaaaaaa", "aaaaaaaaaaaaaaaaaaaaaaaaaa", "aaaaaaaa", "aaaaaaaaaaaaaaaaaaaaaaaaaa", "aaaaaaaa", "aaaaaaa", "aaaaa", "aaaaaaa", "aaaaaaaaaaaaaaaaaaaaaaaaaa", "aaaaaaaaaaaaaaaaaaaaaaaaaa", "aaaaaaaaaaaaaaaaaaaaaaaaaa", "aaaaaaaaaaaaaaaaaaaaaaaaaa", "aaaaaaaaaaaaaaaaaaaaaaaaaa", "aaaaaaaaaaaaaaaaaaaaaaaaaa", "aaaaaaaaaaaaaaaaaaaaaaaaa", "aaaaaaaaaaaaaaaaaaaaaaaaa", "aaaaaaaaaaaaaaaaaaaaaaaaa", "aaaaaaaaaaaaaaaaaaaaaaaaa", "aaaaaaaaaaaaaaaaaaaaaaaaa", "qrstuv", "object", "object", "bases", "Abstract", "classes", "override", "customize", "issubclass", "invoked", "early", "ABCMeta", "__subclasscheck__", "should", "return", "False", "NotImplemented", "returns", "NotImplemented", "normal", "algorithm", "Otherwise", "overrides", "normal", "algorithm", "outcome", "cached", "super", "bound", "super", "object", "requires", "isinstance", "super", "unbound", "super", "object", "super", "type2", "bound", "super", "object", "requires", "issubclass", "type2", "Typical", "cooperative", "superclass", "method", "class", "super", "tuple", "empty", "tuple", "tuple", "iterable", "tuple", "initialized", "iterable", "items", "argument", "tuple", "return", "value", "object", "index", "value", "start", "integer", "return", "first", "index", "value", "Raises", "ValueError", "value", "present", "count", "value", "integer", "return", "number", "occurrences", "value", "Private", "method", "returning", "estimate", "Update", "union", "itself", "others", "split", "maxsplit", "strings", "Return", "words", "string", "using", "delimiter", "string", "maxsplit", "given", "maxsplit", "splits", "specified", "whitespace", "string", "separator", "empty", "strings", "removed", "result", "partition", "Search", "separator", "return", "before", "separator", "itself", "after", "separator", "found", "return", "empty", "strings", "rpartition", "Search", "separator", "starting", "return", "before", "separator", "itself", "after", "separator", "found", "return", "empty", "strings", "rsplit", "maxsplit", "strings", "Return", "words", "string", "using", "delimiter", "string", "starting", "string", "working", "front", "maxsplit", "given", "maxsplit", "splits", "specified", "whitespace", "string", "separator", "iterable", "string", "Return", "string", "which", "concatenation", "strings", "iterable", "separator", "between", "elements", "start", "Return", "lowest", "index", "where", "substring", "found", "contained", "within", "start", "Optional", "arguments", "start", "interpreted", "slice", "notation", "Return", "failure", "index", "start", "raise", "ValueError", "substring", "found", "rfind", "start", "Return", "highest", "index", "where", "substring", "found", "contained", "within", "start", "Optional", "arguments", "start", "interpreted", "slice", "notation", "Return", "failure", "rindex", "start", "rfind", "raise", "ValueError", "substring", "found", "strip", "chars", "string", "unicode", "Return", "string", "leading", "trailing", "whitespace", "removed", "chars", "given", "remove", "characters", "chars", "instead", "chars", "unicode", "converted", "unicode", "before", "stripping", "Remove", "elements", "lstrip", "chars", "string", "unicode", "Return", "string", "leading", "whitespace", "removed", "chars", "given", "remove", "characters", "chars", "instead", "chars", "unicode", "converted", "unicode", "before", "stripping", "rstrip", "chars", "string", "unicode", "Return", "string", "trailing", "whitespace", "removed", "chars", "given", "remove", "characters", "chars", "instead", "chars", "unicode", "converted", "unicode", "before", "stripping", "lower", "string", "Return", "string", "converted", "lowercase", "upper", "string", "Return", "string", "converted", "uppercase", "title", "string", "Return", "titlecased", "version", "words", "start", "uppercase", "characters", "remaining", "cased", "characters", "lowercase", "capitalize", "string", "Return", "string", "first", "character", "capitalized", "count", "start", "Return", "number", "overlapping", "occurrences", "substring", "string", "start", "Optional", "arguments", "start", "interpreted", "slice", "notation", "swapcase", "string", "Return", "string", "uppercase", "characters", "converted", "lowercase", "versa", "translate", "table", "deletechars", "string", "Return", "string", "where", "characters", "occurring", "optional", "argument", "deletechars", "removed", "remaining", "characters", "mapped", "through", "given", "translation", "table", "which", "string", "length", "table", "argument", "translation", "applied", "operation", "simply", "removes", "characters", "deletechars", "replace", "count", "string", "Return", "string", "occurrences", "substring", "replaced", "optional", "argument", "count", "given", "first", "count", "occurrences", "replaced", "startswith", "prefix", "start", "Return", "starts", "specified", "prefix", "False", "otherwise", "optional", "start", "beginning", "position", "optional", "comparing", "position", "prefix", "tuple", "strings", "endswith", "suffix", "start", "Return", "specified", "suffix", "False", "otherwise", "optional", "start", "beginning", "position", "optional", "comparing", "position", "suffix", "tuple", "strings", "encode", "encoding", "errors", "object", "Encodes", "using", "codec", "registered", "encoding", "encoding", "defaults", "default", "encoding", "errors", "given", "different", "error", "handling", "scheme", "Default", "strict", "meaning", "encoding", "errors", "raise", "UnicodeEncodeError", "Other", "possible", "values", "ignore", "replace", "xmlcharrefreplace", "other", "registered", "codecs", "register_error", "handle", "UnicodeEncodeErrors", "Update", "intersection", "itself", "another", "decode", "encoding", "errors", "object", "Decodes", "using", "codec", "registered", "encoding", "encoding", "defaults", "default", "encoding", "errors", "given", "different", "error", "handling", "scheme", "Default", "strict", "meaning", "encoding", "errors", "raise", "UnicodeDecodeError", "Other", "possible", "values", "ignore", "replace", "other", "registered", "codecs", "register_error", "handle", "UnicodeDecodeErrors", "expandtabs", "tabsize", "string", "Return", "where", "characters", "expanded", "using", "spaces", "tabsize", "given", "characters", "assumed", "ljust", "width", "fillchar", "string", "Return", "justified", "string", "length", "width", "Padding", "using", "specified", "character", "default", "space", "Return", "intersection", "rjust", "width", "fillchar", "string", "Return", "right", "justified", "string", "length", "width", "Padding", "using", "specified", "character", "default", "space", "Remove", "elements", "another", "center", "width", "fillchar", "string", "Return", "centered", "string", "length", "width", "Padding", "using", "specified", "character", "default", "space", "zfill", "width", "string", "numeric", "string", "zeros", "field", "specified", "width", "string", "never", "truncated", "isspace", "Return", "characters", "whitespace", "there", "least", "character", "False", "otherwise", "isalpha", "Return", "characters", "alphabetic", "there", "least", "character", "False", "otherwise", "isalnum", "Return", "characters", "alphanumeric", "there", "least", "character", "False", "otherwise", "Returns", "reverse", "iterator", "isdigit", "Return", "characters", "digits", "there", "least", "character", "False", "otherwise", "islower", "Return", "cased", "characters", "lowercase", "there", "least", "cased", "character", "False", "otherwise", "isupper", "Return", "cased", "characters", "uppercase", "there", "least", "cased", "character", "False", "otherwise", "istitle", "Return", "titlecased", "string", "there", "least", "character", "uppercase", "characters", "follow", "uncased", "characters", "lowercase", "characters", "cased", "Return", "False", "otherwise", "splitlines", "keepends", "False", "strings", "Return", "lines", "breaking", "boundaries", "breaks", "included", "resulting", "unless", "keepends", "given", "__sizeof__", "memory", "bytes", "format", "kwargs", "string", "Return", "formatted", "version", "using", "substitutions", "kwargs", "substitutions", "identified", "braces", "__format__", "format_spec", "string", "Return", "formatted", "version", "described", "format_spec", "basestring", "cannot", "instantiated", "unicode", "object", "string", "Return", "string", "representation", "object", "argument", "string", "return", "value", "object", "wrapper", "custom", "slice", "slice", "start", "Create", "slice", "object", "extended", "slicing", "__getitem__", "indices", "start", "stride", "Assuming", "sequence", "length", "calculate", "start", "indices", "stride", "length", "extended", "slice", "described", "bounds", "indices", "clipped", "manner", "consistent", "handling", "normal", "slices", "Return", "state", "information", "pickling", "__reversed__", "return", "reverse", "iterator", "append", "object", "append", "object", "Remove", "return", "arbitrary", "element", "Raises", "KeyError", "empty", "Private", "method", "returning", "estimate", "reverse", "reverse", "PLACE", "Return", "shallow", "Return", "union", "elements", "either", "Return", "intersection", "elements", "common", "Return", "difference", "elements", "others", "Update", "symmetric", "difference", "itself", "another", "Return", "symmetric", "difference", "elements", "exactly", "Report", "whether", "another", "contains", "Report", "whether", "contains", "another", "element", "effect", "element", "already", "present", "__contains__", "Remove", "element", "member", "element", "member", "raise", "KeyError", "Remove", "element", "member", "element", "member", "nothing", "Return", "state", "information", "pickling", "__sizeof__", "memory", "bytes", "close", "raise", "GeneratorExit", "inside", "generator", "empty", "object", "iterable", "object", "Build", "unordered", "collection", "unique", "elements", "Return", "generator", "associated", "object", "frozenset", "empty", "frozenset", "object", "frozenset", "iterable", "frozenset", "object", "Build", "immutable", "unordered", "collection", "unique", "elements", "flush", "Flush", "internal", "buffer", "xrange", "xrange", "object", "xrange", "start", "xrange", "object", "range", "instead", "returning", "returns", "object", "generates", "numbers", "range", "demand", "looping", "slightly", "faster", "range", "memory", "efficient", "Private", "method", "returning", "estimate", "module", "Create", "module", "object", "string", "optional", "argument", "memoryview", "object", "Create", "memoryview", "object", "which", "references", "given", "object", "bit_length", "Number", "necessary", "represent", "binary", "0b100101", "bit_length", "Convert", "number", "string", "integer", "return", "arguments", "given", "floating", "point", "conversion", "truncates", "towards", "number", "given", "string", "Unicode", "object", "representing", "integer", "literal", "given", "literal", "preceded", "surrounded", "whitespace", "defaults", "Valid", "bases", "means", "interpret", "string", "integer", "literal", "0b100", "long_info", "struct", "sequence", "holds", "information", "about", "Python", "internal", "representation", "integers", "attributes", "Object", "wrapper", "custom", "__sizeof__", "memory", "bytes", "extend", "iterable", "extend", "appending", "elements", "iterable", "insert", "index", "object", "insert", "object", "before", "index", "index", "remove", "return", "index", "default", "Raises", "IndexError", "empty", "index", "range", "remove", "value", "remove", "first", "occurrence", "value", "Raises", "ValueError", "value", "present", "index", "value", "start", "integer", "return", "first", "index", "value", "Raises", "ValueError", "value", "present", "count", "value", "integer", "return", "number", "occurrences", "value", "reverse", "False", "stable", "PLACE", "empty", "iterable", "initialized", "iterable", "items", "Private", "method", "returning", "estimate", "Private", "method", "returning", "estimate", "Convert", "number", "string", "integer", "return", "arguments", "given", "floating", "point", "conversion", "truncates", "towards", "outside", "integer", "range", "function", "returns", "instead", "number", "given", "string", "Unicode", "object", "representing", "integer", "literal", "given", "literal", "preceded", "surrounded", "whitespace", "defaults", "Valid", "bases", "means", "interpret", "string", "integer", "literal", "0b100", "bit_length", "Number", "necessary", "represent", "binary", "0b100101", "bit_length", "generator", "return", "yielded", "value", "raise", "StopIteration", "throw", "raise", "exception", "generator", "return", "yielded", "value", "raise", "StopIteration", "function", "globals", "argdefs", "closure", "Create", "function", "object", "object", "dictionary", "optional", "string", "overrides", "object", "optional", "argdefs", "tuple", "specifies", "default", "argument", "values", "optional", "closure", "tuple", "supplies", "bindings", "variables", "classmethod", "function", "method", "Convert", "function", "class", "method", "class", "method", "receives", "class", "implicit", "first", "argument", "instance", "method", "receives", "instance", "declare", "class", "method", "idiom", "class", "classmethod", "called", "either", "class", "instance", "instance", "ignored", "except", "class", "class", "method", "called", "derived", "class", "derived", "class", "object", "passed", "implied", "first", "argument", "Class", "methods", "different", "static", "methods", "those", "staticmethod", "builtin", "staticmethod", "function", "method", "Convert", "function", "static", "method", "static", "method", "receive", "implicit", "first", "argument", "declare", "static", "method", "idiom", "class", "staticmethod", "called", "either", "class", "instance", "instance", "ignored", "except", "class", "Static", "methods", "Python", "similar", "those", "found", "advanced", "concept", "classmethod", "builtin", "__sizeof__", "memory", "bytes", "float_info", "structseq", "holding", "information", "about", "float", "contains", "level", "information", "about", "precision", "internal", "representation", "Please", "study", "system", "float", "information", "float", "string", "Return", "hexadecimal", "representation", "floating", "point", "number", "999999999999ap", "14159", "921f9f01b866ep", "float", "fromhex", "string", "float", "Create", "floating", "point", "number", "hexadecimal", "string", "float", "fromhex", "ffffp10", "984375", "float", "fromhex", "9406564584124654e", "float", "as_integer_ratio", "Return", "integers", "whose", "ratio", "exactly", "equal", "original", "float", "positive", "denominator", "Raise", "OverflowError", "infinities", "ValueError", "as_integer_ratio", "as_integer_ratio", "as_integer_ratio", "float", "__getformat__", "typestr", "string", "probably", "function", "exists", "mainly", "Python", "suite", "typestr", "double", "float", "function", "returns", "whichever", "unknown", "endian", "little", "endian", "describes", "format", "floating", "point", "numbers", "named", "typestr", "float", "__setformat__", "typestr", "probably", "function", "exists", "mainly", "Python", "suite", "typestr", "double", "float", "unknown", "endian", "little", "endian", "addition", "latter", "appears", "match", "underlying", "reality", "Override", "automatic", "determination", "level", "floating", "point", "affects", "floats", "converted", "binary", "strings", "float", "__format__", "format_spec", "string", "Formats", "float", "according", "format_spec", "float", "floating", "point", "number", "Convert", "string", "number", "floating", "point", "number", "possible", "readline", "string", "Retain", "newline", "negative", "argument", "limits", "maximum", "number", "bytes", "return", "incomplete", "returned", "Return", "empty", "string", "bytes", "returned", "string", "argument", "negative", "omitted", "until", "reached", "Notice", "blocking", "requested", "returned", "parameter", "given", "write", "Write", "string", "buffering", "flush", "close", "needed", "before", "reflects", "written", "fileno", "integer", "descriptor", "needed", "lower", "level", "interfaces", "offset", "whence", "position", "Argument", "offset", "count", "Optional", "argument", "whence", "defaults", "offset", "start", "offset", "should", "other", "values", "relative", "current", "position", "positive", "negative", "relative", "usually", "negative", "although", "platforms", "allow", "seeking", "beyond", "opened", "offsets", "returned", "legal", "other", "offsets", "causes", "undefined", "behavior", "objects", "seekable", "truncate", "Truncate", "bytes", "defaults", "current", "position", "returned", "current", "position", "integer", "integer", "readinto", "Undocumented", "readlines", "strings", "readline", "repeatedly", "return", "lines", "optional", "argument", "given", "approximate", "bound", "total", "number", "bytes", "lines", "returned", "xreadlines", "returns", "backward", "compatibility", "objects", "include", "performance", "optimizations", "previously", "implemented", "xreadlines", "module", "writelines", "sequence_of_strings", "Write", "strings", "newlines", "added", "sequence", "iterable", "object", "producing", "strings", "equivalent", "calling", "write", "string", "close", "perhaps", "integer", "Close", "attribute", "closed", "closed", "cannot", "further", "operations", "close", "called", "without", "error", "kinds", "objects", "example", "opened", "popen", "return", "status", "closing", "isatty", "false", "connected", "device", "__enter__", "__exit__", "excinfo", "Closes", "buffering", "object", "reading", "default", "writing", "appending", "created", "doesn", "exist", "opened", "writing", "appending", "truncated", "opened", "writing", "binary", "files", "allow", "simultaneous", "reading", "writing", "buffering", "argument", "given", "means", "unbuffered", "means", "buffered", "larger", "numbers", "specify", "buffer", "preferred", "builtin", "function", "input", "universal", "newline", "support", "ending", "input", "Python", "opened", "gains", "attribute", "newlines", "value", "attribute", "newline", "tuple", "containing", "newline", "types", "cannot", "combined", "Python", "standard", "exception", "class", "hierarchy", "Exceptions", "found", "defined", "exceptions", "module", "built", "namespace", "recommended", "defined", "exceptions", "inherit", "Exception", "documentation", "exception", "inheritance", "hierarchy", "has_key", "False", "__getitem__", "items", "value", "pairs", "tuples", "values", "values", "itervalues", "iterator", "values", "viewvalues", "object", "providing", "values", "Encoding", "stream", "Subclasses", "should", "override", "Retrieve", "entire", "contents", "object", "until", "using", "multiple", "readinto", "RawIOBase", "readinto", "seekable", "supports", "random", "access", "enumerate", "iterable", "start", "iterator", "index", "value", "iterable", "Return", "enumerate", "object", "iterable", "another", "object", "supports", "iteration", "enumerate", "object", "yields", "pairs", "containing", "count", "start", "which", "defaults", "value", "yielded", "iterable", "argument", "enumerate", "useful", "obtaining", "indexed", "reversed", "sequence", "reverse", "iterator", "values", "sequence", "Return", "reverse", "iterator", "Private", "method", "returning", "estimate", "__contains__", "False", "__sizeof__", "memory", "bytes", "defaults", "setdefault", "remove", "specified", "return", "corresponding", "value", "found", "returned", "given", "otherwise", "KeyError", "raised", "popitem", "remove", "return", "value", "tuple", "raise", "KeyError", "empty", "update", "Update", "iterable", "present", "method", "present", "lacks", "method", "either", "followed", "fromkeys", "values", "equal", "defaults", "clear", "Remove", "items", "shallow", "iterkeys", "iterator", "iteritems", "iterator", "value", "items", "viewkeys", "object", "providing", "viewitems", "object", "providing", "items", "empty", "dictionary", "mapping", "dictionary", "initialized", "mapping", "object", "value", "pairs", "iterable", "dictionary", "initialized", "iterable", "kwargs", "dictionary", "initialized", "value", "pairs", "keyword", "argument", "example", "Private", "method", "returning", "estimate", "Return", "compression", "object", "Return", "digest", "value", "string", "binary", "Return", "digest", "value", "string", "hexadecimal", "digits", "Return", "object", "Return", "digest", "value", "string", "binary", "Return", "digest", "value", "string", "hexadecimal", "digits", "Descriptor", "change", "getter", "property", "Descriptor", "change", "setter", "property", "Descriptor", "change", "deleter", "property", "Update", "object", "state", "provided", "string", "property", "property", "attribute", "function", "getting", "attribute", "value", "likewise", "function", "setting", "function", "attribute", "Typical", "define", "managed", "attribute", "class", "object", "return", "value", "value", "property", "property", "Decorators", "defining", "properties", "modifying", "existing", "class", "object", "property", "property", "return", "setter", "value", "value", "deleter", "complex", "conjugate", "complex", "Return", "complex", "conjugate", "argument", "conjugate", "complex", "__format__", "Convert", "string", "according", "format_spec", "complex", "complex", "number", "Create", "complex", "number", "optional", "imaginary", "equivalent", "where", "defaults", "Return", "object", "Return", "digest", "value", "string", "binary", "argcount", "nlocals", "stacksize", "flags", "codestring", "constants", "names", "varnames", "filename", "firstlineno", "lnotab", "freevars", "cellvars", "Create", "object", "faint", "heart", "Return", "digest", "value", "string", "hexadecimal", "digits", "objects", "exported", "extension", "module", "another", "objects", "communication", "between", "extension", "modules", "provide", "extension", "module", "export", "interface", "other", "extension", "modules", "extension", "modules", "Python", "import", "mechanism", "another", "Update", "object", "state", "provided", "string", "classobj", "bases", "Create", "class", "object", "string", "second", "argument", "tuple", "classes", "third", "dictionary", "instance", "class", "Create", "instance", "without", "calling", "__init__", "method", "class", "classic", "class", "present", "dictionary", "instancemethod", "function", "instance", "class", "Create", "instance", "method", "object", "chmod", "Change", "access", "permissions", "rmdir", "Remove", "directory", "Capsule", "objects", "pointer", "Python", "object", "passing", "through", "Python", "interpreter", "without", "creating", "custom", "Capsules", "communication", "between", "extension", "modules", "provide", "extension", "module", "export", "interface", "other", "extension", "modules", "extension", "modules", "Python", "import", "mechanism", "another", "unlink", "Remove", "remove", "expandtabs", "tabsize", "Return", "where", "characters", "expanded", "using", "spaces", "tabsize", "given", "characters", "assumed", "ljust", "width", "fillchar", "Return", "justified", "string", "length", "width", "Padding", "using", "specified", "character", "default", "space", "rjust", "width", "fillchar", "Return", "right", "justified", "string", "length", "width", "Padding", "using", "specified", "character", "default", "space", "center", "width", "fillchar", "Return", "centered", "string", "length", "width", "Padding", "using", "specified", "character", "default", "space", "zfill", "width", "numeric", "string", "zeros", "field", "specified", "width", "never", "truncated", "start", "Return", "lowest", "index", "where", "subsection", "found", "contained", "within", "start", "Optional", "arguments", "start", "interpreted", "slice", "notation", "Return", "failure", "count", "start", "Return", "number", "overlapping", "occurrences", "subsection", "bytes", "start", "Optional", "arguments", "start", "interpreted", "slice", "notation", "index", "start", "raise", "ValueError", "subsection", "found", "rfind", "start", "Return", "highest", "index", "where", "subsection", "found", "contained", "within", "start", "Optional", "arguments", "start", "interpreted", "slice", "notation", "Return", "failure", "rindex", "start", "rfind", "raise", "ValueError", "subsection", "found", "remove", "Remove", "unlink", "startswith", "prefix", "start", "Return", "starts", "specified", "prefix", "False", "otherwise", "optional", "start", "beginning", "position", "optional", "comparing", "position", "prefix", "tuple", "strings", "endswith", "suffix", "start", "Return", "specified", "suffix", "False", "otherwise", "optional", "start", "beginning", "position", "optional", "comparing", "position", "suffix", "tuple", "strings", "translate", "table", "deletechars", "bytearray", "Return", "where", "characters", "occurring", "optional", "argument", "deletechars", "removed", "remaining", "characters", "mapped", "through", "given", "translation", "table", "which", "bytes", "object", "length", "Return", "duplicate", "descriptor", "replace", "count", "bytes", "Return", "occurrences", "subsection", "replaced", "optional", "argument", "count", "given", "first", "count", "occurrences", "replaced", "split", "maxsplit", "bytearray", "Return", "sections", "using", "delimiter", "given", "split", "ASCII", "whitespace", "characters", "space", "return", "newline", "formfeed", "vertical", "maxsplit", "given", "maxsplit", "splits", "partition", "Searches", "separator", "returns", "before", "separator", "itself", "after", "separator", "found", "returns", "empty", "bytearray", "objects", "old_fd", "new_fd", "Duplicate", "descriptor", "rpartition", "Searches", "separator", "starting", "returns", "before", "separator", "itself", "after", "separator", "found", "returns", "empty", "bytearray", "objects", "rsplit", "maxsplit", "bytearray", "Return", "sections", "using", "delimiter", "starting", "working", "front", "given", "split", "ASCII", "whitespace", "characters", "space", "return", "newline", "formfeed", "vertical", "maxsplit", "given", "maxsplit", "splits", "reverse", "Reverse", "order", "values", "place", "putenv", "value", "Change", "environment", "variable", "insert", "index", "Insert", "single", "bytearray", "before", "given", "index", "append", "Append", "single", "extend", "iterable", "Append", "elements", "iterator", "sequence", "index", "Remove", "return", "single", "index", "argument", "given", "value", "remove", "Remove", "first", "occurrence", "value", "interface", "Python", "internal", "parser", "strip", "bytes", "bytearray", "Strip", "leading", "trailing", "bytes", "contained", "argument", "argument", "omitted", "strip", "ASCII", "whitespace", "lstrip", "bytes", "bytearray", "Strip", "leading", "bytes", "contained", "argument", "argument", "omitted", "strip", "leading", "ASCII", "whitespace", "rstrip", "bytes", "bytearray", "Strip", "trailing", "bytes", "contained", "argument", "argument", "omitted", "strip", "trailing", "ASCII", "whitespace", "decode", "encoding", "errors", "unicode", "object", "Decodes", "using", "codec", "registered", "encoding", "encoding", "defaults", "default", "encoding", "errors", "given", "different", "error", "handling", "scheme", "Default", "strict", "meaning", "encoding", "errors", "raise", "UnicodeDecodeError", "Other", "possible", "values", "ignore", "replace", "other", "registered", "codecs", "register_error", "handle", "UnicodeDecodeErrors", "__alloc__", "Returns", "number", "bytes", "actually", "allocated", "iterable_of_bytes", "bytes", "Concatenates", "number", "bytearray", "objects", "between", "splitlines", "keepends", "False", "lines", "Return", "lines", "breaking", "boundaries", "breaks", "included", "resulting", "unless", "keepends", "given", "bytearray", "fromhex", "string", "bytearray", "Create", "bytearray", "object", "string", "hexadecimal", "numbers", "Spaces", "between", "numbers", "accepted", "Example", "bytearray", "fromhex", "bytearray", "Return", "state", "information", "pickling", "__sizeof__", "Returns", "memory", "bytes", "bytearray", "iterable_of_ints", "bytearray", "bytearray", "string", "encoding", "errors", "bytearray", "bytearray", "bytes_or_bytearray", "mutable", "bytes_or_bytearray", "bytearray", "memory_view", "bytearray", "Construct", "mutable", "bytearray", "object", "iterable", "yielding", "integers", "range", "string", "encoded", "using", "specified", "encoding", "bytes", "bytearray", "object", "object", "implementing", "buffer", "bytearray", "bytearray", "Construct", "initialized", "bytearray", "given", "length", "Private", "method", "returning", "estimate", "Return", "cosine", "measured", "radians", "buffer", "object", "offset", "Create", "buffer", "object", "which", "references", "given", "object", "buffer", "reference", "slice", "target", "object", "start", "object", "specified", "offset", "slice", "extend", "target", "object", "specified", "Return", "measured", "radians", "Returns", "argument", "False", "otherwise", "builtins", "False", "instances", "class", "class", "subclass", "class", "cannot", "subclassed", "asinh", "Return", "inverse", "hyperbolic", "Return", "tangent", "measured", "radians", "class", "class", "provides", "character", "based", "interface", "stream", "There", "readinto", "method", "because", "Python", "character", "strings", "immutable", "There", "public", "constructor", "Separate", "underlying", "buffer", "TextIOBase", "return", "After", "underlying", "buffer", "detached", "TextIO", "unusable", "state", "characters", "stream", "underlying", "buffer", "until", "characters", "negative", "omitted", "until", "Return", "hyperbolic", "cosine", "until", "newline", "Returns", "empty", "string", "immediately", "Write", "string", "stream", "Returns", "number", "characters", "written", "which", "always", "equal", "length", "string", "endings", "translated", "endings", "translated", "during", "reading", "considered", "Subclasses", "should", "override", "error", "setting", "decoder", "encoder", "Subclasses", "should", "override", "Complementary", "error", "function", "Codec", "reading", "universal", "newlines", "wraps", "another", "incremental", "decoder", "translating", "records", "types", "newlines", "encountered", "translate", "False", "ensures", "newline", "sequence", "returned", "piece", "decoder", "expects", "unicode", "strings", "decode", "input", "translates", "newlines", "without", "first", "invoking", "external", "decoder", "Return", "raised", "power", "Return", "absolute", "value", "float", "Character", "based", "layer", "BufferedIOBase", "object", "buffer", "encoding", "gives", "encoding", "stream", "decoded", "encoded", "defaults", "locale", "getpreferredencoding", "errors", "determines", "strictness", "encoding", "decoding", "codecs", "register", "defaults", "strict", "newline", "controls", "endings", "handled", "works", "follows", "input", "newline", "universal", "newlines", "enabled", "Lines", "input", "these", "translated", "before", "being", "returned", "caller", "universal", "newline", "enabled", "endings", "returned", "caller", "untranslated", "other", "legal", "values", "input", "lines", "terminated", "given", "string", "ending", "returned", "caller", "untranslated", "output", "newline", "characters", "written", "translated", "system", "default", "separator", "linesep", "newline", "translation", "takes", "place", "newline", "other", "legal", "values", "characters", "written", "translated", "given", "string", "line_buffering", "flush", "implied", "write", "contains", "newline", "character", "Return", "measured", "radians", "implementation", "using", "memory", "buffer", "initial_value", "argument", "value", "object", "newline", "argument", "TextIOWrapper", "constructor", "current", "position", "characters", "returned", "string", "argument", "negative", "omitted", "until", "reached", "Return", "empty", "string", "until", "newline", "Returns", "empty", "string", "immediately", "Truncate", "argument", "defaults", "current", "position", "returned", "current", "position", "unchanged", "Returns", "absolute", "position", "Change", "stream", "position", "character", "offset", "relative", "position", "indicated", "whence", "Start", "stream", "default", "should", "Current", "position", "stream", "Returns", "absolute", "position", "Write", "string", "Returns", "number", "characters", "written", "which", "always", "equal", "length", "string", "Close", "object", "Attempting", "further", "operation", "after", "object", "closed", "raise", "ValueError", "method", "effect", "already", "closed", "readable", "Returns", "object", "writable", "Returns", "object", "written", "seekable", "Returns", "object", "seeked", "Return", "hyperbolic", "abstract", "class", "classes", "acting", "streams", "bytes", "There", "public", "constructor", "class", "provides", "dummy", "implementations", "methods", "derived", "classes", "override", "selectively", "default", "implementations", "represent", "cannot", "written", "seeked", "though", "IOBase", "declare", "readinto", "write", "because", "their", "signatures", "implementations", "clients", "should", "consider", "those", "methods", "interface", "implementations", "raise", "IOError", "operations", "support", "called", "basic", "binary", "written", "bytes", "Method", "arguments", "bytearray", "memoryview", "arrays", "bytes", "cases", "readinto", "writable", "object", "bytearray", "required", "classes", "unicode", "calling", "method", "except", "additional", "calls", "close", "which", "ignored", "closed", "stream", "should", "raise", "ValueError", "IOBase", "subclasses", "support", "iterator", "protocol", "meaning", "IOBase", "object", "iterated", "yielding", "lines", "stream", "IOBase", "supports", "keyword", "statement", "example", "closed", "after", "suite", "statement", "complete", "write", "eggs!", "Change", "stream", "position", "Change", "stream", "position", "given", "offset", "offset", "interpreted", "relative", "position", "indicated", "whence", "Values", "whence", "start", "stream", "default", "offset", "should", "positive", "current", "stream", "position", "offset", "negative", "stream", "offset", "usually", "negative", "Return", "absolute", "position", "Return", "current", "stream", "position", "isnan", "Check", "float", "number", "Truncate", "bytes", "pointer", "unchanged", "defaults", "current", "position", "reported", "Returns", "Flush", "write", "buffers", "applicable", "implemented", "blocking", "streams", "Flush", "close", "object", "method", "effect", "already", "closed", "Return", "whether", "object", "supports", "random", "access", "False", "truncate", "raise", "IOError", "method", "Return", "whether", "object", "opened", "reading", "False", "raise", "IOError", "Return", "whether", "object", "opened", "writing", "False", "raise", "IOError", "Returns", "underlying", "descriptor", "exists", "IOError", "raised", "object", "descriptor", "Return", "whether", "interactive", "stream", "Return", "False", "determined", "return", "stream", "limit", "specified", "limit", "bytes", "terminator", "always", "binary", "files", "files", "newlines", "argument", "select", "terminator", "recognized", "Return", "lines", "stream", "specified", "control", "number", "lines", "lines", "total", "bytes", "characters", "lines", "exceeds", "class", "binary", "object", "default", "reading", "writing", "appending", "created", "doesn", "exist", "opened", "writing", "appending", "truncated", "opened", "writing", "allow", "simultaneous", "reading", "writing", "bytes", "bytes", "returned", "bytes", "makes", "system", "returned", "requested", "blocking", "returns", "available", "returns", "readall", "bytes", "returned", "bytes", "blocking", "returns", "immediately", "available", "available", "returns", "write", "Write", "array", "bytes", "return", "number", "written", "makes", "system", "written", "number", "bytes", "actually", "written", "returned", "blocking", "returns", "write", "would", "block", "fileno", "Return", "underlying", "descriptor", "integer", "offset", "whence", "position", "return", "position", "Argument", "offset", "count", "Optional", "argument", "whence", "defaults", "SEEK_SET", "offset", "start", "offset", "should", "other", "values", "SEEK_CUR", "relative", "current", "position", "positive", "negative", "SEEK_END", "relative", "usually", "negative", "although", "platforms", "allow", "seeking", "beyond", "objects", "seekable", "truncate", "Truncate", "bytes", "return", "truncated", "defaults", "current", "position", "returned", "current", "position", "changed", "value", "Current", "position", "raise", "OSError", "seekable", "files", "close", "Close", "closed", "cannot", "further", "operations", "close", "called", "without", "error", "isatty", "connected", "device", "readable", "opened", "writable", "opened", "write", "readable", "Returns", "object", "writable", "Returns", "object", "written", "seekable", "Returns", "object", "seeked", "flush", "nothing", "getvalue", "bytes", "Retrieve", "entire", "contents", "BytesIO", "object", "isatty", "False", "Always", "returns", "False", "since", "BytesIO", "objects", "connected", "device", "current", "position", "integer", "bytes", "returned", "string", "argument", "negative", "until", "reached", "Return", "empty", "string", "read1", "bytes", "returned", "string", "argument", "negative", "omitted", "until", "reached", "Return", "empty", "string", "readline", "string", "Retain", "newline", "negative", "argument", "limits", "maximum", "number", "bytes", "return", "incomplete", "returned", "Return", "empty", "string", "readlines", "strings", "readline", "repeatedly", "return", "lines", "optional", "argument", "given", "approximate", "bound", "total", "number", "bytes", "lines", "returned", "readinto", "bytes", "Returns", "number", "bytes", "object", "block", "truncate", "Truncate", "bytes", "defaults", "current", "position", "returned", "current", "position", "unchanged", "Returns", "whence", "Change", "stream", "position", "offset", "relative", "position", "indicated", "whence", "Start", "stream", "default", "should", "Current", "position", "negative", "stream", "usually", "negative", "Returns", "absolute", "position", "write", "bytes", "Write", "bytes", "Return", "number", "bytes", "written", "writelines", "sequence_of_strings", "Write", "strings", "newlines", "added", "sequence", "iterable", "object", "producing", "strings", "equivalent", "calling", "write", "string", "close", "Disable", "operations", "BytesIO", "buffer", "object", "Create", "buffered", "implementation", "using", "memory", "bytes", "buffer", "ready", "reading", "writing", "class", "buffered", "objects", "difference", "RawIOBase", "method", "supports", "omitting", "argument", "default", "implementation", "defers", "readinto", "addition", "readinto", "write", "raise", "BlockingIOError", "underlying", "stream", "blocking", "ready", "unlike", "their", "counterparts", "never", "return", "typical", "implementation", "should", "inherit", "RawIOBase", "implementation", "Disconnect", "buffer", "underlying", "stream", "return", "After", "stream", "detached", "buffer", "unusable", "state", "return", "bytes", "argument", "omitted", "negative", "reads", "returns", "until", "argument", "positive", "underlying", "stream", "interactive", "multiple", "reads", "issued", "satisfy", "count", "unless", "reached", "first", "interactive", "streams", "sockets", "pipes", "issued", "short", "result", "imply", "imminent", "Returns", "empty", "bytes", "object", "Returns", "underlying", "stream", "blocking", "available", "moment", "return", "bytes", "underlying", "stream", "short", "result", "imply", "imminent", "Returns", "empty", "bytes", "object", "Write", "given", "buffer", "stream", "Returns", "number", "bytes", "written", "which", "always", "Raises", "BlockingIOError", "buffer", "underlying", "stream", "cannot", "accept", "moment", "Returns", "independent", "iterator", "Create", "buffered", "reader", "using", "given", "readable", "object", "iterable", "tuple", "independent", "iterators", "buffer", "writeable", "sequential", "RawIO", "object", "constructor", "creates", "BufferedWriter", "given", "writeable", "stream", "buffer_size", "given", "defaults", "DEFAULT_BUFFER_SIZE", "max_buffer_size", "anymore", "buffered", "reader", "writer", "object", "together", "buffered", "reader", "object", "buffered", "writer", "object", "together", "sequential", "object", "write", "typically", "socket", "reader", "writer", "RawIOBase", "objects", "readable", "writeable", "respectively", "buffer_size", "omitted", "defaults", "DEFAULT_BUFFER_SIZE", "buffered", "interface", "random", "access", "streams", "constructor", "creates", "reader", "writer", "seekable", "stream", "given", "first", "argument", "buffer_size", "omitted", "defaults", "DEFAULT_BUFFER_SIZE", "max_buffer_size", "anymore", "module", "provides", "Python", "interfaces", "stream", "handling", "builtin", "function", "defined", "module", "hierarchy", "abstract", "class", "IOBase", "defines", "basic", "interface", "stream", "however", "there", "separation", "between", "reading", "writing", "streams", "implementations", "allowed", "raise", "IOError", "support", "given", "operation", "Extending", "IOBase", "RawIOBase", "which", "deals", "simply", "reading", "writing", "bytes", "stream", "FileIO", "subclasses", "RawIOBase", "provide", "interface", "files", "BufferedIOBase", "deals", "buffering", "stream", "RawIOBase", "subclasses", "BufferedWriter", "BufferedReader", "BufferedRWPair", "buffer", "streams", "readable", "writable", "respectively", "BufferedRandom", "provides", "buffered", "interface", "random", "access", "streams", "BytesIO", "simple", "stream", "memory", "bytes", "Another", "IOBase", "subclass", "TextIOBase", "deals", "encoding", "decoding", "streams", "TextIOWrapper", "which", "extends", "buffered", "interface", "buffered", "stream", "BufferedIOBase", "Finally", "StringIO", "memory", "stream", "Argument", "names", "specification", "arguments", "intended", "keyword", "arguments", "DEFAULT_BUFFER_SIZE", "containing", "default", "buffer", "module", "buffered", "classes", "blksize", "obtained", "possible", "return", "stream", "Raise", "IOError", "failure", "either", "string", "giving", "current", "working", "directory", "opened", "integer", "descriptor", "wrapped", "descriptor", "given", "closed", "returned", "object", "closed", "unless", "closefd", "False", "optional", "string", "specifies", "which", "opened", "defaults", "which", "means", "reading", "Other", "common", "values", "writing", "truncating", "already", "exists", "appending", "which", "systems", "means", "writes", "append", "regardless", "current", "position", "encoding", "specified", "encoding", "platform", "dependent", "reading", "writing", "bytes", "binary", "leave", "encoding", "unspecified", "available", "modes", "Character", "Meaning", "reading", "default", "writing", "truncating", "first", "writing", "appending", "exists", "binary", "default", "updating", "reading", "writing", "universal", "newline", "backwards", "compatibility", "unneeded", "default", "reading", "binary", "random", "access", "opens", "truncates", "bytes", "while", "opens", "without", "truncation", "Python", "distinguishes", "between", "files", "opened", "binary", "modes", "underlying", "operating", "system", "doesn", "Files", "opened", "binary", "appending", "argument", "return", "contents", "bytes", "objects", "without", "decoding", "default", "appended", "argument", "contents", "returned", "strings", "bytes", "having", "first", "decoded", "using", "platform", "dependent", "encoding", "using", "specified", "encoding", "given", "buffering", "optional", "integer", "buffering", "policy", "switch", "buffering", "allowed", "binary", "select", "buffering", "usable", "integer", "indicate", "fixed", "chunk", "buffer", "buffering", "argument", "given", "default", "buffering", "policy", "works", "follows", "Binary", "files", "buffered", "fixed", "chunks", "buffer", "chosen", "using", "heuristic", "trying", "determine", "underlying", "device", "block", "falling", "DEFAULT_BUFFER_SIZE", "systems", "buffer", "typically", "bytes", "Interactive", "files", "files", "which", "isatty", "returns", "buffering", "Other", "files", "policy", "described", "above", "binary", "files", "encoding", "encoding", "decode", "encode", "should", "default", "encoding", "platform", "dependent", "encoding", "supported", "Python", "passed", "codecs", "module", "supported", "encodings", "errors", "optional", "string", "specifies", "encoding", "errors", "handled", "argument", "should", "binary", "strict", "raise", "ValueError", "exception", "there", "encoding", "error", "default", "effect", "ignore", "ignore", "errors", "ignoring", "encoding", "errors", "documentation", "codecs", "register", "permitted", "encoding", "error", "strings", "newline", "controls", "universal", "newlines", "works", "applies", "works", "follows", "input", "newline", "universal", "newlines", "enabled", "Lines", "input", "these", "translated", "before", "being", "returned", "caller", "universal", "newline", "enabled", "endings", "returned", "caller", "untranslated", "other", "legal", "values", "input", "lines", "terminated", "given", "string", "ending", "returned", "caller", "untranslated", "output", "newline", "characters", "written", "translated", "system", "default", "separator", "linesep", "newline", "translation", "takes", "place", "newline", "other", "legal", "values", "characters", "written", "translated", "given", "string", "closefd", "False", "underlying", "descriptor", "closed", "given", "returns", "object", "whose", "depends", "through", "which", "standard", "operations", "reading", "writing", "performed", "returns", "TextIOWrapper", "binary", "returned", "class", "varies", "binary", "returns", "BufferedReader", "write", "binary", "append", "binary", "modes", "returns", "BufferedWriter", "write", "returns", "BufferedRandom", "possible", "string", "bytearray", "reading", "writing", "strings", "StringIO", "opened", "bytes", "BytesIO", "opened", "binary", "encode", "unicode", "errors", "string", "length", "consumed", "Return", "encoded", "string", "version", "unicode", "errors", "given", "different", "error", "handling", "scheme", "Default", "strict", "meaning", "encoding", "errors", "raise", "UnicodeEncodeError", "Other", "possible", "values", "ignore", "replace", "xmlcharrefreplace", "other", "registered", "codecs", "register_error", "handle", "UnicodeEncodeErrors", "decode", "string", "errors", "unicodeobject", "length", "consumed", "Decodes", "string", "using", "MultibyteCodec", "instance", "errors", "given", "different", "error", "handling", "scheme", "Default", "strict", "meaning", "encoding", "errors", "raise", "UnicodeDecodeError", "Other", "possible", "values", "ignore", "replace", "other", "registered", "codecs", "register_error", "handle", "UnicodeDecodeErrors", "disable", "Disable", "automatic", "garbage", "collection", "compressobj", "level", "Return", "compressor", "object", "Optional", "level", "compression", "level", "decompressobj", "wbits", "Return", "decompressor", "object", "Optional", "wbits", "indicates", "window", "buffer", "container", "format", "compress", "string", "level", "Returned", "compressed", "string", "Optional", "level", "compression", "level", "decompress", "string", "wbits", "bufsize", "Return", "decompressed", "string", "Optional", "wbits", "indicates", "window", "buffer", "container", "format", "Optional", "bufsize", "initial", "output", "buffer", "compress", "Return", "string", "containing", "compressed", "After", "calling", "function", "input", "still", "stored", "internal", "buffers", "later", "processing", "flush", "method", "clear", "these", "buffers", "decompress", "max_length", "Return", "string", "containing", "decompressed", "version", "After", "calling", "function", "input", "still", "stored", "internal", "buffers", "later", "processing", "flush", "method", "clear", "these", "buffers", "max_length", "parameter", "specified", "return", "value", "longer", "max_length", "Unconsumed", "input", "stored", "unconsumed_tail", "attribute", "flush", "Return", "string", "containing", "remaining", "compressed", "constants", "Z_SYNC_FLUSH", "Z_FULL_FLUSH", "Z_FINISH", "default", "value", "specified", "Z_FINISH", "Z_FINISH", "compressor", "object", "longer", "after", "calling", "flush", "method", "Otherwise", "still", "compressed", "Return", "decompression", "object", "flush", "length", "Return", "string", "containing", "remaining", "decompressed", "length", "given", "initial", "output", "buffer", "decompressor", "object", "longer", "after", "adler32", "string", "start", "Compute", "Adler", "checksum", "string", "optional", "starting", "value", "specified", "returned", "checksum", "signed", "integer", "crc32", "string", "start", "Compute", "checksum", "string", "optional", "starting", "value", "specified", "returned", "checksum", "signed", "integer", "functions", "module", "allow", "compression", "decompression", "using", "library", "which", "based", "adler32", "string", "start", "Compute", "Adler", "checksum", "compress", "string", "level", "Compress", "string", "compression", "level", "compressobj", "level", "Return", "compressor", "object", "crc32", "string", "start", "Compute", "checksum", "decompress", "string", "wbits", "bufsize", "Decompresses", "compressed", "string", "decompressobj", "wbits", "Return", "decompressor", "object", "wbits", "window", "buffer", "container", "format", "Compressor", "objects", "support", "compress", "flush", "methods", "decompressor", "objects", "support", "decompress", "flush", "__init__", "__init__", "__init__", "find_module", "fullname", "Search", "module", "specified", "fullname", "fullname", "fully", "qualified", "dotted", "module", "returns", "zipimporter", "instance", "itself", "module", "found", "optional", "argument", "ignored", "there", "compatibility", "importer", "protocol", "load_module", "fullname", "module", "module", "specified", "fullname", "fullname", "fully", "qualified", "dotted", "module", "returns", "imported", "module", "raises", "ZipImportError", "found", "get_data", "pathname", "string", "Return", "associated", "pathname", "Raise", "IOError", "found", "is_package", "fullname", "Return", "module", "specified", "fullname", "package", "Raise", "ZipImportError", "module", "couldn", "found", "get_code", "fullname", "object", "Return", "object", "specified", "module", "Raise", "ZipImportError", "module", "couldn", "found", "get_source", "fullname", "source", "string", "Return", "source", "specified", "module", "Raise", "ZipImportError", "module", "couldn", "found", "return", "archive", "contain", "module", "source", "get_filename", "fullname", "filename", "string", "Return", "filename", "specified", "module", "zipimporter", "archivepath", "zipimporter", "object", "Create", "zipimporter", "instance", "archivepath", "zipfile", "specific", "inside", "zipfile", "example", "myimport", "myimport", "mydirectory", "mydirectory", "valid", "directory", "inside", "archive", "ZipImportError", "raised", "archivepath", "doesn", "point", "valid", "archive", "archive", "attribute", "zipimporter", "objects", "contains", "zipfile", "targeted", "zipimport", "provides", "support", "importing", "Python", "modules", "archives", "module", "exports", "three", "objects", "zipimporter", "class", "constructor", "takes", "archive", "ZipImportError", "exception", "raised", "zipimporter", "objects", "subclass", "ImportError", "caught", "ImportError", "_zip_directory_cache", "mapping", "archive", "paths", "directory", "dicts", "zipimporter", "_files", "usually", "needed", "zipimport", "module", "explicitly", "builtin", "import", "mechanism", "items", "paths", "archives", "xxsubtype", "example", "module", "showing", "subtype", "builtin", "types", "test_descr", "standard", "suite", "requires", "order", "complete", "about", "examples", "intend", "Python", "suite", "recompile", "Python", "without", "Modules", "xxsubtype", "isatty", "always", "returns", "floating", "point", "number", "Return", "current", "seconds", "since", "Epoch", "Fractions", "second", "present", "system", "clock", "provides", "clock", "floating", "point", "number", "Return", "since", "start", "process", "since", "first", "clock", "precision", "system", "records", "sleep", "seconds", "Delay", "execution", "given", "number", "seconds", "argument", "floating", "point", "number", "subsecond", "precision", "gmtime", "seconds", "tm_year", "tm_mon", "tm_mday", "tm_hour", "tm_min", "tm_sec", "tm_wday", "tm_yday", "tm_isdst", "Convert", "seconds", "since", "Epoch", "tuple", "expressing", "seconds", "passed", "convert", "current", "instead", "localtime", "seconds", "tm_year", "tm_mon", "tm_mday", "tm_hour", "tm_min", "tm_sec", "tm_wday", "tm_yday", "tm_isdst", "Convert", "seconds", "since", "Epoch", "tuple", "expressing", "local", "seconds", "passed", "convert", "current", "instead", "strftime", "format", "tuple", "string", "Convert", "tuple", "string", "according", "format", "specification", "library", "reference", "manual", "formatting", "codes", "tuple", "present", "current", "returned", "localtime", "strptime", "string", "format", "struct_time", "Parse", "string", "tuple", "according", "format", "specification", "library", "reference", "manual", "formatting", "codes", "strftime", "asctime", "tuple", "string", "Convert", "tuple", "string", "tuple", "present", "current", "returned", "localtime", "characters", "string", "ctime", "seconds", "string", "Convert", "seconds", "since", "Epoch", "string", "local", "equivalent", "asctime", "localtime", "seconds", "tuple", "present", "current", "returned", "localtime", "mktime", "tuple", "floating", "point", "number", "Convert", "tuple", "local", "seconds", "since", "Epoch", "module", "provides", "various", "functions", "manipulate", "values", "There", "standard", "representations", "number", "seconds", "since", "Epoch", "integer", "floating", "point", "number", "represent", "fractions", "seconds", "Epoch", "system", "defined", "generally", "January", "actual", "value", "retrieved", "calling", "gmtime", "other", "representation", "tuple", "integers", "giving", "local", "tuple", "items", "digits", "month", "hours", "minutes", "seconds", "weekday", "Monday", "Julian", "Daylight", "Savings", "given", "regular", "given", "mktime", "should", "guess", "based", "Variables", "timezone", "difference", "seconds", "between", "local", "standard", "altzone", "difference", "seconds", "between", "local", "daylight", "whether", "local", "should", "reflect", "tzname", "tuple", "standard", "Functions", "return", "current", "seconds", "since", "Epoch", "float", "clock", "return", "since", "process", "start", "float", "sleep", "delay", "number", "seconds", "given", "float", "gmtime", "convert", "seconds", "since", "Epoch", "tuple", "localtime", "convert", "seconds", "since", "Epoch", "local", "tuple", "asctime", "convert", "tuple", "string", "ctime", "convert", "seconds", "string", "mktime", "convert", "local", "tuple", "seconds", "since", "Epoch", "strftime", "convert", "tuple", "string", "according", "format", "specification", "strptime", "parse", "string", "tuple", "according", "format", "specification", "tzset", "change", "local", "timezone", "acquire", "acquire_lock", "obsolete", "synonym", "Without", "argument", "blocks", "already", "locked", "thread", "waiting", "another", "thread", "release", "return", "acquired", "argument", "block", "argument", "return", "value", "reflects", "whether", "acquired", "blocking", "operation", "interruptible", "readline", "release", "release_lock", "obsolete", "synonym", "Release", "allowing", "another", "thread", "blocked", "waiting", "acquire", "locked", "state", "needn", "locked", "thread", "unlocks", "locked", "locked_lock", "obsolete", "synonym", "Return", "whether", "locked", "state", "reset", "Reset", "position", "beginning", "current", "position", "close", "explicitly", "release", "resources", "start_new_thread", "function", "kwargs", "start_new", "obsolete", "synonym", "Start", "thread", "return", "identifier", "thread", "function", "positional", "arguments", "tuple", "keyword", "arguments", "taken", "optional", "dictionary", "kwargs", "thread", "exits", "function", "returns", "return", "value", "ignored", "thread", "function", "raises", "unhandled", "exception", "stack", "trace", "printed", "unless", "exception", "SystemExit", "exit_thread", "obsolete", "synonym", "synonymous", "raise", "SystemExit", "cause", "current", "thread", "silently", "unless", "exception", "caught", "interrupt_main", "Raise", "KeyboardInterrupt", "thread", "subthread", "function", "interrupt", "thread", "allocate_lock", "object", "allocate", "obsolete", "synonym", "Create", "object", "LockType", "information", "about", "locks", "get_ident", "integer", "Return", "integer", "uniquely", "identifies", "current", "thread", "amongst", "other", "threads", "exist", "simultaneously", "identify", "thread", "resources", "though", "platforms", "threads", "identities", "appear", "allocated", "consecutive", "numbers", "starting", "behavior", "should", "relied", "number", "should", "purely", "magic", "cookie", "thread", "identity", "reused", "another", "thread", "after", "exits", "_count", "integer", "Return", "number", "currently", "running", "Python", "threads", "excluding", "thread", "returned", "number", "comprises", "threads", "created", "through", "start_new_thread", "threading", "Thread", "finished", "function", "meant", "internal", "specialized", "purposes", "applications", "threading", "enumerate", "should", "instead", "stack_size", "Return", "thread", "stack", "creating", "threads", "optional", "argument", "specifies", "stack", "bytes", "subsequently", "created", "threads", "platform", "configured", "default", "positive", "integer", "value", "least", "changing", "thread", "stack", "unsupported", "ThreadError", "exception", "raised", "specified", "invalid", "ValueError", "exception", "raised", "stack", "unmodified", "bytes", "currently", "minimum", "supported", "stack", "value", "guarantee", "sufficient", "stack", "space", "interpreter", "itself", "platforms", "particular", "restrictions", "values", "stack", "requiring", "minimum", "stack", "larger", "requiring", "allocation", "multiples", "system", "memory", "platform", "documentation", "should", "referred", "information", "pages", "common", "using", "multiples", "stack", "suggested", "approach", "absence", "specific", "information", "module", "provides", "primitive", "operations", "write", "multi", "threaded", "programs", "threading", "module", "provides", "convenient", "interface", "object", "synchronization", "primitive", "create", "PyThread_allocate_lock", "function", "Methods", "acquire", "possibly", "blocking", "until", "obtained", "release", "unlock", "locked", "whether", "currently", "locked", "owned", "thread", "locked", "another", "thread", "unlock", "thread", "attempting", "already", "locked", "block", "until", "another", "thread", "unlocks", "Deadlocks", "ensue", "Simple", "output", "strings", "Common", "string", "manipulations", "optimized", "speed", "Always", "import", "string", "rather", "referencing", "module", "directly", "split", "maxsplit", "strings", "splitfields", "maxsplit", "strings", "Return", "words", "string", "using", "delimiter", "string", "maxsplit", "nonzero", "splits", "maxsplit", "words", "specified", "whitespace", "string", "separator", "Maxsplit", "defaults", "split", "splitfields", "synonymous", "string", "joinfields", "string", "Return", "string", "composed", "words", "intervening", "occurrences", "defaults", "single", "space", "joinfields", "synonymous", "start", "Return", "lowest", "index", "where", "substring", "found", "contained", "within", "start", "Optional", "arguments", "start", "interpreted", "slice", "notation", "Return", "failure", "rfind", "start", "Return", "highest", "index", "where", "substring", "found", "contained", "within", "start", "Optional", "arguments", "start", "interpreted", "slice", "notation", "Return", "failure", "strip", "string", "Return", "string", "leading", "trailing", "whitespace", "removed", "lstrip", "string", "Return", "string", "leading", "whitespace", "removed", "rstrip", "string", "Return", "string", "trailing", "whitespace", "removed", "lower", "string", "Return", "string", "converted", "lowercase", "upper", "string", "Return", "string", "converted", "uppercase", "capitalize", "string", "Return", "string", "first", "character", "capitalized", "expandtabs", "string", "tabsize", "string", "Expand", "string", "replace", "spaces", "depending", "current", "column", "given", "default", "column", "number", "reset", "after", "newline", "occurring", "string", "doesn", "understand", "other", "printing", "characters", "count", "start", "Return", "number", "occurrences", "substring", "string", "start", "Optional", "arguments", "start", "interpreted", "slice", "notation", "swapcase", "string", "Return", "string", "upper", "characters", "converted", "lowercase", "versa", "Return", "integer", "represented", "string", "given", "which", "defaults", "string", "consist", "digits", "possibly", "preceded", "chosen", "leading", "characters", "octal", "hexadecimal", "preceding", "accepted", "Return", "integer", "represented", "string", "given", "which", "defaults", "string", "consist", "digits", "possibly", "preceded", "chosen", "leading", "characters", "octal", "hexadecimal", "preceding", "accepted", "trailing", "accepted", "unless", "float", "Return", "floating", "point", "number", "represented", "string", "maketrans", "string", "Return", "translation", "table", "string", "bytes", "suitable", "string", "translate", "strings", "length", "translate", "table", "deletechars", "string", "Return", "string", "where", "characters", "occurring", "optional", "argument", "deletechars", "removed", "remaining", "characters", "mapped", "through", "given", "translation", "table", "which", "string", "length", "replace", "maxsplit", "string", "Return", "string", "occurrences", "substring", "replaced", "optional", "argument", "maxsplit", "given", "first", "maxsplit", "occurrences", "replaced", "default_int_handler", "default", "handler", "SIGINT", "installed", "Python", "raises", "KeyboardInterrupt", "signal", "action", "action", "action", "given", "signal", "action", "SIG_DFL", "SIG_IGN", "callable", "Python", "object", "previous", "action", "returned", "getsignal", "possible", "return", "values", "IMPORTANT", "NOTICE", "signal", "handler", "function", "called", "arguments", "first", "signal", "number", "second", "interrupted", "stack", "frame", "getsignal", "action", "Return", "current", "action", "given", "signal", "return", "value", "SIG_IGN", "signal", "being", "ignored", "SIG_DFL", "default", "action", "signal", "effect", "unknown", "handler", "effect", "anything", "callable", "Python", "object", "handler", "set_wakeup_fd", "written", "signal", "comes", "library", "wakeup", "select", "previous", "returned", "blocking", "module", "provides", "mechanisms", "signal", "handlers", "Python", "Functions", "alarm", "cause", "SIGALRM", "after", "specified", "setitimer", "cause", "signal", "described", "below", "after", "specified", "float", "timer", "restart", "getitimer", "current", "value", "timer", "signal", "action", "given", "signal", "getsignal", "signal", "action", "given", "signal", "pause", "until", "signal", "arrives", "default_int_handler", "default", "SIGINT", "handler", "signal", "constants", "SIG_DFL", "refer", "system", "default", "handler", "SIG_IGN", "ignore", "signal", "number", "defined", "signals", "SIGINT", "SIGTERM", "signal", "numbers", "itimer", "constants", "ITIMER_REAL", "decrements", "delivers", "SIGALRM", "expiration", "ITIMER_VIRTUAL", "decrements", "process", "executing", "delivers", "SIGVTALRM", "expiration", "ITIMER_PROF", "decrements", "process", "executing", "system", "executing", "behalf", "process", "Coupled", "ITIMER_VIRTUAL", "timer", "usually", "profile", "spent", "application", "kernel", "space", "SIGPROF", "delivered", "expiration", "IMPORTANT", "NOTICE", "signal", "handler", "function", "called", "arguments", "first", "signal", "number", "second", "interrupted", "stack", "frame", "Return", "hashing", "object", "Update", "hashing", "object", "state", "provided", "string", "Return", "hashing", "object", "optional", "string", "argument", "provided", "present", "string", "automatically", "hashed", "Objects", "pickle", "objects", "Return", "object", "optionally", "initialized", "string", "Return", "object", "optionally", "initialized", "string", "Objects", "unpickle", "Return", "Return", "object", "optionally", "initialized", "string", "Return", "object", "optionally", "initialized", "string", "module", "provides", "access", "operating", "system", "functionality", "standardized", "Standard", "POSIX", "standard", "thinly", "disguised", "interface", "Refer", "library", "manual", "corresponding", "manual", "entries", "information", "calls", "stat_result", "Result", "lstat", "object", "accessed", "either", "tuple", "nlink", "atime", "mtime", "ctime", "attributes", "st_mode", "st_ino", "st_dev", "st_nlink", "st_uid", "Posix", "windows", "platform", "supports", "st_blksize", "st_blocks", "st_rdev", "st_flags", "available", "attributes", "information", "statvfs_result", "Result", "statvfs", "fstatvfs", "object", "accessed", "either", "tuple", "bsize", "frsize", "blocks", "bfree", "bavail", "files", "ffree", "favail", "namemax", "attributes", "f_bsize", "f_frsize", "f_blocks", "f_bfree", "statvfs", "information", "stat_float_times", "newval", "oldval", "Determine", "whether", "represents", "stamps", "float", "objects", "newval", "future", "calls", "return", "floats", "False", "future", "calls", "return", "newval", "omitted", "return", "current", "setting", "asinh", "Return", "inverse", "hyperbolic", "access", "granted", "False", "otherwise", "access", "operations", "effective", "therefore", "routine", "environment", "invoking", "specified", "access", "argument", "existence", "inclusive", "chdir", "Change", "current", "working", "directory", "specified", "fsync", "fildes", "force", "write", "filedescriptor", "getcwd", "Return", "string", "representing", "current", "working", "directory", "getcwdu", "Return", "unicode", "string", "representing", "current", "working", "directory", "listdir", "list_of_strings", "Return", "containing", "names", "entries", "directory", "directory", "arbitrary", "order", "include", "special", "entries", "present", "directory", "mkdir", "Create", "directory", "rename", "Rename", "directory", "result", "Perform", "system", "given", "system", "command", "exit_status", "Execute", "command", "string", "subshell", "umask", "new_mask", "old_mask", "current", "numeric", "umask", "return", "previous", "umask", "utime", "atime", "mtime", "utime", "access", "modified", "given", "values", "second", "access", "modified", "times", "current", "_exit", "status", "system", "specified", "status", "without", "normal", "processing", "execv", "Execute", "executable", "arguments", "replacing", "current", "process", "executable", "tuple", "strings", "execve", "Execute", "arguments", "environment", "replacing", "current", "process", "executable", "tuple", "arguments", "dictionary", "strings", "mapping", "strings", "spawnv", "Execute", "program", "process", "process", "creation", "executable", "tuple", "strings", "spawnve", "Execute", "program", "process", "process", "creation", "executable", "tuple", "arguments", "dictionary", "strings", "mapping", "strings", "getpid", "Return", "current", "process", "process", "signal", "Return", "pathname", "refers", "existing", "directory", "popen", "command", "bufsize", "command", "returning", "object", "waitpid", "options", "status", "completion", "given", "process", "options", "ignored", "Windows", "lstat", "result", "follow", "symbolic", "links", "times", "utime", "stime", "cutime", "cstime", "elapsed_time", "Return", "tuple", "floating", "point", "numbers", "indicating", "process", "times", "Return", "hyperbolic", "cosine", "filename", "level", "close", "Close", "descriptor", "level", "closerange", "fd_low", "fd_high", "Closes", "descriptors", "fd_low", "fd_high", "ignoring", "errors", "lseek", "newpos", "current", "position", "descriptor", "Return", "cursor", "position", "bytes", "starting", "beginning", "buffersize", "string", "descriptor", "Return", "exponential", "value", "write", "string", "byteswritten", "Write", "string", "descriptor", "fstat", "result", "descriptor", "fdopen", "bufsize", "file_object", "Return", "object", "connected", "descriptor", "isatty", "Return", "descriptor", "descriptor", "connected", "slave", "terminal", "read_end", "write_end", "Create", "Return", "hyperbolic", "strerror", "string", "Translate", "error", "message", "string", "tempnam", "prefix", "string", "Return", "unique", "temporary", "directory", "prefix", "specified", "strings", "omitted", "needed", "tmpfile", "object", "Create", "temporary", "directory", "entries", "tmpnam", "string", "Return", "unique", "temporary", "abort", "return!", "Abort", "interpreter", "immediately", "dumps", "otherwise", "fails", "hardest", "possible", "hosting", "operating", "system", "startfile", "filepath", "operation", "Start", "associated", "application", "operation", "specified", "double", "clicking", "Explorer", "giving", "argument", "start", "command", "opened", "whatever", "application", "extension", "associated", "another", "operation", "given", "specifies", "should", "typical", "operation", "print", "startfile", "returns", "associated", "application", "launched", "There", "option", "application", "close", "retrieve", "application", "status", "filepath", "relative", "current", "directory", "absolute", "first", "character", "slash", "underlying", "Win32", "ShellExecute", "function", "doesn", "Return", "tangent", "urandom", "Return", "random", "bytes", "suitable", "cryptographic", "Copyright", "Virginia", "Polytechnic", "Institute", "State", "University", "Blacksburg", "Virginia", "Drake", "Reston", "Virginia", "Portions", "copyright", "Stichting", "Mathematisch", "Centrum", "Amsterdam", "Netherlands", "ascii", "Base64", "Operator", "interface", "module", "exports", "functions", "implemented", "corresponding", "intrinsic", "operators", "Python", "example", "operator", "equivalent", "expression", "function", "names", "those", "special", "methods", "variants", "without", "leading", "trailing", "provided", "convenience", "compare_digest", "Return", "function", "approach", "designed", "prevent", "timing", "analysis", "making", "appropriate", "cryptography", "either", "ASCII", "supports", "buffer", "protocol", "bytes", "different", "lengths", "error", "occurs", "timing", "attack", "could", "theoretically", "reveal", "information", "about", "types", "lengths", "their", "values", "itemgetter", "itemgetter", "object", "Return", "callable", "object", "fetches", "given", "operand", "After", "itemgetter", "returns", "After", "itemgetter", "returns", "Binhex", "binary", "Encode", "attrgetter", "attrgetter", "object", "Return", "callable", "object", "fetches", "given", "attribute", "operand", "After", "attrgetter", "returns", "After", "attrgetter", "returns", "After", "attrgetter", "first", "returns", "first", "oldcrc", "newcrc", "Compute", "incrementally", "methodcaller", "methodcaller", "object", "Return", "callable", "object", "calls", "given", "method", "operand", "After", "methodcaller", "returns", "After", "methodcaller", "returns", "Decode", "string", "encoded", "Windows", "fileno", "length", "tagname", "access", "offset", "length", "bytes", "specified", "handle", "fileno", "returns", "object", "length", "larger", "current", "extended", "contain", "length", "bytes", "length", "maximum", "length", "current", "except", "empty", "Windows", "raises", "exception", "cannot", "create", "empty", "mapping", "Windows", "fileno", "length", "flags", "access", "offset", "length", "bytes", "specified", "descriptor", "fileno", "returns", "object", "length", "maximum", "length", "current", "called", "flags", "specifies", "nature", "mapping", "MAP_PRIVATE", "creates", "private", "write", "mapping", "changes", "contents", "object", "private", "process", "MAP_SHARED", "creates", "mapping", "shared", "other", "processes", "mapping", "areas", "default", "value", "MAP_SHARED", "anonymous", "memory", "fileno", "versions", "update", "Update", "object", "string", "Repeated", "calls", "equivalent", "single", "concatenation", "arguments", "digest", "string", "Return", "digest", "strings", "passed", "update", "method", "string", "which", "contain", "ASCII", "characters", "including", "bytes", "hexdigest", "string", "digest", "returns", "digest", "string", "hexadecimal", "digits", "object", "Return", "clone", "object", "module", "implements", "interface", "message", "digest", "algorithm", "Internet", "quite", "straightforward", "create", "object", "object", "arbitrary", "strings", "using", "update", "method", "point", "digest", "strong", "checksum", "fingerprint", "concatenation", "strings", "using", "digest", "method", "Functions", "return", "object", "initialized", "provided", "DEPRECATED", "compatibility", "Special", "Objects", "MD5Type", "object", "objects", "represents", "object", "calculate", "checksum", "string", "information", "Methods", "update", "updates", "current", "digest", "additional", "string", "digest", "return", "current", "digest", "value", "hexdigest", "return", "current", "digest", "string", "hexadecimal", "digits", "return", "current", "object", "Conversion", "between", "binary", "ASCII", "object", "Return", "object", "present", "method", "update", "acosh", "Return", "inverse", "hyperbolic", "cosine", "atan2", "Return", "tangent", "measured", "radians", "Unlike", "signs", "considered", "atanh", "Return", "inverse", "hyperbolic", "tangent", "Return", "ceiling", "float", "smallest", "integral", "value", "copysign", "Return", "Return", "cosine", "measured", "radians", "Error", "function", "expm1", "Return", "function", "avoids", "precision", "involved", "direct", "evaluation", "small", "floor", "Return", "floor", "float", "largest", "integral", "value", "gamma", "Gamma", "function", "lgamma", "Natural", "logarithm", "absolute", "value", "Gamma", "function", "log1p", "Return", "natural", "logarithm", "result", "computed", "which", "accurate", "Return", "square", "Return", "tangent", "measured", "radians", "Return", "hyperbolic", "tangent", "iterable", "Return", "accurate", "floating", "point", "values", "iterable", "Assumes", "floating", "point", "arithmetic", "factorial", "Integral", "Raise", "ValueError", "negative", "integral", "trunc", "Integral", "Truncates", "nearest", "Integral", "toward", "__trunc__", "magic", "method", "frexp", "Return", "mantissa", "exponent", "float", "ldexp", "Return", "array", "Return", "array", "Return", "fractional", "integer", "parts", "results", "carry", "floats", "Return", "logarithm", "given", "specified", "returns", "natural", "logarithm", "log10", "Return", "logarithm", "Return", "according", "platform", "differ", "hypot", "Return", "Euclidean", "distance", "Return", "power", "degrees", "Convert", "angle", "radians", "degrees", "radians", "Convert", "angle", "degrees", "radians", "isinf", "Check", "float", "infinite", "positive", "negative", "module", "always", "available", "provides", "access", "mathematical", "functions", "defined", "standard", "groupby", "iterable", "keyfunc", "create", "iterator", "which", "returns", "iterator", "grouped", "value", "value", "count", "Return", "number", "occurrences", "array", "container", "common", "multiple", "objects", "Iterator", "wrapped", "copyable", "remove", "Remove", "first", "occurrence", "array", "fromlist", "Append", "items", "array", "cycle", "iterable", "cycle", "object", "Return", "elements", "iterable", "until", "exhausted", "repeat", "sequence", "indefinitely", "__sizeof__", "array", "memory", "bytes", "dropwhile", "predicate", "iterable", "dropwhile", "object", "items", "iterable", "while", "predicate", "Afterwards", "return", "every", "element", "until", "iterable", "exhausted", "takewhile", "predicate", "iterable", "takewhile", "object", "Return", "successive", "entries", "iterable", "predicate", "evaluates", "entry", "islice", "iterable", "start", "islice", "object", "Return", "iterator", "whose", "method", "returns", "selected", "values", "iterable", "start", "specified", "preceding", "elements", "otherwise", "start", "defaults", "defaults", "specified", "another", "value", "determines", "values", "skipped", "between", "successive", "calls", "Works", "slice", "returns", "iterator", "starmap", "function", "sequence", "starmap", "object", "Return", "iterator", "whose", "values", "returned", "function", "evaluated", "argument", "tuple", "taken", "given", "sequence", "iterables", "object", "iterator", "computes", "function", "using", "arguments", "iterables", "except", "returns", "iterator", "instead", "stops", "shortest", "iterable", "exhausted", "instead", "filling", "shorter", "iterables", "chain", "iterables", "chain", "object", "Return", "chain", "object", "whose", "method", "returns", "elements", "first", "iterable", "until", "exhausted", "elements", "iterable", "until", "iterables", "exhausted", "chain", "from_iterable", "iterable", "chain", "object", "Alternate", "chain", "constructor", "taking", "single", "iterable", "argument", "evaluates", "lazily", "product", "iterables", "product", "object", "Cartesian", "product", "input", "iterables", "Equivalent", "nested", "loops", "example", "product", "returns", "leftmost", "iterators", "outermost", "output", "tuples", "cycle", "manner", "similar", "odometer", "rightmost", "element", "changing", "every", "iteration", "compute", "product", "iterable", "itself", "specify", "number", "repetitions", "optional", "repeat", "keyword", "argument", "example", "product", "repeat", "means", "product", "product", "range", "product", "Clear", "internal", "cache", "combinations", "iterable", "combinations", "object", "Return", "successive", "length", "combinations", "elements", "iterable", "combinations", "range", "combinations_with_replacement", "iterable", "combinations_with_replacement", "object", "Return", "successive", "length", "combinations", "elements", "iterable", "allowing", "individual", "elements", "successive", "repeats", "combinations_with_replacement", "permutations", "iterable", "permutations", "object", "Return", "successive", "length", "permutations", "elements", "iterable", "permutations", "range", "compress", "selectors", "iterator", "selected", "Return", "elements", "corresponding", "selector", "elements", "Forms", "shorter", "iterator", "selected", "elements", "using", "selectors", "choose", "elements", "Compiled", "regular", "expression", "objects", "ifilter", "function", "sequence", "ifilter", "object", "Return", "those", "items", "sequence", "which", "function", "function", "return", "items", "ifilterfalse", "function", "sequence", "ifilterfalse", "object", "Return", "those", "items", "sequence", "which", "function", "false", "function", "return", "items", "false", "Return", "state", "information", "pickling", "disable", "collecting", "profiling", "information", "count", "start", "count", "object", "Return", "count", "object", "whose", "method", "returns", "consecutive", "values", "Equivalent", "count", "firstval", "firstval", "while", "yield", "clear", "Clear", "profiling", "information", "collected", "iter1", "iter2", "object", "Return", "object", "whose", "method", "returns", "tuple", "where", "element", "comes", "iterable", "argument", "method", "continues", "until", "shortest", "iterable", "argument", "sequence", "exhausted", "raises", "StopIteration", "Works", "function", "consumes", "memory", "returning", "iterator", "instead", "Private", "method", "returning", "estimate", "Support", "POSIX", "locales", "repeat", "object", "times", "create", "iterator", "which", "returns", "object", "specified", "number", "times", "specified", "returns", "object", "endlessly", "izip_longest", "iter1", "iter2", "fillvalue", "izip_longest", "object", "Return", "izip_longest", "object", "whose", "method", "returns", "tuple", "where", "element", "comes", "iterable", "argument", "method", "continues", "until", "longest", "iterable", "argument", "sequence", "exhausted", "raises", "StopIteration", "shorter", "iterables", "exhausted", "fillvalue", "substituted", "their", "place", "fillvalue", "defaults", "specified", "keyword", "argument", "scanner", "object", "Functional", "tools", "creating", "using", "iterators", "Infinite", "iterators", "count", "cycle", "plast", "repeat", "endlessly", "times", "Iterators", "terminating", "shortest", "input", "sequence", "chain", "plast", "compress", "selectors", "dropwhile", "starting", "fails", "groupby", "iterable", "keyfunc", "iterators", "grouped", "value", "keyfunc", "ifilter", "elements", "where", "ifilterfalse", "elements", "where", "False", "islice", "start", "elements", "start", "starmap", "splits", "iterator", "takewhile", "until", "fails", "izip_longest", "Combinatoric", "generators", "product", "repeat", "cartesian", "product", "permutations", "combinations", "combinations_with_replacement", "enable", "Enable", "automatic", "garbage", "collection", "isenabled", "status", "Returns", "automatic", "garbage", "collection", "enabled", "collect", "generation", "arguments", "collection", "optional", "argument", "integer", "specifying", "which", "generation", "collect", "ValueError", "raised", "generation", "number", "invalid", "number", "unreachable", "objects", "returned", "set_debug", "flags", "garbage", "collection", "debugging", "flags", "Debugging", "information", "written", "stderr", "flags", "integer", "following", "turned", "DEBUG_STATS", "Print", "statistics", "during", "collection", "DEBUG_COLLECTABLE", "Print", "collectable", "objects", "found", "DEBUG_UNCOLLECTABLE", "Print", "unreachable", "uncollectable", "objects", "found", "DEBUG_INSTANCES", "Print", "instance", "objects", "DEBUG_OBJECTS", "Print", "objects", "other", "instances", "DEBUG_SAVEALL", "objects", "garbage", "rather", "freeing", "DEBUG_LEAK", "Debug", "leaking", "programs", "everything", "STATS", "get_debug", "flags", "garbage", "collection", "debugging", "flags", "set_threshold", "threshold0", "threshold1", "threshold2", "collection", "thresholds", "Setting", "threshold0", "disables", "collection", "get_threshold", "threshold0", "threshold1", "threshold2", "Return", "current", "collection", "thresholds", "get_count", "count0", "count1", "count2", "Return", "current", "collection", "counts", "get_referrers", "Return", "objects", "directly", "refer", "_iterencode", "_current_indent_level", "iterable", "get_referents", "Return", "objects", "directly", "referred", "get_objects", "Return", "objects", "tracked", "collector", "excluding", "returned", "is_tracked", "Returns", "object", "tracked", "garbage", "collector", "Simple", "atomic", "objects", "return", "false", "module", "provides", "access", "garbage", "collector", "reference", "cycles", "enable", "Enable", "automatic", "garbage", "collection", "disable", "Disable", "automatic", "garbage", "collection", "isenabled", "Returns", "automatic", "collection", "enabled", "collect", "collection", "right", "get_count", "Return", "current", "collection", "counts", "set_debug", "debugging", "flags", "get_debug", "debugging", "flags", "set_threshold", "collection", "thresholds", "get_threshold", "Return", "current", "collection", "thresholds", "get_objects", "Return", "objects", "tracked", "collector", "is_tracked", "Returns", "given", "object", "tracked", "get_referrers", "Return", "objects", "refer", "object", "get_referents", "Return", "objects", "object", "refers", "module", "provides", "functions", "builtins", "Python", "conflict", "builtins", "already", "exist", "Python", "Functions", "ascii", "Returns", "canonical", "string", "representation", "object", "filter", "iterable", "Returns", "iterator", "yielding", "those", "items", "iterable", "which", "Returns", "hexadecimal", "representation", "integer", "iterables", "Returns", "iterator", "computes", "function", "using", "arguments", "iterables", "Returns", "octal", "representation", "integer", "iter1", "iter2", "Returns", "object", "whose", "method", "returns", "tuple", "where", "element", "comes", "iterable", "argument", "typical", "usage", "module", "replace", "existing", "builtins", "module", "namespace", "future_builtins", "import", "ascii", "filter", "number", "string", "Return", "hexadecimal", "representation", "integer", "integer", "addinfo", "value", "Insert", "ADD_INFO", "record", "number", "string", "Return", "octal", "representation", "integer", "integer", "ascii", "object", "string", "Return", "Python", "result", "contain", "printable", "characters", "unescaped", "while", "ascii", "result", "characters", "backslash", "escaped", "module", "makes", "available", "standard", "errno", "system", "symbols", "value", "symbol", "corresponding", "integer", "value", "systems", "errno", "ENOENT", "equals", "integer", "dictionary", "errno", "errorcode", "numeric", "codes", "symbol", "names", "errno", "errorcode", "could", "string", "ENOENT", "Symbols", "relevant", "underlying", "system", "defined", "error", "codes", "error", "messages", "function", "strerror", "strerror", "could", "return", "directory", "Difference", "between", "datetime", "values", "Transform", "place", "Tools", "operate", "functions", "month", "object", "Abstract", "class", "objects", "Remove", "return", "rightmost", "element", "minute", "second", "microsecond", "tzinfo", "object", "arguments", "optional", "tzinfo", "instance", "tzinfo", "subclass", "remaining", "arguments", "longs", "datetime", "month", "minute", "second", "microsecond", "tzinfo", "month", "arguments", "required", "tzinfo", "instance", "tzinfo", "subclass", "remaining", "arguments", "longs", "simple", "partial", "StringIO", "replacement", "module", "provides", "simple", "useful", "replacement", "StringIO", "module", "written", "provide", "generality", "StringIO", "provides", "enough", "applications", "especially", "useful", "conjunction", "pickle", "module", "Usage", "cStringIO", "import", "StringIO", "an_output_stream", "StringIO", "an_output_stream", "write", "some_stuff", "value", "an_output_stream", "getvalue", "an_input_stream", "StringIO", "a_string", "an_input_stream", "readline", "an_input_stream", "an_input_stream", "start", "an_input_stream", "someone", "wants", "provide", "complete", "implementation", "cStringIO", "flush", "nothing", "getvalue", "use_pos", "string", "value", "use_pos", "specified", "value", "string", "returned", "include", "current", "position", "readlines", "lines", "truncate", "truncate", "current", "position", "position", "current", "position", "position", "absolute", "relative", "relative", "write", "Write", "string", "writing", "resets", "buffer", "writelines", "sequence_of_strings", "Write", "strings", "newlines", "added", "sequence", "iterable", "object", "producing", "strings", "equivalent", "calling", "write", "string", "Simple", "treating", "strings", "input", "streams", "StringIO", "Return", "StringIO", "stream", "reading", "writing", "implementation", "optimization", "Python", "pickle", "module", "Return", "cosine", "acosh", "Return", "inverse", "hyperbolic", "cosine", "Return", "tangent", "atanh", "Return", "inverse", "hyperbolic", "tangent", "Return", "cosine", "log10", "Return", "logarithm", "Return", "Return", "square", "Return", "hyperbolic", "tangent", "logarithm", "given", "specified", "returns", "natural", "logarithm", "phase", "float", "Return", "argument", "known", "phase", "angle", "complex", "polar", "float", "float", "Convert", "complex", "rectangular", "coordinates", "polar", "coordinates", "distance", "phase", "angle", "complex", "Convert", "polar", "coordinates", "rectangular", "coordinates", "isnan", "Checks", "imaginary", "number", "isinf", "Checks", "imaginary", "infinite", "module", "always", "available", "provides", "access", "mathematical", "functions", "complex", "numbers", "0123456", "012345689", "ABCDEFGHIJKLMNPQRSTUVXYZ", "abcdefhijklmpqr", "456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", "RwbVr", "ftGd$T", "uJTZ7j", "ascii", "Decode", "uuencoded", "ascii", "Uuencode", "ascii", "Decode", "base64", "ascii", "Decode", "coding", "Decode", "hexbin", "coded", "string", "oldcrc", "newcrc", "Compute", "incrementally", "Qkkbal", "b2a_hex", "Hexadecimal", "representation", "binary", "function", "available", "hexlify", "a2b_hex", "hexstr", "Binary", "hexadecimal", "representation", "hexstr", "contain", "number", "digits", "upper", "lower", "function", "available", "unhexlify", "b2a_qp", "quotetabs", "istext", "header", "Encode", "string", "using", "quoted", "printable", "encoding", "encoding", "istext", "newlines", "encoded", "white", "space", "lines", "istext", "encoded", "quotetabs", "space", "encoded", "index", "Return", "index", "first", "occurrence", "array", "Return", "element", "delete", "array", "defaults", "extend", "array", "iterable", "Append", "items", "array", "insert", "Insert", "array", "before", "position", "buffer_info", "address", "length", "Return", "tuple", "address", "length", "giving", "current", "memory", "address", "length", "items", "buffer", "array", "contents", "length", "should", "multiplied", "itemsize", "attribute", "calculate", "buffer", "length", "bytes", "append", "Append", "value", "array", "byteswap", "Byteswap", "items", "array", "items", "array", "bytes", "RuntimeError", "raised", "reverse", "Reverse", "order", "items", "array", "fromfile", "objects", "object", "append", "array", "called", "tofile", "Write", "items", "machine", "values", "object", "called", "write", "tolist", "Convert", "array", "ordinary", "items", "fromstring", "string", "Appends", "items", "string", "interpreting", "array", "machine", "values", "using", "fromfile", "method", "tostring", "string", "Convert", "array", "array", "machine", "values", "return", "string", "representation", "fromunicode", "Extends", "array", "unicode", "string", "array", "array", "otherwise", "ValueError", "raised", "array", "fromstring", "decode", "append", "Unicode", "array", "other", "tounicode", "unicode", "Convert", "array", "unicode", "string", "array", "array", "otherwise", "ValueError", "raised", "array", "tostring", "decode", "obtain", "unicode", "string", "array", "other", "Return", "state", "information", "pickling", "module", "defines", "object", "which", "efficiently", "represent", "array", "basic", "values", "characters", "integers", "floating", "point", "numbers", "Arrays", "sequence", "types", "behave", "lists", "except", "objects", "stored", "constrained", "specified", "object", "creation", "using", "which", "single", "character", "following", "codes", "defined", "Minimum", "bytes", "character", "signed", "integer", "unsigned", "integer", "Unicode", "character", "signed", "integer", "unsigned", "integer", "signed", "integer", "unsigned", "integer", "signed", "integer", "unsigned", "integer", "floating", "point", "floating", "point", "constructor", "array", "typecode", "initializer", "create", "array", "array", "typecode", "initializer", "array", "Return", "array", "whose", "items", "restricted", "typecode", "initialized", "optional", "initializer", "value", "which", "string", "iterable", "elements", "appropriate", "Arrays", "represent", "basic", "values", "behave", "lists", "except", "objects", "stored", "constrained", "Methods", "append", "append", "array", "buffer_info", "return", "information", "giving", "current", "memory", "byteswap", "byteswap", "items", "array", "count", "return", "number", "occurrences", "object", "extend", "extend", "array", "appending", "multiple", "elements", "iterable", "fromfile", "items", "object", "fromlist", "append", "items", "fromstring", "append", "items", "string", "index", "return", "index", "first", "occurrence", "object", "insert", "insert", "array", "provided", "position", "remove", "return", "default", "DEPRECATED", "fromfile", "remove", "remove", "first", "occurrence", "object", "reverse", "reverse", "order", "items", "array", "tofile", "write", "items", "object", "tolist", "return", "array", "converted", "ordinary", "tostring", "return", "array", "converted", "string", "write", "DEPRECATED", "tofile", "Attributes", "typecode", "typecode", "character", "create", "array", "itemsize", "length", "bytes", "array", "getweakrefcount", "object", "return", "number", "references", "object", "getweakrefs", "object", "return", "reference", "objects", "point", "object", "proxy", "object", "callback", "create", "proxy", "object", "weakly", "references", "object", "callback", "given", "called", "reference", "proxy", "object", "about", "finalized", "unpack", "Return", "tuple", "containing", "values", "unpacked", "according", "Struct", "format", "Requires", "struct", "__doc__", "format", "strings", "unpack_from", "buffer", "offset", "Return", "tuple", "containing", "values", "unpacked", "according", "Struct", "format", "Unlike", "unpack", "unpack_from", "unpack", "values", "object", "supporting", "buffer", "Requires", "buffer", "offset", "struct", "__doc__", "format", "strings", "string", "Return", "string", "containing", "values", "packed", "according", "Struct", "format", "struct", "__doc__", "format", "strings", "pack_into", "buffer", "offset", "values", "according", "Struct", "format", "write", "packed", "bytes", "writable", "buffer", "starting", "offset", "offset", "optional", "argument", "struct", "__doc__", "format", "strings", "__sizeof__", "memory", "bytes", "Compiled", "struct", "object", "Return", "struct", "described", "format", "string", "Return", "string", "containing", "values", "packed", "according", "values", "according", "Write", "packed", "bytes", "writable", "buffer", "starting", "offset", "Unpack", "string", "containing", "packed", "structure", "according", "Requires", "string", "calcsize", "Unpack", "buffer", "containing", "packed", "structure", "according", "starting", "offset", "Requires", "buffer", "offset", "calcsize", "Functions", "convert", "between", "Python", "values", "structs", "represented", "Python", "strings", "format", "strings", "explained", "below", "compact", "descriptions", "structs", "intended", "conversion", "Python", "values", "optional", "first", "format", "indicates", "order", "alignment", "native", "order", "alignment", "default", "native", "order", "alignment", "little", "endian", "alignment", "endian", "alignment", "remaining", "chars", "indicate", "types", "match", "exactly", "these", "preceded", "decimal", "repeat", "count", "signed", "unsigned", "_Bool", "requires", "available", "instead", "short", "unsigned", "short", "unsigned", "unsigned", "float", "double", "Special", "cases", "preceding", "decimal", "count", "indicates", "length", "string", "array", "pascal", "string", "count", "Special", "available", "native", "format", "integer", "enough", "pointer", "Special", "native", "unless", "platform", "unsigned", "Whitespace", "between", "formats", "ignored", "variable", "struct", "error", "exception", "raised", "errors", "Copyright", "Secret", "0123456789", "abcdefghijklmnopqrstuvwxyz", "abcdefghijklmnopqrstuvwxyz", "match", "string", "endpos", "match", "object", "Matches", "characters", "beginning", "string", "search", "string", "endpos", "match", "object", "through", "string", "looking", "match", "return", "corresponding", "match", "object", "instance", "Return", "position", "string", "matches", "split", "string", "maxsplit", "Split", "string", "occurrences", "pattern", "findall", "string", "endpos", "Return", "overlapping", "matches", "pattern", "string", "finditer", "string", "endpos", "iterator", "Return", "iterator", "overlapping", "matches", "pattern", "string", "match", "iterator", "returns", "match", "object", "string", "count", "newstring", "Return", "string", "obtained", "replacing", "leftmost", "overlapping", "occurrences", "pattern", "string", "replacement", "string", "count", "newstring", "number", "Return", "tuple", "new_string", "number_of_subs_made", "found", "replacing", "leftmost", "overlapping", "occurrences", "pattern", "replacement", "result", "match", "search", "Match", "objects", "always", "boolean", "value", "group", "group1", "tuple", "Return", "subgroup", "match", "indices", "names", "returns", "entire", "match", "start", "group", "Return", "index", "start", "substring", "matched", "group", "group", "Return", "index", "substring", "matched", "group", "group", "tuple", "MatchObject", "return", "tuple", "start", "group", "group", "groups", "default", "tuple", "Return", "tuple", "containing", "subgroups", "match", "default", "argument", "groups", "participate", "match", "groupdict", "default", "Return", "dictionary", "containing", "named", "subgroups", "match", "keyed", "subgroup", "default", "argument", "groups", "participate", "match", "expand", "template", "Return", "string", "obtained", "doing", "backslash", "substitution", "string", "template", "method", "Random", "create", "random", "number", "generator", "internal", "state", "Module", "implements", "Mersenne", "Twister", "random", "number", "generator", "getstats", "profiler_entry", "objects", "Return", "information", "collected", "profiler", "profiler_entry", "tuple", "object", "following", "attributes", "object", "callcount", "times", "called", "reccallcount", "times", "called", "recursively", "totaltime", "total", "entry", "inlinetime", "inline", "entry", "subcalls", "calls", "details", "calls", "calls", "attribute", "either", "profiler_subentry", "objects", "called", "object", "callcount", "times", "called", "reccallcount", "times", "called", "recursively", "totaltime", "total", "spent", "inlinetime", "inline", "further", "subcalls", "enable", "subcalls", "builtins", "Start", "collecting", "profiling", "information", "subcalls", "records", "function", "statistics", "separated", "according", "current", "caller", "builtins", "records", "spent", "built", "functions", "separately", "their", "caller", "Profiler", "custom_timer", "time_unit", "subcalls", "builtins", "Builds", "profiler", "object", "using", "specified", "timer", "function", "default", "timer", "built", "based", "custom", "timer", "functions", "returning", "integers", "time_unit", "float", "specifying", "scale", "integer", "seconds", "integer", "string", "string", "Activates", "queries", "locale", "processing", "Returns", "numeric", "monetary", "locale", "specific", "parameters", "string", "string", "Compares", "strings", "according", "locale", "string", "string", "Returns", "string", "behaves", "locale", "aware", "scanstring", "basestring", "encoding", "strict", "string", "string", "index", "character", "after", "quote", "started", "string", "Unescapes", "valid", "string", "escape", "sequences", "raises", "ValueError", "attempt", "decode", "invalid", "string", "strict", "False", "literal", "control", "characters", "allowed", "string", "Returns", "tuple", "decoded", "string", "index", "character", "after", "quote", "encode_basestring_ascii", "basestring", "Return", "ASCII", "representation", "Python", "string", "speedups", "close", "Close", "preventing", "additional", "records", "being", "fileno", "descriptor", "Returns", "descriptor", "Raises", "ValueError", "closed", "close", "profiler", "close", "files", "active", "runcall", "callable", "callable", "Profile", "specific", "function", "returning", "result", "runcode", "globals", "locals", "Execute", "object", "while", "collecting", "profile", "locals", "omitted", "globals", "locals", "start", "Install", "profiler", "current", "thread", "Remove", "profiler", "current", "thread", "performance", "profiler", "object", "Methods", "close", "profiler", "close", "files", "fileno", "Returns", "descriptor", "runcall", "single", "function", "profiling", "enabled", "runcode", "Execute", "object", "profiling", "enabled", "start", "Install", "profiler", "return", "Remove", "profiler", "Attributes", "closed", "profiler", "already", "closed", "frametimings", "ENTER", "events", "collect", "timing", "information", "lineevents", "events", "reported", "profiler", "linetimings", "events", "collect", "timing", "information", "logreader", "filename", "iterator", "Create", "reader", "timing", "information", "profiler", "logfilename", "lineevents", "linetimes", "profiler", "Create", "profiler", "object", "coverage", "logfilename", "profiler", "Returns", "profiler", "doesn", "collect", "timing", "information", "which", "useful", "building", "coverage", "analysis", "resolution", "performance", "counter", "ticks", "update", "frequency", "Return", "resolution", "timer", "provided", "QueryPerformanceCounter", "function", "first", "value", "smallest", "observed", "change", "second", "result", "QueryPerformanceFrequency", "heappush", "maintaining", "invariant", "smallest", "maintaining", "invariant", "heapreplace", "value", "return", "current", "smallest", "value", "efficient", "heappop", "followed", "heappush", "appropriate", "using", "fixed", "value", "returned", "larger", "item!", "constrains", "reasonable", "routine", "unless", "written", "conditional", "replacement", "heapreplace", "heappushpop", "value", "return", "smallest", "combined", "action", "efficiently", "heappush", "followed", "separate", "heappop", "largest", "elements", "dataset", "Equivalent", "sorted", "iterable", "reverse", "smallest", "elements", "dataset", "Equivalent", "sorted", "iterable", "queue", "algorithm", "priority", "queue", "Heaps", "arrays", "which", "counting", "elements", "comparison", "existing", "elements", "considered", "infinite", "interesting", "property", "always", "smallest", "element", "Usage", "creates", "empty", "heappush", "pushes", "heappop", "smallest", "smallest", "without", "popping", "heapify", "transforms", "place", "linear", "heapreplace", "returns", "smallest", "unchanged", "differs", "textbook", "algorithms", "follows", "based", "indexing", "makes", "relationship", "between", "index", "indexes", "children", "slightly", "obvious", "suitable", "since", "Python", "based", "indexing", "heappop", "method", "returns", "smallest", "largest", "These", "possible", "regular", "Python", "without", "surprises", "smallest", "maintains", "invariant!", "queues", "explanation", "Pinard", "Heaps", "arrays", "which", "counting", "elements", "comparison", "existing", "elements", "considered", "infinite", "interesting", "property", "always", "smallest", "element", "strange", "invariant", "above", "meant", "efficient", "memory", "representation", "tournament", "numbers", "below", "above", "topping", "usual", "binary", "tournament", "sports", "winner", "cells", "trace", "winner", "opponents", "However", "computer", "applications", "tournaments", "trace", "history", "winner", "memory", "efficient", "winner", "promoted", "replace", "something", "lower", "level", "becomes", "cells", "contain", "three", "different", "items", "topped", "cells", "invariant", "protected", "index", "clearly", "overall", "winner", "simplest", "algorithmic", "remove", "winner", "loser", "diagram", "above", "position", "percolate", "exchanging", "values", "until", "invariant", "established", "clearly", "logarithmic", "total", "number", "items", "iterating", "items", "feature", "efficiently", "insert", "items", "while", "going", "provided", "inserted", "items", "better", "element", "extracted", "especially", "useful", "simulation", "contexts", "where", "holds", "incoming", "events", "condition", "means", "smallest", "scheduled", "event", "schedule", "other", "events", "execution", "scheduled", "future", "easily", "structure", "implementing", "schedulers", "sequencer", "Various", "structures", "implementing", "schedulers", "extensively", "studied", "heaps", "reasonably", "speedy", "speed", "almost", "constant", "worst", "different", "average", "However", "there", "other", "representations", "which", "efficient", "overall", "worst", "cases", "might", "terrible", "Heaps", "useful", "sorts", "probably", "implies", "producing", "which", "sorted", "sequences", "which", "usually", "related", "amount", "memory", "followed", "merging", "passes", "these", "which", "merging", "often", "cleverly", "organised", "important", "initial", "produces", "longest", "possible", "Tournaments", "using", "memory", "available", "tournament", "replace", "percolate", "items", "happen", "current", "produce", "which", "twice", "memory", "random", "input", "better", "input", "fuzzily", "ordered", "Moreover", "output", "input", "which", "current", "tournament", "because", "value", "output", "value", "cannot", "decreases", "freed", "memory", "could", "cleverly", "reused", "immediately", "progressively", "building", "second", "which", "grows", "exactly", "first", "melting", "first", "completely", "vanishes", "switch", "heaps", "start", "Clever", "quite", "effective!", "heaps", "useful", "memory", "structures", "applications", "think", "module", "around", "balancing", "algorithms", "which", "current", "nowadays", "annoying", "clever", "consequence", "seeking", "capabilities", "disks", "devices", "which", "cannot", "drives", "story", "quite", "different", "clever", "ensure", "advance", "movement", "effective", "possible", "participate", "progressing", "merge", "tapes", "backwards", "avoid", "rewinding", "Believe", "sorts", "quite", "spectacular", "watch!", "times", "sorting", "always", "Great", "reduce", "function", "sequence", "initial", "value", "Apply", "function", "arguments", "cumulatively", "items", "sequence", "right", "reduce", "sequence", "single", "value", "example", "reduce", "lambda", "calculates", "initial", "present", "placed", "before", "items", "sequence", "calculation", "serves", "default", "sequence", "empty", "partial", "keywords", "function", "partial", "application", "given", "arguments", "keywords", "dialect", "Dialect", "records", "parsing", "generation", "options", "reader", "Reader", "objects", "responsible", "reading", "parsing", "tabular", "format", "writerow", "sequence", "Construct", "write", "record", "sequence", "fields", "string", "elements", "converted", "string", "writerows", "sequence", "sequences", "Construct", "write", "series", "sequences", "string", "elements", "converted", "string", "writer", "Writer", "objects", "responsible", "generating", "tabular", "format", "sequence", "input", "parsing", "writing", "module", "provides", "classes", "assist", "reading", "writing", "Comma", "Separated", "Value", "files", "implements", "interface", "described", "Although", "files", "simple", "parse", "format", "formally", "defined", "stable", "specification", "subtle", "enough", "parsing", "lines", "something", "split", "bound", "module", "supports", "three", "basic", "reading", "writing", "registration", "dialects", "DIALECT", "REGISTRATION", "Readers", "writers", "support", "dialect", "argument", "which", "convenient", "handle", "group", "settings", "dialect", "argument", "string", "identifies", "dialects", "previously", "registered", "module", "class", "instance", "attributes", "argument", "settings", "reader", "writer", "class", "excel", "delimiter", "quotechar", "escapechar", "doublequote", "skipinitialspace", "False", "lineterminator", "quoting", "QUOTE_MINIMAL", "SETTINGS", "quotechar", "specifies", "character", "string", "quoting", "character", "defaults", "delimiter", "specifies", "character", "string", "field", "separator", "defaults", "skipinitialspace", "specifies", "interpret", "whitespace", "which", "immediately", "follows", "delimiter", "defaults", "False", "which", "means", "whitespace", "immediately", "following", "delimiter", "following", "field", "lineterminator", "specifies", "character", "sequence", "which", "should", "terminate", "quoting", "controls", "quotes", "should", "generated", "writer", "following", "module", "constants", "QUOTE_MINIMAL", "means", "required", "example", "field", "contains", "either", "quotechar", "delimiter", "QUOTE_ALL", "means", "quotes", "always", "placed", "around", "fields", "QUOTE_NONNUMERIC", "means", "quotes", "always", "placed", "around", "fields", "which", "parse", "integers", "floating", "point", "numbers", "QUOTE_NONE", "means", "quotes", "never", "placed", "around", "fields", "escapechar", "specifies", "character", "string", "escape", "delimiter", "quoting", "QUOTE_NONE", "doublequote", "controls", "handling", "quotes", "inside", "fields", "consecutive", "quotes", "interpreted", "during", "writing", "quote", "character", "embedded", "written", "quotes", "csv_reader", "reader", "iterable", "dialect", "excel", "optional", "keyword", "csv_reader", "process", "iterable", "argument", "object", "returns", "input", "iteration", "object", "optional", "dialect", "parameter", "discussed", "below", "function", "accepts", "optional", "keyword", "arguments", "which", "override", "settings", "provided", "dialect", "returned", "object", "iterator", "iteration", "returns", "which", "multiple", "input", "lines", "csv_writer", "writer", "fileobj", "dialect", "excel", "optional", "keyword", "sequence", "csv_writer", "writerow", "csv_writer", "writer", "fileobj", "dialect", "excel", "optional", "keyword", "csv_writer", "writerows", "fileobj", "argument", "object", "supports", "Return", "dialect", "names", "names", "list_dialects", "Return", "dialect", "instance", "associated", "dialect", "get_dialect", "Create", "mapping", "string", "dialect", "class", "dialect", "register_dialect", "dialect", "Delete", "dialect", "mapping", "associated", "string", "unregister_dialect", "upper", "limit", "parsed", "fields", "field_size_limit", "limit", "Returns", "limit", "limit", "given", "limit", "limit", "returned", "Remove", "return", "leftmost", "element", "element", "right", "deque", "element", "deque", "Extend", "right", "deque", "elements", "iterable", "Extend", "deque", "elements", "iterable", "Rotate", "deque", "steps", "right", "default", "negative", "rotates", "reverse", "reverse", "PLACE", "count", "value", "integer", "return", "number", "occurrences", "value", "remove", "value", "remove", "first", "occurrence", "value", "Remove", "elements", "deque", "Return", "shallow", "deque", "Return", "state", "information", "pickling", "__sizeof__", "memory", "bytes", "__reversed__", "return", "reverse", "iterator", "deque", "deque", "iterable", "maxlen", "deque", "object", "Build", "ordered", "collection", "optimized", "access", "endpoints", "Private", "method", "returning", "estimate", "__missing__", "Called", "__getitem__", "missing", "pseudo", "default_factory", "raise", "KeyError", "value", "default_factory", "return", "value", "shallow", "defaultdict", "default_factory", "default", "factory", "default", "factory", "called", "without", "arguments", "produce", "value", "present", "__getitem__", "defaultdict", "compares", "equal", "items", "remaining", "arguments", "treated", "passed", "constructor", "including", "keyword", "arguments", "performance", "structures", "deque", "ordered", "collection", "accessible", "endpoints", "defaultdict", "subclass", "default", "value", "factory", "register", "search_function", "Register", "codec", "search", "function", "Search", "functions", "expected", "argument", "encoding", "lower", "letters", "return", "tuple", "functions", "encoder", "decoder", "stream_reader", "stream_writer", "CodecInfo", "object", "lookup", "encoding", "CodecInfo", "Looks", "codec", "tuple", "Python", "codec", "registry", "returns", "CodecInfo", "object", "encode", "encoding", "errors", "object", "Encodes", "using", "codec", "registered", "encoding", "encoding", "defaults", "default", "encoding", "errors", "given", "different", "error", "handling", "scheme", "Default", "strict", "meaning", "encoding", "errors", "raise", "ValueError", "Other", "possible", "values", "ignore", "replace", "xmlcharrefreplace", "other", "registered", "codecs", "register_error", "handle", "ValueErrors", "decode", "encoding", "errors", "object", "Decodes", "using", "codec", "registered", "encoding", "encoding", "defaults", "default", "encoding", "errors", "given", "different", "error", "handling", "scheme", "Default", "strict", "meaning", "encoding", "errors", "raise", "ValueError", "Other", "possible", "values", "ignore", "replace", "other", "registered", "codecs", "register_error", "handle", "ValueErrors", "register_error", "errors", "handler", "Register", "specified", "error", "handler", "under", "errors", "handler", "callable", "object", "called", "exception", "instance", "containing", "information", "about", "location", "encoding", "decoding", "error", "return", "replacement", "position", "tuple", "lookup_error", "errors", "handler", "Return", "error", "handler", "specified", "error", "handling", "raise", "LookupError", "handler", "exists", "under", "bisect", "index", "bisect_right", "index", "Return", "index", "where", "insert", "assuming", "sorted", "return", "value", "already", "appears", "points", "beyond", "rightmost", "already", "there", "Optional", "default", "default", "bound", "slice", "searched", "insort", "insort_right", "Insert", "sorted", "assuming", "sorted", "already", "insert", "right", "rightmost", "Optional", "default", "default", "bound", "slice", "searched", "bisect_left", "index", "Return", "index", "where", "insert", "assuming", "sorted", "return", "value", "already", "appears", "points", "before", "leftmost", "already", "there", "Optional", "default", "default", "bound", "slice", "searched", "insort_left", "Insert", "sorted", "assuming", "sorted", "already", "insert", "leftmost", "Optional", "default", "default", "bound", "slice", "searched", "Bisection", "algorithms", "module", "provides", "support", "maintaining", "sorted", "order", "without", "having", "after", "insertion", "lists", "items", "expensive", "comparison", "operations", "improvement", "common", "approach", "assembly", "xmlns", "schemas", "microsoft", "manifestVersion", "trustInfo", "xmlns", "schemas", "microsoft", "security", "requestedPrivileges", "requestedExecutionLevel", "level", "asInvoker", "uiAccess", "false", "requestedExecutionLevel", "requestedPrivileges", "security", "trustInfo", "dependency", "dependentAssembly", "assemblyIdentity", "win32", "Microsoft", "version", "21022", "processorArchitecture", "publicKeyToken", "1fc8b3b9a1e18e3b", "assemblyIdentity", "dependentAssembly", "dependency", "assembly", "PAPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDING", "2C2H2l2q2", "3c3h3", "4A4K4R4", "4C5U5", "6k7p7", "9H9T9Y9", "0h0m0", "1I1W1", "1Z2f2l2n3s3", "4!5&5x5", "556J6j6", "7D8f8l8", "959C9L9R9h9", "01161", "142u2", "21363", "474C4k4", "666G6", "6a6q6", "7J7P7T7f7k7p7", "888l81969", "011U1d1j1", "404D4H4L4P4T4X4", "5d6q6", "3h3m3", "444r4w4", "5S5X5v5", "6C6f6k6p6", "7T7a7f7u7", "8R8W8", "0R0W0", "1L1V1", "1U2Z2", "2E3J3", "7j7p7", "1U2Z2", "4f4u4", "5D5H5L5P5T5X5", "60656p6", "0B0G0q0v0", "4F4Y4w4", "636C6P6U6c6k6v6", "7c7z7", "0U0_0", "0a1f1z1", "3!393F3", "444I4t4", "5C5R5v5", "6&6M6f6k6t6", "8&8g8", "9b9z9", "717C7W7", "4I4N4", "595K5S5Y5_5i5", "6f6s6", "7L8Q8", "939E9M9S9Y9c9", "11161M1Z1", "292S2", "2e2n2", "3P3c3", "4K4u4", "5W5_5e5k5u5", "6&606X6", "70777D7k7p7", "8E8J8z8", "2l2r2", "314J4j4", "6i6n6", "657k7", "8C8y8", "&0M0X0", "0h0u0", "0F1i1", "2A2W2", "4X4y4", "9F9O9W9n9", "0k0s0", "0O1y1", "2A2q2", "505L5R5b5h5x5", "0l1p1t1x1", "182P2", "3V3q3", "8c8j8", "0M0o0", "3P4T4X4", "4d4h4l4", "4$5H6L6P6T6X6", "6d6f7m8_", "9094989", "9D9H9L9P9T9X9", "9d9h9l9p9t9x9", "1b1g1", "32373R3", "5d5m5z5", "6G6L6r6w6", "8H9P9U9w9", "1j1o1", "1$252c2h2", "5L9P9T9X9", "9d9h9l9p9t9x9", "0G1P1", "1j2o2", "8O8k8p8", "9Y9q9", "010I0Z0r0x0", "2J3O3", "51565x5", "6H6N6", "6B7H7z8", "9g9m9", "0J0W0c0o0t0y0", "172y2", "90959M9R9", "2D2Z2", "2D3y3", "495F5p5", "0P0T0X0", "0d0h0l0z0", "1B1L1i1n1", "292O2", "64696", "6B7e7j7", "11171", "6F6X6b6g6", "6n7w7", "404w4", "1l1q1", "3A3z3", "9!9W9", "0N0S0", "242A2K2u2N3S3", "7q7v7", "8C9j9", "5A5F5", "6F7K7", "7X8k8", "9N9S9", "0k0w0", "152K2Y2r2", "3C4V4d4p4", "646N6W6d6m6", "7$8M8b8", "9q9z9", "676I6", "070W0w0", "031K1", "303B3U3g3", "6&636", "6E6Q6", "6c6h6s6y6", "797C7M7S7", "7c7i7q7w7", "81898", "8E8K8Q8W8", "8c8k8u8", "999C9M9W9a9k9u9", "0C0I0O0U0", "0a0i0s0", "171A1I1O1W1_1e1k1q1w1", "2E2O2Y2c2k2s2", "31373", "3G3Q3", "3e3o3w3", "4E4O4W4", "4c4i4o4u4", "575A5K5S5", "5c5m5w5", "61676", "6G6Q6", "6e6o6y6", "777A7K7U7_7g7m7s7y7", "8G8Q8", "8c8m8u8", "91999A9I9O9U9", "9a9g9m9s9", "070A0I0S0", "0a0g0m0u0", "1E1M1U1", "1c1k1s1", "2A2G2O2U2", "2a2i2s2", "3G3Q3", "3c3i3o3u3", "4A4G4M4S4Y4_4g4m4s4y4", "51595C5K5S5Y5a5k5s5", "63696", "6E6K6S6Y6_6e6k6q6w6", "7C7K7Q7Y7c7k7u7", "090C0L0c0o0", "8D8t8", "0G1m1", "2e3x3", "7&8I8", "9c9p9", "32373K3S3Y3_3i3", "676k6", "8D8J8q8y8", "2C2j2r2x2", "3X3v3", "5F5b5j5", "6E6e6q6", "727J7b7h7q7x7", "708L8d8", "8L9P9T9X9", "9d9h9", "1U3Z3", "31464", "5b6g6", "0N1r1", "2f3l3", "4h7u7", "3X3e3j3", "7!7V7c7i7", "1N1_1l1", "2024282", "2D2H2L2P2T2X2", "2d2h2l2p2t2x2", "0B0X0a0h0", "0k2x4", "677j7o7", "1L1R1t1y1", "50565D5X5", "5L6V6", "8a8g8", "0F0V0", "0J1W1", "4C4N4", "5a5y5", "8Q9j9", "020K0Q0", "12191Q1X1", "373o3v3", "6d6j6", "7!7X7", "8p9z9", "0q0x0", "161z1", "353R4", "8L8Q8", "1l1s1x1", "2D2f2", "4C4r4", "6H6M6z6", "9e9j9", "3$373", "3h3o3", "3L4Q4", "8D8s8", "2C3H3f3", "43484X4", "515W5", "546G6S6", "6l6t6y6", "7A7O7U7", "7f7o7", "919B9S9a9o9", "030D0X0", "1e2o2t2", "7I7Y7h7n7", "7E8Y8t8", "8j9t9y9", "1G1L1Q1V1k1p1", "142x2", "535E5", "6C6K6T6d6", "7b7p7", "2O4Y4", "7G7Q7", "0h0r0w0", "6P6l6", "2H3E5J5", "7j7y7", "212V2", "2N3T3k3r3", "7B7K7O7v7", "80888", "8I8Q8X8a8", "9n9t9", "060A0", "0e0o0", "101C1I1T1", "2I2S2", "333O3Z3", "3o3w3", "5e5t5", "6Y6_6i6", "7M7v7", "8J8T8", "8d8l8t8", "9F9N9V9", "9f9n9", "192a2x2", "3d3j3", "4O4X4t4", "636t6", "7&888K8", "9G9S9v9", "203H3M3", "3I4y4", "5J5m5r5", "6F6Q6j6", "7!8&8A8W8f8", "081J1", "1m1z1", "212C2", "2g2n2", "3L3X3", "3j3u3", "14191", "122B2h2n2", "3F4K4", "0S0X0", "1p1u1", "3c3h3", "3c4x4", "6O6T6", "7L7Q7", "8D8l8q8", "83989", "0D0Z0f0u0", "1h1u1", "2$2B2J2Q2", "3K3R3v3", "364v4", "6h6o6", "7&8D8v8", "949f9", "101f1", "2W2q2x2", "20353V3", "42575", "8U9Z9", "1E1J1i1n1", "2E2J2i2n2", "32373", "3T3Y3", "6E6k6p6", "0$0B0", "1F1e1", "2L2_2d2i2", "3L4S4", "7S7Z7", "2!2o2t2", "31363i3", "5F5z5", "6A6F6", "878M8R8", "9_9d9i9", "2C2N2", "080C0q0", "1q2y2", "3_4e4", "5c5k5", "1e1j1", "2E2J2k2", "6Q6V6", "7R7W7", "929A9T9Y9", "2024282", "2D2H2L2P2T2X2", "2d2h2l2p2t2x2", "5f5j5", "696D6Q6W6c6", "7!767D7O7c7", "9M9t9", "1p1u1", "22272F2U2d2", "4b4h4o4", "727J7X7", "8J8c8u8", "8!979", "9G9T9", "0H0b0", "0X1x1", "1M2m2", "243Y3i3", "5N5o5", "606I6S6_6", "74797W7", "84898_8f8", "3A3b3g3", "4Q4l4", "4K5v5", "6V6l6", "868B8", "8f8x8", "939P9", "9o9u9", "0i0s0", "1f1p1", "2b2j2o2", "3F3N3U3", "3i3u3", "4D4K4S4_4k4y4", "767Q7", "848l8", "273p3", "494D4m4", "5M5b5l5x5", "6&6d6u6", "747u7", "8!878A8R8X8", "8R9W9", "3d3n3", "5a5g5k5", "818L8_8z8", "1c1h1", "1q2w2", "373F3M3g3r3", "4B4H4P4U4", "525I5N5", "5C6V6_6i6o6v6", "74797", "7h7v7", "838B8O8V8_8c8j8x8", "222d2", "939t9", "O0b0o0", "1D1v1", "3D3q3", "384O4", "5U5g5", "556a6f6", "7F7b7g7M", "H0V0g0q0", "1K1Q1V1", "2r2w2", "727D7Q7V7", "888l8r8", "0!0C0V0f0s0", "292J2T2e2k2", "31363B3", "5B5_5", "767L7", "939D9I9a9f9", "222o2", "30363", "3S3X3", "4r4w4", "7U7q7", "8G9P9W9", "0b0y0", "222E2K2v2", "60666L6", "7Y7u7z7", "9K9Y9", "0M1z1", "3c3h3", "4B4H4N4T4Z4", "4f4l4s4y4", "5!545", "5I5U5h5m5r5", "9!919", "9i9r9y9", "3K3X3l3z3", "60656", "7$787F7", "7n7w7", "878K8X8", "889L9Z9", "0j0s0", "2R2s2", "7V7y7", "020B0N0", "1!1A1N1Z1g1", "2Y4h4", "4I7X7e7r7", "4F6k6", "5_7n7C8Q8", "5k5z5", "2M2i2", "4P4k4", "6R6a6", "8&969A9", "2Z3_3", "5P5k5", "6K6P6u6", "9O9T9", "1A1Q1", "2P4_4i4", "5&545", "7n7x7", "7a8s8", "1V2c2t2", "535q5", "8$8K8P8", "9D9M9b9i9n9", "1Q1d1", "4K4U4", "5$5K5P5", "6D6M6b6i6n6", "8d9m9", "0w0t2", "0p0u0", "R1b1q1v1", "2D2I2", "9C9Y9", "0H0P0_0e0", "1B1U1a1i1x1", "262C2P2", "2j2w2", "3G3T3a3n3", "464B4K4", "5b5t5", "6J7O7", "8J8e8n8", "9E9O9", "0S0X0k0p0", "243U3", "6B6s6x6", "717G7L7h7", "8A8W8", "1j1o1", "4D4b4", "5S5X5k5p5", "6B6H6j6", "768t8", "8l9z9", "0!0s0", "3L3Q3i3n3", "5J7X7", "8f8m8", "1C2H2", "515E5", "6L6c6x6V7", "0F0Q0", "30363A3M3", "5k5p5", "A0F0K0g0", "1I1c1", "21363", "3Z3t3", "4I4a4r4", "5T5h5", "5B6S6", "7j7o7", "8P8U8", "9b9g9", "2A2h2", "2H3U3n3", "5X6h6n6", "0I0O0", "1Q1V1", "2l3q3", "5h5n5", "7R7W7n7t7", "8R8W8n8t8", "455C5H5", "6!60656", "6I6N6S6X6h6m6t6x6", "6l8u8", "4N4T4s4", "1n1s1", "5J5S5", "71777N7d7", "0B0G0", "121i1", "2B2t2", "2C3H3M3", "7C7H7", "828c8h8", "82979R9", "070N0S0", "1K1W1", "2$2J2U2Z2k2", "5N6Y6", "73787", "0b0$1", "4A4m4s4O5", "0d0i0", "1_1j1", "2L2l2", "5i5o5", "6K6V6", "7t7z7", "889Q9", "0i0o0", "1D1l1w1", "4t4z4", "4_5e5", "7O8U8", "1A1G1Q1o1", "2B2J2R2", "3!3E3K3", "3p3u3", "4!4E4K4", "4p4u4", "53595I5", "5d5l5t5", "6O6c6i6y6", "11181A1d1", "2&212J2_2f2q2", "3E3u3", "414L4", "0D1o1", "1d2i2", "3I3N3S3", "7G7L7", "7C8H8", "060D0J0V0", "1D1I1", "1c1j1w1", "2F2O2Z2", "3I3Z3q3", "4$4m4z4", "5p5u5", "8$898U8", "0X0j0o0", "283R3", "6E7J7t7y7", "797b7w7", "73787", "555P5q5", "6p7u70858", "9A9F9", "454b4", "7B7x7", "9f9k9", "0E0t0y0", "1f2q2", "3E4l4q4", "1m1z1", "2j2o2", "2F3u3", "414E4K4s4", "5T5Z5c5k5", "8J8R8x8", "9E9Y9w9", "3F3K3", "585O5", "5N6k6", "9C9M9R9k9", "11262N2", "4I4j4", "666M6V6c6", "8H8M8U8Z8", "0c1i1", "5n6z6", "929L9Q9", "3B3a3j3w3", "30454g4u4", "6!7Q7", "9Z9i9n9", "0&0N0T0m0s0y0", "021G1M1U1", "475L5R5", "8O8X8", "0H1O1T1", "2A2I2", "414Q4V4", "8Q8Z8", "0A0K0", "3c4l4s4", "6p6u6", "9a9i9n9", "01080K0P0", "0j1o1", "4A5R5", "7J7O7", "828D8I8", "8i9n9", "2W2k2p2", "3K3P3", "3R4W4", "7q7x7", "80999", "0Y0z0", "1g1l1", "4D4S4i4", "8G9y9", "4H4R4", "575E5N5W5z5", "141O1U1j1p1", "4I4N4", "515x5", "6l7v7", "8q8w8", "273D3J3U3y3", "4G4N4b4h4", "7P7V7_7g7", "32383", "3H3Q3", "4C4R4v4", "0S1u1", "2O2T2Y2w2", "3G3L3Q3", "5C5H5g5l5q5O6T6Y6w6", "020C0P0a0n0", "202A2N2_2l2", "3m3z3", "5C5N5W5i5v5", "6B6H6T6", "7!737", "7G7M7Y7b7t7", "8&888E8M8S8", "8g8y8", "9J9R9X9d9m9", "0H0Q0c0p0w0", "1A1M1V1h1u1", "6r6z6", "747m7", "8F8L8w8", "9$9H9M9c9", "091c1s1", "393m3", "656G6N6v6", "828N8S8w8", "9_9d9", "00G0U0", "2H2V2d2r2", "3Q3v3", "5B5L5Q5k5v5", "9V9p9", "0g0l0q0", "1n2x2", "3$313A3G3P3c3", "384F4O4X4e4u4", "50555Y5", "6O6T6Y6", "6n6t6", "7E7j7", "898J8", "1F1f1", "4&42484", "505M5", "5J6X6m6", "8L8x8", "3o3x3", "8O8Y8", "000C0S0n0t0", "3m3y3", "5Z5k5z5", "6C7f7", "1C1z1", "222L2", "545Y5", "636a6j6", "7_7k7r7", "949l9", "0$0N0S0e0m0t0", "141q1R2W2", "5Z5_5", "6H6L6P6", "313H3m3", "444s4", "5C5J5O5", "6L6S6Z6_6", "W0D1I1", "4C4I4R4Z4", "7C7Z7", "1k2u2", "4C5R5h5n5", "7h7m7", "9a9l9q9", "1U1Z1y1", "676X6b6g6", "7I7a7", "8S8f8", "0g0q0v0", "1h1m1", "3k3u3z3", "4F4L4", "5i5v5", "747B7J7P7V7", "5R5h5n5z5", "8m9w9", "7D8_8", "9q9v9", "1D1Q1n1", "4N4X4", "40575K5P5X5", "5d5h5l5", "5V6n6", "6P7V7", "829v9", "7r8w8", "3O5V5d5j5z7", "9Z9r9", "788J8", "9N9S9", "4E4J4L5a5g5o5w5", "7m7s7", "8F8K8", "3L3S3Z3_3", "525z5", "6c6l6", "7D7I7", "1M2e2x2", "4&4F4P4", "5K5w5", "5S6Y6", "02080B0k0", "2&262", "52686", "0$0Y0", "1F1w1", "4!414B4O4", "5!525", "7l7y7", "8i8z8", "9L9Y9j9w9", "3I3d3i3", "7_8i8", "8V9k9", "0&0T0", "1h1u1", "8D8U9", "3f3m3", "41474t4z4", "405s5", "6p6z6", "0Q0W0", "2F2M2_2", "5&5R5Y5o5u5", "6C6U6", "9O9V9h9r9w9", "1r1F2O2h2r2", "4L5Q5l5", "5C6l6", "8S8Z8", "6G6M6", "191b1w1", "3u3z3", "7w7u8", "1m1r1", "5G6L6", "484D4H4L4P4T4X4", "4d4h4l4p4", "666I6", "737O7", "7W9e9r9", "5$8K8", "1B1k1", "3E3f3m3", "4F4M4x4", "52595H5M5f5", "6&6B6h6o6", "7h7m7", "849O9", "0C0w0", "0Z1z2", "3J3y3", "4_4v4", "0G0L0X0", "0h0s0x0", "3034383", "5V5_5i5", "90969F9", "9a9i9q9", "4e5q5", "5H6Z6p6", "687M7c7w7", "7B8I8N8g8", "959I9O9_9t9y9", "3p3u3", "454S4", "3D3U3n3", "3T4v4", "5J5x5", "5b6o6", "73797I7", "7d7l7t7", "8N8T8d8y8", "0H0c0", "24292P2", "2T3Z3", "7F7L7s7y7", "9K9Q9", "1T3Y3", "353i3n3", "4E4N4q4", "525F5K5", "1J1g1", "1O1v1", "1Y2d2j2", "686Z6o6u6", "6F7N7", "9M9R9", "1!1K1T1", "2z2C3M3", "4H4T4z4", "5U5n5t5", "646U6Z6_6", "7G7e7j7o7", "8k8p8u8", "9Y9m9r9w9", "0!0F0K0P0b0g0x0", "1E1g1", "2F2N2Z2a2j2q2", "303M3k3", "5P5m5", "60656", "6!7&7", "7E7p7", "81868", "8P8U8", "8a9f9", "1N1Y1_1", "122s2x2", "3n3y3", "6H6O6a6n6", "8C8S8h8m8v8", "9H9h9", "0X0w0", "1U2a2", "7S7e8l8", "0F0L0r0y0", "1D1L1T1", "1d1h1l1p1t1x1", "2024282", "2D2H2L2", "3034383", "3D3H3L3P3", "4d5h5l5p5t5x5", "6064686", "6D6H6L6P6T6X6", "6T7X7", "7d7h7l7p7t7x7", "80848", "9H9L9P9T9X9", "9d9h9l9p9", "5054585", "7H7L7", "9g9o9", "0M1R1y1", "1K2o2", "2B3L3Q3", "6l7r7", "1A1z1", "2D2k2", "2F3q3v3", "5U6Z6t6y6", "9O9U9", "3T3_3o3", "3F3n3", "6D6H6L6P6T6X6", "6d6h6l6p6t6x6", "888K8", "0G1X1", "7D8J8f8k8w8", "1F1X1_1", "1T2Y2", "2T3Z3", "5d5i5", "178E8M8", "8J9p9", "d0l0v0", "303K5", "82878", "1b1K2q2", "4a4J5", "5E6S6", "7K7U7j7x7", "8A8O8Y8n8", "859C9N9", "0M3R3u3z3", "585_5", "676d6", "8F8a8k8s8", "3K3Q3", "4!4O4", "4g4y4", "545j5", "6K6Y6c6r6x6", "7$727", "7h7v7", "9i9y9", "2g3l3", "6S7X7", "7k8p8", "1C1I1", "4N4S4", "5u5z5", "8J8X8s8", "0I0c0k0", "011Z1", "2q2y2", "3K3R3o3", "4S4c4", "5F5k5r5", "6k6r6", "7k7r7", "8k8r8", "9k9r9", "0E0k0r0", "1E1k1r1", "2$2D2T2", "3K3R3p3u3", "4K4R4p4u4", "727O7", "8N8k8r8", "101x1", "4T4z4", "61676p6v6", "9R9a9g9x9", "0_0i0", "131G1l1", "3!4s4", "5d5h5l5p5t5x5", "7D7H7L7P7T7X7", "7d7h7", "8D8H8L8P8", "808r8", "9W9_9", "2C2s2", "363f3", "7m7u7z7", "81868U8", "0J0V0", "021f1p1", "2d2j2", "4n4z4", "7s7y7", "8D9P9", "0d0k0w0", "333F3V3f3v3", "434F4V4f4v4", "5&565I5Y5i5y5", "6F6U6i6o6", "9D9X9q9", "1I1N1V1n1", "3G3T3", "3E4U4s4", "5l5q5", "6W6l6v6", "727Q7b7", "7!898G8", "9L9g9", "0m0r0", "0A1i1", "2H3z3", "637f7z7", "8p8w8", "242j2s2", "3R3X3i3o3", "4i4u4", "6b6g6", "7E7N7U7", "808D8", "80959I9o9", "1A1H1O1V1", "1d1k1r1y1", "2D2H2L2P2T2X2", "2d2h2l2p2t2x2", "3034383", "3D3H3", "5A5U5", "5p5t5x5", "9S9p9", "4S6Z6", "535H5L5P5T5X5", "3&3J3U4y4", "5W5t5", "0l0s0z0", "1R2g2m2", "2e3l3H4", "7P7U7", "8K8P8z8", "01080l0", "2P2X2_2f2", "4I4l4", "64696", "8E8J8", "272D2", "2m2v2", "3B3L3Q3p3w3", "42494", "7c7h7", "292N2S2", "62676v6", "7I7T7Z7g7", "0R0X0a0i0", "1g2s2", "2s4x4", "5A5N5", "8S8q8", "9K9b9t9", "283D3", "4M5R5e5", "4F4b5g5", "6F7K7", "1K1S1X1", "6Z6h6M8l8p8t8x8", "9094989", "9D9H9L9P9T9X9", "9d9h9l9p9t9x9", "0G0Z0c0_1y1", "363v3", "3G4U4c4", "6_6f6k6", "969A9K9Q9W9x9", "0S0b0x0", "8n9t9", "010V0", "1U1j1p1", "2G3e3l3", "6C6U6e6", "6B8G8", "0u1z1", "6H6r6", "7E7z7", "4X4i4", "6f6t6", "3O3r3", "31464M4S4l4p4t4x4", "0004080", "0D0H0L0P0T0X0", "0d0h0l0p0t0x0", "0D0H0L0P0T0y0", "141E1y1", "24282", "5K5T5", "30373O3", "3&4S4v6", "829a9l9", "1N2v2", "4c4q4", "0N0X0", "4M4R4g4m4", "9L9V9", "1b1w1", "3O3z3", "4G4L4", "8A8d8h8", "L0P0T0X0", "1A1S1g1r2", "21363O3T3n3s3", "84888", "9e9l9", "030t0y0", "4H5M5", "7V7a7g7", "111C1", "2n2u2", "3N3a3w3", "4K4b4z4", "5$5W5n5", "6Z6m6", "263v3", "5S5m5", "8084888", "1I2N2", "4D4V4t4", "5A5T5", "5b5l5", "616A6L6Q6", "6h6t6", "7S7q7x7", "8K8_8", "809E9", "343M3", "4Q5e5r5", "7!7D7K7", "9_9f9s9", "0$0X0", "353M3", "5J5P5u5", "7i7t7y7", "8K8S8n8s8", "9E9u9", "060t0z0", "3D3W3", "5Q6Z6d6j6x6", "9q9y9", "0h0m0", "10262", "3K3o3v3", "4D4M4", "7E7a7q7", "8H8X8", "8B9L9Q9", "1S1k1", "232K2P2U2", "4U4_4", "4F5c5", "6D7J8", "0I1m1", "5D5K5g5", "5C607e7", "3F3K3", "3f6k6", "7I8T8", "9c9k9s9", "0B0G0P0X0", "1L1o1", "4D4_4d4x4", "7P8U8g9l9", "0F0Q0V0", "262q2", "43585", "7B7X7", "7d7h7l7p7t7x7", "2024282", "5f5S6", "747K7p7", "7r8y8", "939D9X9f9m9", "0&0_0h0v0", "161d1u1z1", "2H2c2j2s2", "595Z5", "777K7", "989L9Z9", "0E0W0e0t0x0", "1K1U1Z1p1z1", "2P2W2", "2e2r2", "3F4K4Q4X4", "6e6l6q6", "8C8k8", "060D0K0Q0", "0l0s0y0", "1$12191", "1L1Z1a1g1t1", "272R2", "2j2w2", "363Q3b3g3t3", "4H4k4u4", "595T5b5l5y5", "686S6a6k6x6", "777R7_7i7v7", "848V8", "9G9X9", "H0M0d0i0", "1T1Y1", "4H5M5", "8t8y8", "9t9y9", "0h0m0", "2h2m2", "4a4w4", "5M5i5", "929U9m9", "0X0p0", "1P1h1r1", "4D4N4", "5D5H5L5P5T5X5", "5d5h5l5p5t5x5", "666N6", "747d7", "9J9b9l9", "2024282I2N2V2", "2f2n2v2", "383w3", "5F5N5S5d5h5l5p5t5x5", "6F6N6V6", "6c6t6x6", "6&7M7a7", "011J1q1", "5G5L5f5", "919Q9f9", "0Q0V0p0", "1M1c1", "2S2Y2d2i2", "50555", "6I6i6", "929u9", "434G4L4f4", "7P7b7", "999Y9k9", "C0H0b0m0", "3P3x3", "4F4Q4V4", "5F5f5", "5R6W6j6u6", "1Y1o1", "2c2o2t2", "4C4H4b4", "545F5", "5F6K6e6", "697K7", "8B9M9R9m9r9", "0_0q0", "1H2M2", "3D3t3", "4R4x4", "7B7h7", "050G0", "2U2k2", "3L3u3", "5!585", "5q5w5", "6s6y6", "7B7Y7_7u7", "8a8w8", "9c9y9", "0D0W0", "2L2X2", "2h2s2", "3O3k3q3y3", "4L4e4", "5G5L5i5n5", "6B6f6m6", "7N7f7", "8E8L8R8", "8o8v8", "999D9", "5C6r6", "7A7M7", "03080", "5F5P5b5q5", "6p7t7x7", "878Q8", "9X9x9", "g0m0y0", "121Q1k1", "4E5L5p5u5", "7P7g7", "80848", "919u9", "151J1P1Y1a1", "3D3H3", "3g4p4", "8$8p8t8x8", "5J7b7k8U9", "2p2v2", "3C3Q3", "8G8L8h8x8", "0c0h0m0", "3A3t3", "404D4c4u4", "5M5S5Y5m5", "6Z7z7", "1C1Y1", "3S4X4_4h4", "71767h7o7y7", "8F8L8R8X8", "8d8j8p8v8", "90969", "9B9H9N9T9Z9", "9f9l9r9x9", "060a0h0m0r0y0", "20282", "2L2U2Z2", "2j2s2", "3U3b3", "4P5V5", "5b5i5", "6G6k6s6", "727n7", "70787", "7H7P7X7", "7h7p7x7", "80888", "8H8P8X8", "8h8p8x8", "90989", "9H9P9X9", "60686", "6H6P6X6", "6h6p6x6", "70787", "7H7P7X7", "7h7p7x7", "80888", "8H8P8X8", "8h8p8x8", "2h2p2", "2$202T2", "2h2l2p2x2", "40484", "4H4P4X4", "4h4p4x4", "50585", "5H5P5X5", "5p5x5", "60686", "6H6P6X6", "6h6p6x6", "40484", "4H4P4X4", "4h4p4x4", "50585", "5H5P5X5", "5h5p5x5", "60686", "6H6P6X6", "6h6p6", "70787", "7H7P7X7", "7h7p7x7", "9H9p9X", "40484", "4H4P4X4", "4h4p4x4", "50585", "5H5P5X5", "5h5p5x5", "10181", "1H1P1X1", "1h1p1x1", "20282", "2H2P2X2", "2h2p2x2", "30383", "3H3P3X3", "3h3p3x3", "3p4x4", "50585", "5H5P5X5", "5h5p5x5", "6H6P6X6", "6h6p6", "7H7P7h7", "3h3p3H4P4X4", "4h4p4x4", "50585", "5H5P5X5", "5h5p5x5", "60686", "6H6P6X6", "6h6p6x6", "70787", "7H7P7X7", "7h7p7x7", "80888", "8H8P8", "70787P7p7x7", "303H3P3X3", "3h3p3x3", "4P4X4", "4h4p4x4", "5H5X5", "60686", "6P6X6h6p6", "707H7X7", "7h7p7x7", "50585", "5D5L5P5T5", "5d5h5l5p5t5", "6L6X6d6p6", "7D7H7L7d7l7p7t7", "84888", "8d8l8p8t8", "9094989", "9D9H9L9P9T9X9", "9d9h9l9p9t9x9", "60686", "6H6P6X6", "6h6p6x6", "70787", "7H7P7X7", "7h7p7x7", "80888", "8H8P8X8", "8h8p8x8", "10181", "1H1P1X1", "1h1p1x1", "20282", "2H2P2X2", "2h2p2x2", "30383", "3H3P3X3", "3h3p3x3", "40484", "4H4P4X4", "4h4p4x4", "50585", "5H5P5X5", "5h5p5x5", "9D9P9", "50585", "60686", "6H6P6X6", "6h6p6x6", "70787", "7H7P7X7", "7h7p7x7", "20282", "2H2P2X2", "2h2p2x2", "30383", "3H3P3X3", "3h3p3x3", "40484", "4H4P4X4", "4h4p4x4", "50585", "5H5P5X5", "5h5p5", "00080", "7074787", "7D7H7", "4l4x4", "0$080L0t0x0", "1T1X1", "64686", "6D6H6L6T6X6", "6d6h6l6t6x6", "7074787", "7D7H7L7P7T7X7", "7d7h7l7p7t7x7", "8$888L8", "40444", "90949", "9P9T9", "9h9l9", "00040", "0D0L0P0T0", "0d0p0t0", "282P2", "4T4l4", "646L6d6", "747T7l7", "141L1d1", "343L3", "545L5", "6T6l6", "848L8d8", "849L9d9", "040L0d0", "1T1l1", "243L3d3", "6T6l6", "7T7l7", "8T8l8", "989l9", "0D0P0T0", "0h0l0t0", "1D1L1X1", "1d1p1t1", "2$20242", "2H2L2T2", "2d2l2x2", "3D3P3T3", "3h3l3t3", "4D4L4X4", "4d4p4t4", "445d6t6", "7D7t7", "90949", "9D9L9P9T9", "9d9l9p9t9", "4044484", "4D4H4L4P4T4X4", "4d4h4p4t4x4", "5L5X5", "5h5p5", "64686", "6D6H6L6T6X6", "6d6h6l6t6x6", "74787", "7D7H7L7T7X7", "7d7h7l7t7", "10141", "1D1L1P1T1", "1p1t1x1", "2024282", "2D2H2L2P2T2", "3$3D3", "6d6h6", "7074787", "7D7H7L7", "7d7h7t7", "8D8L8X8h8l8p8t8x8", "2L8P8T8", "2024282", "2D2L2", "0$00040", "0D0L0P0T0", "14181", "1L1P1T1", "545H5", "6T6d6h6p6t6", "60848", "8D8L8P8T8", "8d8l8p8t8", "949L9P9T9X9", "00040", "0H0L0P0", "0d0h0l0x0", "1D1H1L1X1", "1d1h1t1", "2D2H2T2", "2d2p2x2", "3D3P3X3", "3l3t3x3", "4$40484", "4L4T4X4", "4h4p4t4x4", "5$54585H5", "7074787", "7d7h7", "80848", "9D9L9X9", "9l9t9x9", "0$00040", "0D0L0P0T0", "0d0l0p0t0", "2d2h2l2", "3034383", "3D3H3P3X3d3t3", "4X5l5", "6L7T7", "7p7t7", "9P9d9t9x9", "1$1D1H1L1P1", "20242", "2D2L2P2T2", "4044484", "4D4L4p4t4x4", "6D6P6d6l6", "64787", "7d7p7", "8084888", "8D8H8L8P8T8X8", "8d8h8l8p8t8x8", "9094989", "9D9H9L9P9T9X9", "9d9h9l9p9t9x9", "0P0X0", "0d0h0l0", "5d5l5p5t5", "646p8t8x8", "9L9T9X9h9", "2d2h2p2", "4l4t4", "44585", "5D5H5L5P5T5X5", "5d5h5l5p5t5x5", "9D9L9T9X9", "9h9l9t9", "3H3X3", "6d6h6", "7H7L7", "7d7p7t7x7", "8D8P8", "1$10141", "1D1L1P1T1", "2d2t2", "3d3p3", "5H5L5X5", "6$64686", "6H6L6P6d6l6", "787L7T7", "8D8T8", "9h9l9p9", "0$040L0", "1$101p1t1x1", "303D3L3t3x3", "5d5p5", "5X6h6l6", "7d7h7", "0$0L0", "181x1", "2H2L2P2p2", "4X4l4x4", "4l5x5", "6L7X7", "0$0L0", "484h4x4", "10141H1", "1d1l1t1", "20242H2", "2d2l2t2", "343H3", "3l3t3", "6D6P6d6", "8p8x8", "9D9L9P9T9", "9d9l9p9t9", "1D1L1P1T1X1", "4d4p4t4", "5T5h5", "606D6t7", "080L0t0x0", "14181T1l3t3", "40444", "2l2p2x2", "303D3H3L3T3", "0$101p1", "7074787", "7D7H7L7P7T7X7", "7d7p7t7", "8$80848", "00040", "0D0P0T0p0t0", "10141", "0$0l0p0", "1d1h1l1t1P", "L5P5X5t5x5", "64686", "6D6H6L6T6X6", "6d6h6l6t6x6", "0D0P0T0", "0d0p0t0", "1h1l1", "20242L2T2", "4H4L4X4", "4h4l4", "5t5x5", "5H7L7X7", "7h7l7x7", "888x8", "080L0d0h0l0", "24282", "2T2X2", "2t2x2", "707D7X7l9x9", "000P2T2X2", "2d2h2l2p2t2x2", "90949", "9D9L9P9T9", "444L4T4", "4L5X5", "6D6P6", "2D2H2L2T2X2", "2d2h2l2t2x2", "2d5h5p5", "50545", "5D5L5P5T5", "5d5l5p5t5", "343T3", "3D4P4", "4D4L4P4T4", "4d4l4p4t4", "50545", "5D5L5P5T5", "5d5l5p5t5", "60646", "6D6L6P6T6", "6d6l6p6t6", "70747", "7D7L7P7T7", "7d7p7t7", "00040", "0D0L0P0T0", "0d0l0p0t0", "10141", "1D1L1P1T1", "1d1l1p1t1", "20242", "2D2L2P2T2", "2d2l2p2t2", "30343", "3D3L3P3T3", "3d3l3p3t3", "40444", "4D4L4P4T4", "4d4l4p4t4", "50545", "5D5L5", "44484", "4D4H4L4T4X4", "4d4x4", "9D9L9", "3d3l3p3t3", "40444", "4D4L4P4T4", "4d4l4p4t4", "50545", "5D5L5P5T5", "5d5l5p5t5", "7L7P7", "8L8P8", "9094989x9", "3D3T3X3", "5D5T5X5", "7$7D7P7", "282H2L2", "4L4P4$505", "5p5t5", "8L8P8T8X8", "4d4x4", "5H5L5X5", "0d0l0p0t0", "9d9h9l9t9", "0L0P0", "1$182", "3H3L3x3", "44484", "4D4H4L4T4X4", "4d4h4l4t4x4", "5450646", "747D7L7P7h7l7", "3H3L3P3", "4L4P4X4", "5d5h5l5t5x5", "94989", "9D9H9L9T9X9", "9d9h9l9t9x9", "0$00040", "0D0P0T0", "0d0p0t0", "1$10141", "1D1P1T1", "5D5H5X5", "5h5t5", "646D6H6", "80848", "8p8t8", "9L9P9", "9d9t9x9", "1h5l5t5x5", "60646X6l6", "74787", "7T8X8", "90949", "9D9L9", "181x1", "34383", "3D3H3L3h3x3", "4D4T4X4h4l4", "7P7h7l7p7", "1P1d1h1l1p1t1", "80848", "8D8L8P8T8", "8d8l8", "282P2T2X2x2", "3$3D3H3l3p3x3", "4$44484H4L4", "5X5x5", "8$888", "909D9H9", "000D0T0X0", "2d2l2p2t2", "4h4l4", "windows_exet", "Stderrc", "logfile", "could", "opened", "Errors", "occurreds", "logfile", "details", "_filet", "Nonet", "_errort", "opent", "Exceptiont", "atexitt", "registert", "writet", "flush", "selft", "textt", "alertt", "fnamet", "detailsR", "Python27", "packages", "py2exe", "boot_common", "Python27", "packages", "py2exe", "boot_common", "__name__t", "__module__t", "softspaceR", "_MessageBoxt", "executableR", "Python27", "packages", "py2exe", "boot_common", "Blackholec", "Python27", "packages", "py2exe", "boot_common", "Python27", "packages", "py2exe", "boot_common", "Python27", "packages", "py2exe", "boot_common", "filenamet", "linenot", "module_globals", "Python27", "packages", "py2exe", "boot_common", "fake_getline", "frozent", "objectR", "stderrR", "stdoutt", "linecacheR", "getlinet", "orig_getline", "Python27", "packages", "py2exe", "boot_common", "module", "zipextimportert", "install", "install", "zipextimporter", "single", "assembly", "xmlns", "schemas", "microsoft", "manifestVersion", "trustInfo", "xmlns", "schemas", "microsoft", "security", "requestedPrivileges", "requestedExecutionLevel", "level", "asInvoker", "uiAccess", "false", "requestedExecutionLevel", "requestedPrivileges", "security", "trustInfo", "dependency", "dependentAssembly", "assemblyIdentity", "win32", "Microsoft", "version", "21022", "processorArchitecture", "publicKeyToken", "1fc8b3b9a1e18e3b", "assemblyIdentity", "dependentAssembly", "dependency", "assembly", "PAPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXPK", "StringIO", "objects", "write", "string", "buffer", "implements", "nearly", "stdio", "methods", "StringIO", "ready", "writing", "StringIO", "ready", "reading", "close", "explicitly", "release", "resources", "isatty", "always", "false", "current", "position", "current", "position", "absolute", "relative", "relative", "until", "bytes", "readline", "until", "readlines", "readline", "results", "until", "truncate", "truncate", "default", "current", "write", "write", "current", "position", "writelines", "write", "getvalue", "return", "whole", "contents", "string", "Notes", "Using", "often", "faster", "convenient", "There", "faster", "implementation", "called", "cStringIO", "subclassable", "fileno", "unimplemented", "which", "triggers", "exception", "early", "Seeking", "beyond", "writing", "insert", "bytes", "occupy", "space", "buffer", "There", "simple", "EINVALi", "StringIOc", "operation", "closed", "ValueError", "closed", "StringIO", "_complain_ifclosed&", "class", "StringIO", "buffer", "StringIO", "object", "created", "initialized", "existing", "string", "passing", "string", "constructor", "string", "given", "StringIO", "start", "empty", "StringIO", "object", "accept", "either", "Unicode", "strings", "mixing", "strings", "cannot", "interpreted", "ASCII", "cause", "UnicodeError", "raised", "getvalue", "called", "isinstancet", "basestringt", "buflistt", "FalseR", "softspace", "selfR", "StringIO", "__init__6", "StringIO", "__iter__A", "object", "iterator", "example", "returns", "unless", "closed", "iterator", "typically", "example", "print", "method", "called", "repeatedly", "method", "returns", "input", "raises", "StopIteration", "readlinet", "StopIteration", "StringIO", "nextD", "memory", "buffer", "TrueR", "StringIO", "closeQ", "Returns", "False", "because", "StringIO", "objects", "connected", "device", "StringIO", "isattyX", "current", "position", "argument", "optional", "defaults", "absolute", "positioning", "other", "values", "relative", "current", "position", "relative", "There", "return", "value", "joinR", "StringIO", "seek_", "Return", "current", "position", "StringIO", "tellr", "bytes", "before", "obtaining", "bytes", "argument", "negative", "omitted", "until", "reached", "bytes", "returned", "string", "object", "empty", "string", "returned", "encountered", "immediately", "NoneR", "newposR", "StringIO", "readw", "entire", "trailing", "newline", "character", "string", "absent", "incomplete", "argument", "present", "negative", "maximum", "count", "including", "trailing", "newline", "incomplete", "returned", "empty", "string", "returned", "encountered", "immediately", "Unlike", "stdio", "fgets", "returned", "string", "contains", "characters", "occurred", "input", "findR", "lengtht", "StringIO", "until", "using", "readline", "return", "containing", "lines", "optional", "sizehint", "argument", "present", "instead", "reading", "whole", "lines", "totalling", "approximately", "sizehint", "bytes", "accommodate", "final", "whole", "appendR", "sizehintt", "totalt", "linest", "StringIO", "readlines", "Truncate", "optional", "argument", "present", "truncated", "defaults", "current", "position", "current", "position", "changed", "unless", "position", "beyond", "specified", "exceeds", "current", "remains", "unchanged", "Negative", "allowedN", "IOErrorR", "getvalueR", "StringIO", "truncate", "Write", "string", "There", "return", "value", "spost", "slenR!", "StringIO", "write", "Write", "sequence", "strings", "sequence", "iterable", "object", "producing", "strings", "typically", "strings", "There", "return", "value", "intended", "match", "readlines", "writelines", "separators", "iterableR3", "StringIO", "writelines", "Flush", "internal", "buffer", "StringIO", "flush", "Retrieve", "entire", "contents", "before", "StringIO", "object", "close", "method", "called", "StringIO", "object", "accept", "either", "Unicode", "strings", "mixing", "strings", "cannot", "interpreted", "ASCII", "cause", "UnicodeError", "raised", "getvalue", "called", "StringIO", "__name__t", "__module__t", "__doc__R", "StringIO", "passwdR", "write", "faileds", "length", "First", "Position", "Second", "result", "after", "backs", "result", "after", "Reads", "liness", "lengthi", "Truncated", "length", "truncate", "adjust", "length", "argvt", "openR", "RuntimeErrorR", "reprR", "fileR", "textt", "line2t", "StringIO", "__main__N", "errnoR", "ImportErrort", "__all__R", "StringIO", "module", "UserDict", "complete", "defined", "wrapper", "around", "dictionary", "objects", "UserDictc", "descriptor", "__init__", "UserDict", "object", "needs", "argumenti", "expected", "arguments", "dicti", "Passing", "keyword", "argument", "deprecatedt", "stackleveli", "TypeErrort", "warningst", "warnt", "PendingDeprecationWarningt", "Nonet", "datat", "update", "argst", "kwargst", "selfR", "UserDict", "__init__", "reprR", "UserDict", "__repr__", "isinstanceR", "UserDict", "__cmp__", "UserDict", "__len__", "__missing__", "hasattrt", "__class__R", "KeyError", "UserDict", "__getitem__", "UserDict", "__setitem__", "UserDict", "__delitem__", "clear", "UserDict", "copyR", "UserDict", "UserDict", "items", "UserDict", "iteritems", "UserDict", "pycR$", "iterkeys", "UserDict", "itervalues", "UserDict", "pycR&", "values", "UserDict", "UserDict", "has_key", "descriptor", "update", "UserDict", "object", "needs", "argumenti", "expected", "arguments", "Passing", "keyword", "argument", "deprecatedR", "typeR", "UserDict", "failobj", "UserDict", "UserDict", "setdefault_", "UserDict", "popitem", "UserDict", "UserDict", "__contains__g", "iterablet", "valuet", "UserDict", "fromkeysi", "__name__t", "__module__R", "__hash__R", "classmethodR5", "UserDict", "IterableUserDictc", "iterR", "UserDict", "__iter__q", "UserDict", "DictMixinc", "UserDict", "Falset", "UserDict", "UserDict", "pycR0", "UserDict", "pycR$", "UserDict", "UserDict", "pycR&", "UserDict", "listR$", "UserDict", "UserDict", "default", "UserDict", "expected", "arguments", "UserDict", "container", "empty", "nextt", "StopIterationR", "UserDict", "otherR", "UserDict", "UserDict", "UserDict", "UserDict", "UserDict", "UserDict", "__doc__R", "_abcollt", "MutableMappingt", "registerR", "UserDict", "module", "__future__", "Record", "phased", "incompatible", "language", "changes", "FeatureName", "_Feature", "OptionalRelease", "MandatoryRelease", "CompilerFlag", "where", "normally", "OptionalRelease", "MandatoryRelease", "tuples", "version_info", "PY_MAJOR_VERSION", "PY_MINOR_VERSION", "PY_MICRO_VERSION", "PY_RELEASE_LEVEL", "alpha", "candidate", "final", "string", "PY_RELEASE_SERIAL", "OptionalRelease", "records", "first", "release", "which", "__future__", "import", "FeatureName", "accepted", "MandatoryReleases", "occurred", "MandatoryRelease", "predicts", "release", "which", "feature", "become", "language", "MandatoryRelease", "records", "feature", "became", "language", "releases", "after", "modules", "longer", "__future__", "import", "FeatureName", "feature", "question", "continue", "imports", "MandatoryRelease", "meaning", "planned", "feature", "dropped", "Instances", "class", "_Feature", "corresponding", "methods", "getOptionalRelease", "getMandatoryRelease", "CompilerFlag", "bitfield", "should", "passed", "fourth", "argument", "builtin", "function", "compile", "enable", "feature", "dynamically", "compiled", "stored", "compiler_flag", "attribute", "_Future", "instances", "These", "values", "match", "appropriate", "defines", "CO_xxx", "flags", "Include", "compile", "feature", "deleted", "nested_scopest", "generatorst", "divisiont", "absolute_importt", "with_statementt", "print_functiont", "unicode_literalst", "all_feature_namesi", "_Featurec", "optionalt", "mandatoryt", "compiler_flag", "selft", "optionalReleaset", "mandatoryReleaseR", "__future__", "__init__K", "Return", "first", "release", "which", "feature", "recognized", "tuple", "version_info", "__future__", "getOptionalReleaseP", "Return", "release", "which", "feature", "become", "mandatory", "tuple", "version_info", "feature", "dropped", "__future__", "getMandatoryReleaseX", "reprR", "__future__", "__repr__a", "__name__t", "__module__R", "__future__", "betat", "alphai", "finali", "__doc__R", "__all__t", "CO_NESTEDt", "CO_GENERATOR_ALLOWEDt", "CO_FUTURE_DIVISIONt", "CO_FUTURE_ABSOLUTE_IMPORTt", "CO_FUTURE_WITH_STATEMENTt", "CO_FUTURE_PRINT_FUNCTIONt", "CO_FUTURE_UNICODE_LITERALSR", "__future__", "module", "_abcoll", "Abstract", "Classes", "collections", "according", "MODULE", "DIRECTLY!", "classes", "should", "imported", "collections", "defined", "alleviate", "certain", "bootstrapping", "issues", "tests", "test_collections", "ABCMetat", "abstractmethodNt", "Hashablet", "Iterablet", "Iteratort", "Sizedt", "Containert", "Callablet", "MutableSett", "Mappingt", "MutableMappingt", "MappingViewt", "KeysViewt", "ItemsViewt", "ValuesViewt", "Sequencet", "MutableSequencec", "__dict__", "_abcoll", "genexpr", "__mro__t", "AttributeErrort", "hasattr", "_abcoll", "_hasattr", "_abcoll", "__hash__", "TrueR", "getattrt", "Nonet", "NotImplemented", "_abcoll", "__subclasshook__", "__name__t", "__module__R", "__metaclass__R", "classmethodR", "_abcoll", "FalseR", "_abcoll", "__iter__", "_abcoll", "_abcoll", "Return", "iterator", "exhausted", "raise", "StopIterationN", "StopIteration", "_abcoll", "nextK", "_abcoll", "_abcoll", "_abcoll", "_abcoll", "__len__", "_abcoll", "_abcoll", "_abcoll", "__contains__m", "_abcoll", "_abcoll", "argst", "_abcoll", "__call__", "_abcoll", "_abcoll", "finite", "iterable", "container", "class", "provides", "concrete", "generic", "implementations", "methods", "except", "__contains__", "__iter__", "__len__", "override", "comparisons", "presumably", "speed", "semantics", "fixed", "redefine", "__le__", "__ge__", "other", "operations", "automatically", "follow", "isinstanceR", "othert", "_abcoll", "__le__", "_abcoll", "__lt__", "__ge__", "_abcoll", "__gt__", "_abcoll", "pycR8", "_abcoll", "__eq__", "_abcoll", "__ne__", "Construct", "instance", "class", "iterable", "input", "override", "method", "class", "constructor", "signature", "accept", "iterable", "input", "_abcoll", "_from_iterable", "value", "_abcoll", "genexpr", "_abcoll", "__and__", "Return", "intersection", "_abcoll", "isdisjoint", "_abcoll", "genexpr", "chain", "_abcoll", "__or__", "_abcoll", "genexpr", "_abcoll", "__sub__", "_abcoll", "genexpr", "_abcoll", "__rsub__", "_abcoll", "__xor__", "Compute", "value", "define", "__hash__", "hashable", "define", "hashable", "__hash__", "should", "function", "compatible", "__eq__", "ought", "compare", "equal", "contain", "elements", "regardless", "implemented", "regardless", "order", "elements", "there", "freedom", "__eq__", "__hash__", "match", "algorithm", "built", "frozenset", "maxintR3", "MASKt", "_abcoll", "_hash", "__doc__R6", "__rand__R", "__ror__RE", "__rxor__R", "_abcoll", "mutable", "finite", "iterable", "container", "class", "provides", "concrete", "generic", "implementations", "methods", "except", "__contains__", "__iter__", "__len__", "discard", "override", "comparisons", "presumably", "speed", "semantics", "fixed", "redefine", "__le__", "other", "operations", "automatically", "follow", "element", "NotImplementedError", "_abcoll", "Remove", "element", "raise", "exception", "absent", "_abcoll", "discard", "Remove", "element", "member", "raise", "KeyError", "KeyErrorRW", "_abcoll", "remove0", "Return", "popped", "value", "Raise", "KeyError", "empty", "iterR", "_abcoll", "creates", "iterators!", "effective", "_abcoll", "clear", "_abcoll", "__ior__H", "_abcoll", "__iand__M", "_abcoll", "__ixor__R", "_abcoll", "__isub___", "_abcoll", "Mapping", "generic", "container", "associating", "value", "pairs", "class", "provides", "concrete", "generic", "implementations", "methods", "except", "__getitem__", "__iter__", "__len__", "_abcoll", "__getitem__w", "defaults", "default", "_abcoll", "_abcoll", "iterkeys", "iterator", "_abcoll", "iterkeys", "itervalues", "iterator", "values", "_abcoll", "itervalues", "iteritems", "iterator", "value", "items", "_abcoll", "iteritems", "_abcoll", "items", "value", "pairs", "tuples", "_abcoll", "items", "values", "values", "_abcoll", "values", "dictRj", "_abcoll", "_abcoll", "_abcoll", "_mapping", "mapping", "_abcoll", "__init__", "_abcoll", "__class__", "__name__", "_mapping!r", "format", "_abcoll", "__repr__", "_abcoll", "_abcoll", "_abcoll", "_abcoll", "_abcoll", "_abcoll", "itemRa", "_abcoll", "_abcoll", "_abcoll", "_abcoll", "_abcoll", "_abcoll", "MutableMapping", "generic", "container", "associating", "value", "pairs", "class", "provides", "concrete", "generic", "implementations", "methods", "except", "__getitem__", "__setitem__", "__delitem__", "__iter__", "__len__", "_abcoll", "__setitem__", "_abcoll", "__delitem__", "remove", "specified", "return", "corresponding", "value", "found", "returned", "given", "otherwise", "KeyError", "raised", "_MutableMapping__marker", "_abcoll", "popitem", "remove", "return", "value", "tuple", "raise", "KeyError", "empty", "_abcoll", "popitem", "clear", "Remove", "items", "_abcoll", "update", "Update", "mapping", "iterable", "present", "method", "present", "lacks", "method", "either", "followed", "items", "descriptor", "update", "MutableMapping", "object", "needs", "argumenti", "update", "expected", "arguments", "TypeErrorR3", "_abcoll", "update$", "setdefault", "_abcoll", "setdefault", "objectRw", "_abcoll", "operations", "sequence", "Concrete", "subclasses", "override", "__new__", "__init__", "__getitem__", "__len__", "IndexError", "index", "_abcoll", "pycRb", "_abcoll", "_abcoll", "reversedt", "rangeR3", "_abcoll", "__reversed__i", "index", "value", "integer", "return", "first", "index", "value", "Raises", "ValueError", "value", "present", "enumeratet", "ValueError", "_abcoll", "count", "value", "integer", "return", "number", "occurrences", "valuec", "_abcoll", "genexpr", "_abcoll", "countv", "_abcoll", "operations", "sequence", "Concrete", "subclasses", "provide", "__new__", "__init__", "__getitem__", "__setitem__", "__delitem__", "__len__", "insert", "_abcoll", "pycRu", "_abcoll", "pycRv", "insert", "index", "object", "insert", "object", "before", "indexN", "_abcoll", "insert", "append", "object", "append", "object", "sequenceN", "_abcoll", "append", "reverse", "reverse", "PLACE", "_abcoll", "reverse", "extend", "iterable", "extend", "sequence", "appending", "elements", "iterableN", "_abcoll", "extend", "index", "remove", "return", "index", "default", "Raise", "IndexError", "empty", "index", "range", "_abcoll", "remove", "value", "remove", "first", "occurrence", "value", "Raise", "ValueError", "value", "present", "_abcoll", "pycRY", "_abcoll", "__iadd__", "_abcoll", "__all__R", "registert", "frozensetR", "typet", "viewkeysR", "viewitemsR", "viewvaluesR", "tuplet", "basestringt", "buffert", "xrangeR", "_abcoll", "module", "_strptime", "Strptime", "related", "classes", "functions", "CLASSES", "LocaleTime", "Discovers", "stores", "locale", "specific", "information", "TimeRE", "Creates", "regexes", "pattern", "matching", "string", "containing", "information", "FUNCTIONS", "_getlang", "Figure", "language", "being", "locale", "strptime", "Calculates", "struct", "represented", "passed", "string", "compile", "IGNORECASE", "escape", "allocate_lockc", "localet", "getlocalet", "LC_TIME", "_strptime", "_getlang", "LocaleTimec", "Stores", "handles", "locale", "specific", "information", "related", "ATTRIBUTES", "f_weekday", "weekday", "names", "a_weekday", "abbreviated", "weekday", "names", "f_month", "month", "names", "dummy", "value", "which", "added", "a_month", "abbreviated", "month", "names", "dummy", "value", "which", "added", "am_pm", "representation", "LC_date_time", "format", "string", "representation", "string", "LC_date", "format", "string", "representation", "string", "LC_time", "format", "string", "representation", "string", "timezone", "daylight", "daylight", "savings", "timezone", "representation", "Language", "instance", "tuple", "attributes", "Order", "methods", "called", "matters", "dependency", "reasons", "locale", "language", "offset", "checked", "again", "before", "exiting", "attributes", "information", "locale", "would", "likely", "happen", "using", "threads", "where", "thread", "calls", "locale", "dependent", "function", "while", "another", "thread", "changes", "locale", "while", "function", "other", "thread", "still", "running", "Proper", "coding", "would", "locks", "prevent", "changing", "locale", "while", "locale", "dependent", "running", "check", "someone", "think", "about", "doing", "other", "possible", "issue", "someone", "changed", "timezone", "tzset", "issue", "programmer", "though", "since", "changing", "timezone", "worthless", "without", "locale", "changed", "during", "initializations&", "timezone", "changed", "during", "initializationN", "langt", "_LocaleTime__calc_weekdayt", "_LocaleTime__calc_montht", "_LocaleTime__calc_am_pmt", "_LocaleTime__calc_timezonet", "_LocaleTime__calc_date_timet", "ValueErrort", "timet", "tznamet", "daylight", "_strptime", "__init__2", "listt", "insertt", "append", "front", "_strptime", "__padQ", "ranget", "calendart", "day_abbrt", "lowert", "day_namet", "a_weekdayt", "f_weekday", "_strptime", "__calc_weekdayZ", "month_abbrR", "month_namet", "a_montht", "f_month", "_strptime", "__calc_monthb", "struct_timeR", "strftimeR", "am_pm", "hourt", "time_tuple", "_strptime", "__calc_am_pmi", "1999s", "NoneR", "extendt", "timezonet", "replacet", "LC_date_timet", "LC_datet", "LC_time", "date_timet", "replacement_pairst", "tz_valuest", "offsett", "directivet", "current_formatt", "_strptime", "__calc_date_timeu", "tzsett", "AttributeErrorR", "frozensetR", "no_savingt", "has_saving", "_strptime", "__calc_timezone", "__name__t", "__module__t", "__doc__R", "_LocaleTime__padR", "_strptime", "TimeREc", "Handle", "conversion", "format", "directives", "regexes", "Create", "values", "Order", "execution", "important", "dependency", "reasons", "tz_namesRI", "_strptime", "genexpr", "locale_timeR", "superR", "_TimeRE__seqToRER", "__setitem__t", "__getitem__RB", "patternRC", "_strptime", "Convert", "regex", "string", "matching", "directive", "possible", "matching", "values", "longest", "shortest", "prevents", "possibility", "match", "occurring", "value", "substring", "larger", "value", "should", "matched", "matching", "abcdef", "should", "match", "reverseR", "re_escape", "stuff", "_strptime", "genexpr", "sortedt", "Truet", "to_convertRK", "valuet", "regex", "_strptime", "__seqToRE", "Return", "regex", "pattern", "format", "string", "characters", "might", "interpreted", "regex", "syntax", "escaped", "re_compilet", "index", "formatt", "processed_formatt", "regex_charst", "whitespace_replacementt", "directive_index", "_strptime", "Return", "compiled", "object", "format", "string", "_strptime", "_strptime", "Calculate", "Julian", "based", "week_start_day", "representing", "whether", "assumes", "starts", "Sunday", "Monday", "datetime_datet", "weekday", "yeart", "week_of_yeart", "day_of_weekt", "week_starts_Mont", "first_weekdayt", "week_0_lengtht", "days_to_week", "_strptime", "_calc_julian_from_U_or_W", "Return", "struct", "based", "input", "string", "format", "string", "directive", "format", "stray", "format", "match", "format", "unconverted", "remains", "_cache_lockt", "_TimeRE_cacheRv", "_regex_cachet", "clearR", "_CACHE_MAX_SIZEt", "KeyErrort", "argsR", "IndexErrort", "matcht", "groupdictt", "iterkeyst", "enumerateRA", "FalseR", "isleapR", "toordinalt", "fromordinalR", "montht", "data_stringR", "format_regext", "bad_directivet", "foundR", "minutet", "secondt", "fractionRI", "week_of_year_startR", "juliant", "found_dictt", "group_keyt", "ampmt", "found_zoneR", "leap_year_fixR", "ydayt", "datetime_result", "_strptime", "_strptime", "_strptime", "_strptime_time", "datetimeR", "threadR", "_thread_allocate_lockt", "dummy_threadt", "__all__R", "objectR", "dictR", "_strptime", "module", "_threading_local", "Thread", "local", "objects", "module", "provides", "Python", "version", "threading", "local", "class", "Depending", "version", "Python", "using", "there", "faster", "available", "should", "always", "import", "local", "class", "threading", "Thread", "local", "objects", "support", "management", "thread", "local", "local", "thread", "simply", "create", "thread", "local", "object", "attributes", "mydata", "local", "mydata", "number", "mydata", "number", "access", "local", "object", "dictionary", "mydata", "__dict__", "number", "mydata", "__dict__", "setdefault", "widgets", "mydata", "widgets", "important", "about", "thread", "local", "objects", "their", "local", "thread", "access", "different", "thread", "items", "mydata", "__dict__", "items", "items", "append", "items", "mydata", "number", "append", "mydata", "number", "import", "threading", "thread", "threading", "Thread", "target", "thread", "start", "thread", "different", "Furthermore", "changes", "other", "thread", "affect", "thread", "mydata", "number", "course", "values", "local", "object", "including", "__dict__", "attribute", "whatever", "thread", "current", "attribute", "reason", "generally", "these", "values", "across", "threads", "apply", "thread", "create", "custom", "local", "objects", "subclassing", "local", "class", "class", "MyLocal", "local", "number", "initialized", "False", "__init__", "initialized", "raise", "SystemError", "__init__", "called", "times", "initialized", "__dict__", "update", "squared", "return", "number", "useful", "support", "default", "values", "methods", "initialization", "define", "__init__", "method", "called", "local", "object", "separate", "thread", "necessary", "initialize", "thread", "dictionary", "create", "local", "object", "mydata", "MyLocal", "color", "default", "number", "mydata", "number", "initial", "color", "mydata", "color", "mydata", "color", "method", "operates", "mydata", "squared", "before", "access", "separate", "thread", "thread", "threading", "Thread", "target", "thread", "start", "thread", "color", "initialized", "without", "affecting", "thread", "mydata", "number", "mydata", "color", "Traceback", "recent", "AttributeError", "MyLocal", "object", "attribute", "color", "subclasses", "define", "slots", "thread", "local", "shared", "across", "threads", "class", "MyLocal", "local", "__slots__", "number", "mydata", "MyLocal", "mydata", "number", "mydata", "color", "separate", "thread", "thread", "threading", "Thread", "target", "thread", "start", "thread", "affects", "mydata", "number", "mydata", "localt", "_localbasec", "_local__keyt", "_local__argst", "_local__lockc", "thread", "local", "Initialization", "arguments", "supportedt", "__dict__", "objectt", "__new__t", "__setattr__t", "RLockt", "__init__t", "TypeErrort", "__getattribute__t", "current_threadR", "argst", "selft", "_threading_local", "__name__t", "__module__t", "__slots__R", "_threading_local", "NoneR", "typeR", "_threading_local", "_patch", "acquireR", "release", "namet", "_threading_local", "object", "attribute", "__dict__", "onlyR", "AttributeErrort", "__class__R", "valueR!", "_threading_local", "object", "attribute", "__dict__", "onlyR", "__delattr__R", "_threading_local", "threadingR", "_enumerateR", "KeyError", "threadst", "threadR", "_threading_local", "__del__", "_threading_local", "__doc__t", "__all__R", "_threading_local", "module", "_weakrefset", "WeakSett", "_IterationGuardc", "weakcontainer", "selfR", "_weakrefset", "__init__", "Nonet", "_iteratingt", "_weakrefset", "__enter__", "removet", "_commit_removals", "_weakrefset", "__exit__", "__name__t", "__module__R", "_weakrefset", "_pending_removalst", "appendt", "datat", "discard", "itemt", "selfrefR", "_weakrefset", "_remove&", "update", "_weakrefset", "_weakrefset", "itemrefR", "_weakrefset", "__iter__", "_weakrefset", "__len__C", "TypeErrort", "FalseR", "_weakrefset", "__contains__F", "__dict__", "__class__t", "listt", "getattrR", "_weakrefset", "__reduce__M", "_weakrefset", "clear", "_weakrefset", "_weakrefset", "empty", "WeakSet", "TrueR", "KeyErrorR", "_weakrefset", "_weakrefset", "_weakrefset", "othert", "element", "_weakrefset", "_weakrefset", "__ior__", "difference_update", "newset", "_weakrefset", "difference", "__isub__", "_weakrefset", "pycR3", "_weakrefset", "genexpr", "_weakrefset", "pycR6", "_weakrefset", "genexpr", "_weakrefset", "intersection", "__iand__", "_weakrefset", "intersection_update", "_weakrefset", "genexpr", "_weakrefset", "pycR9", "_weakrefset", "genexpr", "issubset", "_weakrefset", "_weakrefset", "genexpr", "_weakrefset", "__lt__", "_weakrefset", "genexpr", "issuperset", "_weakrefset", "_weakrefset", "genexpr", "_weakrefset", "__gt__", "_weakrefset", "genexpr", "isinstanceR", "NotImplementedR", "_weakrefset", "__eq__", "opposite", "_weakrefset", "__ne__", "symmetric_difference_update", "_weakrefset", "symmetric_difference", "__ixor__", "_weakrefset", "pycRD", "_weakrefset", "genexpr", "_weakrefset", "pycRF", "_weakrefset", "genexpr", "_weakrefset", "union", "_weakrefset", "isdisjoint", "__hash__R", "__sub__R3", "__and__R", "__le__R", "__ge__R", "__xor__RD", "__or__RH", "_weakrefset", "_weakrefR", "__all__t", "objectR", "_weakrefset", "module", "Abstract", "Classes", "according", "WeakSett", "__name__t", "__module__", "decorator", "indicating", "abstract", "methods", "Requires", "metaclass", "ABCMeta", "derived", "class", "metaclass", "derived", "ABCMeta", "cannot", "instantiated", "unless", "abstract", "methods", "overridden", "abstract", "methods", "called", "using", "normal", "super", "mechanisms", "Usage", "class", "__metaclass__", "ABCMeta", "abstractmethod", "my_abstract_method", "Truet", "__isabstractmethod__", "funcobj", "abstractmethod", "abstractpropertyc", "decorator", "indicating", "abstract", "properties", "Requires", "metaclass", "ABCMeta", "derived", "class", "metaclass", "derived", "ABCMeta", "cannot", "instantiated", "unless", "abstract", "properties", "overridden", "abstract", "properties", "called", "using", "normal", "super", "mechanisms", "Usage", "class", "__metaclass__", "ABCMeta", "abstractproperty", "my_abstract_property", "defines", "property", "define", "write", "abstract", "property", "using", "property", "declaration", "class", "__metaclass__", "ABCMeta", "value", "abstractproperty", "__doc__R", "ABCMetac", "Metaclass", "defining", "Abstract", "Classes", "metaclass", "create", "subclassed", "directly", "class", "register", "unrelated", "concrete", "classes", "built", "classes", "unrelated", "virtual", "subclasses", "these", "their", "descendants", "considered", "subclasses", "registering", "built", "issubclass", "function", "registering", "their", "Method", "Resolution", "Order", "method", "implementations", "defined", "registering", "callable", "super", "getattrt", "False", "namet", "value", "genexpr", "__abstractmethods__R", "superR", "__new__t", "itemsR", "NoneR", "frozensetR", "_abc_registryt", "_abc_cachet", "_abc_negative_cachet", "_abc_invalidation_countert", "_abc_negative_cache_version", "mclsR", "basest", "namespacet", "abstractst", "baseR", "Register", "virtual", "subclass", "register", "classesNs", "Refusing", "create", "inheritance", "cyclei", "isinstancet", "typet", "typest", "ClassTypet", "TypeErrort", "issubclasst", "RuntimeErrorR", "subclass", "registeri", "Debug", "helper", "print", "registry", "Class", "counter", "_abc_s", "sortedt", "__dict__t", "keyst", "startswithR", "fileR", "_dump_registryw", "Override", "isinstance", "instance", "__class__N", "_InstanceTypeR", "__subclasscheck__", "instanceR", "subtype", "__instancecheck__", "Override", "issubclass", "subclass", "__mro__", "__subclasshook__t", "NotImplementedR", "boolt", "AssertionErrorR", "__subclasses__", "rclst", "pycR5", "_weakrefsetR", "propertyR", "module", "atexit", "atexit", "allow", "programmer", "define", "multiple", "functions", "executed", "normal", "program", "termination", "public", "function", "register", "defined", "registeri", "registered", "functions", "_exithandlers", "traversed", "reverse", "order", "functions", "executed", "first", "Error", "atexit", "_run_exitfuncs", "Nonet", "_exithandlerst", "SystemExitt", "exc_infot", "tracebackt", "stderrt", "print_exc", "funct", "targst", "kargsR", "atexit", "_run_exitfuncs", "register", "function", "executed", "normal", "program", "termination", "function", "called", "targs", "optional", "arguments", "kargs", "optional", "keyword", "arguments", "returned", "facilitate", "usage", "decorator", "append", "atexit", "exitfunct", "__main__c", "running", "atexit", "running", "atexit", "running", "atexit", "__doc__t", "__all__R", "hasattrR", "__name__R", "atexit", "module", "base64", "Base16", "Base32", "Base64", "Encodingsi", "encodet", "decodet", "encodestringt", "decodestringt", "b64encodet", "b64decodet", "b32encodet", "b32decodet", "b16encodet", "b16decodet", "standard_b64encodet", "standard_b64decodet", "urlsafe_b64encodet", "urlsafe_b64decodei", "_translationt", "itemst", "translatet", "altcharst", "translationt", "base64", "_translate!", "Encode", "string", "using", "Base64", "string", "encode", "Optional", "altchars", "string", "least", "length", "additional", "characters", "ignored", "which", "specifies", "alternative", "alphabet", "characters", "allows", "application", "generate", "filesystem", "Base64", "strings", "encoded", "string", "returned", "binasciit", "b2a_base64t", "NoneR", "stringt", "maketrans", "encoded", "base64", "Decode", "Base64", "encoded", "string", "string", "decode", "Optional", "altchars", "string", "least", "length", "additional", "characters", "ignored", "which", "specifies", "alternative", "alphabet", "instead", "characters", "decoded", "string", "returned", "TypeError", "raised", "incorrectly", "padded", "Characters", "neither", "normal", "alphabet", "alternative", "alphabet", "discarded", "prior", "padding", "check", "a2b_base64t", "Errort", "TypeError", "base64", "Encode", "string", "using", "standard", "Base64", "alphabet", "string", "encode", "encoded", "string", "returned", "base64", "Decode", "string", "encoded", "standard", "Base64", "alphabet", "Argument", "string", "decode", "decoded", "string", "returned", "TypeError", "raised", "string", "incorrectly", "padded", "Characters", "standard", "alphabet", "discarded", "prior", "padding", "check", "base64", "Encode", "string", "using", "filesystem", "Base64", "alphabet", "Argument", "string", "encode", "encoded", "string", "returned", "alphabet", "instead", "instead", "_urlsafe_encode_translation", "base64", "Decode", "string", "using", "filesystem", "Base64", "alphabet", "Argument", "string", "decode", "decoded", "string", "returned", "TypeError", "raised", "string", "incorrectly", "padded", "Characters", "alphabet", "slash", "discarded", "prior", "padding", "check", "alphabet", "instead", "instead", "_urlsafe_decode_translation", "base64", "Encode", "string", "using", "Base32", "string", "encode", "encoded", "string", "returned", "!HHBi", "divmodt", "ranget", "structt", "unpackt", "extendt", "_b32tabt", "EMPTYSTRINGR", "partst", "quantat", "leftovert", "base64", "Decode", "Base32", "encoded", "string", "string", "decode", "Optional", "casefold", "specifying", "whether", "lowercase", "alphabet", "acceptable", "input", "security", "purposes", "default", "False", "allows", "optional", "mapping", "digit", "letter", "optional", "mapping", "digit", "either", "letter", "letter", "optional", "argument", "map01", "specifies", "which", "letter", "digit", "should", "mapped", "map01", "digit", "always", "mapped", "letter", "security", "purposes", "default", "allowed", "input", "decoded", "string", "returned", "TypeError", "raised", "incorrectly", "padded", "there", "alphabet", "characters", "present", "string", "Incorrect", "paddingt", "base32", "digit", "foundi", "010xR", "uppert", "searcht", "groupt", "_b32revt", "appendR", "unhexlifyRN", "casefoldt", "map01RP", "padcharst", "shiftt", "base64", "Encode", "string", "using", "Base16", "string", "encode", "encoded", "string", "returned", "hexlifyRX", "base64", "Decode", "Base16", "encoded", "string", "string", "decode", "Optional", "casefold", "specifying", "whether", "lowercase", "alphabet", "acceptable", "input", "security", "purposes", "default", "False", "decoded", "string", "returned", "TypeError", "raised", "incorrectly", "padded", "there", "alphabet", "characters", "present", "string", "base16", "digit", "found", "base64", "Encode", "Truet", "readt", "MAXBINSIZERH", "write", "inputt", "outputR", "base64", "Decode", "readlineR", "base64", "Encode", "string", "multiple", "lines", "piecesRR", "chunk", "base64", "Decode", "string", "base64", "Small", "programi", "deuts", "usage", "decode", "encode", "default", "encode", "decode", "string", "Aladdin", "sesame", "getoptt", "argvt", "errort", "stderrt", "stdoutt", "exitR", "test1t", "opent", "stdin", "optst", "argsR", "funct", "base64", "testM", "Aladdin", "sesame", "base64", "__main__", "__doc__RY", "__all__RI", "_b32alphabetR", "sortR", "dictt", "longR", "FalseR", "MAXLINESIZERl", "__name__", "base64", "module", "Debugger", "basicsi", "BdbQuitt", "Breakpointc", "Exception", "completely", "__name__t", "__module__t", "__doc__", "Generic", "Python", "debugger", "class", "class", "takes", "details", "trace", "facility", "derived", "class", "should", "implement", "interaction", "standard", "debugger", "class", "example", "Nonet", "skipt", "breakst", "fncachet", "frame_returning", "selfR", "__init__", "patht", "abspatht", "normcase", "filenamet", "canonic", "linecachet", "checkcacheR", "botframet", "_set_stopinfo", "reset", "linet", "callt", "returnt", "exceptiont", "c_callt", "c_exceptiont", "c_returns", "dispatch", "unknown", "debugging", "event", "quittingt", "dispatch_linet", "dispatch_callt", "dispatch_returnt", "dispatch_exceptiont", "trace_dispatcht", "framet", "eventt", "stop_heret", "break_heret", "user_lineR", "pycR$", "f_backR", "break_anywheret", "user_callR", "returnframeR", "user_returnR", "pycR&", "user_exceptionR", "fnmatcht", "Truet", "False", "module_namet", "pattern", "is_skipped_moduleh", "f_globalsR", "stopframet", "stoplinenot", "f_linenoR", "f_codet", "co_filenameR", "co_firstlinenot", "effectivet", "numbert", "currentbpt", "temporaryt", "do_cleart", "strR7", "linenot", "subclass", "implement", "do_clear", "NotImplementedError", "pycRG", "pycR1", "method", "called", "there", "remote", "possibility", "function", "argument_list", "pycR2", "method", "called", "break", "method", "called", "return", "return_value", "pycR4", "exc_infot", "exc_typet", "exc_valuet", "exc_traceback", "pycR5", "greater", "current", "reached", "returning", "current", "framei", "set_until", "after", "f_traceR", "caller_frame", "set_step", "below", "given", "frame", "set_next", "returning", "given", "frame", "set_return", "Start", "debugging", "frame", "frame", "specified", "debugging", "starts", "caller", "frame", "_getframeR0", "settrace", "set_trace", "set_continue", "set_quit", "exist", "getlineR", "appendR", "condt", "funcnameR", "listRJ", "set_break", "bplistR", "remove", "_prune_breaks", "There", "breakpoints", "There", "breakpoint", "deleteMeRg", "clear_break", "numeric", "breakpoint", "number", "Breakpoint", "number", "ranges", "Breakpoint", "already", "deleted", "bpbynumbert", "IndexErrorRh", "fileR", "clear_bpbynumber", "There", "breakpoints", "blistRJ", "clear_all_file_breaks", "There", "breakpoints", "clear_all_breaks5", "get_break", "get_breaksB", "get_file_breaksH", "get_all_breaksO", "tb_framet", "tb_nextR", "reverset", "tb_lineno", "stackt", "get_stackU", "lambda", "__args__s", "__return__s", "co_namet", "f_localsR", "strip", "frame_linenot", "lprefixR", "argst", "format_stack_entryi", "__main__t", "__dict__R", "isinstancet", "typest", "CodeTypeR", "globalst", "localsR", "evalR", "exprR", "runeval", "runctx", "funcR", "kwdst", "runcall", "Breakpoint", "class", "Implements", "temporary", "breakpoints", "ignore", "counts", "disabling", "enabling", "conditionals", "Breakpoints", "indexed", "number", "through", "bpbynumber", "tuple", "using", "bplist", "former", "points", "single", "instance", "class", "Breakpoint", "latter", "points", "instances", "since", "there", "breakpoint", "func_first_executable_lineRm", "enabledt", "ignoret", "hitsR", "nextRD", "index", "pycRh", "enable", "disable", "4dbreakpoint", "ignore", "hitsi", "breakpoint", "already", "stdoutRF", "dispt", "bpprint", "Check", "whether", "should", "break", "because", "funcname", "checkfuncname", "Determine", "which", "breakpoint", "acted", "Called", "there", "location", "Returns", "breakpoint", "triggered", "indicates", "delete", "temporary", "rangeRz", "possiblesR", "pycRC", "pycR2", "return", "retval", "pycR4", "exception", "exc_stuff", "pycR5", "returned", "import", "__all__t", "ExceptionR", "module", "calendar", "Calendar", "printing", "functions", "comparing", "these", "calendars", "printed", "default", "these", "calendars", "Monday", "first", "Sunday", "European", "convention", "setfirstweekday", "first", "Monday", "Sunday", "IllegalMonthErrort", "IllegalWeekdayErrort", "setfirstweekdayt", "firstweekdayt", "isleapt", "leapdayst", "weekdayt", "monthranget", "monthcalendart", "prmontht", "montht", "prcalt", "calendart", "timegmt", "month_namet", "month_abbrt", "day_namet", "day_abbrc", "selfR", "calendar", "__init__", "month", "number", "calendar", "__str__", "__name__t", "__module__R", "calendar", "calendar", "weekday", "number", "Monday", "Sunday", "calendar", "calendar", "_localized_monthc", "calendar", "lambda", "format", "calendar", "_monthst", "isinstancet", "sliceR", "funcst", "calendar", "__getitem__7", "calendar", "__len__", "rangeR", "datetimet", "datet", "strftimeR", "insertR", "calendar", "_localized_dayc", "calendar", "_daysR", "calendar", "calendar", "calendar", "Return", "years", "False", "years", "calendar", "Return", "number", "years", "range", "Assume", "calendar", "Return", "weekday", "month", "calendar", "Return", "weekday", "number", "month", "mdayst", "FebruaryR", "day1t", "ndays", "calendar", "Calendarc", "calendar", "class", "class", "doesn", "formatting", "simply", "provides", "subclasses", "calendar", "_firstweekday", "calendar", "getfirstweekday", "calendar", "Return", "iterator", "weekday", "numbers", "starting", "configured", "first", "calendar", "iterweekdays", "Return", "iterator", "month", "iterator", "yield", "datetime", "values", "always", "iterate", "through", "complete", "weeks", "yield", "dates", "outside", "specified", "month", "daysN", "timedeltat", "Truet", "OverflowErrorR", "oneday", "calendar", "itermonthdates", "itermonthdates", "yield", "number", "weekday", "number", "tuples", "outside", "specified", "month", "number", "enumeratet", "itermonthdaysR", "calendar", "itermonthdays2", "itermonthdates", "yield", "numbers", "outside", "specified", "month", "number", "days_beforet", "days_after", "calendar", "Return", "matrix", "lists", "representing", "month", "calendar", "represents", "entries", "datetime", "values", "listR", "datesR", "calendar", "monthdatescalendar", "Return", "matrix", "representing", "month", "calendar", "represents", "entries", "number", "weekday", "number", "tuples", "numbers", "outside", "month", "calendar", "monthdays2calendar", "Return", "matrix", "representing", "month", "calendar", "represents", "outside", "month", "calendar", "monthdayscalendar", "Return", "specified", "ready", "formatting", "return", "value", "month", "month", "contains", "width", "months", "month", "contains", "between", "weeks", "contains", "datetime", "objects", "JanuaryRG", "widthR", "months", "calendar", "yeardatescalendar", "Return", "specified", "ready", "formatting", "similar", "yeardatescalendar", "Entries", "lists", "number", "weekday", "number", "tuples", "numbers", "outside", "month", "calendar", "yeardays2calendar", "Return", "specified", "ready", "formatting", "similar", "yeardatescalendar", "Entries", "lists", "numbers", "numbers", "outside", "month", "calendar", "yeardayscalendar", "__doc__R", "propertyR", "calendar", "pycR3", "TextCalendarc", "Subclass", "Calendar", "outputs", "calendar", "simple", "plain", "similar", "program", "Print", "single", "newline", "formatweek", "theweekRK", "calendar", "prweek", "Returns", "formatted", "center", "calendar", "formatday", "Returns", "single", "string", "newline", "calendar", "genexpr", "calendar", "pycRS", "Returns", "formatted", "names", "calendar", "formatweekday", "Return", "header", "calendar", "genexpr", "calendar", "formatweekheader", "Return", "formatted", "month", "theyeart", "themonthRK", "withyearRW", "calendar", "formatmonthname0", "Print", "month", "calendar", "formatmonth", "calendar", "Return", "month", "calendar", "string", "multi", "maxRc", "rstripR_", "calendar", "pycRd", "Returns", "calendar", "multi", "string", "False", "colwidthR", "calendar", "genexpr", "header", "calendar", "genexpr", "calendar", "genexpr", "appendt", "reprRV", "formatstringRE", "rowRL", "headerst", "heightt", "weeksRn", "calendar", "formatyearO", "Print", "calendar", "calendar", "pryeart", "calendar", "pycRR", "HTMLCalendarc", "calendar", "returns", "complete", "pages", "Return", "table", "class", "noday", "&nbsp", "class", "cssclasses", "calendar", "pycRX", "Return", "complete", "table", "calendar", "genexpr", "calendar", "pycRS", "Return", "weekday", "table", "header", "class", "calendar", "Return", "header", "table", "calendar", "genexpr", "calendar", "pycR_", "Return", "month", "table", "colspan", "class", "month", "calendar", "pycRc", "Return", "formatted", "month", "table", "table", "border", "cellpadding", "cellspacing", "class", "month", "table", "calendar", "pycRd", "Return", "formatted", "table", "tables", "table", "border", "cellpadding", "cellspacing", "class", "colspan", "class", "table", "calendar", "calendar", "Return", "formatted", "complete", "version", "encoding", "!DOCTYPE", "PUBLIC", "XHTML", "Strict", "xhtml1", "xhtml1", "strict", "equiv", "Content", "content", "charset", "stylesheet", "title", "Calendar", "title", "xmlcharrefreplaceN", "Nonet", "getdefaultencodingRo", "encode", "encodingRu", "calendar", "formatyearpage", "calendar", "TimeEncodingc", "locale", "calendar", "_localet", "getlocalet", "LC_TIMEt", "oldlocalet", "setlocaleR", "calendar", "__enter__", "calendar", "__exit__", "calendar", "LocaleTextCalendarc", "class", "passed", "locale", "constructor", "return", "month", "weekday", "names", "specified", "locale", "locale", "includes", "encoding", "strings", "containing", "month", "weekday", "names", "returned", "unicode", "getdefaultlocaleR", "calendar", "decodeRV", "calendar", "calendar", "pycRc", "calendar", "LocaleHTMLCalendarc", "class", "passed", "locale", "constructor", "return", "month", "weekday", "names", "specified", "locale", "locale", "includes", "encoding", "strings", "containing", "month", "weekday", "names", "returned", "unicode", "calendar", "class", "calendar", "colspan", "class", "month", "calendar", "pycRc", "calendar", "__index__t", "AttributeErrorR", "MONDAYt", "SUNDAYRs", "calendar", "Prints", "multi", "column", "formatting", "calendarsN", "colsRl", "spacing", "calendar", "Returns", "string", "formatted", "strings", "centered", "within", "columns", "calendar", "genexpr", "calendar", "pycRr", "Unrelated", "handy", "function", "calculate", "timestamp", "toordinalt", "_EPOCH_ORD", "tupleR", "hourt", "minutet", "secondR7", "hourst", "minutest", "seconds", "calendar", "usages", "usage", "options", "month", "widtht", "destRK", "typet", "defaulti", "helps", "width", "column", "default", "linest", "linesi", "number", "lines", "default", "spacingR", "spacing", "between", "months", "default", "monthsRL", "months", "default", "calendar", "localeR", "locale", "month", "weekday", "namess", "encodingR", "Encoding", "outputs", "typet", "textt", "choicest", "htmls", "output", "locale", "specified", "encoding", "requireds", "incorrect", "number", "argumentsRe", "optparset", "OptionParsert", "add_optionR", "parse_argsR", "errorR", "exitR", "dictR", "todayR", "parsert", "optionsR", "optdictt", "result", "calendar", "mainm", "__main__", "__all__t", "ValueErrorR", "TUESDAYt", "WEDNESDAYt", "THURSDAYt", "FRIDAYt", "SATURDAYR", "objectR3", "weekheaderR", "_colwidtht", "_spacingR", "EPOCHR&", "calendar", "module", "lkk35", "generic", "class", "build", "oriented", "command", "interpreters", "Interpreters", "constructed", "class", "following", "conventions", "input", "processed", "command", "command", "parsed", "collecting", "prefix", "composed", "characters", "identchars", "member", "command", "dispatched", "method", "do_foo", "method", "passed", "single", "argument", "consisting", "remainder", "Typing", "empty", "repeats", "command", "Actually", "calls", "method", "emptyline", "which", "overridden", "subclass", "There", "predefined", "method", "Given", "argument", "topic", "calls", "command", "help_topic", "arguments", "lists", "topics", "defined", "help_", "functions", "broken", "three", "topics", "documented", "commands", "miscellaneous", "topics", "undocumented", "commands", "command", "synonym", "command", "synonym", "shell", "do_shell", "method", "exists", "completion", "enabled", "completing", "commands", "automatically", "completing", "commands", "calling", "complete_foo", "arguments", "begidx", "endidx", "string", "matching", "against", "returned", "matches", "begin", "current", "input", "lstripped", "begidx", "endidx", "beginning", "indexes", "being", "matched", "which", "could", "provide", "different", "completion", "depending", "which", "position", "argument", "default", "method", "overridden", "intercept", "commands", "which", "there", "method", "completedefault", "method", "overridden", "intercept", "completions", "commands", "complete_", "method", "member", "ruler", "character", "separator", "lines", "messages", "empty", "ruler", "drawn", "defaults", "value", "intro", "nonempty", "cmdloop", "method", "called", "printed", "interpreter", "startup", "value", "overridden", "optional", "argument", "cmdloop", "method", "members", "doc_header", "misc_header", "undoc_header", "headers", "function", "listings", "documented", "functions", "miscellaneous", "topics", "undocumented", "functions", "respectively", "These", "interpreters", "raw_input", "readline", "module", "loaded", "automatically", "support", "Emacs", "command", "history", "editing", "features", "simple", "framework", "writing", "oriented", "command", "interpreters", "These", "often", "useful", "harnesses", "administrative", "tools", "prototypes", "later", "wrapped", "sophisticated", "interface", "instance", "subclass", "instance", "oriented", "interpreter", "framework", "There", "reason", "instantiate", "itself", "rather", "useful", "superclass", "interpreter", "class", "define", "yourself", "order", "inherit", "methods", "encapsulate", "action", "methods", "Documented", "commands", "topic", "Miscellaneous", "topics", "Undocumented", "commands", "Instantiate", "oriented", "interpreter", "framework", "optional", "argument", "completekey", "readline", "completion", "defaults", "completekey", "readline", "module", "available", "command", "completion", "automatically", "optional", "arguments", "stdin", "stdout", "specify", "alternate", "input", "output", "objects", "specified", "stdin", "stdout", "Nonet", "stdint", "stdoutt", "cmdqueuet", "completekey", "selfR", "__init__O", "Repeatedly", "issue", "prompt", "accept", "input", "parse", "initial", "prefix", "received", "input", "dispatch", "action", "methods", "passing", "remainder", "argument", "completes", "preloopt", "use_rawinputR", "readlinet", "get_completert", "old_completert", "set_completert", "completet", "parse_and_bindt", "ImportErrorR", "introR", "writet", "raw_inputt", "promptt", "EOFErrort", "flushR", "rstript", "precmdt", "onecmdt", "postcmdt", "postloop", "stopt", "cmdloopf", "method", "executed", "before", "command", "interpreted", "after", "input", "prompt", "generated", "issued", "pycR!", "method", "executed", "after", "command", "dispatch", "finished", "method", "executed", "cmdloop", "method", "called", "method", "executed", "cmdloop", "method", "about", "return", "pycR$", "Parse", "command", "string", "containing", "arguments", "Returns", "tuple", "containing", "command", "command", "couldn", "parsed", "do_shells", "shell", "stripR", "hasattrR", "identchars", "parseline", "Interpret", "argument", "though", "typed", "response", "prompt", "overridden", "should", "normally", "precmd", "postcmd", "methods", "useful", "execution", "hooks", "return", "value", "indicating", "whether", "interpretation", "commands", "interpreter", "should", "emptylineR", "defaultt", "lastcmdt", "getattrt", "AttributeError", "Called", "empty", "entered", "response", "prompt", "method", "overridden", "repeats", "nonempty", "command", "entered", "pycR4", "Called", "input", "command", "prefix", "recognized", "method", "overridden", "prints", "error", "message", "returns", "Unknown", "syntax", "pycR5", "Method", "called", "complete", "input", "command", "specific", "complete_", "method", "available", "default", "returns", "empty", "ignored", "completedefault", "get_namest", "startswith", "textR", "dotextt", "completenames", "Return", "possible", "completion", "command", "entered", "complete", "against", "command", "Otherwise", "complete_", "command", "completions", "complete_", "get_line_buffert", "lstripR", "get_begidxt", "get_endidxR2", "completion_matchest", "IndexErrorR", "stateR", "origlineR&", "strippedt", "begidxt", "endidxR0", "argst", "compfunc", "__class__", "help_i", "genexpr", "setRA", "commandst", "topics", "complete_help", "available", "commands", "detailed", "__doc__R", "nohelpR", "sortt", "appendt", "doc_leadert", "print_topicst", "doc_headert", "misc_headert", "keyst", "undoc_header", "namest", "cmds_doct", "cmds_undoct", "helpt", "namet", "prevnameR0", "do_help", "rulerR", "columnize", "headert", "cmdst", "cmdlent", "maxcol", "pycR_", "Display", "strings", "compact", "columns", "column", "necessary", "Columns", "separated", "spaces", "legible", "enough", "empty", "string", "rangeR", "isinstanceR", "TypeErrort", "joint", "ljust", "displaywidthR", "nonstringst", "sizet", "nrowst", "ncolst", "colwidthst", "totwidtht", "colwidtht", "texts", "pycRm", "__name__t", "__module__RZ", "PROMPTR", "IDENTCHARSR", "stringt", "__all__R", "ascii_letterst", "digitsR", "module", "codecs", "codecs", "Python", "Codec", "Registry", "helpers", "Written", "Andre", "Lemburg", "lemburg", "Copyright", "Rights", "Reserved", "WARRANTY", "Failed", "builtin", "codecs", "registert", "lookupt", "opent", "EncodedFilet", "BOM_BEt", "BOM_LEt", "BOM32_BEt", "BOM32_LEt", "BOM64_BEt", "BOM64_LEt", "BOM_UTF8t", "BOM_UTF16t", "BOM_UTF16_LEt", "BOM_UTF16_BEt", "BOM_UTF32t", "BOM_UTF32_LEt", "BOM_UTF32_BEt", "CodecInfot", "Codect", "IncrementalEncodert", "IncrementalDecodert", "StreamReadert", "StreamWritert", "StreamReaderWritert", "StreamRecodert", "getencodert", "getdecodert", "getincrementalencodert", "getincrementaldecodert", "getreadert", "getwritert", "encodet", "decodet", "iterencodet", "iterdecodet", "strict_errorst", "ignore_errorst", "replace_errorst", "xmlcharrefreplace_errorst", "backslashreplace_errorst", "register_errort", "lookup_errors", "littlec", "Codec", "details", "looking", "codec", "registryc", "tuplet", "__new__t", "nameR!", "incrementalencodert", "incrementaldecodert", "streamwritert", "streamreadert", "Nonet", "_is_text_encoding", "clsR!", "codecs", "object", "encoding", "__class__t", "__module__t", "__name__R", "codecs", "__repr__k", "__doc__t", "TrueR5", "codecs", "Defines", "interface", "stateless", "encoders", "decoders", "encode", "decode", "methods", "different", "error", "handling", "schemes", "providing", "errors", "argument", "These", "string", "values", "predefined", "strict", "raise", "ValueError", "error", "subclass", "ignore", "ignore", "character", "continue", "replace", "replace", "suitable", "replacement", "character", "Python", "official", "REPLACEMENT", "CHARACTER", "builtin", "Unicode", "codecs", "decoding", "encoding", "xmlcharrefreplace", "Replace", "appropriate", "character", "reference", "encoding", "backslashreplace", "Replace", "backslashed", "escape", "sequences", "encoding", "allowed", "values", "extended", "register_error", "strictc", "Encodes", "object", "input", "returns", "tuple", "output", "object", "length", "consumed", "errors", "defines", "error", "handling", "apply", "defaults", "strict", "handling", "method", "store", "state", "Codec", "instance", "StreamWriter", "codecs", "which", "state", "order", "encoding", "efficient", "encoder", "handle", "length", "input", "return", "empty", "object", "output", "object", "situation", "NotImplementedError", "inputt", "errors", "codecs", "pycR!", "Decodes", "object", "input", "returns", "tuple", "output", "object", "length", "consumed", "input", "object", "which", "provides", "bf_getreadbuf", "buffer", "Python", "strings", "buffer", "objects", "memory", "mapped", "files", "examples", "objects", "providing", "errors", "defines", "error", "handling", "apply", "defaults", "strict", "handling", "method", "store", "state", "Codec", "instance", "StreamReader", "codecs", "which", "state", "order", "decoding", "efficient", "decoder", "handle", "length", "input", "return", "empty", "object", "output", "object", "situation", "codecs", "codecs", "IncrementalEncoder", "encodes", "input", "multiple", "steps", "input", "passed", "piece", "piece", "encode", "method", "IncrementalEncoder", "remembers", "state", "Encoding", "process", "between", "calls", "encode", "Creates", "IncrementalEncoder", "instance", "IncrementalEncoder", "different", "error", "handling", "schemes", "providing", "errors", "keyword", "argument", "module", "docstring", "possible", "values", "buffer", "codecs", "__init__", "Encodes", "input", "returns", "resulting", "object", "final", "codecs", "pycR!", "Resets", "encoder", "initial", "state", "codecs", "reset", "Return", "current", "state", "encoder", "codecs", "getstate", "current", "state", "encoder", "state", "returned", "getstate", "state", "codecs", "setstate", "FalseR!", "codecs", "BufferedIncrementalEncoderc", "subclass", "IncrementalEncoder", "baseclass", "incremental", "encoder", "encoder", "output", "buffer", "between", "calls", "encode", "codecs", "pycRE", "codecs", "_buffer_encode", "datat", "resultt", "consumed", "codecs", "pycR!", "codecs", "pycRG", "codecs", "pycRH", "codecs", "pycRJ", "codecs", "pycRL", "IncrementalDecoder", "decodes", "input", "multiple", "steps", "input", "passed", "piece", "piece", "decode", "method", "IncrementalDecoder", "remembers", "state", "decoding", "process", "between", "calls", "decode", "Creates", "IncrementalDecoder", "instance", "IncrementalDecoder", "different", "error", "handling", "schemes", "providing", "errors", "keyword", "argument", "module", "docstring", "possible", "values", "codecs", "pycRE", "Decodes", "input", "returns", "resulting", "object", "codecs", "Resets", "decoder", "initial", "state", "codecs", "pycRG", "Return", "current", "state", "decoder", "buffered_input", "additional_state_info", "tuple", "buffered_input", "bytes", "object", "containing", "bytes", "passed", "decode", "converted", "additional_state_info", "negative", "integer", "representing", "state", "decoder", "WITHOUT", "having", "processed", "contents", "buffered_input", "initial", "state", "after", "reset", "getstate", "return", "codecs", "pycRH", "current", "state", "decoder", "state", "returned", "getstate", "effect", "setstate", "equivalent", "reset", "codecs", "pycRJ", "codecs", "BufferedIncrementalDecoderc", "subclass", "IncrementalDecoder", "baseclass", "incremental", "decoder", "decoder", "handle", "incomplete", "sequences", "codecs", "pycRE", "codecs", "_buffer_decode2", "codecs", "codecs", "pycRG", "codecs", "pycRH", "codecs", "pycRJ", "codecs", "pycRQ", "Creates", "StreamWriter", "instance", "stream", "object", "writing", "binary", "StreamWriter", "different", "error", "handling", "schemes", "providing", "errors", "keyword", "argument", "These", "parameters", "predefined", "strict", "raise", "ValueError", "subclass", "ignore", "ignore", "character", "continue", "replace", "replace", "suitable", "replacement", "character", "xmlcharrefreplace", "Replace", "appropriate", "character", "reference", "backslashreplace", "Replace", "backslashed", "escape", "sequences", "encoding", "allowed", "parameter", "values", "extended", "register_error", "streamRB", "codecs", "pycRE", "Writes", "object", "contents", "encoded", "stream", "write", "objectRN", "codecs", "pycRT", "Writes", "concatenated", "strings", "stream", "using", "write", "codecs", "writelinest", "Flushes", "resets", "codec", "buffers", "keeping", "state", "Calling", "method", "should", "ensure", "output", "clean", "state", "allows", "appending", "fresh", "without", "having", "rescan", "whole", "stream", "recover", "state", "codecs", "pycRG", "seekRG", "offsett", "whence", "codecs", "pycRY", "Inherit", "other", "methods", "underlying", "stream", "getattr", "codecs", "__getattr__", "codecs", "__enter__", "close", "typet", "valuet", "codecs", "__exit__", "codecs", "Creates", "StreamReader", "instance", "stream", "object", "reading", "binary", "StreamReader", "different", "error", "handling", "schemes", "providing", "errors", "keyword", "argument", "These", "parameters", "predefined", "strict", "raise", "ValueError", "subclass", "ignore", "ignore", "character", "continue", "replace", "replace", "suitable", "replacement", "character", "allowed", "parameter", "values", "extended", "register_error", "bytebuffert", "charbufferR4", "linebuffer", "codecs", "pycRE", "codecs", "Decodes", "stream", "stream", "returns", "resulting", "object", "chars", "indicates", "number", "characters", "stream", "never", "return", "chars", "characters", "might", "return", "there", "enough", "characters", "available", "indicates", "approximate", "maximum", "number", "bytes", "stream", "decoding", "purposes", "decoder", "modify", "setting", "appropriate", "default", "value", "indicates", "decode", "possible", "intended", "prevent", "having", "decode", "files", "firstline", "UnicodeDecodeError", "happens", "after", "first", "terminator", "input", "first", "returned", "input", "until", "method", "should", "greedy", "strategy", "meaning", "should", "allowed", "within", "definition", "encoding", "given", "optional", "encoding", "endings", "state", "markers", "available", "stream", "these", "should", "lenRS", "readRd", "UnicodeDecodeErrort", "startt", "splitlines", "sizet", "charst", "firstlinet", "newdataRN", "newcharst", "decodedbytest", "linesRO", "codecs", "pycRh", "input", "stream", "return", "decoded", "given", "passed", "argument", "method", "endswithRV", "keependst", "linet", "readsizeRN", "line0withendt", "line0withoutend", "codecs", "readline", "lines", "available", "input", "stream", "return", "lines", "breaks", "implemented", "using", "codec", "decoder", "method", "included", "entries", "sizehint", "given", "ignored", "since", "there", "efficient", "finding", "sizehintRu", "codecs", "readlinesO", "Resets", "codec", "buffers", "keeping", "state", "stream", "repositioning", "should", "place", "method", "primarily", "intended", "recover", "decoding", "errors", "codecs", "pycRG", "input", "stream", "current", "position", "Resets", "codec", "buffers", "keeping", "state", "codecs", "pycRY", "Return", "decoded", "input", "stream", "StopIteration", "codecs", "nexts", "codecs", "__iter__", "Inherit", "other", "methods", "underlying", "stream", "codecs", "codecs", "codecs", "pycRc", "codecs", "StreamReaderWriter", "instances", "allow", "wrapping", "streams", "which", "write", "modes", "design", "factory", "functions", "returned", "codec", "lookup", "function", "construct", "instance", "unknownR", "Creates", "StreamReaderWriter", "instance", "stream", "Stream", "object", "Reader", "Writer", "factory", "functions", "classes", "providing", "StreamReader", "StreamWriter", "interface", "Error", "handling", "defined", "StreamWriter", "Readers", "readert", "writerRB", "Readert", "WriterRB", "codecs", "pycRE", "codecs", "pycRh", "codecs", "pycRz", "codecs", "Return", "decoded", "input", "stream", "codecs", "codecs", "codecs", "pycRT", "codecs", "pycRX", "codecs", "pycRG", "codecs", "pycRY", "Inherit", "other", "methods", "underlying", "stream", "codecs", "codecs", "codecs", "pycRc", "encodingRE", "codecs", "StreamRecoder", "instances", "provide", "frontend", "backend", "encoding", "complete", "returned", "codecs", "lookup", "function", "implement", "their", "written", "stream", "first", "decoded", "intermediate", "format", "which", "dependent", "given", "codec", "combination", "written", "stream", "using", "instance", "provided", "Writer", "class", "other", "direction", "stream", "using", "Reader", "instance", "return", "encoded", "caller", "Creates", "StreamRecoder", "instance", "which", "implements", "conversion", "encode", "decode", "frontend", "input", "output", "write", "while", "Reader", "Writer", "backend", "reading", "writing", "stream", "these", "objects", "transparent", "direct", "recodings", "latin", "stream", "object", "encode", "decode", "adhere", "Codec", "interface", "Reader", "Writer", "factory", "functions", "classes", "providing", "StreamReader", "StreamWriter", "interface", "encode", "decode", "needed", "frontend", "translation", "Reader", "Writer", "backend", "translation", "Unicode", "intermediate", "encoding", "Error", "handling", "defined", "StreamWriter", "Readers", "codecs", "pycRE", "bytesencoded", "codecs", "pycRh", "codecs", "pycRz", "codecs", "Return", "decoded", "input", "stream", "codecs", "codecs", "bytesdecoded", "codecs", "pycRT", "codecs", "pycRX", "codecs", "pycRG", "Inherit", "other", "methods", "underlying", "stream", "codecs", "codecs", "codecs", "pycRc", "data_encodingt", "file_encodingRE", "codecs", "encoded", "using", "given", "return", "wrapped", "version", "providing", "transparent", "encoding", "decoding", "wrapped", "version", "accept", "object", "format", "defined", "codecs", "Unicode", "objects", "builtin", "codecs", "Output", "codec", "dependent", "usually", "Unicode", "Files", "always", "opened", "binary", "binary", "specified", "avoid", "encodings", "using", "values", "default", "meaning", "binary", "encoding", "specifies", "encoding", "which", "errors", "given", "define", "error", "handling", "defaults", "strict", "which", "causes", "ValueErrors", "raised", "encoding", "error", "occurs", "buffering", "meaning", "builtin", "defaults", "buffered", "returned", "wrapped", "object", "provides", "extra", "attribute", "encoding", "which", "allows", "querying", "encoding", "attribute", "available", "encoding", "specified", "parameter", "stript", "replacet", "__builtin__R", "filenamet", "modeR", "bufferingt", "filet", "infot", "codecs", "Return", "wrapped", "version", "which", "provides", "transparent", "encoding", "translation", "Strings", "written", "wrapped", "interpreted", "according", "given", "data_encoding", "written", "original", "string", "using", "file_encoding", "intermediate", "encoding", "usually", "Unicode", "depends", "specified", "codecs", "Strings", "using", "file_encoding", "passed", "caller", "string", "using", "data_encoding", "file_encoding", "given", "defaults", "data_encoding", "errors", "given", "define", "error", "handling", "defaults", "strict", "which", "causes", "ValueErrors", "raised", "encoding", "error", "occurs", "returned", "wrapped", "object", "provides", "extra", "attributes", "data_encoding", "file_encoding", "which", "reflect", "given", "parameters", "attributes", "introspection", "Python", "programs", "data_infot", "file_infot", "codecs", "Lookup", "codec", "given", "encoding", "return", "encoder", "function", "Raises", "LookupError", "encoding", "cannot", "found", "codecs", "Lookup", "codec", "given", "encoding", "return", "decoder", "function", "Raises", "LookupError", "encoding", "cannot", "found", "codecs", "Lookup", "codec", "given", "encoding", "return", "IncrementalEncoder", "class", "factory", "function", "Raises", "LookupError", "encoding", "cannot", "found", "codecs", "doesn", "provide", "incremental", "encoder", "LookupError", "encoder", "codecs", "Lookup", "codec", "given", "encoding", "return", "IncrementalDecoder", "class", "factory", "function", "Raises", "LookupError", "encoding", "cannot", "found", "codecs", "doesn", "provide", "incremental", "decoder", "decoder", "codecs", "Lookup", "codec", "given", "encoding", "return", "StreamReader", "class", "factory", "function", "Raises", "LookupError", "encoding", "cannot", "found", "codecs", "Lookup", "codec", "given", "encoding", "return", "StreamWriter", "class", "factory", "function", "Raises", "LookupError", "encoding", "cannot", "found", "codecs", "Encoding", "iterator", "Encodes", "input", "strings", "iterator", "using", "IncrementalEncoder", "errors", "kwargs", "passed", "through", "IncrementalEncoder", "constructor", "iteratorR", "kwargsR", "output", "codecs", "Decoding", "iterator", "Decodes", "input", "strings", "iterator", "using", "IncrementalDecoder", "errors", "kwargs", "passed", "through", "IncrementalDecoder", "constructor", "codecs", "pycR$", "make_identity_dict", "Return", "dictionary", "where", "elements", "sequence", "mapped", "themselves", "codecs", "make_identity_dict", "Creates", "encoding", "decoding", "target", "mapping", "decoding", "occurs", "multiple", "times", "target", "mapped", "undefined", "mapping", "causing", "exception", "encountered", "charmap", "codec", "during", "translation", "example", "where", "happens", "cp875", "which", "decodes", "multiple", "character", "u001a", "itemsR4", "decoding_mapt", "codecs", "make_encoding_map&", "ignoreR", "xmlcharrefreplacet", "backslashreplacei", "__main__s", "latin", "_codecst", "ImportErrort", "SystemErrort", "__all__R", "byteorderR", "_falset", "encodingsR", "stdoutt", "stdin", "codecs", "module", "collections", "module", "implements", "specialized", "container", "datatypes", "providing", "alternatives", "Python", "general", "purpose", "built", "containers", "tuple", "namedtuple", "factory", "function", "creating", "tuple", "subclasses", "named", "fields", "deque", "container", "appends", "either", "Counter", "subclass", "counting", "hashable", "objects", "OrderedDict", "subclass", "remembers", "order", "entries", "added", "defaultdict", "subclass", "calls", "factory", "function", "supply", "missing", "values", "Countert", "dequet", "defaultdictt", "namedtuplet", "OrderedDicti", "itemgettert", "iskeyword", "repeatt", "chaint", "starmap", "get_identc", "Dictionary", "remembers", "insertion", "orderc", "Initialize", "ordered", "dictionary", "signature", "regular", "dictionaries", "keyword", "arguments", "recommended", "because", "their", "insertion", "order", "arbitrary", "descriptor", "__init__", "OrderedDict", "object", "needs", "argumenti", "expected", "arguments", "TypeErrort", "_OrderedDict__roott", "AttributeErrort", "Nonet", "_OrderedDict__mapt", "_OrderedDict__update", "argst", "kwdst", "selft", "collections", "__init__2", "__setitem__", "valuet", "dict_setitemR", "collections", "__setitem__G", "__delitem__", "dict_delitemt", "link_prevt", "link_nextt", "collections", "__delitem__Q", "__iter__", "collections", "__iter__Z", "__reversed__", "reversed", "collections", "__reversed__c", "clear", "Remove", "items", "cleart", "collections", "collections", "keysu", "values", "values", "collections", "valuesy", "items", "value", "pairs", "collections", "items", "iterkeys", "iterator", "collections", "iterkeys", "itervalues", "iterator", "values", "collections", "itervalues", "iteritems", "iterator", "value", "pairs", "collections", "iteritems", "remove", "specified", "return", "corresponding", "value", "found", "returned", "given", "otherwise", "KeyError", "raised", "_OrderedDict__markert", "KeyError", "defaultt", "result", "collections", "setdefault", "collections", "setdefault", "popitem", "return", "remove", "value", "Pairs", "returned", "order", "order", "false", "dictionary", "empty", "nextt", "reversedR", "collections", "popitem", "__repr__", "_get_identt", "__class__t", "__name__R", "_repr_runningt", "call_key", "collections", "__repr__", "Return", "state", "information", "picklingN", "varst", "copyR", "inst_dict", "collections", "__reduce__", "shallow", "collections", "pycRC", "fromkeys", "ordered", "dictionary", "specified", "value", "defaults", "iterableR", "collections", "fromkeys", "__eq__", "Comparison", "another", "order", "sensitive", "while", "comparison", "regular", "mapping", "order", "insensitive", "isinstanceR", "__eq__t", "_imapt", "other", "collections", "pycRJ", "__ne__", "collections", "__ne__", "viewkeys", "object", "providing", "KeysView", "collections", "viewkeys", "viewvalues", "object", "providing", "values", "ValuesView", "collections", "viewvalues", "viewitems", "object", "providing", "items", "ItemsView", "collections", "viewitems", "__module__t", "__doc__R", "MutableMappingt", "updateR", "objectR3", "TrueR", "classmethodRH", "collections", "class", "typename", "tuple", "typename", "arg_list", "__slots__", "_fields", "field_names!r", "__new__", "arg_list", "Create", "instance", "typename", "arg_list", "return", "_tuple", "__new__", "arg_list", "classmethod", "_make", "iterable", "tuple", "__new__", "typename", "object", "sequence", "iterable", "result", "iterable", "result", "num_fields", "raise", "TypeError", "Expected", "num_fields", "arguments", "result", "return", "result", "__repr__", "Return", "nicely", "formatted", "representation", "string", "return", "typename", "repr_fmt", "_asdict", "Return", "OrderedDict", "which", "field", "names", "their", "values", "return", "OrderedDict", "_fields", "_replace", "_self", "Return", "typename", "object", "replacing", "specified", "fields", "values", "result", "_self", "_make", "field_names!r", "_self", "raise", "ValueError", "unexpected", "field", "names", "return", "result", "__getnewargs__", "Return", "plain", "tuple", "pickle", "return", "tuple", "__dict__", "_property", "_asdict", "__getstate__", "Exclude", "OrderedDict", "pickling", "field_defs", "_property", "_itemgetter", "index", "Alias", "field", "number", "index", "Returns", "subclass", "tuple", "named", "fields", "Point", "namedtuple", "Point", "Point", "__doc__", "docstring", "class", "Point", "Point", "instantiate", "positional", "keywords", "indexable", "plain", "tuple", "unpack", "regular", "tuple", "fields", "accessible", "_asdict", "convert", "dictionary", "Point", "convert", "dictionary", "Point", "_replace", "_replace", "replace", "targets", "named", "fields", "Point", "isalnum", "collections", "genexpr", "names", "field", "names", "stringsc", "collections", "genexpr", "names", "field", "names", "contain", "alphanumeric", "characters", "underscores", "names", "field", "names", "cannot", "keyword", "names", "field", "names", "cannot", "start", "number", "Field", "names", "cannot", "start", "underscore", "Encountered", "duplicate", "field", "typenamet", "field_namest", "num_fieldst", "arg_listt", "repr_fmts", "nameN", "_repr_templatet", "format", "collections", "genexpr", "field_defss", "indexRi", "_field_templateRk", "collections", "genexpr", "_itemgetterR", "namedtuple_", "_propertyt", "_tuples", "__main__", "basestringt", "replacet", "splitt", "enumerateRK", "_iskeywordt", "isdigitt", "startswitht", "typeR", "ValueErrort", "_class_templateRk", "tupleR", "reprt", "joinR", "propertyt", "SyntaxErrort", "messaget", "_syst", "_getframet", "f_globalst", "getRV", "verboset", "renamet", "seenRm", "class_definitiont", "namespacet", "collections", "subclass", "counting", "hashable", "items", "Sometimes", "called", "multiset", "Elements", "stored", "dictionary", "their", "counts", "stored", "dictionary", "values", "Counter", "abcdeabcdabcaba", "count", "elements", "string", "most_common", "three", "common", "elements", "sorted", "unique", "elements", "sorted", "elements", "elements", "repetitions", "aaaaabbbbcccdde", "values", "total", "counts", "count", "letter", "shazam", "update", "counts", "iterable", "adding", "element", "count", "there", "seven", "remove", "there", "Counter", "simsalabim", "another", "counter", "update", "second", "counter", "there", "clear", "empty", "counter", "Counter", "count", "reduced", "remain", "counter", "until", "entry", "deleted", "counter", "cleared", "Counter", "aaabbc", "reduce", "count", "most_common", "still", "count", "Create", "empty", "Counter", "object", "given", "count", "elements", "input", "iterable", "initialize", "count", "another", "mapping", "elements", "their", "counts", "Counter", "empty", "counter", "Counter", "gallahad", "counter", "iterable", "Counter", "counter", "mapping", "Counter", "counter", "keyword", "descriptor", "__init__", "Counter", "object", "needs", "argumenti", "expected", "arguments", "superR", "collections", "count", "elements", "Counter", "collections", "__missing__", "common", "elements", "their", "counts", "common", "least", "element", "counts", "Counter", "abcdeabcdabcaba", "most_common", "reverseN", "sortedR2", "_heapqt", "nlargest", "collections", "most_common", "Iterator", "elements", "repeating", "times", "count", "Counter", "ABCABC", "sorted", "elements", "Knuth", "example", "prime", "factors", "prime_factors", "Counter", "product", "factor", "prime_factors", "elements", "factors", "product", "factor", "multiply", "product", "element", "count", "negative", "number", "elements", "ignore", "_chaint", "from_iterablet", "_starmapt", "_repeatR2", "collections", "elements", "Counter", "fromkeys", "undefined", "Counter", "iterable", "instead", "NotImplementedError", "collections", "pycRH", "update", "counts", "instead", "replacing", "Source", "iterable", "dictionary", "another", "Counter", "instance", "Counter", "which", "update", "witch", "elements", "another", "iterable", "Counter", "watch", "update", "elements", "another", "counter", "which", "witch", "watch", "descriptor", "update", "Counter", "object", "needs", "argumenti", "expected", "arguments", "MappingR", "self_gett", "elemt", "count", "collections", "pycRY", "update", "subtracts", "counts", "instead", "replacing", "Counts", "reduced", "below", "inputs", "outputs", "allowed", "contain", "negative", "counts", "Source", "iterable", "dictionary", "another", "Counter", "instance", "Counter", "which", "subtract", "witch", "subtract", "elements", "another", "iterable", "subtract", "Counter", "watch", "subtract", "elements", "another", "counter", "which", "minus", "witch", "minus", "watch", "which", "minus", "witch", "minus", "watch", "descriptor", "subtract", "Counter", "object", "needs", "argumenti", "expected", "arguments", "subtract", "collections", "Return", "shallow", "collections", "pycRC", "collections", "pycRE", "__delitem__", "raise", "KeyError", "missing", "values", "collections", "pycR$", "__mod__R", "collections", "pycRA", "counts", "counters", "Counter", "Counter", "Counter", "NotImplementedR", "newcount", "collections", "__add__y", "Subtract", "count", "results", "positive", "counts", "Counter", "abbbc", "Counter", "Counter", "collections", "__sub__", "Union", "maximum", "value", "either", "input", "counters", "Counter", "Counter", "Counter", "other_countR", "collections", "__or__", "Intersection", "minimum", "corresponding", "counts", "Counter", "Counter", "Counter", "collections", "__and__", "collections", "loadst", "dumpst", "Points", "collections", "hypot", "Point", "hypot", "collections", "__str__", "__slots__R", "collections", "Point", "class", "optimized", "_make", "_replace", "without", "error", "checkingc", "_makeR", "_mapR", "collections", "_replace", "__new__R", "collections", "Point3Dt", "TestResultss", "failed", "attempted", "__all__t", "_abcollt", "_collectionsR", "operatorR", "keywordR", "heapqR", "itertoolsR", "threadR", "ImportErrort", "dummy_threadR", "FalseR", "cPickleR", "AssertionErrorR", "_fieldsR", "doctestR", "testmod", "collections", "module", "Generic", "shallow", "copying", "operations", "Interface", "summary", "import", "shallow", "deepcopy", "module", "specific", "errors", "Error", "raised", "difference", "between", "shallow", "copying", "relevant", "compound", "objects", "objects", "contain", "other", "objects", "lists", "class", "instances", "shallow", "constructs", "compound", "object", "extent", "possible", "inserts", "objects", "original", "contains", "constructs", "compound", "object", "recursively", "inserts", "copies", "objects", "found", "original", "problems", "often", "exist", "operations", "exist", "shallow", "operations", "recursive", "objects", "compound", "objects", "directly", "indirectly", "contain", "reference", "themselves", "cause", "recursive", "because", "copies", "everything", "administrative", "structures", "should", "shared", "between", "copies", "Python", "operation", "avoids", "these", "problems", "keeping", "table", "objects", "already", "copied", "during", "current", "copying", "letting", "defined", "classes", "override", "copying", "operation", "components", "copied", "version", "types", "module", "class", "function", "method", "stack", "trace", "stack", "frame", "socket", "window", "array", "similar", "types", "Classes", "interfaces", "control", "copying", "control", "pickling", "define", "methods", "called", "__getinitargs__", "__getstate__", "__setstate__", "documentation", "module", "pickle", "information", "these", "methods", "dispatch_tablet", "Errorc", "__name__t", "__module__", "PyStringMapt", "copyt", "deepcopyc", "Shallow", "operation", "arbitrary", "Python", "objects", "module", "__doc__", "string", "__copy__t", "__reduce_ex__i", "__reduce__s", "shallow", "copyable", "object", "typet", "_copy_dispatcht", "getattrt", "NoneR", "_reconstruct", "copiert", "reductort", "_copy_immutablee", "ComplexTypet", "UnicodeTypet", "CodeTypec", "_copy_with_constructorq", "_copy_with_copy_methodv", "__getinitargs__t", "__getstate__t", "__setstate__", "hasattrR", "__class__t", "_EmptyClassR", "__dict__R", "update", "argst", "state", "_copy_inst", "operation", "arbitrary", "Python", "objects", "module", "__doc__", "string", "__deepcopy__R", "copyable", "object", "_deepcopy_dispatcht", "issubclasst", "TypeErrort", "_deepcopy_atomicR", "_keep_alive", "memot", "_nilt", "isscR", "appendR", "_deepcopy_list", "KeyErrort", "ranget", "tuple", "_deepcopy_tuple", "iteritemsR", "value", "_deepcopy_dict", "im_funcR", "im_selft", "im_class", "_deepcopy_method", "Keeps", "reference", "object", "Because", "remember", "objects", "their", "assure", "possibly", "temporary", "objects", "alive", "referencing", "store", "reference", "which", "should", "normally", "unless", "someone", "tries", "deepcopy", "itself", "_deepcopy_inst", "isinstancet", "strR8", "AssertionErrorR", "setattrR2", "infot", "deepR", "callableR", "listitert", "dictiterR$", "slotstateR", "xyzzyt", "__main__i", "argvt", "__file__t", "opent", "close", "selfRU", "__init__", "pycRS", "argument", "sketchi", "odictc", "dictR", "__setitem__R3", "pycRc", "pycRa", "reprRb", "_testq", "__doc__t", "typest", "weakreft", "copy_regR", "ExceptionR", "errort", "python", "coreR", "ImportErrorR", "__all__R", "longt", "floatt", "boolRE", "frozensett", "xranget", "ClassTypet", "BuiltinFunctionTypet", "Ellipsist", "FunctionTypet", "nameR", "listRb", "InstanceTypeR", "complext", "NameErrort", "unicodeR", "AttributeErrorR4", "MethodTypeR", "module", "copy_reg", "Helper", "provide", "extensibility", "pickle", "cPickle", "useful", "pickle", "support", "extension", "types", "defined", "instances", "defined", "classes", "ClassTypet", "picklet", "constructort", "add_extensiont", "remove_extensiont", "clear_extension_cachec", "copy_reg", "intended", "classest", "__call__s$", "reduction", "functions", "callable", "typet", "_ClassTypet", "TypeErrort", "hasattrt", "dispatch_tablet", "NoneR", "ob_typet", "pickle_functiont", "constructor_ob", "copy_reg", "constructors", "callable", "object", "copy_reg", "complext", "realt", "copy_reg", "pickle_complex", "__new__t", "__init__", "baset", "statet", "copy_reg", "_reconstructor", "__flags__s", "pickle", "objectst", "__slots__sN", "class", "defines", "__slots__", "without", "defining", "__getstate__", "cannot", "pickled", "AssertionErrort", "__class__t", "__mro__R", "_HEAPTYPER", "__name__t", "__getstate__t", "AttributeErrort", "getattrt", "__dict__R", "selft", "protoR", "argst", "getstatet", "copy_reg", "_reduce_ex", "copy_reg", "__newobj__", "Return", "names", "given", "class", "needs", "slots", "defined", "class", "bases", "simply", "return", "__slots__", "attribute", "Method", "Resolution", "Order", "concatenate", "__slots__", "class", "found", "there", "assumes", "classes", "modify", "their", "__slots__", "attribute", "misrepresent", "their", "slots", "after", "class", "defined", "__slotnames__R", "__weakref__t", "isinstancet", "basestringt", "startswitht", "endswitht", "appendR", "namesR", "slotst", "copy_reg", "_slotnames_", "Register", "extension", "rangeNs", "already", "registered", "already", "ValueErrort", "_extension_registryR2", "_inverted_registry", "moduleR", "codet", "copy_reg", "Unregister", "extension", "testing", "registered", "_extension_cache", "copy_reg", "clear", "copy_reg", "__doc__t", "typesR", "__all__R", "NameErrorR", "copy_reg", "module", "difflib", "Module", "difflib", "helpers", "computing", "deltas", "between", "objects", "Function", "get_close_matches", "possibilities", "cutoff", "SequenceMatcher", "return", "enough", "matches", "Function", "context_diff", "lists", "strings", "return", "delta", "context", "format", "Function", "ndiff", "Return", "delta", "difference", "between", "lists", "strings", "Function", "restore", "delta", "which", "Return", "sequences", "generated", "ndiff", "delta", "Function", "unified_diff", "lists", "strings", "return", "delta", "unified", "format", "Class", "SequenceMatcher", "flexible", "class", "comparing", "pairs", "sequences", "Class", "Differ", "producing", "human", "readable", "deltas", "sequences", "lines", "Class", "HtmlDiff", "producing", "comparison", "change", "highlights", "get_close_matchest", "ndifft", "restoret", "SequenceMatchert", "Differt", "IS_CHARACTER_JUNKt", "IS_LINE_JUNKt", "context_difft", "unified_difft", "HtmlDifft", "Matchi", "namedtuple", "reduces", "sizec", "matchest", "length", "difflib", "_calculate_ratio", "SequenceMatcher", "flexible", "class", "comparing", "pairs", "sequences", "sequence", "elements", "hashable", "basic", "algorithm", "predates", "little", "fancier", "algorithm", "published", "Ratcliff", "Obershelp", "under", "hyperbolic", "gestalt", "pattern", "matching", "basic", "longest", "contiguous", "matching", "subsequence", "contains", "elements", "doesn", "address", "applied", "recursively", "pieces", "sequences", "right", "matching", "subsequence", "yield", "minimal", "sequences", "yield", "matches", "right", "people", "SequenceMatcher", "tries", "compute", "human", "friendly", "between", "sequences", "Unlike", "fundamental", "notion", "longest", "contiguous", "matching", "subsequence", "catches", "peoples", "Windows", "windiff", "another", "interesting", "notion", "pairing", "elements", "appear", "uniquely", "sequence", "method", "appear", "yield", "intuitive", "difference", "reports", "method", "appears", "least", "vulnerable", "synching", "blocks", "lines", "though", "blank", "lines", "ordinary", "files", "maybe", "lines", "files", "because", "method", "concept", "Example", "comparing", "strings", "considering", "blanks", "SequenceMatcher", "lambda", "private", "Thread", "currentThread", "private", "volatile", "Thread", "currentThread", "ratio", "returns", "float", "measuring", "similarity", "sequences", "thumb", "ratio", "value", "means", "sequences", "close", "matches", "print", "round", "ratio", "interested", "where", "sequences", "match", "get_matching_blocks", "handy", "block", "get_matching_blocks", "print", "match", "elements", "block", "match", "elements", "match", "elements", "match", "elements", "tuple", "returned", "get_matching_blocks", "always", "dummy", "which", "tuple", "element", "number", "elements", "matched", "change", "first", "sequence", "second", "get_opcodes", "opcode", "get_opcodes", "print", "opcode", "equal", "insert", "equal", "Differ", "class", "fancy", "human", "friendly", "differencer", "which", "SequenceMatcher", "compare", "sequences", "lines", "compare", "sequences", "characters", "within", "similar", "matching", "lines", "function", "get_close_matches", "module", "which", "shows", "simple", "building", "SequenceMatcher", "useful", "Timing", "Basic", "cubic", "worst", "quadratic", "expected", "SequenceMatcher", "quadratic", "worst", "expected", "behavior", "dependent", "complicated", "elements", "sequences", "common", "linear", "Methods", "__init__", "isjunk", "Construct", "SequenceMatcher", "set_seqs", "sequences", "compared", "set_seq1", "first", "sequence", "compared", "set_seq2", "second", "sequence", "compared", "find_longest_match", "longest", "matching", "block", "get_matching_blocks", "Return", "triples", "describing", "matching", "subsequences", "get_opcodes", "Return", "tuples", "describing", "ratio", "Return", "measure", "sequences", "similarity", "float", "quick_ratio", "Return", "upper", "bound", "ratio", "relatively", "quickly", "real_quick_ratio", "Return", "upper", "bound", "ratio", "quickly", "Construct", "SequenceMatcher", "Optional", "isjunk", "default", "argument", "function", "takes", "sequence", "element", "returns", "element", "equivalent", "passing", "lambda", "elements", "considered", "example", "lambda", "comparing", "lines", "sequences", "characters", "synch", "blanks", "Optional", "first", "sequences", "compared", "default", "empty", "string", "elements", "hashable", "set_seqs", "set_seq1", "Optional", "second", "sequences", "compared", "default", "empty", "string", "elements", "hashable", "set_seqs", "set_seq2", "Optional", "autojunk", "should", "False", "disable", "automatic", "heuristic", "treats", "popular", "elements", "module", "documentation", "information", "isjunkt", "Nonet", "autojunkt", "set_seqs", "selfR", "difflib", "__init__", "sequences", "compared", "SequenceMatcher", "set_seqs", "ratio", "set_seq1t", "set_seq2", "difflib", "first", "sequence", "compared", "second", "sequence", "compared", "changed", "SequenceMatcher", "ratio", "set_seq1", "ratio", "SequenceMatcher", "computes", "caches", "detailed", "information", "about", "second", "sequence", "compare", "sequence", "against", "sequences", "set_seq2", "set_seq1", "repeatedly", "other", "sequences", "set_seqs", "set_seq2", "matching_blockst", "opcodes", "difflib", "second", "sequence", "compared", "first", "sequence", "compared", "changed", "SequenceMatcher", "ratio", "set_seq2", "ratio", "SequenceMatcher", "computes", "caches", "detailed", "information", "about", "second", "sequence", "compare", "sequence", "against", "sequences", "set_seq2", "set_seq1", "repeatedly", "other", "sequences", "set_seqs", "set_seq1", "fullbcountt", "_SequenceMatcher__chain_b", "difflib", "enumeratet", "setdefaultt", "appendt", "listt", "keyst", "itemst", "__contains__t", "isbjunkt", "isbpopular", "indicest", "junkR", "populart", "ntestt", "difflib", "__chain_b0", "longest", "matching", "block", "isjunk", "defined", "Return", "equal", "where", "meeting", "those", "conditions", "other", "words", "maximal", "matching", "blocks", "return", "starts", "earliest", "those", "maximal", "matching", "blocks", "start", "earliest", "return", "starts", "earliest", "SequenceMatcher", "find_longest_match", "Match", "isjunk", "defined", "first", "longest", "matching", "block", "determined", "above", "additional", "restriction", "element", "appears", "block", "block", "extended", "possible", "matching", "elements", "sides", "resulting", "block", "never", "matches", "except", "identical", "happens", "adjacent", "interesting", "match", "example", "before", "considering", "blanks", "prevents", "matching", "second", "sequence", "directly", "Instead", "match", "matches", "leftmost", "second", "sequence", "SequenceMatcher", "lambda", "find_longest_match", "Match", "blocks", "match", "return", "SequenceMatcher", "find_longest_match", "Match", "xranget", "bestit", "bestjt", "bestsizet", "j2lent", "nothingR", "j2lengett", "newj2lent", "difflib", "find_longest_match", "Return", "triples", "describing", "matching", "subsequences", "triple", "means", "triples", "monotonically", "increasing", "Python", "guaranteed", "adjacent", "triples", "second", "triple", "adjacent", "triples", "never", "describe", "adjacent", "equal", "blocks", "triple", "dummy", "triple", "SequenceMatcher", "abxcd", "get_matching_blocks", "Match", "Match", "Match", "popRD", "sortt", "_make", "queueR", "non_adjacentt", "difflib", "get_matching_blocks", "Return", "tuples", "describing", "tuple", "first", "tuple", "remaining", "tuples", "tuple", "preceding", "likewise", "previous", "strings", "these", "meanings", "replace", "should", "replaced", "delete", "should", "deleted", "insert", "should", "inserted", "equal", "qabxcd", "abycdf", "SequenceMatcher", "get_opcodes", "print", "delete", "equal", "replace", "equal", "insert", "replacet", "deletet", "insertt", "equalN", "answert", "sizet", "difflib", "get_opcodes", "Isolate", "change", "clusters", "eliminating", "ranges", "changes", "Return", "generator", "groups", "lines", "context", "group", "format", "returned", "get_opcodes", "pprint", "import", "pprint", "range", "insertion", "replacement", "deletion", "another", "replacement", "pprint", "SequenceMatcher", "get_grouped_opcodes", "equal", "insert", "equal", "equal", "replace", "equal", "delete", "equal", "equal", "replace", "equal", "codesR", "group", "difflib", "get_grouped_opcodesH", "Return", "measure", "sequences", "similarity", "float", "Where", "total", "number", "elements", "sequences", "number", "matches", "sequences", "identical", "nothing", "common", "ratio", "expensive", "compute", "haven", "already", "computed", "get_matching_blocks", "get_opcodes", "which", "quick_ratio", "real_quick_ratio", "first", "upper", "bound", "SequenceMatcher", "ratio", "quick_ratio", "real_quick_ratio", "triple", "difflib", "lambda", "difflib", "ratioz", "Return", "upper", "bound", "ratio", "relatively", "quickly", "defined", "beyond", "upper", "bound", "ratio", "faster", "compute", "availt", "availhasR", "difflib", "quick_ratio", "Return", "upper", "bound", "ratio", "quickly", "defined", "beyond", "upper", "bound", "ratio", "faster", "compute", "either", "ratio", "quick_ratio", "difflib", "real_quick_ratio", "__name__t", "__module__t", "__doc__R", "TrueR", "difflib", "g333333", "SequenceMatcher", "return", "enough", "matches", "sequence", "which", "close", "matches", "desired", "typically", "string", "possibilities", "sequences", "against", "which", "match", "typically", "strings", "Optional", "default", "maximum", "number", "close", "matches", "return", "Optional", "cutoff", "default", "float", "Possibilities", "score", "least", "similar", "ignored", "matches", "among", "possibilities", "returned", "sorted", "similarity", "score", "similar", "first", "get_close_matches", "appel", "apple", "peach", "puppy", "apple", "import", "keyword", "_keyword", "get_close_matches", "wheel", "_keyword", "kwlist", "while", "get_close_matches", "apple", "_keyword", "kwlist", "get_close_matches", "accept", "_keyword", "kwlist", "except", "cutoff", "ValueErrorR", "heapqt", "nlargest", "wordt", "possibilitiesR1", "cutofft", "resultt", "score", "difflib", "Return", "number", "characters", "start", "Example", "_count_leading", "linet", "difflib", "_count_leading", "Differ", "class", "comparing", "sequences", "lines", "producing", "human", "readable", "differences", "deltas", "Differ", "SequenceMatcher", "compare", "sequences", "lines", "compare", "sequences", "characters", "within", "similar", "matching", "lines", "Differ", "delta", "begins", "letter", "unique", "sequence", "unique", "sequence", "common", "sequences", "present", "either", "input", "sequence", "Lines", "beginning", "attempt", "guide", "intraline", "differences", "present", "either", "input", "sequence", "These", "lines", "confusing", "sequences", "contain", "characters", "Differ", "makes", "claim", "produce", "minimal", "contrary", "minimal", "diffs", "often", "counter", "intuitive", "because", "synch", "anywhere", "possible", "sometimes", "accidental", "matches", "pages", "apart", "Restricting", "synch", "points", "contiguous", "matches", "preserves", "notion", "locality", "occasional", "producing", "longer", "Example", "Comparing", "texts", "First", "texts", "sequences", "individual", "single", "strings", "ending", "newlines", "sequences", "obtained", "readlines", "method", "objects", "text1", "Beautiful", "better", "Explicit", "better", "implicit", "Simple", "better", "complex", "Complex", "better", "complicated", "splitlines", "text1", "text1", "text2", "Beautiful", "better", "Simple", "better", "complex", "Complicated", "better", "complex", "better", "nested", "splitlines", "instantiate", "Differ", "object", "Differ", "instantiating", "Differ", "object", "functions", "filter", "character", "Differ", "__init__", "details", "Finally", "compare", "result", "compare", "text1", "text2", "result", "strings", "pretty", "print", "pprint", "import", "pprint", "_pprint", "_pprint", "result", "Beautiful", "better", "Explicit", "better", "implicit", "Simple", "better", "complex", "Simple", "better", "complex", "Complex", "better", "complicated", "Complicated", "better", "complex", "better", "nested", "single", "multi", "string", "looks", "print", "result", "Beautiful", "better", "Explicit", "better", "implicit", "Simple", "better", "complex", "Simple", "better", "complex", "Complex", "better", "complicated", "Complicated", "better", "complex", "better", "nested", "Methods", "__init__", "linejunk", "charjunk", "Construct", "differencer", "optional", "filters", "compare", "Compare", "sequences", "lines", "generate", "resulting", "delta", "Construct", "differencer", "optional", "filters", "optional", "keyword", "parameters", "filter", "functions", "linejunk", "function", "should", "accept", "single", "string", "argument", "return", "string", "module", "level", "function", "IS_LINE_JUNK", "filter", "lines", "without", "visible", "characters", "except", "splat", "recommended", "leave", "linejunk", "Python", "underlying", "SequenceMatcher", "class", "grown", "adaptive", "notion", "noise", "lines", "better", "static", "definition", "author", "craft", "charjunk", "function", "should", "accept", "string", "length", "module", "level", "function", "IS_CHARACTER_JUNK", "filter", "whitespace", "characters", "blank", "include", "newline", "this!", "IS_CHARACTER_JUNK", "recommended", "linejunkt", "charjunk", "difflib", "Compare", "sequences", "lines", "generate", "resulting", "delta", "sequence", "contain", "individual", "single", "strings", "ending", "newlines", "sequences", "obtained", "readlines", "method", "objects", "delta", "generated", "consists", "newline", "terminated", "strings", "ready", "printed", "writeline", "method", "object", "Example", "print", "Differ", "compare", "nthree", "splitlines", "ntree", "splitlines", "three", "unknown", "_fancy_replacet", "_dumpRr", "cruncherR", "difflib", "comparer", "Generate", "comparison", "results", "tagged", "range", "difflib", "AssertionErrorR", "firstt", "secondR", "difflib", "_plain_replace", "replacing", "block", "lines", "another", "search", "blocks", "similar", "lines", "matching", "synch", "point", "intraline", "difference", "marking", "similar", "often", "worth", "Example", "Differ", "results", "_fancy_replace", "abcDefghiJkl", "abcdefGhijkl", "print", "results", "abcDefghiJkl", "abcdefGhijkl", "unknown", "_fancy_helperR", "_qformat", "best_ratioRw", "eqjRB", "best_it", "best_jR", "aeltt", "beltt", "atagst", "btagsR", "bj2RI", "difflib", "difflib", "Format", "output", "leading", "Example", "Differ", "results", "_qformat", "tabcDefghiJkl", "tabcdefGhijkl", "results", "print", "tabcDefghiJkl", "tabcdefGhijkl", "rstrip", "alinet", "blineR", "common", "difflib", "difflib", "Return", "ignorable", "blank", "contains", "single", "Examples", "IS_LINE_JUNK", "IS_LINE_JUNK", "IS_LINE_JUNK", "hello", "False", "difflib", "Return", "ignorable", "character", "space", "Examples", "IS_CHARACTER_JUNK", "IS_CHARACTER_JUNK", "IS_CHARACTER_JUNK", "False", "IS_CHARACTER_JUNK", "False", "difflib", "Convert", "range", "formati", "format", "startt", "stopt", "beginningR", "difflib", "_format_range_unifiedy", "Compare", "sequences", "lines", "generate", "delta", "unified", "Unified", "diffs", "compact", "showing", "changes", "lines", "context", "number", "context", "lines", "which", "defaults", "three", "default", "control", "lines", "those", "created", "trailing", "newline", "helpful", "inputs", "created", "readlines", "result", "diffs", "suitable", "writelines", "since", "inputs", "outputs", "trailing", "newlines", "inputs", "trailing", "newlines", "lineterm", "argument", "output", "uniformly", "newline", "unidiff", "format", "normally", "header", "filenames", "modification", "times", "these", "specified", "using", "strings", "fromfile", "tofile", "fromfiledate", "tofiledate", "modification", "times", "normally", "expressed", "format", "Example", "unified_diff", "three", "split", "split", "Original", "Current", "lineterm", "print", "doctest", "NORMALIZE_WHITESPACE", "Original", "Current", "three", "FalseR", "fromfilet", "tofilet", "fromfiledatet", "tofiledateR1", "linetermt", "startedRc", "fromdatet", "todateR", "lastt", "file1_ranget", "file2_rangeR", "difflib", "Convert", "range", "formati", "difflib", "_format_range_context", "Compare", "sequences", "lines", "generate", "delta", "context", "Context", "diffs", "compact", "showing", "changes", "lines", "context", "number", "context", "lines", "which", "defaults", "three", "default", "control", "lines", "those", "created", "trailing", "newline", "helpful", "inputs", "created", "readlines", "result", "diffs", "suitable", "writelines", "since", "inputs", "outputs", "trailing", "newlines", "inputs", "trailing", "newlines", "lineterm", "argument", "output", "uniformly", "newline", "context", "format", "normally", "header", "filenames", "modification", "times", "these", "specified", "using", "strings", "fromfile", "tofile", "fromfiledate", "tofiledate", "modification", "times", "normally", "expressed", "format", "specified", "strings", "default", "blanks", "Example", "print", "context_diff", "nthree", "nfour", "splitlines", "ntree", "nfour", "splitlines", "Original", "Current", "Original", "Current", "three", "difflib", "genexpr", "difflib", "genexpr", "dictR", "prefixR", "difflib", "Compare", "lists", "strings", "return", "Differ", "style", "delta", "Optional", "keyword", "parameters", "linejunk", "charjunk", "filter", "functions", "linejunk", "function", "should", "accept", "single", "string", "argument", "return", "string", "default", "recommended", "Python", "adaptive", "notion", "noise", "lines", "charjunk", "function", "should", "accept", "string", "length", "default", "module", "level", "function", "IS_CHARACTER_JUNK", "which", "filters", "whitespace", "characters", "blank", "include", "newline", "this!", "Tools", "scripts", "ndiff", "command", "front", "function", "Example", "ndiff", "nthree", "splitlines", "ntree", "splitlines", "print", "three", "difflib", "Returns", "generator", "yielding", "marked", "differences", "Arguments", "fromlines", "lines", "compared", "tolines", "tolines", "lines", "compared", "fromlines", "context", "number", "context", "lines", "display", "difference", "lines", "generated", "linejunk", "passed", "ndiff", "ndiff", "documentation", "charjunk", "passed", "ndiff", "ndiff", "documentation", "function", "returns", "iterator", "which", "returns", "tuple", "tuple", "tuple", "boolean", "tuple", "integer", "indicate", "context", "separation", "original", "following", "markers", "inserted", "marks", "start", "added", "marks", "start", "deleted", "marks", "start", "changed", "marks", "added", "deleted", "changed", "boolean", "indicates", "context", "separation", "indicates", "either", "contains", "change", "otherwise", "False", "function", "iterator", "originally", "developed", "generate", "difference", "making", "pages", "HtmlDiff", "class", "example", "usage", "function", "utilizes", "ndiff", "function", "generate", "difference", "markup", "Optional", "ndiff", "arguments", "passed", "function", "passed", "ndiff", "Returns", "change", "markup", "formatting", "lines", "lines", "ndiff", "generator", "produce", "producing", "return", "lines", "removed", "format_key", "return", "first", "markup", "around", "entire", "return", "first", "delete", "markup", "around", "entire", "return", "first", "delete", "change", "intraline", "markup", "indices", "obtained", "second", "return", "first", "markup", "indice", "num_lines", "num_lines", "current", "number", "intended", "passed", "parameter", "present", "keyword", "argument", "maintain", "memory", "current", "numbers", "between", "calls", "function", "function", "purposefully", "defined", "module", "scope", "needs", "parent", "function", "within", "whose", "context", "defined", "module", "scope", "match_objectt", "sub_info", "difflib", "record_sub_info", "linest", "format_keyt", "sidet", "num_linest", "textt", "markersR", "begint", "change_re", "difflib", "_make_linep", "Yields", "lines", "change", "indication", "function", "iterator", "itself", "pulls", "lines", "differencing", "iterator", "processes", "yields", "yields", "otherwise", "yield", "other", "addition", "yielding", "lines", "boolean", "yielded", "indicate", "differences", "function", "purposefully", "defined", "module", "scope", "needs", "parent", "function", "within", "whose", "context", "defined", "module", "scope", "nextt", "StopIterationt", "joint", "startswithR", "num_blanks_pendingt", "num_blanks_to_yieldR", "from_linet", "to_line", "diff_lines_iterator", "difflib", "_line_iterator", "Yields", "lines", "change", "indication", "function", "iterator", "itself", "pulls", "lines", "iterator", "difference", "iterator", "function", "always", "yields", "lines", "change", "indication", "necessary", "collect", "single", "lines", "until", "matching", "yield", "function", "purposefully", "defined", "module", "scope", "needs", "parent", "function", "within", "whose", "context", "defined", "module", "scope", "line_iteratort", "fromlinest", "tolinesR", "found_difft", "fromDifft", "to_diff", "difflib", "_line_pair_iterator", "compileR", "contextR", "line_pair_iteratort", "lines_to_writet", "indext", "contextLinesR", "difflib", "_mdiffF", "!DOCTYPE", "PUBLIC", "XHTML", "Transitional", "xhtml1", "xhtml1", "transitional", "equiv", "Content", "content", "charset", "title", "title", "style", "styles", "style", "table", "legend", "table", "family", "Courier", "border", "medium", "diff_header", "background", "color", "e0e0e0", "diff_header", "align", "right", "diff_next", "background", "color", "c0c0c0", "diff_add", "background", "color", "aaffaa", "diff_chg", "background", "color", "ffff77", "diff_sub", "background", "color", "ffaaaa", "table", "class", "difflib_chg_", "prefix", "s_top", "cellspacing", "cellpadding", "rules", "groups", "colgroup", "colgroup", "colgroup", "colgroup", "colgroup", "colgroup", "colgroup", "colgroup", "colgroup", "colgroup", "colgroup", "colgroup", "header_row", "tbody", "data_rows", "tbody", "table", "table", "class", "summary", "Legends", "colspan", "Legends", "table", "border", "summary", "Colors", "Colors", "class", "diff_add", "&nbsp", "Added&nbsp", "class", "diff_chg", "Changed", "class", "diff_sub", "Deleted", "table", "table", "border", "summary", "Links", "colspan", "Links", "change", "change", "table", "table", "producing", "comparison", "change", "highlights", "class", "create", "table", "complete", "containing", "table", "showing", "comparison", "inter", "intra", "change", "highlights", "table", "generated", "either", "contextual", "difference", "following", "methods", "provided", "generation", "make_table", "generates", "single", "table", "make_file", "generates", "complete", "single", "table", "tools", "scripts", "example", "usage", "class", "HtmlDiff", "instance", "initializer", "Arguments", "tabsize", "spacing", "defaults", "wrapcolumn", "column", "number", "where", "lines", "broken", "wrapped", "defaults", "where", "lines", "wrapped", "linejunk", "charjunk", "keyword", "arguments", "passed", "ndiff", "HtmlDiff", "generate", "differences", "ndiff", "documentation", "argument", "default", "values", "descriptions", "_tabsizet", "_wrapcolumnt", "_linejunkt", "_charjunk", "tabsizet", "wrapcolumnR", "difflib", "Returns", "comparison", "change", "highlights", "Arguments", "fromlines", "lines", "tolines", "lines", "fromdesc", "column", "header", "string", "todesc", "column", "header", "string", "context", "contextual", "differences", "defaults", "False", "which", "shows", "differences", "numlines", "number", "context", "lines", "context", "controls", "number", "lines", "displayed", "before", "after", "change", "context", "False", "controls", "number", "lines", "place", "anchors", "before", "change", "click", "jumps", "before", "change", "stylest", "legendt", "tableR", "numlines", "_file_templateR", "_stylest", "_legendt", "make_table", "fromdesct", "todescR", "difflib", "make_file", "Returns", "lists", "expanded", "newlines", "removed", "Instead", "characters", "being", "replaced", "number", "spaces", "needed", "function", "space", "characters", "difference", "algorithms", "identify", "changes", "replaced", "spaces", "versa", "generation", "characters", "replaced", "nonbreakable", "space", "expandtabsR", "difflib", "expand_tabs", "difflib", "_tab_newline_replace", "Builds", "lines", "splitting", "lines", "point", "function", "determine", "input", "needs", "wrapped", "split", "separate", "lines", "first", "point", "determined", "first", "appended", "output", "function", "recursively", "handle", "second", "split", "further", "split", "countt", "_split_line", "data_listt", "line_numR", "markt", "line1t", "line2", "difflib", "Returns", "iterator", "splits", "wraps", "mdiff", "linesi", "diffst", "fromdatat", "todatat", "flagt", "fromlinet", "fromtextt", "tolinet", "totextt", "fromlistt", "tolist", "difflib", "_line_wrapper", "Collects", "mdiff", "output", "separate", "lists", "Before", "storing", "mdiff", "converted", "single", "markup", "_format_linet", "TypeErrorR", "flaglistR", "difflib", "_collect_lines", "Returns", "markup", "lines", "indicating", "indicates", "difference", "linenum", "number", "number", "column", "marked", "&nbsp", "class", "diff_header", "nowrap", "nowrap", "_prefixR", "linenumR", "difflib", "Create", "unique", "anchor", "prefixess", "_default_prefixR", "fromprefixt", "toprefix", "difflib", "_make_prefix", "Makes", "linksi", "difflib_chg_", "difflib_chg_", "&nbsp", "Differences", "Found&nbsp", "&nbsp", "Empty", "File&nbsp", "difflib_chg_", "difflib_chg_", "s_top", "next_idt", "next_hreft", "num_chgt", "in_changeR", "difflib", "_convert_flagsf", "Returns", "table", "comparison", "change", "highlights", "Arguments", "fromlines", "lines", "tolines", "lines", "fromdesc", "column", "header", "string", "todesc", "column", "header", "string", "context", "contextual", "differences", "defaults", "False", "which", "shows", "differences", "numlines", "number", "context", "lines", "context", "controls", "number", "lines", "displayed", "before", "after", "change", "context", "False", "controls", "number", "lines", "place", "anchors", "before", "change", "click", "jumps", "before", "change", "class", "diff_next", "class", "diff_next", "tbody", "tbody", "thead", "thead", "class", "diff_next", "colspan", "class", "diff_header", "data_rowst", "header_rowR", "class", "diff_add", "class", "diff_sub", "class", "diff_chg", "&nbsp", "rangeR", "_table_templateR", "context_linesR", "difflib", "difflib", "Generate", "sequences", "generated", "delta", "Given", "delta", "produced", "Differ", "compare", "ndiff", "extract", "lines", "originating", "parameter", "which", "stripping", "prefixes", "Examples", "ndiff", "nthree", "splitlines", "ntree", "splitlines", "print", "restore", "three", "print", "restore", "unknown", "delta", "choice", "KeyErrorRr", "deltat", "whichR", "prefixesR", "difflib", "doctestt", "difflibt", "testmod", "difflib", "_test", "__main__", "__all__Rs", "collectionsR", "_namedtuplet", "functoolsR", "matchR", "objectR", "difflib", "module", "Disassembler", "Python", "mnemonics", "__all__t", "disassemblet", "distbt", "discot", "findlinestartst", "findlabelsc", "Disassemble", "classes", "methods", "functions", "argument", "disassemble", "traceback", "im_funct", "func_codet", "__dict__s", "Disassembly", "Sorry", "co_codes", "disassemble", "objects", "NoneR", "isinstancet", "typest", "InstanceTypet", "__class__t", "hasattrR", "itemst", "sortt", "_have_codeR", "TypeErrorR", "disassemble_stringt", "typet", "__name__", "namet", "Disassemble", "traceback", "default", "traceback", "traceback", "disassembleN", "last_tracebackt", "AttributeErrort", "RuntimeErrort", "tb_nextR", "tb_framet", "f_codet", "tb_lasti", "Disassemble", "object", "dictR", "reprt", "rjustt", "opnamet", "ljustt", "HAVE_ARGUMENTt", "EXTENDED_ARGt", "hasconstt", "co_constst", "hasnamet", "co_namest", "hasjrelt", "haslocalt", "co_varnamest", "hascomparet", "cmp_opt", "hasfreet", "co_cellvarst", "co_freevars", "lastit", "codet", "labelst", "linestartst", "extended_argt", "freet", "oparg", "varnamest", "namest", "constantsRA", "Detect", "offsets", "which", "targets", "Return", "offsets", "hasjabst", "append", "label", "offsets", "which", "start", "lines", "source", "Generate", "pairs", "offset", "lineno", "described", "Python", "compile", "co_lnotabR", "co_firstlinenot", "byte_incrementst", "line_incrementst", "lastlinenot", "linenot", "addrt", "byte_incrt", "line_incr", "Simple", "program", "disassemble", "usage", "python", "stdin", "execN", "argvt", "stderrt", "writet", "exitR", "stdint", "opent", "readt", "closet", "compileR", "sourceR", "_test", "__main__", "__doc__R", "opcodeR", "_opcodes_allt", "MethodTypet", "FunctionTypet", "CodeTypet", "ClassTypeR", "module", "doctest", "Module", "doctest", "framework", "running", "examples", "docstrings", "simplest", "module", "tested", "_test", "import", "doctest", "doctest", "testmod", "__name__", "__main__", "_test", "running", "module", "script", "cause", "examples", "docstrings", "executed", "verified", "python", "display", "anything", "unless", "example", "fails", "which", "failing", "example", "cause", "failure", "printed", "stdout", "stderr", "because", "stderr", "final", "output", "failed", "switch", "instead", "python", "detailed", "report", "examples", "tried", "printed", "stdout", "along", "assorted", "summaries", "force", "verbose", "passing", "verbose", "testmod", "prohibit", "passing", "verbose", "False", "either", "those", "cases", "examined", "testmod", "There", "variety", "other", "doctests", "including", "integration", "unittest", "framework", "support", "running", "Python", "files", "containing", "doctests", "There", "override", "parts", "doctest", "default", "behaviors", "Library", "Reference", "Manual", "details", "reStructuredText", "register_optionflagt", "DONT_ACCEPT_TRUE_FOR_1t", "DONT_ACCEPT_BLANKLINEt", "NORMALIZE_WHITESPACEt", "ELLIPSISt", "SKIPt", "IGNORE_EXCEPTION_DETAILt", "COMPARISON_FLAGSt", "REPORT_UDIFFt", "REPORT_CDIFFt", "REPORT_NDIFFt", "REPORT_ONLY_FIRST_FAILUREt", "REPORTING_FLAGSt", "Examplet", "DocTestt", "DocTestParsert", "DocTestFindert", "DocTestRunnert", "OutputCheckert", "DocTestFailuret", "UnexpectedExceptiont", "DebugRunnert", "testmodt", "testfilet", "run_docstring_examplest", "Testert", "DocTestSuitet", "DocFileSuitet", "set_unittest_reportflagst", "script_from_examplest", "testsourcet", "debug_srct", "debugi", "StringIO", "namedtuplet", "TestResultss", "failed", "attemptedc", "OPTIONFLAGS_BY_NAMEt", "setdefaultt", "doctest", "BLANKLINE", "Return", "compiler", "flags", "associated", "future", "features", "imported", "given", "namespace", "globs", "__future__t", "all_feature_namest", "Nonet", "getattrt", "compiler_flag", "globst", "flagst", "fnamet", "feature", "doctest", "_extract_future_flags", "Return", "module", "specified", "module", "particular", "module", "module", "return", "module", "module", "string", "import", "return", "module", "module", "return", "calling", "module", "calling", "module", "assumed", "module", "stack", "frame", "given", "depth", "stack", "__name__s", "Expected", "module", "string", "NoneN", "inspectt", "ismodulet", "isinstancet", "unicodet", "__import__t", "globalst", "localsR", "modulest", "_getframet", "f_globalst", "TypeError", "modulet", "depth", "doctest", "_normalize_module", "__loader__t", "get_datas", "_module_relative_patht", "hasattrRE", "replacet", "linesept", "opent", "filenamet", "packaget", "module_relativet", "file_contentst", "doctest", "_load_testfile", "encodings", "given", "number", "space", "characters", "beginning", "every", "blank", "return", "result", "string", "Unicode", "encoded", "using", "stdout", "encoding", "backslashreplace", "error", "handler", "backslashreplaces", "encodet", "_encodingt", "indent", "doctest", "_indent", "Return", "string", "containing", "traceback", "message", "given", "exc_info", "tuple", "returned", "exc_info", "tracebackt", "print_exceptiont", "getvalue", "exc_infot", "excoutt", "exc_typet", "exc_valt", "exc_tb", "doctest", "_exception_traceback", "_SpoofOutc", "softspace", "endswithRI", "selft", "result", "doctest", "pycRb", "truncateRI", "doctest", "pycRo", "__module__Rb", "doctest", "pycRi", "Essentially", "subtle", "_ellipsis_match", "False", "ELLIPSIS_MARKERt", "splitR&", "AssertionErrort", "startswitht", "FalseRk", "findt", "wantt", "startpost", "endpost", "doctest", "_ellipsis_match", "Return", "commented", "given", "lines", "rstrip", "doctest", "_comment_lineA", "rfind", "startt", "doctest", "_strip_exception_detailsI", "_OutputRedirectingPdbc", "specialized", "version", "python", "debugger", "redirects", "stdout", "given", "stream", "interacting", "Stdout", "redirected", "traced", "executed", "stdouti", "_OutputRedirectingPdb__outRw", "_OutputRedirectingPdb__debugger_usedt", "__init__t", "use_rawinput", "doctest", "f_backR", "set_trace", "frame", "doctest", "set_continue", "doctest", "trace_dispatch", "argst", "save_stdout", "doctest", "__doc__R", "doctest", "Expected", "module", "Module", "relative", "files", "absolute", "pathst", "__file__i", "__main__Rn", "resolve", "paths", "relative", "module", "__file__", "ValueErrorRI", "pathRt", "argvt", "curdirt", "basedir", "doctest", "pycRH", "single", "doctest", "example", "consisting", "source", "expected", "output", "Example", "defines", "following", "attributes", "source", "single", "Python", "statement", "always", "ending", "newline", "constructor", "newline", "needed", "expected", "output", "running", "source", "either", "stdout", "traceback", "exception", "newline", "unless", "empty", "which", "empty", "string", "constructor", "newline", "needed", "exc_msg", "exception", "message", "generated", "example", "example", "expected", "generate", "exception", "expected", "generate", "exception", "exception", "message", "compared", "against", "return", "value", "traceback", "format_exception_only", "exc_msg", "newline", "unless", "constructor", "newline", "needed", "lineno", "number", "within", "DocTest", "string", "containing", "Example", "where", "Example", "begins", "number", "based", "respect", "beginning", "DocTest", "indent", "example", "indentation", "DocTest", "string", "number", "space", "characters", "precede", "example", "first", "prompt", "options", "dictionary", "mapping", "option", "flags", "False", "which", "override", "default", "options", "example", "option", "flags", "contained", "dictionary", "their", "default", "value", "specified", "DocTestRunner", "optionflags", "default", "options", "sourceRz", "linenoR", "optionst", "exc_msg", "doctest", "typet", "NotImplementedR", "other", "doctest", "__eq__", "doctest", "__ne__", "hashR", "doctest", "__hash__", "doctest", "collection", "doctest", "examples", "should", "single", "namespace", "DocTest", "defines", "following", "attributes", "examples", "examples", "globs", "namespace", "globals", "examples", "should", "identifying", "DocTest", "typically", "object", "whose", "docstring", "DocTest", "extracted", "filename", "DocTest", "extracted", "filename", "unknown", "lineno", "number", "within", "filename", "where", "DocTest", "begins", "number", "unavailable", "number", "based", "respect", "beginning", "docstring", "string", "examples", "extracted", "string", "unavailable", "Create", "DocTest", "containing", "given", "examples", "DocTest", "globals", "initialized", "globs", "DocTest", "longer", "accepts", "DocTestParser", "insteadN", "basestringRu", "examplest", "docstringt", "copyR", "doctest", "examplesi", "examples", "exampless", "DocTest", "doctest", "__repr__", "doctest", "doctest", "doctest", "doctest", "__cmp__5", "doctest", "class", "parse", "strings", "containing", "doctest", "examples", "Source", "consists", "followed", "lines", "source", "indent", "lines", "consists", "blank", "lines", "start", "blank", "starting", "other", "traceback", "header", "Different", "versions", "Python", "different", "things", "first", "traceback", "Traceback", "recent", "innermost", "trailing", "whitespace", "header", "stack", "blink", "absorb", "stuff", "until", "starts", "alphanum", "string", "Divide", "given", "string", "examples", "intervening", "return", "alternating", "Examples", "strings", "numbers", "Examples", "based", "optional", "argument", "identifying", "string", "error", "messages", "expandtabst", "_min_indentR", "_EXAMPLE_REt", "finditert", "appendR", "countt", "_parse_examplet", "_IS_BLANK_OR_COMMENTR", "groupR", "stringR", "min_indentt", "outputt", "charnoR", "doctest", "parseo", "Extract", "doctest", "examples", "given", "string", "collect", "DocTest", "object", "globs", "filename", "lineno", "attributes", "DocTest", "object", "documentation", "DocTest", "information", "get_examples", "doctest", "get_doctest", "Extract", "doctest", "examples", "given", "string", "return", "Example", "objects", "numbers", "based", "because", "common", "doctests", "nothing", "interesting", "appears", "opening", "triple", "quote", "first", "interesting", "called", "optional", "argument", "identifying", "string", "error", "messages", "doctest", "Given", "regular", "expression", "match", "_EXAMPLE_RE", "return", "source", "where", "source", "matched", "example", "source", "prompts", "indentation", "stripped", "example", "expected", "output", "indentation", "stripped", "string", "lineno", "number", "where", "example", "starts", "error", "messages", "_check_prompt_blankt", "_check_prefixR", "matcht", "_EXCEPTION_RER", "_find_options", "source_linest", "want_linest", "doctest", "doctest", "Return", "dictionary", "containing", "option", "overrides", "extracted", "option", "directives", "given", "source", "string", "string", "lineno", "number", "where", "example", "starts", "error", "messages", "doctest", "invalid", "option", "doctest", "option", "directive", "example", "_OPTION_DIRECTIVE_RER", "option_stringst", "optiont", "doctest", "Return", "minimum", "indentation", "blank", "_INDENT_REt", "findallR&", "indents", "doctest", "Given", "lines", "source", "string", "including", "prompts", "leading", "indentation", "check", "every", "prompt", "followed", "space", "character", "followed", "space", "character", "raise", "ValueError", "docstring", "lacks", "blank", "after", "enumerateR&", "linesR", "doctest", "Check", "every", "given", "starts", "given", "prefix", "raise", "ValueError", "docstring", "inconsistent", "leading", "whitespace", "prefixR", "doctest", "compilet", "MULTILINEt", "VERBOSER", "DOTALLR", "doctest", "class", "extract", "DocTests", "relevant", "given", "object", "docstring", "docstrings", "contained", "objects", "Doctests", "currently", "extracted", "following", "object", "types", "modules", "functions", "classes", "methods", "staticmethods", "classmethods", "properties", "Create", "doctest", "finder", "optional", "argument", "parser", "specifies", "class", "function", "should", "create", "DocTest", "objects", "objects", "implement", "interface", "DocTest", "signature", "factory", "function", "should", "match", "signature", "DocTest", "constructor", "optional", "argument", "recurse", "false", "examine", "given", "object", "contained", "objects", "optional", "argument", "exclude_empty", "false", "include", "tests", "objects", "empty", "docstrings", "_parsert", "_verboset", "_recurset", "_exclude_empty", "verboset", "parsert", "recurset", "exclude_empty", "doctest", "Return", "DocTests", "defined", "given", "object", "docstring", "contained", "objects", "docstrings", "optional", "parameter", "module", "module", "contains", "given", "object", "module", "specified", "finder", "attempt", "automatically", "determine", "correct", "module", "object", "module", "default", "namespace", "globs", "specified", "prevent", "DocTestFinder", "extracting", "DocTests", "objects", "imported", "other", "modules", "containing", "object", "number", "object", "within", "Contained", "objects", "whose", "module", "match", "module", "ignored", "module", "False", "attempt", "module", "obscure", "mostly", "tests", "module", "False", "cannot", "found", "automatically", "objects", "considered", "belong", "existent", "module", "contained", "objects", "recursively", "searched", "doctests", "globals", "DocTest", "formed", "combining", "globs", "extraglobs", "bindings", "extraglobs", "override", "bindings", "globs", "globals", "dictionary", "created", "DocTest", "globs", "specified", "defaults", "module", "__dict__", "specified", "otherwise", "extraglobs", "specified", "defaults", "DocTestFinder", "given", "__name__", "doesn", "exist", "getmodulet", "getsourcefilet", "getfilet", "linecachet", "getlinest", "__dict__RA", "updatet", "_findt", "extraglobsR_", "tests", "doctest", "pycRx", "Return", "given", "object", "defined", "given", "module", "object", "class", "functionN", "isfunctionR", "func_globalst", "isclassR4", "propertyR", "object", "doctest", "_from_module", "tests", "given", "object", "contained", "objects", "tests", "Finding", "tests", "__test__s5", "DocTestFinder", "__test__", "strings", "DocTestFinder", "__test__", "values", "strings", "functions", "methods", "classes", "modules", "__test__", "_get_testR", "itemsR", "ismethodt", "staticmethodt", "classmethodt", "im_funcR", "seent", "testt", "valnamet", "doctest", "Return", "DocTest", "given", "object", "defines", "docstring", "otherwise", "return", "AttributeErrort", "_find_linenoR", "doctest", "Return", "number", "given", "object", "docstring", "method", "assumes", "object", "docstring", "class", "co_firstlinenoi", "func_codet", "istracebackt", "tb_framet", "isframet", "f_codet", "iscodet", "rangeR&", "doctest", "doctest", "class", "DocTest", "cases", "accumulate", "statistics", "method", "process", "single", "DocTest", "returns", "tuple", "where", "number", "cases", "tried", "number", "cases", "failed", "tests", "DocTestFinder", "_TestClass", "runner", "DocTestRunner", "verbose", "False", "tests", "lambda", "tests", "print", "runner", "_TestClass", "TestResults", "failed", "attempted", "_TestClass", "__init__", "TestResults", "failed", "attempted", "_TestClass", "TestResults", "failed", "attempted", "_TestClass", "square", "TestResults", "failed", "attempted", "summarize", "method", "prints", "summary", "cases", "runner", "returns", "aggregated", "tuple", "runner", "summarize", "verbose", "items", "passed", "tests", "tests", "_TestClass", "tests", "_TestClass", "__init__", "tests", "_TestClass", "tests", "_TestClass", "square", "tests", "items", "passed", "failed", "passed", "TestResults", "failed", "attempted", "aggregated", "number", "tried", "examples", "failed", "examples", "available", "tries", "failures", "attributes", "runner", "tries", "runner", "failures", "comparison", "between", "expected", "outputs", "actual", "outputs", "OutputChecker", "comparison", "customized", "number", "option", "flags", "documentation", "testmod", "information", "option", "flags", "insufficient", "comparison", "customized", "passing", "subclass", "OutputChecker", "constructor", "runner", "display", "output", "controlled", "First", "output", "function", "passed", "TestRunner", "function", "called", "strings", "should", "displayed", "defaults", "stdout", "write", "capturing", "output", "sufficient", "display", "output", "customized", "subclassing", "DocTestRunner", "overriding", "methods", "report_start", "report_success", "report_unexpected_exception", "report_failure", "Create", "runner", "Optional", "keyword", "checker", "OutputChecker", "should", "compare", "expected", "outputs", "actual", "outputs", "doctest", "examples", "Optional", "keyword", "verbose", "prints", "stuff", "failures", "false", "default", "Optional", "argument", "optionflags", "control", "runner", "compares", "expected", "output", "actual", "output", "displays", "failures", "documentation", "testmod", "information", "_checkerR", "optionflagst", "original_optionflagst", "triest", "failurest", "_name2ftRi", "_fakeout", "checkerR", "doctest", "Report", "runner", "about", "process", "given", "example", "displays", "message", "verbose", "Trying", "Expecting", "Expecting", "nothing", "example", "doctest", "report_start", "Report", "given", "example", "successfully", "displays", "message", "verbose", "doctest", "report_success", "Report", "given", "example", "failed", "_failure_headerR", "output_differenceR", "doctest", "report_failure", "Report", "given", "example", "raised", "unexpected", "exception", "Exception", "raised", "doctest", "report_unexpected_exception", "Failed", "example", "DIVIDERRO", "doctest", "examples", "Write", "outcome", "example", "DocTestRunner", "report_", "methods", "using", "writer", "function", "compileflags", "compiler", "flags", "should", "execute", "examples", "Return", "tuple", "where", "number", "examples", "tried", "number", "examples", "failed", "examples", "namespace", "globs", "doctest", "singlei", "unknown", "outcomeN", "check_outputR", "debuggerR", "KeyboardInterruptR", "format_exception_onlyRh", "_DocTestRunner__record_outcomeR", "compileflagsR", "SUCCESSt", "FAILUREt", "BOOMt", "checkt", "examplenumR", "quiett", "optionflagR", "exceptionR", "outcomeRc", "doctest", "__run", "Record", "given", "DocTest", "generated", "failures", "tried", "examples", "doctest", "__record_outcomed", "doctest", "examplenum", "asciiRV", "_DocTestRunner__LINECACHE_FILENAME_RER", "splitlinesRy", "save_linecache_getlines", "module_globalsR", "doctest", "__patched_linecache_getlinesq", "examples", "display", "results", "using", "writer", "function", "examples", "namespace", "globs", "clear_globs", "default", "namespace", "cleared", "after", "garbage", "collection", "would", "examine", "namespace", "after", "completes", "clear_globs", "False", "compileflags", "gives", "flags", "should", "Python", "compiler", "running", "examples", "specified", "default", "future", "import", "flags", "apply", "globs", "output", "example", "checked", "using", "DocTestRunner", "check_output", "results", "formatted", "DocTestRunner", "report_", "methods", "writeR", "resetR", "_DocTestRunner__patched_linecache_getlinest", "displayhookt", "__displayhook__t", "_DocTestRunner__runt", "clear", "clear_globsR", "save_set_tracet", "save_displayhook", "doctest", "Print", "summary", "cases", "DocTestRunner", "return", "tuple", "where", "total", "number", "failed", "examples", "total", "number", "tried", "examples", "optional", "verbose", "argument", "controls", "detailed", "summary", "verbosity", "specified", "DocTestRunner", "verbosity", "items", "tests", "items", "passed", "tests", "tests", "items", "failures", "tests", "items", "passed", "failed", "Failed", "failures", "passed", "notestst", "passedt", "failedt", "totaltt", "totalfR", "thingR", "doctest", "summarize", "doctest", "merge", "doctest", "class", "check", "whether", "actual", "output", "doctest", "example", "matches", "expected", "output", "OutputChecker", "defines", "methods", "check_output", "which", "compares", "given", "outputs", "returns", "match", "output_difference", "which", "returns", "string", "describing", "differences", "between", "outputs", "Return", "actual", "output", "example", "matches", "expected", "output", "These", "strings", "always", "considered", "match", "identical", "depending", "option", "flags", "runner", "using", "several", "exact", "match", "types", "possible", "documentation", "TestRunner", "information", "about", "option", "flags", "False", "False", "escapet", "BLANKLINE_MARKERR", "doctest", "doctest", "_do_a_fancy_diff", "Return", "string", "describing", "differences", "between", "expected", "output", "given", "example", "example", "actual", "output", "optionflags", "option", "flags", "compare", "unified", "expected", "actuals", "context", "expected", "followed", "actualt", "charjunks", "ndiff", "expected", "actuali", "options", "Differences", "Expected", "Expected", "nothing", "Expected", "nothing", "Expected", "nothing", "nothing", "difflibt", "unified_difft", "listR", "context_diffR", "Differt", "IS_CHARACTER_JUNKt", "compareRu", "got_linest", "difft", "kindt", "engineR", "doctest", "pycR$", "doctest", "DocTest", "example", "failed", "debugging", "exception", "instance", "variables", "DocTest", "object", "being", "example", "Example", "object", "failed", "actual", "output", "doctest", "doctest", "__str__", "doctest", "DocTest", "example", "encountered", "unexpected", "exception", "exception", "instance", "variables", "DocTest", "object", "being", "example", "Example", "object", "failed", "exc_info", "exception", "doctest", "doctest", "pycRi", "doctest", "tests", "raise", "exception", "there", "failure", "unexpected", "exception", "occurs", "UnexpectedException", "raised", "contains", "example", "original", "exception", "runner", "DebugRunner", "verbose", "False", "DocTestParser", "get_doctest", "raise", "KeyError", "runner", "except", "UnexpectedException", "failure", "failure", "failure", "example", "exc_info", "failure", "exc_info", "raise", "exc_info", "exc_info", "exc_info", "Traceback", "recent", "KeyError", "original", "exception", "calling", "application", "access", "example", "information", "output", "doesn", "match", "DocTestFailure", "raised", "DocTestParser", "get_doctest", "runner", "except", "DocTestFailure", "failure", "DocTestFailure", "objects", "provide", "access", "failure", "example", "failure", "example", "actual", "output", "failure", "failure", "error", "occurs", "globals", "intact", "globs", "__builtins__", "globs", "DocTestParser", "get_doctest", "raise", "KeyError", "runner", "Traceback", "recent", "UnexpectedException", "DocTest", "examples", "globs", "__builtins__", "globs", "globals", "cleared", "there", "error", "DocTestParser", "get_doctest", "runner", "TestResults", "failed", "attempted", "globs", "doctest", "pycRO", "doctest", "pycR&", "doctest", "doctest", "globs", "verbose", "report", "optionflags", "extraglobs", "raise_on_error", "False", "exclude_empty", "False", "examples", "docstrings", "functions", "classes", "reachable", "module", "current", "module", "supplied", "starting", "__doc__", "examples", "reachable", "__test__", "exists", "__test__", "names", "functions", "classes", "strings", "function", "class", "docstrings", "tested", "private", "strings", "tested", "directly", "docstrings", "Return", "failures", "tests", "doctest", "overview", "Optional", "keyword", "gives", "module", "default", "__name__", "Optional", "keyword", "globs", "gives", "globals", "executing", "examples", "default", "__dict__", "actually", "docstring", "docstring", "examples", "start", "clean", "slate", "Optional", "keyword", "extraglobs", "gives", "dictionary", "should", "merged", "globals", "execute", "examples", "default", "extra", "globals", "Optional", "keyword", "verbose", "prints", "stuff", "prints", "failures", "false", "default", "Optional", "keyword", "report", "prints", "summary", "prints", "nothing", "verbose", "summary", "detailed", "brief", "empty", "tests", "passed", "Optional", "keyword", "optionflags", "together", "module", "constants", "defaults", "Possible", "values", "details", "DONT_ACCEPT_TRUE_FOR_1", "DONT_ACCEPT_BLANKLINE", "NORMALIZE_WHITESPACE", "ELLIPSIS", "IGNORE_EXCEPTION_DETAIL", "REPORT_UDIFF", "REPORT_CDIFF", "REPORT_NDIFF", "REPORT_ONLY_FIRST_FAILURE", "Optional", "keyword", "raise_on_error", "raises", "exception", "first", "unexpected", "exception", "failure", "allows", "failures", "mortem", "debugged", "Advanced", "tomfoolery", "testmod", "methods", "local", "instance", "class", "doctest", "Tester", "merges", "results", "creates", "global", "Tester", "instance", "doctest", "master", "Methods", "doctest", "master", "called", "directly", "something", "unusual", "Passing", "report", "testmod", "especially", "useful", "delay", "displaying", "summary", "Invoke", "doctest", "master", "summarize", "verbose", "fiddling", "testmod", "module", "required", "masterRX", "reportR", "raise_on_errorR", "findert", "runnerR", "doctest", "examples", "given", "Return", "failures", "tests", "Optional", "keyword", "module_relative", "specifies", "filenames", "should", "interpreted", "module_relative", "default", "filename", "specifies", "module", "relative", "default", "relative", "calling", "module", "directory", "package", "argument", "specified", "relative", "package", "ensure", "independence", "filename", "should", "characters", "separate", "segments", "should", "absolute", "begin", "module_relative", "False", "filename", "specifies", "specific", "absolute", "relative", "current", "working", "directory", "Optional", "keyword", "gives", "default", "basename", "Optional", "keyword", "argument", "package", "Python", "package", "Python", "package", "whose", "directory", "should", "directory", "module", "relative", "filename", "package", "specified", "calling", "module", "directory", "directory", "module", "relative", "filenames", "error", "specify", "package", "module_relative", "False", "Optional", "keyword", "globs", "gives", "globals", "executing", "examples", "default", "actually", "docstring", "docstring", "examples", "start", "clean", "slate", "Optional", "keyword", "extraglobs", "gives", "dictionary", "should", "merged", "globals", "execute", "examples", "default", "extra", "globals", "Optional", "keyword", "verbose", "prints", "stuff", "prints", "failures", "false", "default", "Optional", "keyword", "report", "prints", "summary", "prints", "nothing", "verbose", "summary", "detailed", "brief", "empty", "tests", "passed", "Optional", "keyword", "optionflags", "together", "module", "constants", "defaults", "Possible", "values", "details", "DONT_ACCEPT_TRUE_FOR_1", "DONT_ACCEPT_BLANKLINE", "NORMALIZE_WHITESPACE", "ELLIPSIS", "IGNORE_EXCEPTION_DETAIL", "REPORT_UDIFF", "REPORT_CDIFF", "REPORT_NDIFF", "REPORT_ONLY_FIRST_FAILURE", "Optional", "keyword", "raise_on_error", "raises", "exception", "first", "unexpected", "exception", "failure", "allows", "failures", "mortem", "debugged", "Optional", "keyword", "parser", "specifies", "DocTestParser", "subclass", "should", "extract", "tests", "files", "Optional", "keyword", "encoding", "specifies", "encoding", "should", "convert", "unicode", "Advanced", "tomfoolery", "testmod", "methods", "local", "instance", "class", "doctest", "Tester", "merges", "results", "creates", "global", "Tester", "instance", "doctest", "master", "Methods", "doctest", "master", "called", "directly", "something", "unusual", "Passing", "report", "testmod", "especially", "useful", "delay", "displaying", "summary", "Invoke", "doctest", "master", "summarize", "verbose", "fiddling", "Package", "specified", "module", "relative", "paths", "basenameR", "decodeR", "textRo", "doctest", "NoNamec", "examples", "given", "object", "docstring", "using", "globs", "globals", "Optional", "argument", "failure", "messages", "optional", "argument", "verbose", "generate", "output", "there", "failures", "compileflags", "gives", "flags", "should", "Python", "compiler", "running", "examples", "specified", "default", "future", "import", "flags", "apply", "globs", "Optional", "keyword", "optionflags", "specifies", "options", "testing", "output", "documentation", "testmod", "information", "doctest", "class", "Tester", "deprecated", "class", "doctest", "DocTestRunner", "insteadt", "stackleveli", "Tester", "__init__", "specify", "globss", "Tester", "__init__", "module", "warningst", "warnt", "DeprecationWarningR", "testfinderR", "testrunner", "doctest", "Running", "stringt", "examples", "failed", "string", "doctest", "runstring2", "doctest", "rundoc", "typest", "ModuleTypeR", "doctest", "rundictD", "doctest", "run__test__L", "doctest", "pycRV", "doctest", "pycRX", "doctest", "unittest", "option", "flags", "returned", "runner", "could", "restore", "value", "wished", "import", "doctest", "doctest", "_unittest_reportflags", "doctest", "set_unittest_reportflags", "REPORT_NDIFF", "REPORT_ONLY_FIRST_FAILURE", "doctest", "_unittest_reportflags", "REPORT_NDIFF", "REPORT_ONLY_FIRST_FAILURE", "reporting", "flags", "doctest", "set_unittest_reportflags", "ELLIPSIS", "Traceback", "recent", "ValueError", "reporting", "flags", "allowed", "doctest", "set_unittest_reportflags", "REPORT_NDIFF", "REPORT_ONLY_FIRST_FAILURE", "reporting", "flags", "allowed", "_unittest_reportflags", "doctest", "DocTestCasec", "unittestt", "TestCaseR", "_dt_optionflagst", "_dt_checkert", "_dt_testt", "_dt_setUpt", "_dt_tearDown", "setUpt", "tearDownR", "doctest", "doctest", "doctest", "failureExceptiont", "format_failureRb", "doctest", "runTest", "unknown", "numbers", "Failed", "doctest", "lname", "doctest", "without", "results", "without", "catching", "exceptions", "framework", "includes", "debug", "method", "cases", "suites", "support", "mortem", "debugging", "errors", "caught", "caller", "catch", "errors", "initiate", "mortem", "debugging", "DocTestCase", "provides", "debug", "method", "raises", "UnexpectedException", "errors", "there", "unexpected", "exception", "DocTestParser", "get_doctest", "raise", "KeyError", "DocTestCase", "debug", "except", "UnexpectedException", "failure", "UnexpectedException", "contains", "example", "original", "exception", "failure", "failure", "example", "exc_info", "failure", "exc_info", "raise", "exc_info", "exc_info", "exc_info", "Traceback", "recent", "KeyError", "output", "doesn", "match", "DocTestFailure", "raised", "DocTestParser", "get_doctest", "DocTestCase", "debug", "except", "DocTestFailure", "failure", "DocTestFailure", "objects", "provide", "access", "failure", "example", "failure", "example", "actual", "output", "failure", "doctest", "doctest", "doctest", "doctest", "doctest", "doctest", "Doctest", "doctest", "shortDescription", "doctest", "SkipDocTestCasec", "doctest", "DocTestSuite", "above", "skipTest", "doctest", "doctest", "test_skip", "Skipping", "tests", "doctest", "doctest", "Convert", "doctest", "tests", "module", "unittest", "suite", "converts", "documentation", "string", "module", "contains", "doctest", "tests", "unittest", "tests", "string", "fails", "exception", "raised", "showing", "containing", "sometimes", "approximate", "number", "module", "argument", "provides", "module", "tested", "argument", "either", "module", "module", "argument", "given", "calling", "module", "number", "options", "provided", "keyword", "arguments", "setUp", "function", "called", "before", "running", "tests", "setUp", "function", "passed", "DocTest", "object", "setUp", "function", "access", "globals", "globs", "attribute", "passed", "tearDown", "function", "called", "after", "running", "tests", "tearDown", "function", "passed", "DocTest", "object", "tearDown", "function", "access", "globals", "globs", "attribute", "passed", "globs", "dictionary", "containing", "initial", "global", "variables", "tests", "optionflags", "doctest", "option", "flags", "expressed", "integer", "docstringsi", "optimizeR", "TestSuitet", "addTestR", "test_finderR", "suiteR", "doctest", "DocFileCasec", "doctest", "doctest", "Failed", "doctest", "doctest", "doctest", "Package", "specified", "module", "relative", "paths", "doctest", "DocFileTest", "unittest", "suite", "doctest", "files", "doctest", "given", "string", "interpretation", "string", "depends", "keyword", "argument", "module_relative", "number", "options", "provided", "keyword", "arguments", "module_relative", "module_relative", "given", "paths", "interpreted", "independent", "module", "relative", "paths", "default", "these", "paths", "relative", "calling", "module", "directory", "package", "argument", "specified", "relative", "package", "ensure", "independence", "filename", "should", "characters", "separate", "segments", "absolute", "begin", "module_relative", "False", "given", "paths", "interpreted", "specific", "paths", "These", "paths", "absolute", "relative", "current", "working", "directory", "package", "Python", "package", "Python", "package", "whose", "directory", "should", "directory", "module", "relative", "paths", "package", "specified", "calling", "module", "directory", "directory", "module", "relative", "filenames", "error", "specify", "package", "module_relative", "False", "setUp", "function", "called", "before", "running", "tests", "setUp", "function", "passed", "DocTest", "object", "setUp", "function", "access", "globals", "globs", "attribute", "passed", "tearDown", "function", "called", "after", "running", "tests", "tearDown", "function", "passed", "DocTest", "object", "tearDown", "function", "access", "globals", "globs", "attribute", "passed", "globs", "dictionary", "containing", "initial", "global", "variables", "tests", "optionflags", "doctest", "option", "flags", "expressed", "integer", "parser", "DocTestParser", "subclass", "should", "extract", "tests", "files", "encoding", "encoding", "convert", "files", "unicode", "pathst", "doctest", "Extract", "script", "examples", "Converts", "examples", "Python", "script", "Example", "input", "converted", "regular", "Example", "output", "other", "words", "converted", "comments", "examples", "simple", "Python", "super", "accurate", "integer", "addition", "friendly", "error", "messages", "Infinity", "Beyond", "logic", "print", "script_from_examples", "examples", "simple", "Python", "super", "accurate", "integer", "addition", "Expected", "friendly", "error", "messages", "Expected", "Infinity", "Beyond", "logic", "BLANKLINE", "Expected", "pieceRz", "doctest", "Extract", "sources", "doctest", "docstring", "script", "Provide", "module", "dotted", "module", "containing", "debugged", "within", "module", "object", "string", "tests", "debugged", "found", "testsi", "testsrc", "doctest", "Debug", "single", "doctest", "docstring", "argument", "debug_script", "doctest", "Debug", "script", "script", "string", "doctestdebugR", "execfile", "tempfilet", "mktempRM", "closeR", "execfileR", "post_mortemRO", "remove", "srcfilenameRS", "doctest", "Debug", "single", "doctest", "docstring", "Provide", "module", "dotted", "module", "containing", "debugged", "within", "module", "object", "docstring", "tests", "debugged", "doctest", "_TestClassc", "pointless", "class", "sanity", "checking", "docstring", "testing", "Methods", "square", "_TestClass", "_TestClass", "_TestClass", "square", "_TestClass", "object", "associated", "value", "_TestClass", "print", "doctest", "square", "square", "TestClass", "associated", "value", "_TestClass", "square", "doctest", "square", "return", "TestClass", "associated", "value", "_TestClass", "print", "doctest", "doctest", "Example", "string", "object", "searched", "boolean", "expressions", "displayed", "default", "still", "accept", "disabled", "passing", "DONT_ACCEPT_TRUE_FOR_1", "optionflags", "argument", "False", "equivalences", "Blank", "lines", "marked", "BLANKLINE", "print", "BLANKLINE", "BLANKLINE", "blank", "liness", "ellipsis", "elide", "substrings", "desired", "output", "print", "range", "doctest", "ELLIPSIS", "ellipsiss", "whitespace", "normalization", "differences", "whitespace", "ignored", "print", "range", "doctest", "NORMALIZE_WHITESPACE", "whitespace", "normalizationc", "usage", "splitextt", "formatRk", "insertR", "testfilesR", "dirnameR", "doctest", "_test", "__docformat__t", "__all__R", "collectionsR", "__stdout__R", "ExceptionR", "doctest", "module", "dummy_thread", "replacement", "thread", "module", "Meant", "brain", "substitute", "threaded", "rewritten", "thread", "module", "present", "Suggested", "usage", "import", "thread", "except", "ImportError", "import", "dummy_thread", "thread", "errort", "start_new_threadt", "exitt", "get_identt", "allocate_lockt", "interrupt_maint", "LockTypei", "Dummy", "implementation", "thread", "error", "selfR", "dummy_thread", "__init__", "__name__t", "__module__t", "__doc__R", "dummy_thread", "Dummy", "implementation", "thread", "start_new_thread", "Compatibility", "maintained", "making", "tuple", "kwargs", "dictionary", "exception", "raised", "SystemExit", "which", "thread", "caught", "nothing", "other", "exceptions", "printed", "using", "traceback", "print_exc", "executed", "function", "calls", "interrupt_main", "KeyboardInterrupt", "raised", "function", "returns", "tuples", "dictN", "typet", "tuplet", "TypeErrort", "dictt", "Falset", "_maint", "SystemExitt", "_tracebackt", "print_exct", "Truet", "_interruptt", "KeyboardInterrupt", "functionR", "kwargs", "dummy_thread", "Dummy", "implementation", "thread", "dummy_thread", "Dummy", "implementation", "thread", "get_ident", "Since", "module", "should", "threadmodule", "available", "assume", "current", "process", "thread", "constant", "safely", "returned", "dummy_thread", "Dummy", "implementation", "thread", "allocate_lock", "dummy_thread", "Dummy", "implementation", "thread", "stack_size", "setting", "thread", "stack", "supportedi", "NoneR", "dummy_thread", "stack_sizeK", "Class", "implementing", "dummy", "implementation", "thread", "LockType", "Compatibility", "maintained", "maintaining", "locked_status", "which", "boolean", "stores", "state", "Pickling", "though", "should", "since", "thread", "module", "unpickled", "problems", "could", "occur", "class", "having", "atomic", "methods", "locked_status", "dummy_thread", "Dummy", "implementation", "acquire", "blocking", "calls", "locked_status", "automatically", "returned", "appropriately", "based", "value", "waitflag", "blocking", "value", "actually", "checked", "already", "acquired", "threading", "Condition", "assert", "statements", "triggered", "throw", "little", "waitflag", "dummy_thread", "acquire_", "release", "dummy_thread", "__exit__v", "Release", "dummy", "dummy_thread", "pycR!", "dummy_thread", "locked", "__enter__R", "dummy_thread", "_interrupt", "start_new_thread", "raise", "KeyboardInterrupt", "exiting", "dummy_thread", "__all__t", "tracebackR", "ExceptionR", "objectR", "dummy_thread", "module", "encodings", "__init__", "Standard", "encodings", "Package", "Standard", "Python", "encoding", "modules", "stored", "package", "directory", "Codec", "modules", "names", "corresponding", "normalized", "encoding", "names", "defined", "normalize_encoding", "function", "below", "implemented", "module", "utf_8", "codec", "module", "export", "following", "interface", "getregentry", "codecs", "CodecInfo", "object", "getregentry", "CodecInfo", "object", "encoder", "decoder", "incrementalencoder", "incrementaldecoder", "streamwriter", "streamreader", "atttributes", "which", "adhere", "Python", "Codec", "Interface", "Standard", "addition", "module", "optionally", "define", "following", "which", "package", "codec", "search", "function", "getaliases", "sequence", "encoding", "strings", "aliases", "Alias", "names", "returned", "getaliases", "normalized", "encoding", "names", "defined", "normalize_encoding", "Written", "Andre", "Lemburg", "lemburg", "Copyright", "Rights", "Reserved", "WARRANTY", "aliasess", "unknown", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "CodecRegistryErrorc", "__name__t", "__module__", "encodings", "__init__", "Normalize", "encoding", "Normalization", "works", "follows", "alphanumeric", "characters", "except", "Python", "package", "names", "collapsed", "replaced", "single", "underscore", "becomes", "Leading", "trailing", "underscores", "removed", "encoding", "names", "should", "ASCII", "ASCII", "characters", "these", "Latin", "compatible", "unicodes", "latin", "hasattrt", "__builtin__t", "isinstanceR", "encodet", "joint", "translatet", "_norm_encoding_mapt", "split", "encoding", "encodings", "__init__", "normalize_encoding1", "encodings", "fromlistt", "leveli", "module", "failed", "registert", "__call__i", "incompatible", "codecs", "module", "_cachet", "_unknownR", "_aliasest", "replacet", "Nonet", "__import__t", "_import_tailt", "ImportErrort", "getregentryt", "AttributeErrorR", "codecst", "CodecInfot", "__file__R", "getaliases", "entryt", "norm_encodingt", "aliased_encodingt", "modnamest", "modnamet", "codecaliasest", "alias", "encodings", "__init__", "search_functionG", "__doc__R", "encodingsR", "LookupErrort", "SystemErrorR", "register", "encodings", "__init__", "module", "encodings", "aliases", "Encoding", "Aliases", "Support", "module", "encodings", "package", "search", "function", "encodings", "names", "module", "names", "search", "function", "normalizes", "encoding", "names", "before", "doing", "lookup", "mapping", "normalized", "encoding", "names", "module", "names", "Contents", "following", "aliases", "dictionary", "contains", "mappings", "character", "names", "which", "Python", "library", "provides", "codecs", "addition", "these", "Python", "specific", "codec", "aliases", "added", "asciit", "ansi_x3", "4_1968t", "ansi_x3_4_1968s", "ansi_x3", "4_1986t", "cp367t", "csasciit", "ibm367t", "iso646_uss", "iso_646", "irv_1991t", "iso_ir_6t", "us_asciit", "base64_codect", "base64t", "base_64t", "big5t", "big5_twt", "csbig5t", "big5hkscst", "big5_hkscst", "hkscst", "bz2_codect", "cp037t", "csibm037t", "ebcdic_cp_cat", "ebcdic_cp_nlt", "ebcdic_cp_ust", "ebcdic_cp_wtt", "ibm037t", "ibm039t", "cp1026t", "1026t", "csibm1026t", "ibm1026t", "cp1140t", "1140t", "ibm1140t", "cp1250t", "1250t", "windows_1250t", "cp1251t", "1251t", "windows_1251t", "cp1252t", "1252t", "windows_1252t", "cp1253t", "1253t", "windows_1253t", "cp1254t", "1254t", "windows_1254t", "cp1255t", "1255t", "windows_1255t", "cp1256t", "1256t", "windows_1256t", "cp1257t", "1257t", "windows_1257t", "cp1258t", "1258t", "windows_1258t", "cp424t", "csibm424t", "ebcdic_cp_het", "ibm424t", "cp437t", "cspc8codepage437t", "ibm437t", "cp500t", "csibm500t", "ebcdic_cp_bet", "ebcdic_cp_cht", "ibm500t", "cp775t", "cspc775baltict", "ibm775t", "cp850t", "cspc850multilingualt", "ibm850t", "cp852t", "cspcp852t", "ibm852t", "cp855t", "csibm855t", "ibm855t", "cp857t", "csibm857t", "ibm857t", "cp858t", "csibm858t", "ibm858t", "cp860t", "csibm860t", "ibm860t", "cp861t", "cp_ist", "csibm861t", "ibm861t", "cp862t", "cspc862latinhebrewt", "ibm862t", "cp863t", "csibm863t", "ibm863t", "cp864t", "csibm864t", "ibm864t", "cp865t", "csibm865t", "ibm865t", "cp866t", "csibm866t", "ibm866t", "cp869t", "cp_grt", "csibm869t", "ibm869t", "cp932t", "ms932t", "mskanjit", "ms_kanjit", "cp949t", "ms949t", "cp950t", "ms950t", "euc_jis_2004t", "jisx0213t", "eucjis2004t", "euc_jis2004t", "euc_jisx0213t", "eucjisx0213t", "euc_jpt", "eucjpt", "ujist", "u_jist", "euc_krt", "euckrt", "koreant", "ksc5601t", "ks_c_5601t", "ks_c_5601_1987t", "ksx1001t", "ks_x_1001t", "gb18030t", "gb18030_2000t", "gb2312t", "chineset", "csiso58gb231280t", "euc_cnt", "euccnt", "eucgb2312_cnt", "gb2312_1980t", "gb2312_80t", "iso_ir_58t", "cp936t", "ms936t", "hex_codect", "hp_roman8t", "roman8t", "csHPRoman8t", "hzgbt", "hz_gbt", "hz_gb_2312t", "iso2022_jpt", "csiso2022jpt", "iso2022jpt", "iso_2022_jpt", "iso2022_jp_1t", "iso2022jp_1t", "iso_2022_jp_1t", "iso2022_jp_2t", "iso2022jp_2t", "iso_2022_jp_2t", "iso2022_jp_2004t", "iso_2022_jp_2004t", "iso2022jp_2004t", "iso2022_jp_3t", "iso2022jp_3t", "iso_2022_jp_3t", "iso2022_jp_extt", "iso2022jp_extt", "iso_2022_jp_extt", "iso2022_krt", "csiso2022krt", "iso2022krt", "iso_2022_krt", "iso8859_10t", "csisolatin6t", "iso_8859_10t", "iso_8859_10_1992t", "iso_ir_157t", "latin6t", "iso8859_11t", "thait", "iso_8859_11t", "iso_8859_11_2001t", "iso8859_13t", "iso_8859_13t", "latin7t", "iso8859_14t", "iso_8859_14t", "iso_8859_14_1998t", "iso_celtict", "iso_ir_199t", "latin8t", "iso8859_15t", "iso_8859_15t", "latin9t", "iso8859_16t", "iso_8859_16t", "iso_8859_16_2001t", "iso_ir_226t", "latin10t", "iso8859_2t", "csisolatin2t", "iso_8859_2t", "iso_8859_2_1987t", "iso_ir_101t", "latin2t", "iso8859_3t", "csisolatin3t", "iso_8859_3t", "iso_8859_3_1988t", "iso_ir_109t", "latin3t", "iso8859_4t", "csisolatin4t", "iso_8859_4t", "iso_8859_4_1988t", "iso_ir_110t", "latin4t", "iso8859_5t", "csisolatincyrillict", "cyrillict", "iso_8859_5t", "iso_8859_5_1988t", "iso_ir_144t", "iso8859_6t", "arabict", "asmo_708t", "csisolatinarabict", "ecma_114t", "iso_8859_6t", "iso_8859_6_1987t", "iso_ir_127t", "iso8859_7t", "csisolatingreekt", "ecma_118t", "elot_928t", "greekt", "greek8t", "iso_8859_7t", "iso_8859_7_1987t", "iso_ir_126t", "iso8859_8t", "csisolatinhebrewt", "hebrewt", "iso_8859_8t", "iso_8859_8_1988t", "iso_ir_138t", "iso8859_9t", "csisolatin5t", "iso_8859_9t", "iso_8859_9_1989t", "iso_ir_148t", "latin5t", "johabt", "cp1361t", "ms1361t", "koi8_rt", "cskoi8rt", "latin_1t", "8859t", "cp819t", "csisolatin1t", "ibm819t", "iso8859t", "iso8859_1t", "iso_8859_1t", "iso_8859_1_1987t", "iso_ir_100t", "latint", "latin1t", "mac_cyrillict", "maccyrillict", "mac_greekt", "macgreekt", "mac_icelandt", "macicelandt", "mac_latin2t", "maccentraleuropet", "maclatin2t", "mac_romant", "macromant", "mac_turkisht", "macturkisht", "mbcst", "dbcst", "ptcp154t", "csptcp154t", "pt154t", "cp154t", "cyrillic_asiant", "quopri_codect", "quoprit", "quoted_printablet", "quotedprintablet", "rot_13t", "rot13t", "shift_jist", "csshiftjist", "shiftjist", "sjist", "s_jist", "shift_jis_2004t", "shiftjis2004t", "sjis_2004t", "s_jis_2004t", "shift_jisx0213t", "shiftjisx0213t", "sjisx0213t", "s_jisx0213t", "tactist", "tis260t", "tis_620t", "tis620t", "tis_620_0t", "tis_620_2529_0t", "tis_620_2529_1t", "iso_ir_166t", "utf_16t", "utf16t", "utf_16_bet", "unicodebigunmarkedt", "utf_16bet", "utf_16_let", "unicodelittleunmarkedt", "utf_16let", "utf_32t", "utf32t", "utf_32_bet", "utf_32bet", "utf_32_let", "utf_32let", "utf_7t", "utf7t", "unicode_1_1_utf_7t", "utf_8t", "utf8t", "utf8_ucs2t", "utf8_ucs4t", "uu_codect", "zlib_codect", "zlibN", "__doc__t", "aliases", "encodings", "aliases", "module", "encodings", "ascii", "Python", "ascii", "Codec", "Written", "Andre", "Lemburg", "lemburg", "Copyright", "Rights", "Reserved", "WARRANTY", "Codecc", "__name__t", "__module__t", "codecst", "ascii_encodet", "encodet", "ascii_decodet", "decode", "encodings", "ascii", "IncrementalEncoderc", "errors", "selft", "inputt", "final", "encodings", "ascii", "FalseR", "encodings", "ascii", "IncrementalDecoderc", "encodings", "ascii", "encodings", "ascii", "StreamWriterc", "encodings", "ascii", "StreamReaderc", "encodings", "ascii", "StreamConverterc", "encodings", "ascii", "namet", "asciiR", "incrementalencodert", "incrementaldecodert", "streamwritert", "streamreader", "CodecInfoR", "encodings", "ascii", "getregentry", "__doc__R", "encodings", "ascii", "module", "encodings", "base64_codec", "Python", "base64_codec", "Codec", "base64", "content", "transfer", "encoding", "Unlike", "other", "codecs", "which", "target", "Unicode", "codec", "return", "Python", "string", "objects", "encode", "decode", "Written", "Andre", "Lemburg", "lemburg", "strictc", "Encodes", "object", "input", "returns", "tuple", "output", "object", "length", "consumed", "errors", "defines", "error", "handling", "apply", "defaults", "strict", "handling", "which", "currently", "supported", "error", "handling", "codec", "AssertionErrort", "base64t", "encodestringt", "inputt", "errorst", "output", "encodings", "base64_codec", "base64_encode", "Decodes", "object", "input", "returns", "tuple", "output", "object", "length", "consumed", "input", "object", "which", "provides", "bf_getreadbuf", "buffer", "Python", "strings", "buffer", "objects", "memory", "mapped", "files", "examples", "objects", "providing", "errors", "defines", "error", "handling", "apply", "defaults", "strict", "handling", "which", "currently", "supported", "error", "handling", "codec", "decodestringR", "encodings", "base64_codec", "base64_decode", "Codecc", "selfR", "encodings", "base64_codec", "encode", "encodings", "base64_codec", "decode1", "__name__t", "__module__R", "encodings", "base64_codec", "IncrementalEncoderc", "final", "encodings", "base64_codec", "FalseR", "encodings", "base64_codec", "IncrementalDecoderc", "encodings", "base64_codec", "encodings", "base64_codec", "StreamWriterc", "encodings", "base64_codec", "StreamReaderc", "encodings", "base64_codec", "nameR", "incrementalencodert", "incrementaldecodert", "streamwritert", "streamreadert", "_is_text_encoding", "codecst", "CodecInfoR", "encodings", "base64_codec", "getregentryF", "__doc__R", "encodings", "base64_codec", "module", "encodings", "big5t", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "IncrementalEncoderc", "encodings", "IncrementalDecoderc", "encodings", "StreamReaderc", "encodings", "StreamWriterc", "encodings", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "getregentry", "_codecs_twR", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "module", "encodings", "big5hkscs", "big5hkscst", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "big5hkscs", "IncrementalEncoderc", "encodings", "big5hkscs", "IncrementalDecoderc", "encodings", "big5hkscs", "StreamReaderc", "encodings", "big5hkscs", "StreamWriterc", "encodings", "big5hkscs", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "big5hkscs", "getregentry", "_codecs_hkR", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "big5hkscs", "module", "encodings", "bz2_codec", "Python", "bz2_codec", "Codec", "compression", "encoding", "Unlike", "other", "codecs", "which", "target", "Unicode", "codec", "return", "Python", "string", "objects", "encode", "decode", "Adapted", "Raymond", "Hettinger", "zlib_codec", "which", "written", "Andre", "Lemburg", "lemburg", "strictc", "Encodes", "object", "input", "returns", "tuple", "output", "object", "length", "consumed", "errors", "defines", "error", "handling", "apply", "defaults", "strict", "handling", "which", "currently", "supported", "error", "handling", "codec", "AssertionErrort", "compresst", "inputt", "errorst", "output", "encodings", "bz2_codec", "bz2_encode", "Decodes", "object", "input", "returns", "tuple", "output", "object", "length", "consumed", "input", "object", "which", "provides", "bf_getreadbuf", "buffer", "Python", "strings", "buffer", "objects", "memory", "mapped", "files", "examples", "objects", "providing", "errors", "defines", "error", "handling", "apply", "defaults", "strict", "handling", "which", "currently", "supported", "error", "handling", "codec", "decompressR", "encodings", "bz2_codec", "bz2_decode", "Codecc", "selfR", "encodings", "bz2_codec", "encode1", "encodings", "bz2_codec", "decode3", "__name__t", "__module__R", "encodings", "bz2_codec", "IncrementalEncoderc", "BZ2Compressort", "compressobj", "encodings", "bz2_codec", "__init__7", "flush", "finalt", "encodings", "bz2_codec", "encodings", "bz2_codec", "resetC", "FalseR", "encodings", "bz2_codec", "IncrementalDecoderc", "BZ2Decompressort", "decompressobj", "encodings", "bz2_codec", "EOFError", "encodings", "bz2_codec", "encodings", "bz2_codec", "encodings", "bz2_codec", "StreamWriterc", "encodings", "bz2_codec", "StreamReaderc", "encodings", "bz2_codec", "nameR", "incrementalencodert", "incrementaldecodert", "streamwritert", "streamreadert", "_is_text_encoding", "codecst", "CodecInfoR", "encodings", "bz2_codec", "getregentry", "__doc__R", "encodings", "bz2_codec", "module", "encodings", "charmap", "Generic", "Python", "Character", "Mapping", "Codec", "codec", "directly", "rather", "through", "automatic", "conversion", "mechanisms", "supplied", "unicode", "encode", "Written", "Andre", "Lemburg", "lemburg", "Copyright", "Rights", "Reserved", "WARRANTY", "Codecc", "__name__t", "__module__t", "codecst", "charmap_encodet", "encodet", "charmap_decodet", "decode", "encodings", "charmap", "IncrementalEncoderc", "strictc", "__init__t", "mapping", "selft", "errorsR", "encodings", "charmap", "inputt", "final", "encodings", "charmap", "NoneR", "FalseR", "encodings", "charmap", "IncrementalDecoderc", "encodings", "charmap", "encodings", "charmap", "encodings", "charmap", "StreamWriterc", "streamR", "encodings", "charmap", "encodings", "charmap", "encodings", "charmap", "StreamReaderc", "encodings", "charmap", "encodings", "charmap", "encodings", "charmap", "namet", "charmapR", "incrementalencodert", "incrementaldecodert", "streamwritert", "streamreader", "CodecInfoR", "encodings", "charmap", "getregentry", "__doc__R", "encodings", "charmap", "module", "encodings", "cp037", "Python", "Character", "Mapping", "Codec", "cp037", "generated", "MAPPINGS", "VENDORS", "MICSFT", "EBCDIC", "CP037", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "cp037", "encode", "charmap_decodet", "decoding_table", "encodings", "cp037", "decode", "__name__t", "__module__R", "encodings", "cp037", "IncrementalEncoderc", "final", "encodings", "cp037", "FalseR", "encodings", "cp037", "IncrementalDecoderc", "encodings", "cp037", "encodings", "cp037", "StreamWriterc", "encodings", "cp037", "StreamReaderc", "encodings", "cp037", "namet", "cp037R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp037", "getregentry!", "abcdefghi", "jklmnopqr", "stuvwxyz", "ABCDEFGHI", "JKLMNOPQR", "STUVWXYZ", "0123456789", "__doc__R", "charmap_buildR", "encodings", "cp037", "module", "encodings", "cp1006", "Python", "Character", "Mapping", "Codec", "cp1006", "generated", "MAPPINGS", "VENDORS", "CP1006", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "cp1006", "encode", "charmap_decodet", "decoding_table", "encodings", "cp1006", "decode", "__name__t", "__module__R", "encodings", "cp1006", "IncrementalEncoderc", "final", "encodings", "cp1006", "FalseR", "encodings", "cp1006", "IncrementalDecoderc", "encodings", "cp1006", "encodings", "cp1006", "StreamWriterc", "encodings", "cp1006", "StreamReaderc", "encodings", "cp1006", "namet", "cp1006R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp1006", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "cp1006", "module", "encodings", "cp1026", "Python", "Character", "Mapping", "Codec", "cp1026", "generated", "MAPPINGS", "VENDORS", "MICSFT", "EBCDIC", "CP1026", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "cp1026", "encode", "charmap_decodet", "decoding_table", "encodings", "cp1026", "decode", "__name__t", "__module__R", "encodings", "cp1026", "IncrementalEncoderc", "final", "encodings", "cp1026", "FalseR", "encodings", "cp1026", "IncrementalDecoderc", "encodings", "cp1026", "encodings", "cp1026", "StreamWriterc", "encodings", "cp1026", "StreamReaderc", "encodings", "cp1026", "namet", "cp1026R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp1026", "getregentry!", "abcdefghi", "jklmnopqr", "stuvwxyz", "ABCDEFGHI", "JKLMNOPQR", "STUVWXYZ", "0123456789", "__doc__R", "charmap_buildR", "encodings", "cp1026", "module", "encodings", "cp1140", "Python", "Character", "Mapping", "Codec", "cp1140", "generated", "python", "mappings", "CP1140", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "cp1140", "encode", "charmap_decodet", "decoding_table", "encodings", "cp1140", "decode", "__name__t", "__module__R", "encodings", "cp1140", "IncrementalEncoderc", "final", "encodings", "cp1140", "FalseR", "encodings", "cp1140", "IncrementalDecoderc", "encodings", "cp1140", "encodings", "cp1140", "StreamWriterc", "encodings", "cp1140", "StreamReaderc", "encodings", "cp1140", "namet", "cp1140R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp1140", "getregentry!", "abcdefghi", "jklmnopqr", "stuvwxyz", "ABCDEFGHI", "JKLMNOPQR", "STUVWXYZ", "0123456789", "__doc__R", "charmap_buildR", "encodings", "cp1140", "module", "encodings", "cp1250", "Python", "Character", "Mapping", "Codec", "cp1250", "generated", "MAPPINGS", "VENDORS", "MICSFT", "WINDOWS", "CP1250", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "cp1250", "encode", "charmap_decodet", "decoding_table", "encodings", "cp1250", "decode", "__name__t", "__module__R", "encodings", "cp1250", "IncrementalEncoderc", "final", "encodings", "cp1250", "FalseR", "encodings", "cp1250", "IncrementalDecoderc", "encodings", "cp1250", "encodings", "cp1250", "StreamWriterc", "encodings", "cp1250", "StreamReaderc", "encodings", "cp1250", "namet", "cp1250R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp1250", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "cp1250", "module", "encodings", "cp1251", "Python", "Character", "Mapping", "Codec", "cp1251", "generated", "MAPPINGS", "VENDORS", "MICSFT", "WINDOWS", "CP1251", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "cp1251", "encode", "charmap_decodet", "decoding_table", "encodings", "cp1251", "decode", "__name__t", "__module__R", "encodings", "cp1251", "IncrementalEncoderc", "final", "encodings", "cp1251", "FalseR", "encodings", "cp1251", "IncrementalDecoderc", "encodings", "cp1251", "encodings", "cp1251", "StreamWriterc", "encodings", "cp1251", "StreamReaderc", "encodings", "cp1251", "namet", "cp1251R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp1251", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "cp1251", "module", "encodings", "cp1252", "Python", "Character", "Mapping", "Codec", "cp1252", "generated", "MAPPINGS", "VENDORS", "MICSFT", "WINDOWS", "CP1252", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "cp1252", "encode", "charmap_decodet", "decoding_table", "encodings", "cp1252", "decode", "__name__t", "__module__R", "encodings", "cp1252", "IncrementalEncoderc", "final", "encodings", "cp1252", "FalseR", "encodings", "cp1252", "IncrementalDecoderc", "encodings", "cp1252", "encodings", "cp1252", "StreamWriterc", "encodings", "cp1252", "StreamReaderc", "encodings", "cp1252", "namet", "cp1252R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp1252", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "cp1252", "module", "encodings", "cp1253", "Python", "Character", "Mapping", "Codec", "cp1253", "generated", "MAPPINGS", "VENDORS", "MICSFT", "WINDOWS", "CP1253", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "cp1253", "encode", "charmap_decodet", "decoding_table", "encodings", "cp1253", "decode", "__name__t", "__module__R", "encodings", "cp1253", "IncrementalEncoderc", "final", "encodings", "cp1253", "FalseR", "encodings", "cp1253", "IncrementalDecoderc", "encodings", "cp1253", "encodings", "cp1253", "StreamWriterc", "encodings", "cp1253", "StreamReaderc", "encodings", "cp1253", "namet", "cp1253R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp1253", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "cp1253", "module", "encodings", "cp1254", "Python", "Character", "Mapping", "Codec", "cp1254", "generated", "MAPPINGS", "VENDORS", "MICSFT", "WINDOWS", "CP1254", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "cp1254", "encode", "charmap_decodet", "decoding_table", "encodings", "cp1254", "decode", "__name__t", "__module__R", "encodings", "cp1254", "IncrementalEncoderc", "final", "encodings", "cp1254", "FalseR", "encodings", "cp1254", "IncrementalDecoderc", "encodings", "cp1254", "encodings", "cp1254", "StreamWriterc", "encodings", "cp1254", "StreamReaderc", "encodings", "cp1254", "namet", "cp1254R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp1254", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "cp1254", "module", "encodings", "cp1255", "Python", "Character", "Mapping", "Codec", "cp1255", "generated", "MAPPINGS", "VENDORS", "MICSFT", "WINDOWS", "CP1255", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "cp1255", "encode", "charmap_decodet", "decoding_table", "encodings", "cp1255", "decode", "__name__t", "__module__R", "encodings", "cp1255", "IncrementalEncoderc", "final", "encodings", "cp1255", "FalseR", "encodings", "cp1255", "IncrementalDecoderc", "encodings", "cp1255", "encodings", "cp1255", "StreamWriterc", "encodings", "cp1255", "StreamReaderc", "encodings", "cp1255", "namet", "cp1255R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp1255", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "cp1255", "module", "encodings", "cp1256", "Python", "Character", "Mapping", "Codec", "cp1256", "generated", "MAPPINGS", "VENDORS", "MICSFT", "WINDOWS", "CP1256", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "cp1256", "encode", "charmap_decodet", "decoding_table", "encodings", "cp1256", "decode", "__name__t", "__module__R", "encodings", "cp1256", "IncrementalEncoderc", "final", "encodings", "cp1256", "FalseR", "encodings", "cp1256", "IncrementalDecoderc", "encodings", "cp1256", "encodings", "cp1256", "StreamWriterc", "encodings", "cp1256", "StreamReaderc", "encodings", "cp1256", "namet", "cp1256R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp1256", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "cp1256", "module", "encodings", "cp1257", "Python", "Character", "Mapping", "Codec", "cp1257", "generated", "MAPPINGS", "VENDORS", "MICSFT", "WINDOWS", "CP1257", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "cp1257", "encode", "charmap_decodet", "decoding_table", "encodings", "cp1257", "decode", "__name__t", "__module__R", "encodings", "cp1257", "IncrementalEncoderc", "final", "encodings", "cp1257", "FalseR", "encodings", "cp1257", "IncrementalDecoderc", "encodings", "cp1257", "encodings", "cp1257", "StreamWriterc", "encodings", "cp1257", "StreamReaderc", "encodings", "cp1257", "namet", "cp1257R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp1257", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "cp1257", "module", "encodings", "cp1258", "Python", "Character", "Mapping", "Codec", "cp1258", "generated", "MAPPINGS", "VENDORS", "MICSFT", "WINDOWS", "CP1258", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "cp1258", "encode", "charmap_decodet", "decoding_table", "encodings", "cp1258", "decode", "__name__t", "__module__R", "encodings", "cp1258", "IncrementalEncoderc", "final", "encodings", "cp1258", "FalseR", "encodings", "cp1258", "IncrementalDecoderc", "encodings", "cp1258", "encodings", "cp1258", "StreamWriterc", "encodings", "cp1258", "StreamReaderc", "encodings", "cp1258", "namet", "cp1258R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp1258", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "cp1258", "module", "encodings", "cp424", "Python", "Character", "Mapping", "Codec", "cp424", "generated", "MAPPINGS", "VENDORS", "CP424", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "cp424", "encode", "charmap_decodet", "decoding_table", "encodings", "cp424", "decode", "__name__t", "__module__R", "encodings", "cp424", "IncrementalEncoderc", "final", "encodings", "cp424", "FalseR", "encodings", "cp424", "IncrementalDecoderc", "encodings", "cp424", "encodings", "cp424", "StreamWriterc", "encodings", "cp424", "StreamReaderc", "encodings", "cp424", "namet", "cp424R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp424", "getregentry!", "abcdefghi", "jklmnopqr", "stuvwxyz", "ABCDEFGHI", "JKLMNOPQR", "STUVWXYZ", "0123456789", "__doc__R", "charmap_buildR", "encodings", "cp424", "module", "encodings", "cp437", "Python", "Character", "Mapping", "Codec", "cp437", "generated", "VENDORS", "MICSFT", "CP437", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_map", "selft", "inputt", "errors", "encodings", "cp437", "encode", "charmap_decodet", "decoding_table", "encodings", "cp437", "decode", "__name__t", "__module__R", "encodings", "cp437", "IncrementalEncoderc", "final", "encodings", "cp437", "FalseR", "encodings", "cp437", "IncrementalDecoderc", "encodings", "cp437", "encodings", "cp437", "StreamWriterc", "encodings", "cp437", "StreamReaderc", "encodings", "cp437", "namet", "cp437R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp437", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "make_identity_dictt", "ranget", "decoding_mapt", "updateR", "encodings", "cp437", "module", "encodings", "cp500", "Python", "Character", "Mapping", "Codec", "cp500", "generated", "MAPPINGS", "VENDORS", "MICSFT", "EBCDIC", "CP500", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "cp500", "encode", "charmap_decodet", "decoding_table", "encodings", "cp500", "decode", "__name__t", "__module__R", "encodings", "cp500", "IncrementalEncoderc", "final", "encodings", "cp500", "FalseR", "encodings", "cp500", "IncrementalDecoderc", "encodings", "cp500", "encodings", "cp500", "StreamWriterc", "encodings", "cp500", "StreamReaderc", "encodings", "cp500", "namet", "cp500R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp500", "getregentry!", "abcdefghi", "jklmnopqr", "stuvwxyz", "ABCDEFGHI", "JKLMNOPQR", "STUVWXYZ", "0123456789", "__doc__R", "charmap_buildR", "encodings", "cp500", "module", "encodings", "cp720", "Python", "Character", "Mapping", "Codec", "cp720", "generated", "Windows", "Vista", "Multiprocessor", "command", "python", "Tools", "unicode", "genwincodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "cp720", "encode", "charmap_decodet", "decoding_table", "encodings", "cp720", "decode", "__name__t", "__module__R", "encodings", "cp720", "IncrementalEncoderc", "final", "encodings", "cp720", "FalseR", "encodings", "cp720", "IncrementalDecoderc", "encodings", "cp720", "encodings", "cp720", "StreamWriterc", "encodings", "cp720", "StreamReaderc", "encodings", "cp720", "namet", "cp720R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp720", "getregentry", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "cp720", "module", "encodings", "cp737", "Python", "Character", "Mapping", "Codec", "cp737", "generated", "VENDORS", "MICSFT", "CP737", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_map", "selft", "inputt", "errors", "encodings", "cp737", "encode", "charmap_decodet", "decoding_table", "encodings", "cp737", "decode", "__name__t", "__module__R", "encodings", "cp737", "IncrementalEncoderc", "final", "encodings", "cp737", "FalseR", "encodings", "cp737", "IncrementalDecoderc", "encodings", "cp737", "encodings", "cp737", "StreamWriterc", "encodings", "cp737", "StreamReaderc", "encodings", "cp737", "namet", "cp737R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp737", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "make_identity_dictt", "ranget", "decoding_mapt", "updateR", "encodings", "cp737", "module", "encodings", "cp775", "Python", "Character", "Mapping", "Codec", "cp775", "generated", "VENDORS", "MICSFT", "CP775", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_map", "selft", "inputt", "errors", "encodings", "cp775", "encode", "charmap_decodet", "decoding_table", "encodings", "cp775", "decode", "__name__t", "__module__R", "encodings", "cp775", "IncrementalEncoderc", "final", "encodings", "cp775", "FalseR", "encodings", "cp775", "IncrementalDecoderc", "encodings", "cp775", "encodings", "cp775", "StreamWriterc", "encodings", "cp775", "StreamReaderc", "encodings", "cp775", "namet", "cp775R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp775", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "make_identity_dictt", "ranget", "decoding_mapt", "updateR", "encodings", "cp775", "module", "encodings", "cp850", "Python", "Character", "Mapping", "Codec", "generated", "VENDORS", "MICSFT", "CP850", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_map", "selft", "inputt", "errors", "encodings", "cp850", "encode", "charmap_decodet", "decoding_table", "encodings", "cp850", "decode", "__name__t", "__module__R", "encodings", "cp850", "IncrementalEncoderc", "final", "encodings", "cp850", "FalseR", "encodings", "cp850", "IncrementalDecoderc", "encodings", "cp850", "encodings", "cp850", "StreamWriterc", "encodings", "cp850", "StreamReaderc", "encodings", "cp850", "namet", "cp850R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp850", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "make_identity_dictt", "ranget", "decoding_mapt", "updateR", "encodings", "cp850", "module", "encodings", "cp852", "Python", "Character", "Mapping", "Codec", "generated", "VENDORS", "MICSFT", "CP852", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_map", "selft", "inputt", "errors", "encodings", "cp852", "encode", "charmap_decodet", "decoding_table", "encodings", "cp852", "decode", "__name__t", "__module__R", "encodings", "cp852", "IncrementalEncoderc", "final", "encodings", "cp852", "FalseR", "encodings", "cp852", "IncrementalDecoderc", "encodings", "cp852", "encodings", "cp852", "StreamWriterc", "encodings", "cp852", "StreamReaderc", "encodings", "cp852", "namet", "cp852R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp852", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "make_identity_dictt", "ranget", "decoding_mapt", "updateR", "encodings", "cp852", "module", "encodings", "cp855", "Python", "Character", "Mapping", "Codec", "generated", "VENDORS", "MICSFT", "CP855", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_map", "selft", "inputt", "errors", "encodings", "cp855", "encode", "charmap_decodet", "decoding_table", "encodings", "cp855", "decode", "__name__t", "__module__R", "encodings", "cp855", "IncrementalEncoderc", "final", "encodings", "cp855", "FalseR", "encodings", "cp855", "IncrementalDecoderc", "encodings", "cp855", "encodings", "cp855", "StreamWriterc", "encodings", "cp855", "StreamReaderc", "encodings", "cp855", "namet", "cp855R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp855", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "make_identity_dictt", "ranget", "decoding_mapt", "updateR", "encodings", "cp855", "module", "encodings", "cp856", "Python", "Character", "Mapping", "Codec", "cp856", "generated", "MAPPINGS", "VENDORS", "CP856", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "cp856", "encode", "charmap_decodet", "decoding_table", "encodings", "cp856", "decode", "__name__t", "__module__R", "encodings", "cp856", "IncrementalEncoderc", "final", "encodings", "cp856", "FalseR", "encodings", "cp856", "IncrementalDecoderc", "encodings", "cp856", "encodings", "cp856", "StreamWriterc", "encodings", "cp856", "StreamReaderc", "encodings", "cp856", "namet", "cp856R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp856", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "cp856", "module", "encodings", "cp857", "Python", "Character", "Mapping", "Codec", "generated", "VENDORS", "MICSFT", "CP857", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_map", "selft", "inputt", "errors", "encodings", "cp857", "encode", "charmap_decodet", "decoding_table", "encodings", "cp857", "decode", "__name__t", "__module__R", "encodings", "cp857", "IncrementalEncoderc", "final", "encodings", "cp857", "FalseR", "encodings", "cp857", "IncrementalDecoderc", "encodings", "cp857", "encodings", "cp857", "StreamWriterc", "encodings", "cp857", "StreamReaderc", "encodings", "cp857", "namet", "cp857R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp857", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "make_identity_dictt", "ranget", "decoding_mapt", "updatet", "NoneR", "encodings", "cp857", "module", "encodings", "cp858", "Python", "Character", "Mapping", "Codec", "CP858", "modified", "cp850", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_map", "selft", "inputt", "errors", "encodings", "cp858", "encode", "charmap_decodet", "decoding_table", "encodings", "cp858", "decode", "__name__t", "__module__R", "encodings", "cp858", "IncrementalEncoderc", "final", "encodings", "cp858", "FalseR", "encodings", "cp858", "IncrementalDecoderc", "encodings", "cp858", "encodings", "cp858", "StreamWriterc", "encodings", "cp858", "StreamReaderc", "encodings", "cp858", "namet", "cp858R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp858", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "make_identity_dictt", "ranget", "decoding_mapt", "updateR", "encodings", "cp858", "module", "encodings", "cp860", "Python", "Character", "Mapping", "Codec", "generated", "VENDORS", "MICSFT", "CP860", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_map", "selft", "inputt", "errors", "encodings", "cp860", "encode", "charmap_decodet", "decoding_table", "encodings", "cp860", "decode", "__name__t", "__module__R", "encodings", "cp860", "IncrementalEncoderc", "final", "encodings", "cp860", "FalseR", "encodings", "cp860", "IncrementalDecoderc", "encodings", "cp860", "encodings", "cp860", "StreamWriterc", "encodings", "cp860", "StreamReaderc", "encodings", "cp860", "namet", "cp860R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp860", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "make_identity_dictt", "ranget", "decoding_mapt", "updateR", "encodings", "cp860", "module", "encodings", "cp861", "Python", "Character", "Mapping", "Codec", "generated", "VENDORS", "MICSFT", "CP861", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_map", "selft", "inputt", "errors", "encodings", "cp861", "encode", "charmap_decodet", "decoding_table", "encodings", "cp861", "decode", "__name__t", "__module__R", "encodings", "cp861", "IncrementalEncoderc", "final", "encodings", "cp861", "FalseR", "encodings", "cp861", "IncrementalDecoderc", "encodings", "cp861", "encodings", "cp861", "StreamWriterc", "encodings", "cp861", "StreamReaderc", "encodings", "cp861", "namet", "cp861R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp861", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "make_identity_dictt", "ranget", "decoding_mapt", "updateR", "encodings", "cp861", "module", "encodings", "cp862", "Python", "Character", "Mapping", "Codec", "generated", "VENDORS", "MICSFT", "CP862", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_map", "selft", "inputt", "errors", "encodings", "cp862", "encode", "charmap_decodet", "decoding_table", "encodings", "cp862", "decode", "__name__t", "__module__R", "encodings", "cp862", "IncrementalEncoderc", "final", "encodings", "cp862", "FalseR", "encodings", "cp862", "IncrementalDecoderc", "encodings", "cp862", "encodings", "cp862", "StreamWriterc", "encodings", "cp862", "StreamReaderc", "encodings", "cp862", "namet", "cp862R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp862", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "make_identity_dictt", "ranget", "decoding_mapt", "updateR", "encodings", "cp862", "module", "encodings", "cp863", "Python", "Character", "Mapping", "Codec", "generated", "VENDORS", "MICSFT", "CP863", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_map", "selft", "inputt", "errors", "encodings", "cp863", "encode", "charmap_decodet", "decoding_table", "encodings", "cp863", "decode", "__name__t", "__module__R", "encodings", "cp863", "IncrementalEncoderc", "final", "encodings", "cp863", "FalseR", "encodings", "cp863", "IncrementalDecoderc", "encodings", "cp863", "encodings", "cp863", "StreamWriterc", "encodings", "cp863", "StreamReaderc", "encodings", "cp863", "namet", "cp863R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp863", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "make_identity_dictt", "ranget", "decoding_mapt", "updateR", "encodings", "cp863", "module", "encodings", "cp864", "Python", "Character", "Mapping", "Codec", "generated", "VENDORS", "MICSFT", "CP864", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_map", "selft", "inputt", "errors", "encodings", "cp864", "encode", "charmap_decodet", "decoding_table", "encodings", "cp864", "decode", "__name__t", "__module__R", "encodings", "cp864", "IncrementalEncoderc", "final", "encodings", "cp864", "FalseR", "encodings", "cp864", "IncrementalDecoderc", "encodings", "cp864", "encodings", "cp864", "StreamWriterc", "encodings", "cp864", "StreamReaderc", "encodings", "cp864", "namet", "cp864R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp864", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "make_identity_dictt", "ranget", "decoding_mapt", "updatet", "NoneR", "encodings", "cp864", "module", "encodings", "cp865", "Python", "Character", "Mapping", "Codec", "generated", "VENDORS", "MICSFT", "CP865", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_map", "selft", "inputt", "errors", "encodings", "cp865", "encode", "charmap_decodet", "decoding_table", "encodings", "cp865", "decode", "__name__t", "__module__R", "encodings", "cp865", "IncrementalEncoderc", "final", "encodings", "cp865", "FalseR", "encodings", "cp865", "IncrementalDecoderc", "encodings", "cp865", "encodings", "cp865", "StreamWriterc", "encodings", "cp865", "StreamReaderc", "encodings", "cp865", "namet", "cp865R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp865", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "make_identity_dictt", "ranget", "decoding_mapt", "updateR", "encodings", "cp865", "module", "encodings", "cp866", "Python", "Character", "Mapping", "Codec", "generated", "VENDORS", "MICSFT", "CP866", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_map", "selft", "inputt", "errors", "encodings", "cp866", "encode", "charmap_decodet", "decoding_table", "encodings", "cp866", "decode", "__name__t", "__module__R", "encodings", "cp866", "IncrementalEncoderc", "final", "encodings", "cp866", "FalseR", "encodings", "cp866", "IncrementalDecoderc", "encodings", "cp866", "encodings", "cp866", "StreamWriterc", "encodings", "cp866", "StreamReaderc", "encodings", "cp866", "namet", "cp866R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp866", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "make_identity_dictt", "ranget", "decoding_mapt", "updateR", "encodings", "cp866", "module", "encodings", "cp869", "Python", "Character", "Mapping", "Codec", "generated", "VENDORS", "MICSFT", "CP869", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_map", "selft", "inputt", "errors", "encodings", "cp869", "encode", "charmap_decodet", "decoding_table", "encodings", "cp869", "decode", "__name__t", "__module__R", "encodings", "cp869", "IncrementalEncoderc", "final", "encodings", "cp869", "FalseR", "encodings", "cp869", "IncrementalDecoderc", "encodings", "cp869", "encodings", "cp869", "StreamWriterc", "encodings", "cp869", "StreamReaderc", "encodings", "cp869", "namet", "cp869R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp869", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "make_identity_dictt", "ranget", "decoding_mapt", "updatet", "NoneR", "encodings", "cp869", "module", "encodings", "cp874", "Python", "Character", "Mapping", "Codec", "cp874", "generated", "MAPPINGS", "VENDORS", "MICSFT", "WINDOWS", "CP874", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "cp874", "encode", "charmap_decodet", "decoding_table", "encodings", "cp874", "decode", "__name__t", "__module__R", "encodings", "cp874", "IncrementalEncoderc", "final", "encodings", "cp874", "FalseR", "encodings", "cp874", "IncrementalDecoderc", "encodings", "cp874", "encodings", "cp874", "StreamWriterc", "encodings", "cp874", "StreamReaderc", "encodings", "cp874", "namet", "cp874R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp874", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "cp874", "module", "encodings", "cp875", "Python", "Character", "Mapping", "Codec", "cp875", "generated", "MAPPINGS", "VENDORS", "MICSFT", "EBCDIC", "CP875", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "cp875", "encode", "charmap_decodet", "decoding_table", "encodings", "cp875", "decode", "__name__t", "__module__R", "encodings", "cp875", "IncrementalEncoderc", "final", "encodings", "cp875", "FalseR", "encodings", "cp875", "IncrementalDecoderc", "encodings", "cp875", "encodings", "cp875", "StreamWriterc", "encodings", "cp875", "StreamReaderc", "encodings", "cp875", "namet", "cp875R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "cp875", "getregentry!", "abcdefghi", "jklmnopqr", "stuvwxyz", "ABCDEFGHI", "JKLMNOPQR", "STUVWXYZ", "0123456789", "__doc__R", "charmap_buildR", "encodings", "cp875", "module", "encodings", "cp932", "cp932t", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "cp932", "IncrementalEncoderc", "encodings", "cp932", "IncrementalDecoderc", "encodings", "cp932", "StreamReaderc", "encodings", "cp932", "StreamWriterc", "encodings", "cp932", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "cp932", "getregentry", "_codecs_jpR", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "cp932", "module", "encodings", "cp949", "cp949t", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "cp949", "IncrementalEncoderc", "encodings", "cp949", "IncrementalDecoderc", "encodings", "cp949", "StreamReaderc", "encodings", "cp949", "StreamWriterc", "encodings", "cp949", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "cp949", "getregentry", "_codecs_krR", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "cp949", "module", "encodings", "cp950", "cp950t", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "cp950", "IncrementalEncoderc", "encodings", "cp950", "IncrementalDecoderc", "encodings", "cp950", "StreamReaderc", "encodings", "cp950", "StreamWriterc", "encodings", "cp950", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "cp950", "getregentry", "_codecs_twR", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "cp950", "module", "encodings", "euc_jis_2004", "euc_jis_2004t", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "euc_jis_2004", "IncrementalEncoderc", "encodings", "euc_jis_2004", "IncrementalDecoderc", "encodings", "euc_jis_2004", "StreamReaderc", "encodings", "euc_jis_2004", "StreamWriterc", "encodings", "euc_jis_2004", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "euc_jis_2004", "getregentry", "_codecs_jpR", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "euc_jis_2004", "module", "encodings", "euc_jisx0213", "euc_jisx0213t", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "euc_jisx0213", "IncrementalEncoderc", "encodings", "euc_jisx0213", "IncrementalDecoderc", "encodings", "euc_jisx0213", "StreamReaderc", "encodings", "euc_jisx0213", "StreamWriterc", "encodings", "euc_jisx0213", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "euc_jisx0213", "getregentry", "_codecs_jpR", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "euc_jisx0213", "module", "encodings", "euc_jp", "euc_jpt", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "euc_jp", "IncrementalEncoderc", "encodings", "euc_jp", "IncrementalDecoderc", "encodings", "euc_jp", "StreamReaderc", "encodings", "euc_jp", "StreamWriterc", "encodings", "euc_jp", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "euc_jp", "getregentry", "_codecs_jpR", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "euc_jp", "module", "encodings", "euc_kr", "euc_krt", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "euc_kr", "IncrementalEncoderc", "encodings", "euc_kr", "IncrementalDecoderc", "encodings", "euc_kr", "StreamReaderc", "encodings", "euc_kr", "StreamWriterc", "encodings", "euc_kr", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "euc_kr", "getregentry", "_codecs_krR", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "euc_kr", "module", "encodings", "gb18030", "gb18030t", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "gb18030", "IncrementalEncoderc", "encodings", "gb18030", "IncrementalDecoderc", "encodings", "gb18030", "StreamReaderc", "encodings", "gb18030", "StreamWriterc", "encodings", "gb18030", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "gb18030", "getregentry", "_codecs_cnR", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "gb18030", "module", "encodings", "gb2312", "gb2312t", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "gb2312", "IncrementalEncoderc", "encodings", "gb2312", "IncrementalDecoderc", "encodings", "gb2312", "StreamReaderc", "encodings", "gb2312", "StreamWriterc", "encodings", "gb2312", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "gb2312", "getregentry", "_codecs_cnR", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "gb2312", "module", "encodings", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "IncrementalEncoderc", "encodings", "IncrementalDecoderc", "encodings", "StreamReaderc", "encodings", "StreamWriterc", "encodings", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "getregentry", "_codecs_cnR", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "module", "encodings", "hex_codec", "Python", "hex_codec", "Codec", "digit", "content", "transfer", "encoding", "Unlike", "other", "codecs", "which", "target", "Unicode", "codec", "return", "Python", "string", "objects", "encode", "decode", "Written", "Andre", "Lemburg", "lemburg", "strictc", "Encodes", "object", "input", "returns", "tuple", "output", "object", "length", "consumed", "errors", "defines", "error", "handling", "apply", "defaults", "strict", "handling", "which", "currently", "supported", "error", "handling", "codec", "AssertionErrort", "binasciit", "b2a_hext", "inputt", "errorst", "output", "encodings", "hex_codec", "hex_encode", "Decodes", "object", "input", "returns", "tuple", "output", "object", "length", "consumed", "input", "object", "which", "provides", "bf_getreadbuf", "buffer", "Python", "strings", "buffer", "objects", "memory", "mapped", "files", "examples", "objects", "providing", "errors", "defines", "error", "handling", "apply", "defaults", "strict", "handling", "which", "currently", "supported", "error", "handling", "codec", "a2b_hexR", "encodings", "hex_codec", "hex_decode", "Codecc", "selfR", "encodings", "hex_codec", "encode", "encodings", "hex_codec", "decode1", "__name__t", "__module__R", "encodings", "hex_codec", "IncrementalEncoderc", "final", "encodings", "hex_codec", "FalseR", "encodings", "hex_codec", "IncrementalDecoderc", "encodings", "hex_codec", "encodings", "hex_codec", "StreamWriterc", "encodings", "hex_codec", "StreamReaderc", "encodings", "hex_codec", "namet", "incrementalencodert", "incrementaldecodert", "streamwritert", "streamreadert", "_is_text_encoding", "codecst", "CodecInfoR", "encodings", "hex_codec", "getregentryF", "__doc__R", "encodings", "hex_codec", "module", "encodings", "hp_roman8", "Python", "Character", "Mapping", "Codec", "generated", "hp_roman8", "gencodec", "Based", "dkuug", "charmaps", "ROMAN8", "Simonsen", "Original", "source", "LaserJet", "Printer", "Manual", "33471", "90901", "Hewlet", "Packard", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_map", "selft", "inputt", "errors", "encodings", "hp_roman8", "encode", "charmap_decodet", "decoding_map", "encodings", "hp_roman8", "decode", "__name__t", "__module__R", "encodings", "hp_roman8", "IncrementalEncoderc", "final", "encodings", "hp_roman8", "FalseR", "encodings", "hp_roman8", "IncrementalDecoderc", "encodings", "hp_roman8", "encodings", "hp_roman8", "StreamWriterc", "encodings", "hp_roman8", "StreamReaderc", "encodings", "hp_roman8", "names", "roman8R", "incrementalencodert", "incrementaldecodert", "streamwritert", "streamreader", "CodecInfoR", "encodings", "hp_roman8", "getregentry&", "__doc__R", "make_identity_dictt", "rangeR", "updatet", "Nonet", "make_encoding_mapR", "encodings", "hp_roman8", "module", "encodings", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "IncrementalEncoderc", "encodings", "IncrementalDecoderc", "encodings", "StreamReaderc", "encodings", "StreamWriterc", "encodings", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "getregentry", "_codecs_cnR", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "module", "encodings", "ucd_3_2_0u", "asciic", "NFKCs", "Invalid", "character", "Violation", "requirement", "Violation", "requirement", "stringprept", "in_table_b1t", "appendt", "map_table_b2t", "joint", "unicodedatat", "normalizet", "in_table_c12t", "in_table_c22t", "in_table_c3t", "in_table_c4t", "in_table_c5t", "in_table_c6t", "in_table_c7t", "in_table_c8t", "in_table_c9t", "UnicodeErrort", "in_table_d1t", "filtert", "in_table_d2", "labelt", "newlabelt", "RandAL", "encodings", "nameprep", "label", "empty", "longs", "Label", "starts", "prefixt", "punycode", "encodeR", "startswitht", "uace_prefixt", "ace_prefix", "encodings", "ToASCII", "Invalid", "character", "labelR", "round", "isinstancet", "TrueR", "FalseR", "unicodeR", "decodeR", "lower", "pure_asciit", "label1t", "resultt", "label2", "encodings", "ToUnicodei", "Codecc", "strictc", "unsupported", "error", "handling", "dotst", "splitR", "selft", "inputt", "errorsR", "labelst", "trailing_dotR", "encodings", "Unsupported", "error", "handling", "encodings", "__name__t", "__module__R", "encodings", "pycR0", "IncrementalEncoderc", "unsupported", "error", "handling", "finalR9", "sizeR", "encodings", "_buffer_encode", "encodings", "IncrementalDecoderc", "Unsupported", "error", "handling", "encodings", "_buffer_decode", "encodings", "pycRA", "StreamWriterc", "encodings", "pycRC", "StreamReaderc", "encodings", "pycRD", "namet", "idnaR", "incrementalencodert", "incrementaldecodert", "streamwritert", "streamreader", "codecst", "CodecInfoR0", "encodings", "getregentry", "compileR4", "BufferedIncrementalEncoderR", "BufferedIncrementalDecoderRA", "encodings", "module", "encodings", "iso2022_jp", "iso2022_jpt", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "iso2022_jp", "IncrementalEncoderc", "encodings", "iso2022_jp", "IncrementalDecoderc", "encodings", "iso2022_jp", "StreamReaderc", "encodings", "iso2022_jp", "StreamWriterc", "encodings", "iso2022_jp", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "iso2022_jp", "getregentry", "_codecs_iso2022R", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "iso2022_jp", "module", "encodings", "iso2022_jp_1", "iso2022_jp_1t", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "iso2022_jp_1", "IncrementalEncoderc", "encodings", "iso2022_jp_1", "IncrementalDecoderc", "encodings", "iso2022_jp_1", "StreamReaderc", "encodings", "iso2022_jp_1", "StreamWriterc", "encodings", "iso2022_jp_1", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "iso2022_jp_1", "getregentry", "_codecs_iso2022R", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "iso2022_jp_1", "module", "encodings", "iso2022_jp_2", "iso2022_jp_2t", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "iso2022_jp_2", "IncrementalEncoderc", "encodings", "iso2022_jp_2", "IncrementalDecoderc", "encodings", "iso2022_jp_2", "StreamReaderc", "encodings", "iso2022_jp_2", "StreamWriterc", "encodings", "iso2022_jp_2", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "iso2022_jp_2", "getregentry", "_codecs_iso2022R", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "iso2022_jp_2", "module", "encodings", "iso2022_jp_2004", "iso2022_jp_2004t", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "iso2022_jp_2004", "IncrementalEncoderc", "encodings", "iso2022_jp_2004", "IncrementalDecoderc", "encodings", "iso2022_jp_2004", "StreamReaderc", "encodings", "iso2022_jp_2004", "StreamWriterc", "encodings", "iso2022_jp_2004", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "iso2022_jp_2004", "getregentry", "_codecs_iso2022R", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "iso2022_jp_2004", "module", "encodings", "iso2022_jp_3", "iso2022_jp_3t", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "iso2022_jp_3", "IncrementalEncoderc", "encodings", "iso2022_jp_3", "IncrementalDecoderc", "encodings", "iso2022_jp_3", "StreamReaderc", "encodings", "iso2022_jp_3", "StreamWriterc", "encodings", "iso2022_jp_3", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "iso2022_jp_3", "getregentry", "_codecs_iso2022R", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "iso2022_jp_3", "module", "encodings", "iso2022_jp_ext", "iso2022_jp_extt", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "iso2022_jp_ext", "IncrementalEncoderc", "encodings", "iso2022_jp_ext", "IncrementalDecoderc", "encodings", "iso2022_jp_ext", "StreamReaderc", "encodings", "iso2022_jp_ext", "StreamWriterc", "encodings", "iso2022_jp_ext", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "iso2022_jp_ext", "getregentry", "_codecs_iso2022R", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "iso2022_jp_ext", "module", "encodings", "iso2022_kr", "iso2022_krt", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "iso2022_kr", "IncrementalEncoderc", "encodings", "iso2022_kr", "IncrementalDecoderc", "encodings", "iso2022_kr", "StreamReaderc", "encodings", "iso2022_kr", "StreamWriterc", "encodings", "iso2022_kr", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "iso2022_kr", "getregentry", "_codecs_iso2022R", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "iso2022_kr", "module", "encodings", "iso8859_1", "Python", "Character", "Mapping", "Codec", "iso8859_1", "generated", "MAPPINGS", "ISO8859", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "iso8859_1", "encode", "charmap_decodet", "decoding_table", "encodings", "iso8859_1", "decode", "__name__t", "__module__R", "encodings", "iso8859_1", "IncrementalEncoderc", "final", "encodings", "iso8859_1", "FalseR", "encodings", "iso8859_1", "IncrementalDecoderc", "encodings", "iso8859_1", "encodings", "iso8859_1", "StreamWriterc", "encodings", "iso8859_1", "StreamReaderc", "encodings", "iso8859_1", "names", "iso8859", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "iso8859_1", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "iso8859_1", "module", "encodings", "iso8859_10", "Python", "Character", "Mapping", "Codec", "iso8859_10", "generated", "MAPPINGS", "ISO8859", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "iso8859_10", "encode", "charmap_decodet", "decoding_table", "encodings", "iso8859_10", "decode", "__name__t", "__module__R", "encodings", "iso8859_10", "IncrementalEncoderc", "final", "encodings", "iso8859_10", "FalseR", "encodings", "iso8859_10", "IncrementalDecoderc", "encodings", "iso8859_10", "encodings", "iso8859_10", "StreamWriterc", "encodings", "iso8859_10", "StreamReaderc", "encodings", "iso8859_10", "names", "iso8859", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "iso8859_10", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "iso8859_10", "module", "encodings", "iso8859_11", "Python", "Character", "Mapping", "Codec", "iso8859_11", "generated", "MAPPINGS", "ISO8859", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "iso8859_11", "encode", "charmap_decodet", "decoding_table", "encodings", "iso8859_11", "decode", "__name__t", "__module__R", "encodings", "iso8859_11", "IncrementalEncoderc", "final", "encodings", "iso8859_11", "FalseR", "encodings", "iso8859_11", "IncrementalDecoderc", "encodings", "iso8859_11", "encodings", "iso8859_11", "StreamWriterc", "encodings", "iso8859_11", "StreamReaderc", "encodings", "iso8859_11", "names", "iso8859", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "iso8859_11", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "iso8859_11", "module", "encodings", "iso8859_13", "Python", "Character", "Mapping", "Codec", "iso8859_13", "generated", "MAPPINGS", "ISO8859", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "iso8859_13", "encode", "charmap_decodet", "decoding_table", "encodings", "iso8859_13", "decode", "__name__t", "__module__R", "encodings", "iso8859_13", "IncrementalEncoderc", "final", "encodings", "iso8859_13", "FalseR", "encodings", "iso8859_13", "IncrementalDecoderc", "encodings", "iso8859_13", "encodings", "iso8859_13", "StreamWriterc", "encodings", "iso8859_13", "StreamReaderc", "encodings", "iso8859_13", "names", "iso8859", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "iso8859_13", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "iso8859_13", "module", "encodings", "iso8859_14", "Python", "Character", "Mapping", "Codec", "iso8859_14", "generated", "MAPPINGS", "ISO8859", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "iso8859_14", "encode", "charmap_decodet", "decoding_table", "encodings", "iso8859_14", "decode", "__name__t", "__module__R", "encodings", "iso8859_14", "IncrementalEncoderc", "final", "encodings", "iso8859_14", "FalseR", "encodings", "iso8859_14", "IncrementalDecoderc", "encodings", "iso8859_14", "encodings", "iso8859_14", "StreamWriterc", "encodings", "iso8859_14", "StreamReaderc", "encodings", "iso8859_14", "names", "iso8859", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "iso8859_14", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "iso8859_14", "module", "encodings", "iso8859_15", "Python", "Character", "Mapping", "Codec", "iso8859_15", "generated", "MAPPINGS", "ISO8859", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "iso8859_15", "encode", "charmap_decodet", "decoding_table", "encodings", "iso8859_15", "decode", "__name__t", "__module__R", "encodings", "iso8859_15", "IncrementalEncoderc", "final", "encodings", "iso8859_15", "FalseR", "encodings", "iso8859_15", "IncrementalDecoderc", "encodings", "iso8859_15", "encodings", "iso8859_15", "StreamWriterc", "encodings", "iso8859_15", "StreamReaderc", "encodings", "iso8859_15", "names", "iso8859", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "iso8859_15", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "iso8859_15", "module", "encodings", "iso8859_16", "Python", "Character", "Mapping", "Codec", "iso8859_16", "generated", "MAPPINGS", "ISO8859", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "iso8859_16", "encode", "charmap_decodet", "decoding_table", "encodings", "iso8859_16", "decode", "__name__t", "__module__R", "encodings", "iso8859_16", "IncrementalEncoderc", "final", "encodings", "iso8859_16", "FalseR", "encodings", "iso8859_16", "IncrementalDecoderc", "encodings", "iso8859_16", "encodings", "iso8859_16", "StreamWriterc", "encodings", "iso8859_16", "StreamReaderc", "encodings", "iso8859_16", "names", "iso8859", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "iso8859_16", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "iso8859_16", "module", "encodings", "iso8859_2", "Python", "Character", "Mapping", "Codec", "iso8859_2", "generated", "MAPPINGS", "ISO8859", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "iso8859_2", "encode", "charmap_decodet", "decoding_table", "encodings", "iso8859_2", "decode", "__name__t", "__module__R", "encodings", "iso8859_2", "IncrementalEncoderc", "final", "encodings", "iso8859_2", "FalseR", "encodings", "iso8859_2", "IncrementalDecoderc", "encodings", "iso8859_2", "encodings", "iso8859_2", "StreamWriterc", "encodings", "iso8859_2", "StreamReaderc", "encodings", "iso8859_2", "names", "iso8859", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "iso8859_2", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "iso8859_2", "module", "encodings", "iso8859_3", "Python", "Character", "Mapping", "Codec", "iso8859_3", "generated", "MAPPINGS", "ISO8859", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "iso8859_3", "encode", "charmap_decodet", "decoding_table", "encodings", "iso8859_3", "decode", "__name__t", "__module__R", "encodings", "iso8859_3", "IncrementalEncoderc", "final", "encodings", "iso8859_3", "FalseR", "encodings", "iso8859_3", "IncrementalDecoderc", "encodings", "iso8859_3", "encodings", "iso8859_3", "StreamWriterc", "encodings", "iso8859_3", "StreamReaderc", "encodings", "iso8859_3", "names", "iso8859", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "iso8859_3", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "iso8859_3", "module", "encodings", "iso8859_4", "Python", "Character", "Mapping", "Codec", "iso8859_4", "generated", "MAPPINGS", "ISO8859", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "iso8859_4", "encode", "charmap_decodet", "decoding_table", "encodings", "iso8859_4", "decode", "__name__t", "__module__R", "encodings", "iso8859_4", "IncrementalEncoderc", "final", "encodings", "iso8859_4", "FalseR", "encodings", "iso8859_4", "IncrementalDecoderc", "encodings", "iso8859_4", "encodings", "iso8859_4", "StreamWriterc", "encodings", "iso8859_4", "StreamReaderc", "encodings", "iso8859_4", "names", "iso8859", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "iso8859_4", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "iso8859_4", "module", "encodings", "iso8859_5", "Python", "Character", "Mapping", "Codec", "iso8859_5", "generated", "MAPPINGS", "ISO8859", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "iso8859_5", "encode", "charmap_decodet", "decoding_table", "encodings", "iso8859_5", "decode", "__name__t", "__module__R", "encodings", "iso8859_5", "IncrementalEncoderc", "final", "encodings", "iso8859_5", "FalseR", "encodings", "iso8859_5", "IncrementalDecoderc", "encodings", "iso8859_5", "encodings", "iso8859_5", "StreamWriterc", "encodings", "iso8859_5", "StreamReaderc", "encodings", "iso8859_5", "names", "iso8859", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "iso8859_5", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "iso8859_5", "module", "encodings", "iso8859_6", "Python", "Character", "Mapping", "Codec", "iso8859_6", "generated", "MAPPINGS", "ISO8859", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "iso8859_6", "encode", "charmap_decodet", "decoding_table", "encodings", "iso8859_6", "decode", "__name__t", "__module__R", "encodings", "iso8859_6", "IncrementalEncoderc", "final", "encodings", "iso8859_6", "FalseR", "encodings", "iso8859_6", "IncrementalDecoderc", "encodings", "iso8859_6", "encodings", "iso8859_6", "StreamWriterc", "encodings", "iso8859_6", "StreamReaderc", "encodings", "iso8859_6", "names", "iso8859", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "iso8859_6", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "iso8859_6", "module", "encodings", "iso8859_7", "Python", "Character", "Mapping", "Codec", "iso8859_7", "generated", "MAPPINGS", "ISO8859", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "iso8859_7", "encode", "charmap_decodet", "decoding_table", "encodings", "iso8859_7", "decode", "__name__t", "__module__R", "encodings", "iso8859_7", "IncrementalEncoderc", "final", "encodings", "iso8859_7", "FalseR", "encodings", "iso8859_7", "IncrementalDecoderc", "encodings", "iso8859_7", "encodings", "iso8859_7", "StreamWriterc", "encodings", "iso8859_7", "StreamReaderc", "encodings", "iso8859_7", "names", "iso8859", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "iso8859_7", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "iso8859_7", "module", "encodings", "iso8859_8", "Python", "Character", "Mapping", "Codec", "iso8859_8", "generated", "MAPPINGS", "ISO8859", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "iso8859_8", "encode", "charmap_decodet", "decoding_table", "encodings", "iso8859_8", "decode", "__name__t", "__module__R", "encodings", "iso8859_8", "IncrementalEncoderc", "final", "encodings", "iso8859_8", "FalseR", "encodings", "iso8859_8", "IncrementalDecoderc", "encodings", "iso8859_8", "encodings", "iso8859_8", "StreamWriterc", "encodings", "iso8859_8", "StreamReaderc", "encodings", "iso8859_8", "names", "iso8859", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "iso8859_8", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "iso8859_8", "module", "encodings", "iso8859_9", "Python", "Character", "Mapping", "Codec", "iso8859_9", "generated", "MAPPINGS", "ISO8859", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "iso8859_9", "encode", "charmap_decodet", "decoding_table", "encodings", "iso8859_9", "decode", "__name__t", "__module__R", "encodings", "iso8859_9", "IncrementalEncoderc", "final", "encodings", "iso8859_9", "FalseR", "encodings", "iso8859_9", "IncrementalDecoderc", "encodings", "iso8859_9", "encodings", "iso8859_9", "StreamWriterc", "encodings", "iso8859_9", "StreamReaderc", "encodings", "iso8859_9", "names", "iso8859", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "iso8859_9", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "iso8859_9", "module", "encodings", "johab", "johabt", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "johab", "IncrementalEncoderc", "encodings", "johab", "IncrementalDecoderc", "encodings", "johab", "StreamReaderc", "encodings", "johab", "StreamWriterc", "encodings", "johab", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "johab", "getregentry", "_codecs_krR", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "johab", "module", "encodings", "koi8_r", "Python", "Character", "Mapping", "Codec", "koi8_r", "generated", "MAPPINGS", "VENDORS", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "koi8_r", "encode", "charmap_decodet", "decoding_table", "encodings", "koi8_r", "decode", "__name__t", "__module__R", "encodings", "koi8_r", "IncrementalEncoderc", "final", "encodings", "koi8_r", "FalseR", "encodings", "koi8_r", "IncrementalDecoderc", "encodings", "koi8_r", "encodings", "koi8_r", "StreamWriterc", "encodings", "koi8_r", "StreamReaderc", "encodings", "koi8_r", "names", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "koi8_r", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "koi8_r", "module", "encodings", "koi8_u", "Python", "Character", "Mapping", "Codec", "koi8_u", "generated", "python", "mappings", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "koi8_u", "encode", "charmap_decodet", "decoding_table", "encodings", "koi8_u", "decode", "__name__t", "__module__R", "encodings", "koi8_u", "IncrementalEncoderc", "final", "encodings", "koi8_u", "FalseR", "encodings", "koi8_u", "IncrementalDecoderc", "encodings", "koi8_u", "encodings", "koi8_u", "StreamWriterc", "encodings", "koi8_u", "StreamReaderc", "encodings", "koi8_u", "names", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "koi8_u", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "koi8_u", "module", "encodings", "latin_1", "Python", "latin", "Codec", "Written", "Andre", "Lemburg", "lemburg", "Copyright", "Rights", "Reserved", "WARRANTY", "Codecc", "__name__t", "__module__t", "codecst", "latin_1_encodet", "encodet", "latin_1_decodet", "decode", "encodings", "latin_1", "IncrementalEncoderc", "errors", "selft", "inputt", "final", "encodings", "latin_1", "FalseR", "encodings", "latin_1", "IncrementalDecoderc", "encodings", "latin_1", "encodings", "latin_1", "StreamWriterc", "encodings", "latin_1", "StreamReaderc", "encodings", "latin_1", "StreamConverterc", "encodings", "latin_1", "names", "iso8859", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "latin_1", "getregentry", "__doc__R", "encodings", "latin_1", "module", "encodings", "mac_arabic", "Python", "Character", "Mapping", "Codec", "generated", "VENDORS", "APPLE", "ARABIC", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_map", "selft", "inputt", "errors", "encodings", "mac_arabic", "encode", "charmap_decodet", "decoding_table", "encodings", "mac_arabic", "decode", "__name__t", "__module__R", "encodings", "mac_arabic", "IncrementalEncoderc", "final", "encodings", "mac_arabic", "FalseR", "encodings", "mac_arabic", "IncrementalDecoderc", "encodings", "mac_arabic", "encodings", "mac_arabic", "StreamWriterc", "encodings", "mac_arabic", "StreamReaderc", "encodings", "mac_arabic", "names", "arabicR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "mac_arabic", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "make_identity_dictt", "ranget", "decoding_mapt", "updateR", "encodings", "mac_arabic", "module", "encodings", "mac_centeuro", "Python", "Character", "Mapping", "Codec", "mac_centeuro", "generated", "MAPPINGS", "VENDORS", "APPLE", "CENTEURO", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "mac_centeuro", "encode", "charmap_decodet", "decoding_table", "encodings", "mac_centeuro", "decode", "__name__t", "__module__R", "encodings", "mac_centeuro", "IncrementalEncoderc", "final", "encodings", "mac_centeuro", "FalseR", "encodings", "mac_centeuro", "IncrementalDecoderc", "encodings", "mac_centeuro", "encodings", "mac_centeuro", "StreamWriterc", "encodings", "mac_centeuro", "StreamReaderc", "encodings", "mac_centeuro", "names", "centeuroR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "mac_centeuro", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "mac_centeuro", "module", "encodings", "mac_croatian", "Python", "Character", "Mapping", "Codec", "mac_croatian", "generated", "MAPPINGS", "VENDORS", "APPLE", "CROATIAN", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "mac_croatian", "encode", "charmap_decodet", "decoding_table", "encodings", "mac_croatian", "decode", "__name__t", "__module__R", "encodings", "mac_croatian", "IncrementalEncoderc", "final", "encodings", "mac_croatian", "FalseR", "encodings", "mac_croatian", "IncrementalDecoderc", "encodings", "mac_croatian", "encodings", "mac_croatian", "StreamWriterc", "encodings", "mac_croatian", "StreamReaderc", "encodings", "mac_croatian", "names", "croatianR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "mac_croatian", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "mac_croatian", "module", "encodings", "mac_cyrillic", "Python", "Character", "Mapping", "Codec", "mac_cyrillic", "generated", "MAPPINGS", "VENDORS", "APPLE", "CYRILLIC", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "mac_cyrillic", "encode", "charmap_decodet", "decoding_table", "encodings", "mac_cyrillic", "decode", "__name__t", "__module__R", "encodings", "mac_cyrillic", "IncrementalEncoderc", "final", "encodings", "mac_cyrillic", "FalseR", "encodings", "mac_cyrillic", "IncrementalDecoderc", "encodings", "mac_cyrillic", "encodings", "mac_cyrillic", "StreamWriterc", "encodings", "mac_cyrillic", "StreamReaderc", "encodings", "mac_cyrillic", "names", "cyrillicR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "mac_cyrillic", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "mac_cyrillic", "module", "encodings", "mac_farsi", "Python", "Character", "Mapping", "Codec", "mac_farsi", "generated", "MAPPINGS", "VENDORS", "APPLE", "FARSI", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "mac_farsi", "encode", "charmap_decodet", "decoding_table", "encodings", "mac_farsi", "decode", "__name__t", "__module__R", "encodings", "mac_farsi", "IncrementalEncoderc", "final", "encodings", "mac_farsi", "FalseR", "encodings", "mac_farsi", "IncrementalDecoderc", "encodings", "mac_farsi", "encodings", "mac_farsi", "StreamWriterc", "encodings", "mac_farsi", "StreamReaderc", "encodings", "mac_farsi", "names", "farsiR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "mac_farsi", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "mac_farsi", "module", "encodings", "mac_greek", "Python", "Character", "Mapping", "Codec", "mac_greek", "generated", "MAPPINGS", "VENDORS", "APPLE", "GREEK", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "mac_greek", "encode", "charmap_decodet", "decoding_table", "encodings", "mac_greek", "decode", "__name__t", "__module__R", "encodings", "mac_greek", "IncrementalEncoderc", "final", "encodings", "mac_greek", "FalseR", "encodings", "mac_greek", "IncrementalDecoderc", "encodings", "mac_greek", "encodings", "mac_greek", "StreamWriterc", "encodings", "mac_greek", "StreamReaderc", "encodings", "mac_greek", "names", "greekR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "mac_greek", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "mac_greek", "module", "encodings", "mac_iceland", "Python", "Character", "Mapping", "Codec", "mac_iceland", "generated", "MAPPINGS", "VENDORS", "APPLE", "ICELAND", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "mac_iceland", "encode", "charmap_decodet", "decoding_table", "encodings", "mac_iceland", "decode", "__name__t", "__module__R", "encodings", "mac_iceland", "IncrementalEncoderc", "final", "encodings", "mac_iceland", "FalseR", "encodings", "mac_iceland", "IncrementalDecoderc", "encodings", "mac_iceland", "encodings", "mac_iceland", "StreamWriterc", "encodings", "mac_iceland", "StreamReaderc", "encodings", "mac_iceland", "names", "icelandR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "mac_iceland", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "mac_iceland", "module", "encodings", "mac_latin2", "Python", "Character", "Mapping", "Codec", "generated", "LATIN2", "gencodec", "Written", "Andre", "Lemburg", "lemburg", "Copyright", "Rights", "Reserved", "WARRANTY", "Copyright", "Guido", "Rossum", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_map", "selft", "inputt", "errors", "encodings", "mac_latin2", "encode", "charmap_decodet", "decoding_map", "encodings", "mac_latin2", "decode", "__name__t", "__module__R", "encodings", "mac_latin2", "IncrementalEncoderc", "final", "encodings", "mac_latin2", "FalseR", "encodings", "mac_latin2", "IncrementalDecoderc", "encodings", "mac_latin2", "encodings", "mac_latin2", "StreamWriterc", "encodings", "mac_latin2", "StreamReaderc", "encodings", "mac_latin2", "names", "latin2R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "mac_latin2", "getregentry&", "__doc__R", "make_identity_dictt", "rangeR", "updatet", "make_encoding_mapR", "encodings", "mac_latin2", "module", "encodings", "mac_roman", "Python", "Character", "Mapping", "Codec", "mac_roman", "generated", "MAPPINGS", "VENDORS", "APPLE", "ROMAN", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "mac_roman", "encode", "charmap_decodet", "decoding_table", "encodings", "mac_roman", "decode", "__name__t", "__module__R", "encodings", "mac_roman", "IncrementalEncoderc", "final", "encodings", "mac_roman", "FalseR", "encodings", "mac_roman", "IncrementalDecoderc", "encodings", "mac_roman", "encodings", "mac_roman", "StreamWriterc", "encodings", "mac_roman", "StreamReaderc", "encodings", "mac_roman", "names", "romanR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "mac_roman", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "mac_roman", "module", "encodings", "mac_romanian", "Python", "Character", "Mapping", "Codec", "mac_romanian", "generated", "MAPPINGS", "VENDORS", "APPLE", "ROMANIAN", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "mac_romanian", "encode", "charmap_decodet", "decoding_table", "encodings", "mac_romanian", "decode", "__name__t", "__module__R", "encodings", "mac_romanian", "IncrementalEncoderc", "final", "encodings", "mac_romanian", "FalseR", "encodings", "mac_romanian", "IncrementalDecoderc", "encodings", "mac_romanian", "encodings", "mac_romanian", "StreamWriterc", "encodings", "mac_romanian", "StreamReaderc", "encodings", "mac_romanian", "names", "romanianR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "mac_romanian", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "mac_romanian", "module", "encodings", "mac_turkish", "Python", "Character", "Mapping", "Codec", "mac_turkish", "generated", "MAPPINGS", "VENDORS", "APPLE", "TURKISH", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "mac_turkish", "encode", "charmap_decodet", "decoding_table", "encodings", "mac_turkish", "decode", "__name__t", "__module__R", "encodings", "mac_turkish", "IncrementalEncoderc", "final", "encodings", "mac_turkish", "FalseR", "encodings", "mac_turkish", "IncrementalDecoderc", "encodings", "mac_turkish", "encodings", "mac_turkish", "StreamWriterc", "encodings", "mac_turkish", "StreamReaderc", "encodings", "mac_turkish", "names", "turkishR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "mac_turkish", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "mac_turkish", "module", "encodings", "Python", "Codec", "Windows", "Cloned", "Hammond", "mhammond", "skippinet", "ascii", "which", "written", "Andre", "Lemburg", "lemburg", "Copyright", "Rights", "Reserved", "WARRANTY", "mbcs_encodet", "mbcs_decodeNt", "strictc", "inputt", "errors", "encodings", "decode", "IncrementalEncoderc", "selfR", "final", "encodings", "encode", "__name__t", "__module__t", "FalseR", "encodings", "IncrementalDecoderc", "_buffer_decode", "encodings", "StreamWriterc", "encodings", "StreamReaderc", "encodings", "namet", "mbcsR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "getregentry&", "__doc__R", "BufferedIncrementalDecoderR", "encodings", "module", "encodings", "palmos", "Python", "Character", "Mapping", "Codec", "PalmOS", "Written", "Sjoerd", "Mullender", "sjoerd", "based", "iso8859_15", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_map", "selft", "inputt", "errors", "encodings", "palmos", "encode", "charmap_decodet", "decoding_map", "encodings", "palmos", "decode", "__name__t", "__module__R", "encodings", "palmos", "IncrementalEncoderc", "final", "encodings", "palmos", "FalseR", "encodings", "palmos", "IncrementalDecoderc", "encodings", "palmos", "encodings", "palmos", "StreamWriterc", "encodings", "palmos", "StreamReaderc", "encodings", "palmos", "namet", "palmosR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "palmos", "getregentry", "__doc__R", "make_identity_dictt", "rangeR", "updatet", "make_encoding_mapR", "encodings", "palmos", "module", "encodings", "ptcp154", "Python", "Character", "Mapping", "Codec", "generated", "PTCP154", "gencodec", "Written", "Andre", "Lemburg", "lemburg", "Copyright", "Rights", "Reserved", "WARRANTY", "Copyright", "Guido", "Rossum", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_map", "selft", "inputt", "errors", "encodings", "ptcp154", "encode", "charmap_decodet", "decoding_map", "encodings", "ptcp154", "decode", "__name__t", "__module__R", "encodings", "ptcp154", "IncrementalEncoderc", "final", "encodings", "ptcp154", "FalseR", "encodings", "ptcp154", "IncrementalDecoderc", "encodings", "ptcp154", "encodings", "ptcp154", "StreamWriterc", "encodings", "ptcp154", "StreamReaderc", "encodings", "ptcp154", "namet", "ptcp154R", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "ptcp154", "getregentry&", "__doc__R", "make_identity_dictt", "rangeR", "updatet", "make_encoding_mapR", "encodings", "ptcp154", "module", "encodings", "punycode", "Codec", "Punicode", "encoding", "specified", "Written", "Martin", "Basic", "point", "segregationi", "ascii", "appendt", "keyst", "sortt", "joint", "encode", "baset", "extendedt", "encodings", "punycode", "segregate", "Return", "length", "considering", "characters", "below", "encodings", "punycode", "selective_len", "Return", "index", "indicating", "occurrence", "index", "position", "character", "considering", "ordinals", "including", "position", "string", "index", "starting", "position", "string", "chart", "indext", "encodings", "punycode", "selective_find", "Insertion", "unsort", "codingi", "oldchart", "resultt", "oldindexR", "curlent", "delta", "encodings", "punycode", "insertion_unsort2", "biasR", "encodings", "punycode", "abcdefghijklmnopqrstuvwxyz0123456789c", "Generalized", "variable", "length", "integersi", "digits", "encodings", "punycode", "generate_generalized_integerP", "firstt", "numcharst", "divisionsR", "encodings", "punycode", "adapt", "adaptationiH", "enumerateR", "extendR", "baselent", "deltasR", "pointsR", "encodings", "punycode", "generate_integersl", "textR", "encodings", "punycode", "punycode_encodew", "Generalized", "variable", "length", "integersi", "stricts", "incomplete", "punicode", "stringiA", "Invalid", "extended", "point", "IndexErrort", "UnicodeErrort", "NoneR", "extposR", "errorsR", "digitR", "encodings", "punycode", "decode_generalized_number", "Insertion", "unsort", "codingi", "Invalid", "character", "unichrR", "newposR", "encodings", "punycode", "insertion_sort", "rfindt", "unicodet", "upperR", "encodings", "punycode", "punycode_decode", "Codecc", "selft", "inputR7", "encodings", "punycode", "replacet", "ignores", "Unsupported", "error", "handling", "encodings", "punycode", "decode", "__name__t", "__module__R", "encodings", "punycode", "pycRC", "IncrementalEncoderc", "final", "encodings", "punycode", "FalseR", "encodings", "punycode", "pycRK", "IncrementalDecoderc", "Unsupported", "error", "handling", "encodings", "punycode", "pycRH", "encodings", "punycode", "pycRN", "StreamWriterc", "encodings", "punycode", "pycRO", "StreamReaderc", "encodings", "punycode", "pycRP", "namet", "punycodeR", "incrementalencodert", "incrementaldecodert", "streamwritert", "streamreader", "codecst", "CodecInfoRC", "encodings", "punycode", "getregentry", "__doc__RW", "encodings", "punycode", "module", "encodings", "quopri_codec", "Codec", "quoted", "printable", "encoding", "base64", "rot13", "returns", "Python", "strings", "Unicode", "StringIOt", "strictc", "Encode", "input", "returning", "tuple", "output", "object", "length", "consumed", "errors", "defines", "error", "handling", "apply", "defaults", "strict", "handling", "which", "currently", "supported", "error", "handling", "codec", "quotetabs", "AssertionErrorR", "quoprit", "encodet", "Truet", "getvaluet", "inputt", "errorst", "output", "encodings", "quopri_codec", "quopri_encode", "Decode", "input", "returning", "tuple", "output", "object", "length", "consumed", "errors", "defines", "error", "handling", "apply", "defaults", "strict", "handling", "which", "currently", "supported", "error", "handling", "codec", "decodeR", "encodings", "quopri_codec", "quopri_decode", "Codecc", "selfR", "encodings", "quopri_codec", "encodings", "quopri_codec", "__name__t", "__module__R", "encodings", "quopri_codec", "IncrementalEncoderc", "final", "encodings", "quopri_codec", "FalseR", "encodings", "quopri_codec", "IncrementalDecoderc", "encodings", "quopri_codec", "encodings", "quopri_codec", "StreamWriterc", "encodings", "quopri_codec", "StreamReaderc", "encodings", "quopri_codec", "nameR", "incrementalencodert", "incrementaldecodert", "streamwritert", "streamreadert", "_is_text_encoding", "codecst", "CodecInfoR", "encodings", "quopri_codec", "getregentryB", "__doc__R", "cStringIOR", "ImportErrorR", "encodings", "quopri_codec", "module", "encodings", "raw_unicode_escape", "Python", "unicode", "escape", "Codec", "Written", "Andre", "Lemburg", "lemburg", "Copyright", "Rights", "Reserved", "WARRANTY", "Codecc", "__name__t", "__module__t", "codecst", "raw_unicode_escape_encodet", "encodet", "raw_unicode_escape_decodet", "decode", "encodings", "raw_unicode_escape", "IncrementalEncoderc", "errors", "selft", "inputt", "final", "encodings", "raw_unicode_escape", "FalseR", "encodings", "raw_unicode_escape", "IncrementalDecoderc", "encodings", "raw_unicode_escape", "encodings", "raw_unicode_escape", "StreamWriterc", "encodings", "raw_unicode_escape", "StreamReaderc", "encodings", "raw_unicode_escape", "names", "unicode", "escapeR", "incrementalencodert", "incrementaldecodert", "streamwritert", "streamreader", "CodecInfoR", "encodings", "raw_unicode_escape", "getregentry$", "__doc__R", "encodings", "raw_unicode_escape", "module", "encodings", "rot_13", "Python", "Character", "Mapping", "Codec", "ROT13", "ucsub", "colorado", "kominek", "rot13", "details", "Written", "Andre", "Lemburg", "lemburg", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_map", "selft", "inputt", "errors", "encodings", "rot_13", "encode", "charmap_decodet", "decoding_map", "encodings", "rot_13", "decode", "__name__t", "__module__R", "encodings", "rot_13", "IncrementalEncoderc", "final", "encodings", "rot_13", "FalseR", "encodings", "rot_13", "IncrementalDecoderc", "encodings", "rot_13", "encodings", "rot_13", "StreamWriterc", "encodings", "rot_13", "StreamReaderc", "encodings", "rot_13", "names", "incrementalencodert", "incrementaldecodert", "streamwritert", "streamreadert", "_is_text_encoding", "CodecInfoR", "encodings", "rot_13", "getregentry&", "writet", "readR", "infilet", "outfile", "encodings", "rot_13", "rot13r", "__main__", "__doc__R", "make_identity_dictt", "rangeR", "updatet", "make_encoding_mapR", "stdint", "stdout", "encodings", "rot_13", "module", "encodings", "shift_jis", "shift_jist", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "shift_jis", "IncrementalEncoderc", "encodings", "shift_jis", "IncrementalDecoderc", "encodings", "shift_jis", "StreamReaderc", "encodings", "shift_jis", "StreamWriterc", "encodings", "shift_jis", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "shift_jis", "getregentry", "_codecs_jpR", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "shift_jis", "module", "encodings", "shift_jis_2004", "shift_jis_2004t", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "shift_jis_2004", "IncrementalEncoderc", "encodings", "shift_jis_2004", "IncrementalDecoderc", "encodings", "shift_jis_2004", "StreamReaderc", "encodings", "shift_jis_2004", "StreamWriterc", "encodings", "shift_jis_2004", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "shift_jis_2004", "getregentry", "_codecs_jpR", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "shift_jis_2004", "module", "encodings", "shift_jisx0213", "shift_jisx0213t", "Codecc", "__name__t", "__module__t", "codect", "encodet", "decode", "encodings", "shift_jisx0213", "IncrementalEncoderc", "encodings", "shift_jisx0213", "IncrementalDecoderc", "encodings", "shift_jisx0213", "StreamReaderc", "encodings", "shift_jisx0213", "StreamWriterc", "encodings", "shift_jisx0213", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "codecst", "CodecInfoR", "encodings", "shift_jisx0213", "getregentry", "_codecs_jpR", "_multibytecodect", "getcodecR", "MultibyteIncrementalEncoderR", "MultibyteIncrementalDecoderR", "MultibyteStreamReaderR", "MultibyteStreamWriterR", "encodings", "shift_jisx0213", "module", "encodings", "string_escape", "Python", "escape", "Codec", "Written", "Martin", "martin", "loewis", "Codecc", "__name__t", "__module__t", "codecst", "escape_encodet", "encodet", "escape_decodet", "decode", "encodings", "string_escape", "IncrementalEncoderc", "errors", "selft", "inputt", "final", "encodings", "string_escape", "FalseR", "encodings", "string_escape", "IncrementalDecoderc", "encodings", "string_escape", "encodings", "string_escape", "StreamWriterc", "encodings", "string_escape", "StreamReaderc", "encodings", "string_escape", "names", "string", "escapeR", "incrementalencodert", "incrementaldecodert", "streamwritert", "streamreader", "CodecInfoR", "encodings", "string_escape", "getregentry", "__doc__R", "encodings", "string_escape", "module", "encodings", "tis_620", "Python", "Character", "Mapping", "Codec", "tis_620", "generated", "python", "mappings", "gencodec", "Codecc", "strictc", "codecst", "charmap_encodet", "encoding_table", "selft", "inputt", "errors", "encodings", "tis_620", "encode", "charmap_decodet", "decoding_table", "encodings", "tis_620", "decode", "__name__t", "__module__R", "encodings", "tis_620", "IncrementalEncoderc", "final", "encodings", "tis_620", "FalseR", "encodings", "tis_620", "IncrementalDecoderc", "encodings", "tis_620", "encodings", "tis_620", "StreamWriterc", "encodings", "tis_620", "StreamReaderc", "encodings", "tis_620", "names", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "tis_620", "getregentry!", "0123456789", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "__doc__R", "charmap_buildR", "encodings", "tis_620", "module", "encodings", "undefined", "Python", "undefined", "Codec", "codec", "always", "raise", "ValueError", "exception", "being", "intended", "switch", "automatic", "string", "Unicode", "coercion", "Written", "Andre", "Lemburg", "lemburg", "Copyright", "Rights", "Reserved", "WARRANTY", "Codecc", "strictc", "undefined", "encoding", "UnicodeError", "selft", "inputt", "errors", "encodings", "undefined", "encode", "undefined", "encoding", "encodings", "undefined", "decode", "__name__t", "__module__R", "encodings", "undefined", "IncrementalEncoderc", "undefined", "encoding", "final", "encodings", "undefined", "FalseR", "encodings", "undefined", "IncrementalDecoderc", "undefined", "encoding", "encodings", "undefined", "encodings", "undefined", "StreamWriterc", "encodings", "undefined", "StreamReaderc", "encodings", "undefined", "namet", "undefinedR", "incrementalencodert", "incrementaldecodert", "streamwritert", "streamreader", "codecst", "CodecInfoR", "encodings", "undefined", "getregentry", "__doc__R", "encodings", "undefined", "module", "encodings", "unicode_escape", "Python", "unicode", "escape", "Codec", "Written", "Andre", "Lemburg", "lemburg", "Copyright", "Rights", "Reserved", "WARRANTY", "Codecc", "__name__t", "__module__t", "codecst", "unicode_escape_encodet", "encodet", "unicode_escape_decodet", "decode", "encodings", "unicode_escape", "IncrementalEncoderc", "errors", "selft", "inputt", "final", "encodings", "unicode_escape", "FalseR", "encodings", "unicode_escape", "IncrementalDecoderc", "encodings", "unicode_escape", "encodings", "unicode_escape", "StreamWriterc", "encodings", "unicode_escape", "StreamReaderc", "encodings", "unicode_escape", "names", "unicode", "escapeR", "incrementalencodert", "incrementaldecodert", "streamwritert", "streamreader", "CodecInfoR", "encodings", "unicode_escape", "getregentry$", "__doc__R", "encodings", "unicode_escape", "module", "encodings", "unicode_internal", "Python", "unicode", "internal", "Codec", "Written", "Andre", "Lemburg", "lemburg", "Copyright", "Rights", "Reserved", "WARRANTY", "Codecc", "__name__t", "__module__t", "codecst", "unicode_internal_encodet", "encodet", "unicode_internal_decodet", "decode", "encodings", "unicode_internal", "IncrementalEncoderc", "errors", "selft", "inputt", "final", "encodings", "unicode_internal", "FalseR", "encodings", "unicode_internal", "IncrementalDecoderc", "encodings", "unicode_internal", "encodings", "unicode_internal", "StreamWriterc", "encodings", "unicode_internal", "StreamReaderc", "encodings", "unicode_internal", "names", "unicode", "internalR", "incrementalencodert", "incrementaldecodert", "streamwritert", "streamreader", "CodecInfoR", "encodings", "unicode_internal", "getregentry$", "__doc__R", "encodings", "unicode_internal", "module", "encodings", "utf_16", "Python", "Codec", "Written", "Andre", "Lemburg", "lemburg", "Copyright", "Rights", "Reserved", "WARRANTY", "strictc", "codecst", "utf_16_decodet", "inputt", "errors", "encodings", "utf_16", "decode", "IncrementalEncoderc", "__init__t", "Nonet", "encoder", "selfR", "encodings", "utf_16", "little", "utf_16_encodeR", "byteordert", "utf_16_le_encodet", "utf_16_be_encode", "finalt", "result", "encodings", "utf_16", "encode", "resetR", "encodings", "utf_16", "encodings", "utf_16", "getstate", "state", "encodings", "utf_16", "setstate", "__name__t", "__module__R", "FalseR", "encodings", "utf_16", "IncrementalDecoderc", "BufferedIncrementalDecoderR", "decoder", "encodings", "utf_16", "stream", "start", "utf_16_ex_decodet", "utf_16_le_decodet", "utf_16_be_decodet", "UnicodeErrorR", "outputt", "consumedR", "encodings", "utf_16", "_buffer_decode", "encodings", "utf_16", "encodings", "utf_16", "StreamWriterc", "streamR", "encodings", "utf_16", "encodings", "utf_16", "encodings", "utf_16", "encodings", "utf_16", "pycR&", "StreamReaderc", "AttributeError", "encodings", "utf_16", "stream", "start", "objectR$", "encodings", "utf_16", "encodings", "utf_16", "names", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "utf_16", "getregentryu", "__doc__R", "encodings", "utf_16", "module", "encodings", "utf_16_be", "Python", "Codec", "Written", "Andre", "Lemburg", "lemburg", "Copyright", "Rights", "Reserved", "WARRANTY", "strictc", "codecst", "utf_16_be_decodet", "inputt", "errors", "encodings", "utf_16_be", "decode", "IncrementalEncoderc", "utf_16_be_encodeR", "selfR", "final", "encodings", "utf_16_be", "encode", "__name__t", "__module__t", "FalseR", "encodings", "utf_16_be", "IncrementalDecoderc", "_buffer_decode", "encodings", "utf_16_be", "StreamWriterc", "encodings", "utf_16_be", "StreamReaderc", "encodings", "utf_16_be", "names", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "utf_16_be", "getregentry!", "__doc__R", "BufferedIncrementalDecoderR", "encodings", "utf_16_be", "module", "encodings", "utf_16_le", "Python", "Codec", "Written", "Andre", "Lemburg", "lemburg", "Copyright", "Rights", "Reserved", "WARRANTY", "strictc", "codecst", "utf_16_le_decodet", "inputt", "errors", "encodings", "utf_16_le", "decode", "IncrementalEncoderc", "utf_16_le_encodeR", "selfR", "final", "encodings", "utf_16_le", "encode", "__name__t", "__module__t", "FalseR", "encodings", "utf_16_le", "IncrementalDecoderc", "_buffer_decode", "encodings", "utf_16_le", "StreamWriterc", "encodings", "utf_16_le", "StreamReaderc", "encodings", "utf_16_le", "names", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "utf_16_le", "getregentry!", "__doc__R", "BufferedIncrementalDecoderR", "encodings", "utf_16_le", "module", "encodings", "utf_32", "Python", "Codec", "strictc", "codecst", "utf_32_decodet", "inputt", "errors", "encodings", "utf_32", "decode", "IncrementalEncoderc", "__init__t", "Nonet", "encoder", "selfR", "encodings", "utf_32", "little", "utf_32_encodeR", "byteordert", "utf_32_le_encodet", "utf_32_be_encode", "finalt", "result", "encodings", "utf_32", "encode", "resetR", "encodings", "utf_32", "encodings", "utf_32", "getstate", "state", "encodings", "utf_32", "setstate", "__name__t", "__module__R", "FalseR", "encodings", "utf_32", "IncrementalDecoderc", "BufferedIncrementalDecoderR", "decoder", "encodings", "utf_32", "stream", "start", "utf_32_ex_decodet", "utf_32_le_decodet", "utf_32_be_decodet", "UnicodeErrorR", "outputt", "consumedR", "encodings", "utf_32", "_buffer_decode5", "encodings", "utf_32", "addstate", "encodings", "utf_32", "encodings", "utf_32", "encodings", "utf_32", "StreamWriterc", "streamR", "encodings", "utf_32", "encodings", "utf_32", "encodings", "utf_32", "encodings", "utf_32", "StreamReaderc", "AttributeError", "encodings", "utf_32", "stream", "start", "objectR$", "encodings", "utf_32", "encodings", "utf_32", "names", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "utf_32", "getregentry", "__doc__R", "encodings", "utf_32", "module", "encodings", "utf_32_be", "Python", "Codec", "strictc", "codecst", "utf_32_be_decodet", "inputt", "errors", "encodings", "utf_32_be", "decode", "IncrementalEncoderc", "utf_32_be_encodeR", "selfR", "final", "encodings", "utf_32_be", "encode", "__name__t", "__module__t", "FalseR", "encodings", "utf_32_be", "IncrementalDecoderc", "_buffer_decode", "encodings", "utf_32_be", "StreamWriterc", "encodings", "utf_32_be", "StreamReaderc", "encodings", "utf_32_be", "names", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "utf_32_be", "getregentry", "__doc__R", "BufferedIncrementalDecoderR", "encodings", "utf_32_be", "module", "encodings", "utf_32_le", "Python", "Codec", "strictc", "codecst", "utf_32_le_decodet", "inputt", "errors", "encodings", "utf_32_le", "decode", "IncrementalEncoderc", "utf_32_le_encodeR", "selfR", "final", "encodings", "utf_32_le", "encode", "__name__t", "__module__t", "FalseR", "encodings", "utf_32_le", "IncrementalDecoderc", "_buffer_decode", "encodings", "utf_32_le", "StreamWriterc", "encodings", "utf_32_le", "StreamReaderc", "encodings", "utf_32_le", "names", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "utf_32_le", "getregentry", "__doc__R", "BufferedIncrementalDecoderR", "encodings", "utf_32_le", "module", "encodings", "utf_7", "Python", "Codec", "Written", "Brian", "Quinlan", "brian", "sweetapp", "strictc", "codecst", "utf_7_decodet", "inputt", "errors", "encodings", "utf_7", "decode", "IncrementalEncoderc", "utf_7_encodeR", "selfR", "final", "encodings", "utf_7", "encode", "__name__t", "__module__t", "FalseR", "encodings", "utf_7", "IncrementalDecoderc", "_buffer_decode", "encodings", "utf_7", "StreamWriterc", "encodings", "utf_7", "StreamReaderc", "encodings", "utf_7", "names", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "utf_7", "getregentry", "__doc__R", "BufferedIncrementalDecoderR", "encodings", "utf_7", "module", "encodings", "utf_8", "Python", "Codec", "Written", "Andre", "Lemburg", "lemburg", "Copyright", "Rights", "Reserved", "WARRANTY", "strictc", "codecst", "utf_8_decodet", "inputt", "errors", "encodings", "utf_8", "decode", "IncrementalEncoderc", "utf_8_encodeR", "selfR", "final", "encodings", "utf_8", "encode", "__name__t", "__module__t", "FalseR", "encodings", "utf_8", "IncrementalDecoderc", "_buffer_decode", "encodings", "utf_8", "StreamWriterc", "encodings", "utf_8", "StreamReaderc", "encodings", "utf_8", "names", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "utf_8", "getregentry!", "__doc__R", "BufferedIncrementalDecoderR", "encodings", "utf_8", "module", "encodings", "utf_8_sig", "Python", "Codec", "similar", "following", "changes", "encoding", "writing", "encoded", "prepended", "written", "first", "three", "bytes", "decoding", "reading", "first", "three", "bytes", "encoded", "these", "bytes", "skipped", "strictc", "codecst", "BOM_UTF8t", "utf_8_encodet", "inputt", "errors", "encodings", "utf_8_sig", "encode", "utf_8_decodet", "prefixt", "outputt", "consumed", "encodings", "utf_8_sig", "decode", "IncrementalEncoderc", "__init__t", "first", "selfR", "encodings", "utf_8_sig", "final", "encodings", "utf_8_sig", "resetR", "encodings", "utf_8_sig", "encodings", "utf_8_sig", "getstate", "state", "encodings", "utf_8_sig", "setstate", "__name__t", "__module__R", "FalseR", "encodings", "utf_8_sig", "IncrementalDecoderc", "BufferedIncrementalDecoderR", "encodings", "utf_8_sig", "startswitht", "NoneR", "encodings", "utf_8_sig", "_buffer_decode4", "encodings", "utf_8_sig", "encodings", "utf_8_sig", "StreamWriterc", "AttributeError", "encodings", "utf_8_sig", "encodings", "utf_8_sig", "encodings", "utf_8_sig", "StreamReaderc", "encodings", "utf_8_sig", "encodings", "utf_8_sig", "encodings", "utf_8_sig", "pycR!", "names", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwriter", "CodecInfoR", "encodings", "utf_8_sig", "getregentryl", "__doc__R", "encodings", "utf_8_sig", "module", "encodings", "uu_codec", "Python", "uu_codec", "Codec", "content", "transfer", "encoding", "Unlike", "other", "codecs", "which", "target", "Unicode", "codec", "return", "Python", "string", "objects", "encode", "decode", "Written", "Andre", "Lemburg", "lemburg", "details", "adapted", "which", "written", "Lance", "Ellinghouse", "modified", "Jansen", "Fredrik", "Lundh", "stricts", "Encodes", "object", "input", "returns", "tuple", "output", "object", "length", "consumed", "errors", "defines", "error", "handling", "apply", "defaults", "strict", "handling", "which", "currently", "supported", "error", "handling", "codec", "StringIO", "b2a_uus", "begin", "AssertionErrort", "cStringIOR", "binasciiR", "readt", "writet", "getvaluet", "inputt", "errorst", "filenamet", "modeR", "infilet", "outfileR", "chunk", "encodings", "uu_codec", "uu_encode", "Decodes", "object", "input", "returns", "tuple", "output", "object", "length", "consumed", "input", "object", "which", "provides", "bf_getreadbuf", "buffer", "Python", "strings", "buffer", "objects", "memory", "mapped", "files", "examples", "objects", "providing", "errors", "defines", "error", "handling", "apply", "defaults", "strict", "handling", "which", "currently", "supported", "error", "handling", "codec", "filename", "information", "input", "ignored", "a2b_uus", "Missing", "begin", "input", "datai", "begins", "Truncated", "input", "readlineR", "ValueErrort", "Errort", "datat", "nbytes", "encodings", "uu_codec", "uu_decode", "Codecc", "selfR", "encodings", "uu_codec", "encodeb", "encodings", "uu_codec", "decodee", "__name__t", "__module__R", "encodings", "uu_codec", "IncrementalEncoderc", "final", "encodings", "uu_codec", "FalseR", "encodings", "uu_codec", "pycR$", "IncrementalDecoderc", "encodings", "uu_codec", "pycR!", "encodings", "uu_codec", "StreamWriterc", "encodings", "uu_codec", "StreamReaderc", "encodings", "uu_codec", "namet", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwritert", "_is_text_encoding", "codecst", "CodecInfoR", "encodings", "uu_codec", "getregentryx", "__doc__R1", "encodings", "uu_codec", "module", "encodings", "zlib_codec", "Python", "zlib_codec", "Codec", "compression", "encoding", "Unlike", "other", "codecs", "which", "target", "Unicode", "codec", "return", "Python", "string", "objects", "encode", "decode", "Written", "Andre", "Lemburg", "lemburg", "strictc", "Encodes", "object", "input", "returns", "tuple", "output", "object", "length", "consumed", "errors", "defines", "error", "handling", "apply", "defaults", "strict", "handling", "which", "currently", "supported", "error", "handling", "codec", "AssertionErrort", "zlibt", "compresst", "inputt", "errorst", "output", "encodings", "zlib_codec", "zlib_encode", "Decodes", "object", "input", "returns", "tuple", "output", "object", "length", "consumed", "input", "object", "which", "provides", "bf_getreadbuf", "buffer", "Python", "strings", "buffer", "objects", "memory", "mapped", "files", "examples", "objects", "providing", "errors", "defines", "error", "handling", "apply", "defaults", "strict", "handling", "which", "currently", "supported", "error", "handling", "codec", "decompressR", "encodings", "zlib_codec", "zlib_decode", "Codecc", "selfR", "encodings", "zlib_codec", "encode0", "encodings", "zlib_codec", "decode2", "__name__t", "__module__R", "encodings", "zlib_codec", "IncrementalEncoderc", "compressobj", "encodings", "zlib_codec", "__init__6", "flush", "finalt", "encodings", "zlib_codec", "encodings", "zlib_codec", "resetB", "FalseR", "encodings", "zlib_codec", "IncrementalDecoderc", "decompressobj", "encodings", "zlib_codec", "encodings", "zlib_codec", "encodings", "zlib_codec", "encodings", "zlib_codec", "StreamWriterc", "encodings", "zlib_codec", "StreamReaderc", "encodings", "zlib_codec", "nameR", "incrementalencodert", "incrementaldecodert", "streamreadert", "streamwritert", "_is_text_encoding", "codecst", "CodecInfoR", "encodings", "zlib_codec", "getregentry", "__doc__R", "encodings", "zlib_codec", "module", "fnmatch", "Filename", "matching", "shell", "patterns", "fnmatch", "FILENAME", "PATTERN", "matches", "according", "local", "convention", "fnmatchcase", "FILENAME", "PATTERN", "always", "takes", "account", "functions", "operate", "translating", "pattern", "regular", "expression", "cache", "compiled", "regular", "expressions", "speed", "function", "translate", "PATTERN", "returns", "regular", "expression", "corresponding", "PATTERN", "compile", "filtert", "fnmatcht", "fnmatchcaset", "translateid", "Clear", "pattern", "cacheN", "_cachet", "clear", "fnmatch", "_purge", "whether", "FILENAME", "matches", "PATTERN", "Patterns", "shell", "style", "matches", "everything", "matches", "single", "character", "matches", "character", "matches", "initial", "period", "FILENAME", "special", "FILENAME", "PATTERN", "first", "normalized", "operating", "system", "requires", "fnmatchcase", "FILENAME", "PATTERN", "patht", "normcaseR", "namet", "fnmatch", "Return", "subset", "NAMES", "match", "posixpathR", "KeyErrorR", "_MAXCACHER", "compilet", "matcht", "append", "namesR", "resultt", "re_patt", "fnmatch", "whether", "FILENAME", "matches", "PATTERN", "including", "version", "fnmatch", "which", "doesn", "normalize", "arguments", "fnmatch", "Translate", "shell", "PATTERN", "regular", "expression", "There", "quote", "characters", "replaceR", "escape", "stuff", "fnmatch", "__doc__R", "__all__R", "fnmatch", "module", "functools", "functools", "Tools", "working", "functions", "callable", "objects", "partialt", "reducet", "__module__t", "__name__t", "__doc__t", "__dict__c", "Update", "wrapper", "function", "wrapped", "function", "wrapper", "function", "updated", "wrapped", "original", "function", "assigned", "tuple", "naming", "attributes", "assigned", "directly", "wrapped", "function", "wrapper", "function", "defaults", "functools", "WRAPPER_ASSIGNMENTS", "updated", "tuple", "naming", "attributes", "wrapper", "updated", "corresponding", "attribute", "wrapped", "function", "defaults", "functools", "WRAPPER_UPDATES", "setattrt", "getattrt", "update", "wrappert", "wrappedt", "assignedt", "updatedt", "functools", "update_wrapper", "Decorator", "factory", "apply", "update_wrapper", "wrapper", "function", "Returns", "decorator", "invokes", "update_wrapper", "decorated", "function", "wrapper", "argument", "arguments", "wraps", "remaining", "arguments", "Default", "arguments", "update_wrapper", "convenience", "function", "simplify", "applying", "partial", "update_wrapper", "functools", "wraps", "Class", "decorator", "fills", "missing", "ordering", "methodst", "__gt__c", "selft", "other", "functools", "lambda", "__le__c", "functools", "__ge__c", "functools", "__lt__c", "functools", "functools", "functools", "functools", "functools", "functools", "functools", "functools", "functools", "define", "least", "ordering", "operation", "ValueErrort", "convertt", "rootst", "roott", "opnamet", "opfunc", "functools", "total_ordering5", "Convert", "function", "functiont", "functools", "__init__T", "mycmp", "functools", "functools", "functools", "__eq__Z", "functools", "functools", "functools", "__ne__", "implemented", "TypeError", "functools", "__hash__b", "__slots__R&", "functools", "object", "functools", "cmp_to_keyP", "_functoolsR", "WRAPPER_ASSIGNMENTSt", "WRAPPER_UPDATESR", "functools", "module", "genericpath", "operations", "common", "directly", "specific", "modules", "import", "appropriate", "functions", "module", "themselves", "commonprefixt", "existst", "getatimet", "getctimet", "getmtimet", "getsizet", "isdirt", "isfilet", "_unicodec", "__name__t", "__module__", "genericpath", "whether", "exists", "Returns", "False", "broken", "symbolic", "links", "statt", "errort", "Falset", "genericpath", "whether", "regular", "S_ISREGt", "st_mode", "genericpath", "Return", "pathname", "refers", "existing", "directory", "S_ISDIRR", "genericpath", "Return", "reported", "st_size", "filename", "genericpath", "Return", "modification", "reported", "st_mtime", "genericpath", "Return", "access", "reported", "st_atime", "genericpath", "Return", "metadata", "change", "reported", "st_ctime", "genericpath", "Given", "pathnames", "returns", "longest", "common", "leading", "componentt", "enumerate", "genericpath", "Split", "extension", "pathname", "Extension", "everything", "ignoring", "leading", "Returns", "empty", "rfindR", "altsept", "extsept", "sepIndext", "altsepIndext", "dotIndext", "filenameIndex", "genericpath", "_splitext", "__doc__R", "__all__t", "unicodeR", "NameErrort", "objectR", "genericpath", "module", "getopt", "Parser", "command", "options", "module", "helps", "scripts", "parse", "command", "arguments", "supports", "conventions", "getopt", "function", "including", "special", "meanings", "arguments", "options", "similar", "those", "supported", "software", "optional", "third", "argument", "module", "provides", "functions", "exception", "getopt", "Parse", "command", "options", "gnu_getopt", "getopt", "allow", "option", "option", "arguments", "intermixed", "GetoptError", "exception", "class", "raised", "attribute", "which", "option", "involved", "exception", "GetoptErrort", "errort", "getoptt", "gnu_getopti", "Exceptiont", "__init__", "selfR", "getopt", "getopt", "__str__", "__name__t", "__module__R", "getopt", "getopt", "options", "long_options", "Parses", "command", "options", "parameter", "argument", "parsed", "without", "leading", "reference", "running", "program", "Typically", "means", "shortopts", "string", "option", "letters", "script", "wants", "recognize", "options", "require", "argument", "followed", "colon", "format", "getopt", "specified", "longopts", "strings", "names", "options", "which", "should", "supported", "leading", "characters", "should", "included", "option", "Options", "which", "require", "argument", "should", "followed", "equal", "return", "value", "consists", "elements", "first", "option", "value", "pairs", "second", "program", "arguments", "after", "option", "stripped", "trailing", "slice", "first", "argument", "option", "value", "returned", "option", "first", "element", "prefixed", "hyphen", "option", "argument", "second", "element", "empty", "string", "option", "argument", "options", "occur", "order", "which", "found", "allowing", "multiple", "occurrences", "short", "options", "mixed", "typet", "listt", "startswitht", "do_longst", "do_shorts", "argst", "shortoptst", "longoptst", "getopt", "getopt", "options", "long_options", "function", "works", "getopt", "except", "style", "scanning", "default", "means", "option", "option", "arguments", "intermixed", "getopt", "function", "stops", "processing", "options", "option", "argument", "encountered", "first", "character", "option", "string", "environment", "variable", "POSIXLY_CORRECT", "option", "processing", "stops", "option", "argument", "encountered", "POSIXLY_CORRECTi", "isinstancet", "Truet", "environt", "FalseR", "append", "prog_argst", "all_options_first", "getopt", "option", "requires", "argumenti", "option", "arguments", "indext", "ValueErrort", "Nonet", "long_has_argsR", "optargt", "has_arg", "getopt", "option", "recognizedR", "option", "unique", "prefixi", "AssertionErrort", "endswith", "possibilitiest", "unique_matchR", "getopt", "option", "requires", "argumentR", "short_has_argR", "optstringR", "getopt", "option", "recognized", "rangeR", "getopt", "pycR1", "__main__i", "alpha", "__doc__t", "__all__R", "getopt", "module", "gettext", "Internationalization", "localization", "support", "module", "provides", "internationalization", "localization", "support", "Python", "programs", "providing", "interface", "gettext", "message", "catalog", "library", "refers", "operation", "which", "program", "aware", "multiple", "languages", "refers", "adaptation", "program", "internationalized", "local", "language", "cultural", "habits", "ENOENTt", "NullTranslationst", "GNUTranslationst", "Catalogt", "findt", "translationt", "installt", "textdomaint", "bindtextdomaint", "bind_textdomain_codesett", "dgettextt", "dngettextt", "gettextt", "lgettextt", "ldgettextt", "ldngettextt", "lngettextt", "ngettextt", "sharet", "locales", "WHITESPACES", "spaces", "horizontal", "NUMBER", "decimal", "integer", "allowed", "PARENTHESIS", "OPERATOR", "unary", "bitwise", "allowed", "INVALID", "invalid", "token", "WHITESPACESt", "INVALIDs", "invalid", "token", "plural", "finditert", "_token_patternt", "lastgroupt", "groupt", "ValueError", "pluralt", "kindt", "value", "gettext", "_tokenizeT", "unexpected", "token", "plural", "unexpected", "plural", "gettext", "_error_", "gettext", "dictcomp", "unbalanced", "parenthesis", "plural", "formt", "nextt", "_parseR", "_binary_opst", "_c2py_opst", "tokenst", "priorityt", "resultt", "nexttokt", "rightt", "if_truet", "if_false", "gettext", "pycR7", "Plural", "value", "integer", "roundt", "TypeErrort", "__class__t", "__name__", "gettext", "_as_int", "expression", "files", "plural", "forms", "returns", "Python", "function", "implements", "equivalent", "expression", "plural", "expression", "longi", "plural", "expression", "complexR2", "isinstance", "_as_int", "return", "funcN", "RuntimeError", "deptht", "gettext", "normalizei", "ranget", "appendt", "reverse", "COMPONENT_CODESETt", "COMPONENT_TERRITORYt", "COMPONENT_MODIFIERt", "maskt", "modifiert", "codesett", "territoryt", "languaget", "gettext", "_expand_lang", "_infot", "Nonet", "_charsett", "_output_charsett", "_fallbackR7", "selft", "gettext", "__init__", "gettext", "pycR7", "add_fallback", "fallback", "gettext", "pycRl", "message", "gettext", "gettext", "msgid1t", "msgid2R3", "gettext", "gettext", "ugettextt", "unicode", "gettext", "pycRq", "ungettextRr", "gettext", "pycRs", "gettext", "info1", "gettext", "charset4", "gettext", "output_charset7", "gettext", "set_output_charset", "__contains__R", "__builtin__Rq", "__dict__t", "hasattrRs", "namesRy", "gettext", "__module__Re", "FalseR", "gettext", "Override", "method", "support", "alternative", "formats", "nameR", "gettext", "lambda", "magic", "numberi", "corruptR5", "content", "types", "charset", "plural", "formst", "plural", "structt", "unpackt", "getattrt", "_catalogR", "readRK", "LE_MAGICt", "BE_MAGICt", "IOErrort", "xrangeRe", "splitlinest", "stript", "splitt", "lowerRd", "filenamet", "catalogt", "buflent", "magict", "versiont", "msgcountt", "masteridxt", "transidxt", "mlent", "mofft", "mendt", "tlent", "tofft", "tendt", "tmsgt", "lastkt", "itemt", "gettext", "pycR7", "objectR", "encodeRf", "missingR", "gettext", "getpreferredencoding", "gettext", "KeyErrorRh", "gettext", "gettext", "gettext", "pycRq", "gettext", "pycRs", "gettext", "LANGUAGEt", "LC_ALLt", "LC_MESSAGESt", "LANGR5", "_default_localedirt", "environR", "patht", "joint", "exists", "domaint", "localedirt", "languagest", "envarRb", "nelangst", "langt", "nelangR", "mofile", "gettext", "translation", "found", "domaint", "abspatht", "_translationsR", "opent", "setdefaultt", "copyRw", "class_Rm", "mofilesR", "gettext", "TrueR", "gettext", "messagesc", "_current_domain", "gettext", "_localedirsR", "gettext", "_localecodesetsR", "gettext", "gettext", "gettext", "gettext", "gettext", "gettext", "gettext", "gettext", "gettext", "__doc__R", "errnoR", "__all__R", "prefixR", "compilet", "VERBOSEt", "DOTALLR", "enumerateR", "gettext", "module", "hashlib", "hashlib", "module", "common", "interface", "functions", "string", "returns", "object", "implementing", "given", "function", "initializing", "using", "given", "string", "Named", "constructor", "functions", "available", "these", "faster", "using", "sha224", "sha256", "sha384", "sha512", "algorithms", "available", "platform", "above", "guaranteed", "exist", "algorithms_guaranteed", "algorithms_available", "attributes", "algorithm", "names", "passed", "adler32", "crc32", "functions", "available", "module", "Choose", "function", "wisely", "known", "collision", "weaknesses", "sha384", "sha512", "platforms", "objects", "these", "methods", "update", "Update", "object", "string", "Repeated", "calls", "equivalent", "single", "concatenation", "arguments", "digest", "Return", "digest", "strings", "passed", "update", "method", "contain", "ASCII", "characters", "including", "bytes", "hexdigest", "digest", "except", "digest", "returned", "string", "double", "length", "containing", "hexadecimal", "digits", "Return", "clone", "object", "efficiently", "compute", "digests", "strings", "share", "common", "initial", "substring", "example", "obtain", "digest", "string", "Nobody", "inspects", "spammish", "repetition", "import", "hashlib", "hashlib", "update", "Nobody", "inspects", "update", "spammish", "repetition", "digest", "condensed", "hashlib", "sha224", "Nobody", "inspects", "spammish", "repetition", "hexdigest", "a4337bc45a8fc544c03f52dc550cd6e1e87021bc896588bd79e901e2", "sha1t", "sha224t", "sha256t", "sha384t", "sha512t", "algorithms_guaranteedt", "algorithms_availablet", "algorithmst", "pbkdf2_hmacc", "SHA1R", "SHA256R", "SHA224R", "SHA512R", "SHA384R", "unsupported", "_shaR", "_md5t", "_sha256R", "_sha512R", "ImportErrort", "ValueError", "nameR", "hashlib", "__get_builtin_constructorH", "openssl_", "getattrt", "_hashlibt", "AttributeErrorR", "hashlib", "__get_openssl_constructord", "string", "Return", "hashing", "object", "using", "named", "algorithm", "optionally", "initialized", "string", "string", "hashlib", "__py_newp", "string", "Return", "hashing", "object", "using", "named", "algorithm", "optionally", "initialized", "string", "hashlib", "__hash_neww", "found", "hashlib", "genexpr", "hashlib", "genexpr", "Password", "based", "derivation", "function", "Python", "implementations", "based", "module", "about", "OpenSSL", "PKCS5_PBKDF2_HMAC", "short", "passwords", "faster", "passwords", "block_sizei", "copyt", "updatet", "digest", "innert", "outert", "icpyt", "hashlib", "isinstancet", "TypeErrort", "bytest", "bytearrayt", "bufferR", "translatet", "_trans_36t", "_trans_5CR", "Nonet", "digest_sizet", "structt", "packt", "binasciit", "hexlifyt", "xranget", "unhexlify", "hash_namet", "passwordt", "saltt", "iterationst", "dklenR0", "blocksizeR4", "hex_format_stringt", "dkeyt", "loopt", "prevt", "rkeyt", "hashlib", "__doc__t", "__always_supportedt", "__all__R", "__get_hasht", "uniont", "openssl_md_meth_namesR", "__func_namet", "globalsR", "loggingt", "exceptionR", "joint", "rangeR", "hashlib", "module", "heapq", "queue", "algorithm", "priority", "queue", "Heaps", "arrays", "which", "counting", "elements", "comparison", "existing", "elements", "considered", "infinite", "interesting", "property", "always", "smallest", "element", "Usage", "creates", "empty", "heappush", "pushes", "heappop", "smallest", "smallest", "without", "popping", "heapify", "transforms", "place", "linear", "heapreplace", "returns", "smallest", "unchanged", "differs", "textbook", "algorithms", "follows", "based", "indexing", "makes", "relationship", "between", "index", "indexes", "children", "slightly", "obvious", "suitable", "since", "Python", "based", "indexing", "heappop", "method", "returns", "smallest", "largest", "These", "possible", "regular", "Python", "without", "surprises", "smallest", "maintains", "invariant!", "queues", "explanation", "Pinard", "Heaps", "arrays", "which", "counting", "elements", "comparison", "existing", "elements", "considered", "infinite", "interesting", "property", "always", "smallest", "element", "strange", "invariant", "above", "meant", "efficient", "memory", "representation", "tournament", "numbers", "below", "above", "topping", "usual", "binary", "tournament", "sports", "winner", "cells", "trace", "winner", "opponents", "However", "computer", "applications", "tournaments", "trace", "history", "winner", "memory", "efficient", "winner", "promoted", "replace", "something", "lower", "level", "becomes", "cells", "contain", "three", "different", "items", "topped", "cells", "invariant", "protected", "index", "clearly", "overall", "winner", "simplest", "algorithmic", "remove", "winner", "loser", "diagram", "above", "position", "percolate", "exchanging", "values", "until", "invariant", "established", "clearly", "logarithmic", "total", "number", "items", "iterating", "items", "feature", "efficiently", "insert", "items", "while", "going", "provided", "inserted", "items", "better", "element", "extracted", "especially", "useful", "simulation", "contexts", "where", "holds", "incoming", "events", "condition", "means", "smallest", "scheduled", "event", "schedule", "other", "events", "execution", "scheduled", "future", "easily", "structure", "implementing", "schedulers", "sequencer", "Various", "structures", "implementing", "schedulers", "extensively", "studied", "heaps", "reasonably", "speedy", "speed", "almost", "constant", "worst", "different", "average", "However", "there", "other", "representations", "which", "efficient", "overall", "worst", "cases", "might", "terrible", "Heaps", "useful", "sorts", "probably", "implies", "producing", "which", "sorted", "sequences", "which", "usually", "related", "amount", "memory", "followed", "merging", "passes", "these", "which", "merging", "often", "cleverly", "organised", "important", "initial", "produces", "longest", "possible", "Tournaments", "using", "memory", "available", "tournament", "replace", "percolate", "items", "happen", "current", "produce", "which", "twice", "memory", "random", "input", "better", "input", "fuzzily", "ordered", "Moreover", "output", "input", "which", "current", "tournament", "because", "value", "output", "value", "cannot", "decreases", "freed", "memory", "could", "cleverly", "reused", "immediately", "progressively", "building", "second", "which", "grows", "exactly", "first", "melting", "first", "completely", "vanishes", "switch", "heaps", "start", "Clever", "quite", "effective!", "heaps", "useful", "memory", "structures", "applications", "think", "module", "around", "balancing", "algorithms", "which", "current", "nowadays", "annoying", "clever", "consequence", "seeking", "capabilities", "disks", "devices", "which", "cannot", "drives", "story", "quite", "different", "clever", "ensure", "advance", "movement", "effective", "possible", "participate", "progressing", "merge", "tapes", "backwards", "avoid", "rewinding", "Believe", "sorts", "quite", "spectacular", "watch!", "times", "sorting", "always", "Great", "heappusht", "heappopt", "heapifyt", "heapreplacet", "merget", "nlargestt", "nsmallestt", "heappushpopi", "islicet", "countt", "imapt", "izipt", "chain", "itemgetterc", "__lt__", "hasattr", "heapq", "cmp_lt", "maintaining", "invariant", "appendt", "_siftdownt", "heapt", "heapq", "smallest", "maintaining", "invariant", "_siftup", "lasteltt", "returnitem", "heapq", "return", "current", "smallest", "value", "efficient", "heappop", "followed", "heappush", "appropriate", "using", "fixed", "value", "returned", "larger", "item!", "constrains", "reasonable", "routine", "unless", "written", "conditional", "replacement", "heapreplace", "heapq", "version", "heappush", "followed", "heappop", "heapq", "Transform", "place", "reversedt", "xrangeR", "heapq", "Maxheap", "version", "heappush", "followed", "heappop", "_siftup_max", "heapq", "_heappushpop_max", "Transform", "maxheap", "place", "rangeR!", "heapq", "_heapify_max", "largest", "elements", "dataset", "Equivalent", "sorted", "iterable", "reverse", "reverse", "itert", "listR", "sortt", "iterablet", "resultt", "_heappushpopt", "heapq", "smallest", "elements", "dataset", "Equivalent", "sorted", "iterable", "heapq", "startpost", "newitemt", "parentpost", "parent", "heapq", "endposR", "childpost", "rightpos", "heapq", "Maxheap", "variant", "_siftdowni", "heapq", "_siftdown_max", "Maxheap", "variant", "_siftupi", "heapq", "pycR!", "Merge", "multiple", "sorted", "inputs", "single", "sorted", "output", "Similar", "sorted", "itertools", "chain", "iterables", "returns", "generator", "memory", "assumes", "input", "streams", "already", "sorted", "smallest", "largest", "merge", "StopIterationR", "enumeratet", "mapR&", "nextR", "__self__", "iterablest", "_heappopt", "_heapreplacet", "_StopIterationt", "_lent", "h_appendt", "itnumR", "heapq", "smallest", "elements", "dataset", "Equivalent", "sorted", "iterable", "Nonet", "TypeErrort", "AttributeErrort", "sortedR", "_nsmallestR", "headt", "sizeR", "heapq", "largest", "elements", "dataset", "Equivalent", "sorted", "iterable", "reverse", "_nlargestR", "heapq", "__main__i", "__doc__t", "__about__t", "__all__t", "itertoolsR", "operatorR", "_heapqt", "ImportErrorR", "__name__R", "dataR", "doctestt", "testmod", "heapq", "module", "inspect", "useful", "information", "Python", "objects", "module", "encapsulates", "interface", "provided", "internal", "special", "attributes", "func_", "friendlier", "fashion", "provides", "examining", "source", "class", "layout", "useful", "functions", "provided", "module", "ismodule", "isclass", "ismethod", "isfunction", "isgeneratorfunction", "isgenerator", "istraceback", "isframe", "iscode", "isbuiltin", "isroutine", "check", "object", "types", "getmembers", "members", "object", "satisfy", "given", "condition", "getfile", "getsourcefile", "getsource", "object", "source", "getdoc", "getcomments", "documentation", "object", "getmodule", "determine", "module", "object", "getclasstree", "arrange", "classes", "represent", "their", "hierarchy", "getargspec", "getargvalues", "getcallargs", "about", "function", "arguments", "formatargspec", "formatargvalues", "format", "argument", "getouterframes", "getinnerframes", "about", "frames", "currentframe", "current", "stack", "frame", "stack", "trace", "about", "frames", "stack", "traceback", "2001i", "attrgetter", "namedtuplei", "Return", "object", "module", "Module", "objects", "provide", "these", "attributes", "__doc__", "documentation", "string", "__file__", "filename", "missing", "built", "modules", "isinstancet", "typest", "ModuleType", "object", "inspect", "ismodule3", "Return", "object", "class", "Class", "objects", "provide", "these", "attributes", "__doc__", "documentation", "string", "__module__", "module", "which", "class", "defined", "typeR", "ClassType", "inspect", "isclass", "Return", "object", "instance", "method", "Instance", "method", "objects", "provide", "these", "attributes", "__doc__", "documentation", "string", "__name__", "which", "method", "defined", "im_class", "class", "object", "which", "method", "belongs", "im_func", "function", "object", "containing", "implementation", "method", "im_self", "instance", "which", "method", "bound", "MethodType", "inspect", "ismethodC", "Return", "object", "method", "descriptor", "ismethod", "isclass", "isfunction", "Python", "example", "__add__", "object", "passing", "__get__", "attribute", "__set__", "attribute", "beyond", "attributes", "varies", "__name__", "usually", "sensible", "__doc__", "often", "Methods", "implemented", "descriptors", "other", "tests", "return", "false", "ismethoddescriptor", "simply", "because", "other", "tests", "promise", "count", "having", "im_func", "attribute", "object", "passes", "ismethod", "__get__t", "__set__", "hasattrR", "isfunctionR", "inspect", "ismethoddescriptorN", "Return", "object", "descriptor", "descriptors", "__get__", "__set__", "attribute", "Examples", "properties", "defined", "Python", "getsets", "members", "defined", "Typically", "descriptors", "__name__", "__doc__", "attributes", "properties", "getsets", "members", "these", "attributes", "guaranteed", "inspect", "isdatadescriptorb", "MemberDescriptorTypec", "Return", "object", "member", "descriptor", "Member", "descriptors", "specialized", "descriptors", "defined", "extension", "modules", "inspect", "ismemberdescriptorn", "Return", "object", "member", "descriptor", "Member", "descriptors", "specialized", "descriptors", "defined", "extension", "modules", "False", "inspect", "GetSetDescriptorTypec", "Return", "object", "getset", "descriptor", "getset", "descriptors", "specialized", "descriptors", "defined", "extension", "modules", "inspect", "isgetsetdescriptor", "Return", "object", "getset", "descriptor", "getset", "descriptors", "specialized", "descriptors", "defined", "extension", "modules", "inspect", "Return", "object", "defined", "function", "Function", "objects", "provide", "these", "attributes", "__doc__", "documentation", "string", "__name__", "which", "function", "defined", "func_code", "object", "containing", "compiled", "function", "bytecode", "func_defaults", "tuple", "default", "values", "arguments", "func_doc", "__doc__", "func_globals", "global", "namespace", "which", "function", "defined", "func_name", "__name__", "FunctionType", "inspect", "Return", "object", "defined", "generator", "function", "Generator", "function", "objects", "provide", "attributes", "functions", "isfunction", "attributes", "boolR", "func_codet", "co_flagst", "CO_GENERATOR", "inspect", "isgeneratorfunction", "Return", "object", "generator", "Generator", "objects", "provide", "these", "attributes", "__iter__", "defined", "support", "iteration", "container", "close", "raises", "GeneratorExit", "exception", "inside", "generator", "terminate", "iteration", "gi_code", "object", "gi_frame", "frame", "object", "possibly", "generator", "exhausted", "gi_running", "generator", "executing", "otherwise", "return", "container", "resumes", "generator", "sends", "value", "becomes", "result", "current", "yield", "expression", "throw", "raise", "exception", "inside", "generator", "GeneratorType", "inspect", "isgenerator", "Return", "object", "traceback", "Traceback", "objects", "provide", "these", "attributes", "tb_frame", "frame", "object", "level", "tb_lasti", "index", "attempted", "instruction", "bytecode", "tb_lineno", "current", "number", "Python", "source", "tb_next", "inner", "traceback", "object", "called", "level", "TracebackType", "inspect", "istraceback", "Return", "object", "frame", "object", "Frame", "objects", "provide", "these", "attributes", "f_back", "outer", "frame", "object", "frame", "caller", "f_builtins", "built", "namespace", "frame", "f_code", "object", "being", "executed", "frame", "f_exc_traceback", "traceback", "raised", "frame", "f_exc_type", "exception", "raised", "frame", "f_exc_value", "exception", "value", "raised", "frame", "f_globals", "global", "namespace", "frame", "f_lasti", "index", "attempted", "instruction", "bytecode", "f_lineno", "current", "number", "Python", "source", "f_locals", "local", "namespace", "frame", "f_restricted", "frame", "restricted", "execution", "f_trace", "tracing", "function", "frame", "FrameType", "inspect", "isframe", "Return", "object", "object", "objects", "provide", "these", "attributes", "co_argcount", "number", "arguments", "including", "co_code", "string", "compiled", "bytecode", "co_consts", "tuple", "constants", "bytecode", "co_filename", "which", "object", "created", "co_firstlineno", "number", "first", "Python", "source", "co_flags", "bitmap", "optimized", "newlocals", "co_lnotab", "encoded", "mapping", "numbers", "bytecode", "indices", "co_name", "which", "object", "defined", "co_names", "tuple", "names", "local", "variables", "co_nlocals", "number", "local", "variables", "co_stacksize", "virtual", "machine", "stack", "space", "required", "co_varnames", "tuple", "names", "arguments", "local", "variables", "CodeType", "inspect", "iscode", "Return", "object", "built", "function", "method", "Built", "functions", "methods", "provide", "these", "attributes", "__doc__", "documentation", "string", "__name__", "original", "function", "method", "__self__", "instance", "which", "method", "bound", "BuiltinFunctionType", "inspect", "isbuiltin", "Return", "object", "function", "method", "inspect", "isroutine", "Return", "object", "abstract", "class", "__flags__t", "TPFLAGS_IS_ABSTRACT", "inspect", "isabstract", "Return", "members", "object", "value", "pairs", "sorted", "Optionally", "return", "members", "satisfy", "given", "predicate", "getattrt", "AttributeErrort", "appendt", "predicatet", "resultst", "value", "inspect", "getmembers", "Attributes", "defining_class", "objectc", "Return", "attribute", "descriptor", "tuples", "return", "contains", "tuple", "these", "elements", "string", "attribute", "these", "strings", "class", "method", "created", "classmethod", "static", "method", "created", "staticmethod", "property", "created", "property", "method", "other", "flavor", "method", "method", "class", "which", "defined", "attribute", "class", "object", "obtained", "directly", "defining", "class", "__dict__", "getattr", "especially", "important", "attributes", "object", "__dict__", "descriptor", "additional", "__doc__", "string", "__objclass__s", "static", "methods", "class", "methodt", "propertyt", "methodt", "dataN", "getmroR", "Nonet", "__dict__R", "staticmethodt", "classmethodR7", "namest", "resultt", "namet", "homeclst", "baset", "kindt", "obj_via_getattr", "inspect", "classify_class_attrs", "__bases__t", "_searchbases", "accumRE", "inspect", "pycRK", "Return", "tuple", "classes", "including", "method", "resolution", "order", "__mro__N", "tuple", "inspect", "Return", "indent", "spaces", "start", "stringt", "expandtabst", "lstrip", "linet", "expline", "inspect", "indentsize", "documentation", "string", "object", "expanded", "spaces", "clean", "docstrings", "indented", "blocks", "whitespace", "uniformly", "removed", "second", "onwards", "removed", "__doc__R", "StringTypest", "cleandoc", "inspect", "getdocb", "Clean", "indentation", "docstrings", "whitespace", "uniformly", "removed", "second", "onwards", "removed", "splitRP", "UnicodeErrorR", "maxintRQ", "ranget", "linest", "marginRS", "contentt", "indentt", "inspect", "pycRX", "which", "source", "compiled", "object", "defined", "__file__s", "built", "modules", "built", "classsO", "module", "class", "method", "function", "traceback", "frame", "objectN", "TypeErrort", "formatR", "modulest", "__module__R", "im_funcR", "tb_frameR", "f_codeR$", "co_filename", "inspect", "getfile", "ModuleInfos", "suffix", "module_typec", "module", "suffix", "module", "given", "inspect", "lambda", "patht", "basenamet", "get_suffixesR", "filenamet", "suffixest", "neglent", "suffixt", "modet", "mtype", "inspect", "getmoduleinfo", "Return", "module", "given", "inspect", "getmodulename", "Return", "filename", "locate", "object", "source", "Return", "identified", "source", "__loader__N", "lowerRz", "existsR", "getmodulet", "linecachet", "cache", "inspect", "getsourcefile", "Return", "absolute", "source", "compiled", "object", "object", "unique", "origin", "routine", "normalizes", "result", "possible", "normcaset", "abspath", "_filename", "inspect", "getabsfile", "Return", "module", "object", "defined", "found", "__main__t", "__name__t", "__builtin__N", "modulesbyfileR", "itemsRh", "_filesbymodnameR", "realpathR", "filet", "modnamet", "modulet", "maint", "mainobjectt", "builtint", "builtinobject", "inspect", "Return", "entire", "source", "starting", "number", "object", "argument", "module", "class", "method", "function", "traceback", "frame", "object", "source", "returned", "lines", "number", "indexes", "IOError", "raised", "source", "cannot", "retrieved", "source", "availables", "could", "source", "codei", "class", "could", "class", "definitiont", "co_firstlinenos", "could", "function", "definitions", "lambda", "could", "objectN", "IOErrorR", "getlinesR", "compileR", "matchR", "groupR", "sourcefileR", "candidatesRg", "inspect", "findsource", "lines", "comments", "immediately", "preceding", "object", "source", "Returns", "source", "found", "stripR", "startt", "commentst", "endRf", "comment", "inspect", "getcommentsH", "EndOfBlockc", "inspect", "BlockFinderc", "Provide", "tokeneater", "method", "detect", "block", "islambdat", "startedt", "passlinet", "inspect", "__init__y", "classt", "lambdai", "TrueR", "tokenizet", "NEWLINER", "INDENTRf", "DEDENTt", "COMMENTt", "tokent", "srow_scolt", "erow_ecolRS", "srowt", "scolt", "erowt", "inspect", "tokeneater", "inspect", "Extract", "block", "given", "lines", "itert", "nextR", "IndentationErrorR", "blockfinder", "inspect", "getblock", "Return", "source", "lines", "starting", "number", "object", "argument", "module", "class", "method", "function", "traceback", "frame", "object", "source", "returned", "lines", "corresponding", "object", "number", "indicates", "where", "original", "source", "first", "found", "IOError", "raised", "source", "cannot", "retrieved", "inspect", "getsourcelines", "Return", "source", "object", "argument", "module", "class", "method", "function", "traceback", "frame", "object", "source", "returned", "single", "string", "IOError", "raised", "source", "cannot", "retrieved", "inspect", "getsource", "Recursive", "helper", "function", "getclasstree", "walktree", "classest", "childrent", "parentR1", "inspect", "Arrange", "given", "classes", "hierarchy", "nested", "lists", "Where", "nested", "appears", "contains", "classes", "derived", "class", "whose", "entry", "immediately", "precedes", "entry", "tuple", "containing", "class", "tuple", "classes", "unique", "argument", "exactly", "entry", "appears", "returned", "structure", "class", "given", "Otherwise", "classes", "using", "multiple", "inheritance", "their", "descendants", "appear", "multiple", "times", "uniqueR", "rootsR", "inspect", "getclasstree", "Argumentss", "varargs", "keywordsc", "information", "about", "arguments", "accepted", "object", "Three", "things", "returned", "varargs", "varkw", "where", "argument", "names", "possibly", "containing", "nested", "lists", "varargs", "varkw", "names", "arguments", "objecti", "UNPACK_TUPLEt", "UNPACK_SEQUENCEt", "STORE_FASTi", "co_argcountt", "co_varnamest", "listR", "co_codet", "HAVE_ARGUMENTt", "opnameR", "CO_VARARGSt", "CO_VARKEYWORDSR", "nargsRA", "argst", "stepRg", "stackt", "remaint", "countt", "sizet", "varargst", "varkw", "inspect", "getargs", "ArgSpecs", "varargs", "keywords", "defaultsc", "names", "default", "values", "function", "arguments", "tuple", "things", "returned", "varargs", "varkw", "defaults", "argument", "names", "contain", "nested", "lists", "varargs", "varkw", "names", "arguments", "defaults", "tuple", "default", "values", "arguments", "Python", "function", "func_defaults", "funcR", "inspect", "getargspec", "ArgInfos", "varargs", "keywords", "localsc", "information", "about", "arguments", "passed", "particular", "frame", "tuple", "things", "returned", "varargs", "varkw", "locals", "argument", "names", "contain", "nested", "lists", "varargs", "varkw", "names", "arguments", "locals", "locals", "dictionary", "given", "frame", "f_locals", "frameR", "inspect", "getargvalues5", "inspect", "joinseq", "Recursively", "sequence", "stringifying", "element", "strseq", "inspect", "pycRu", "convertRb", "inspect", "inspect", "pycRu", "inspect", "pycRu", "inspect", "pycRu", "Format", "argument", "values", "returned", "getargspec", "first", "arguments", "varargs", "varkw", "defaults", "other", "arguments", "corresponding", "optional", "formatting", "functions", "called", "names", "values", "strings", "ninth", "argument", "optional", "function", "format", "sequence", "arguments", "enumerateR", "defaultst", "formatargt", "formatvarargst", "formatvarkwt", "formatvalueRb", "specst", "firstdefaultRg", "inspect", "formatargspecL", "inspect", "pycRu", "inspect", "pycRu", "inspect", "pycRu", "Format", "argument", "values", "returned", "getargvalues", "first", "arguments", "varargs", "varkw", "locals", "arguments", "corresponding", "optional", "formatting", "functions", "called", "names", "values", "strings", "ninth", "argument", "optional", "function", "format", "sequence", "arguments", "localsR", "inspect", "inspect", "formatargvaluesf", "mapping", "arguments", "values", "returned", "function", "argument", "names", "including", "names", "arguments", "values", "respective", "bound", "values", "positional", "named", "unpacki", "valuesR3", "values", "unpack", "StopIterationt", "ValueError", "subargt", "subvalue", "arg2valuet", "assignt", "assigned_tuple_params", "inspect", "inspect", "is_assigned", "takes", "given", "mostt", "exactlyi", "argumentst", "arguments", "takes", "exactly", "arguments", "given", "takes", "arguments", "given", "multiple", "values", "keyword", "argument", "replaces", "unexpected", "keyword", "argument", "leastN", "im_selfR", "zipRi", "unicodet", "NameErrort", "encodeR", "getdefaultencoding", "positionalt", "namedR", "f_nameR", "num_post", "num_totalt", "num_argst", "num_defaultsR", "unexpectedt", "unassignedt", "num_required", "inspect", "getcallargs", "Tracebacks", "filename", "lineno", "function", "code_context", "indexc", "information", "about", "frame", "traceback", "object", "tuple", "things", "returned", "filename", "number", "current", "function", "lines", "context", "source", "index", "current", "within", "optional", "second", "argument", "specifies", "number", "lines", "context", "return", "which", "centered", "around", "current", "frame", "traceback", "objecti", "tb_linenoRo", "f_linenoR", "maxR_", "co_name", "contextt", "linenoR", "index", "inspect", "getframeinfo", "number", "frame", "object", "allowing", "optimization", "inspect", "getlineno", "records", "frame", "higher", "calling", "frames", "record", "contains", "frame", "object", "filename", "number", "function", "lines", "context", "index", "within", "context", "f_back", "framelist", "inspect", "getouterframes", "records", "traceback", "frame", "lower", "frames", "record", "contains", "frame", "object", "filename", "number", "function", "lines", "context", "index", "within", "context", "tb_next", "inspect", "getinnerframes", "_getframec", "inspect", "pycRu", "Return", "records", "stack", "above", "caller", "frame", "inspect", "Return", "records", "stack", "below", "current", "exception", "exc_info", "inspect", "trace", "__author__t", "__date__R", "operatorR", "collectionsR", "CO_OPTIMIZEDt", "CO_NEWLOCALSR", "CO_NESTEDR", "CO_NOFREER", "ExceptionR", "currentframeR", "inspect", "module", "module", "provides", "Python", "interfaces", "stream", "handling", "builtin", "function", "defined", "module", "hierarchy", "abstract", "class", "IOBase", "defines", "basic", "interface", "stream", "however", "there", "separation", "between", "reading", "writing", "streams", "implementations", "allowed", "raise", "IOError", "support", "given", "operation", "Extending", "IOBase", "RawIOBase", "which", "deals", "simply", "reading", "writing", "bytes", "stream", "FileIO", "subclasses", "RawIOBase", "provide", "interface", "files", "BufferedIOBase", "deals", "buffering", "stream", "RawIOBase", "subclasses", "BufferedWriter", "BufferedReader", "BufferedRWPair", "buffer", "streams", "readable", "writable", "respectively", "BufferedRandom", "provides", "buffered", "interface", "random", "access", "streams", "BytesIO", "simple", "stream", "memory", "bytes", "Another", "IOBase", "subclass", "TextIOBase", "deals", "encoding", "decoding", "streams", "TextIOWrapper", "which", "extends", "buffered", "interface", "buffered", "stream", "BufferedIOBase", "Finally", "StringIO", "memory", "stream", "Argument", "names", "specification", "arguments", "intended", "keyword", "arguments", "DEFAULT_BUFFER_SIZE", "containing", "default", "buffer", "module", "buffered", "classes", "blksize", "obtained", "possible", "Guido", "Rossum", "guido", "python", "Verdone", "verdone", "gmail", "Russell", "russell", "Antoine", "Pitrou", "solipsis", "pitrou", "Amaury", "Forgeot", "amauryfa", "gmail", "Benjamin", "Peterson", "benjamin", "python", "BlockingIOErrort", "opent", "IOBaset", "RawIOBaset", "FileIOt", "BytesIOt", "StringIOt", "BufferedIOBaset", "BufferedReadert", "BufferedWritert", "BufferedRWPairt", "BufferedRandomt", "TextIOBaset", "TextIOWrappert", "UnsupportedOperationt", "SEEK_SETt", "SEEK_CURt", "SEEK_ENDi", "DEFAULT_BUFFER_SIZER", "IncrementalNewlineDecoderR", "__name__t", "__module__t", "ABCMetat", "__metaclass__t", "_IOBaset", "__doc__", "_RawIOBaseR", "_BufferedIOBaseR", "_TextIOBaseR", "__author__t", "__all__R", "OpenWrapperR", "registert", "klass", "module", "keyword", "Keywords", "graminit", "automatically", "generated", "please", "update", "symbols", "directory", "python", "source", "after", "building", "interpreter", "python", "keyword", "iskeywordt", "kwlistt", "assertt", "breakt", "classt", "continuet", "elift", "elset", "exceptt", "exect", "finallyt", "fromt", "globalt", "importt", "lambdat", "passt", "printt", "raiset", "returnt", "whilet", "witht", "yieldc", "Python", "graminit", "keyword", "start", "keywords", "keywords", "target", "contain", "format", "markers", "argvt", "opent", "compilet", "searcht", "appendt", "groupt", "closet", "sortt", "readlinest", "indext", "ValueErrort", "stderrt", "writet", "exitt", "argst", "iptfilet", "optfilet", "strprogt", "linest", "linet", "matcht", "formatt", "startt", "keyword", "main5", "__main__N", "__doc__t", "__all__R", "frozensett", "__contains__R", "__name__", "keyword", "module", "linecache", "Cache", "lines", "files", "intended", "lines", "modules", "imported", "hence", "filename", "found", "module", "search", "getlinet", "clearcachet", "checkcachec", "getlinest", "filenamet", "linenot", "module_globalst", "lines", "linecache", "Clear", "cache", "entirely", "cache", "linecache", "lines", "cache", "Update", "cache", "doesn", "contain", "entry", "already", "updatecachet", "MemoryErrorR", "linecache", "Discard", "cache", "entries", "checked", "call!", "NoneR", "keyst", "statt", "errort", "st_sizet", "st_mtime", "filenamest", "sizet", "mtimeR", "fullnameR", "linecache", "Update", "cache", "entry", "return", "lines", "something", "wrong", "print", "message", "discard", "cache", "entry", "return", "empty", "__loader__t", "__name__t", "get_sources", "startswitht", "endswithR", "OSErrort", "getattrR", "ImportErrort", "IOErrorR", "splitlinest", "patht", "isabst", "joint", "TypeErrort", "AttributeErrorR", "opent", "readlinesR", "basenamet", "namet", "loaderR", "datat", "linet", "dirnamet", "linecache", "__doc__R", "__all__R", "linecache", "module", "locale", "GHHeC", "GHHe0", "Locale", "support", "module", "module", "provides", "level", "access", "locale", "level", "number", "formatting", "locale", "aliasing", "engine", "complement", "these", "aliasing", "engine", "includes", "support", "commonly", "locale", "names", "values", "suitable", "passing", "setlocale", "function", "includes", "default", "encodings", "supported", "locale", "names", "_unicodec", "__name__t", "__module__", "locale", "getlocalet", "getdefaultlocalet", "getpreferredencodingt", "Errort", "setlocalet", "resetlocalet", "localeconvt", "strcollt", "strxfrmt", "atoft", "atoit", "formatt", "format_stringt", "currencyt", "normalizet", "LC_CTYPEt", "LC_COLLATEt", "LC_TIMEt", "LC_MONETARYt", "LC_NUMERICt", "LC_ALLt", "CHAR_MAX", "localeconv", "Returns", "numeric", "monetary", "locale", "specific", "parameters", "groupingt", "currency_symbolt", "n_sign_posnt", "p_cs_precedest", "n_cs_precedest", "mon_groupingt", "n_sep_by_spacet", "decimal_pointt", "negative_signt", "positive_signt", "p_sep_by_spacet", "int_curr_symbolt", "p_sign_posnt", "thousands_sept", "mon_thousands_sept", "frac_digitst", "mon_decimal_pointt", "int_frac_digits", "locale", "setlocale", "integer", "string", "string", "Activates", "queries", "locale", "processing", "_locale", "emulation", "supports", "localeN", "NoneR", "categoryt", "value", "locale", "strcoll", "string", "string", "Compares", "strings", "according", "locale", "locale", "strxfrm", "string", "string", "Returns", "string", "behaves", "locale", "aware", "locale", "_localeconvt", "_override_localeconvt", "update", "locale", "invalid", "grouping", "ValueErrort", "last_intervalt", "interval", "locale", "_grouping_intervals", "0123456789i", "rstript", "appendt", "reverset", "monetaryt", "convR", "strippedt", "right_spacest", "left_spacest", "groupsR", "locale", "_group", "amountt", "lpost", "locale", "_strip_padding", "modifiers", "eEfFgGdiouxXcrs", "Returns", "locale", "aware", "substitution", "specifier", "percent", "additional", "format", "strings", "which", "contain", "modifiers", "format", "given", "exactly", "format", "specifier", "valid", "_percent_ret", "matchRC", "groupR", "reprt", "_format", "percentR2", "additionalRS", "locale", "eEfFgGi", "splitRM", "formattedt", "sepst", "partsR$", "locale", "pycRV", "Formats", "string", "formatting", "would", "takes", "current", "locale", "account", "Grouping", "applied", "third", "parameter", "modifiersR", "listRR", "finditert", "operatort", "isMappingTypeRT", "isinstancet", "tuplet", "countRV", "False", "percentst", "new_ft", "new_valt", "perct", "starcount", "locale", "Formats", "according", "currency", "settings", "current", "locale", "Currency", "formatting", "possible", "using", "locale", "replace", "symbolR", "internationalRH", "digitsR6", "precedest", "separatedt", "sign_post", "locale", "Convert", "float", "string", "taking", "locale", "account", "locale", "Parses", "string", "float", "according", "locale", "settings", "stringt", "funct", "locale", "Converts", "string", "integer", "according", "locale", "settings", "locale", "locale", "_testD", "locale", "genexpr", "indext", "encodingst", "normalize_encodingt", "aliasest", "locale_encoding_alias", "codet", "encodingt", "langnamet", "norm_encoding", "locale", "_replace_encoding", "Returns", "normalized", "locale", "given", "locale", "returned", "locale", "formatted", "setlocale", "normalization", "fails", "original", "returned", "unchanged", "given", "encoding", "known", "function", "defaults", "default", "encoding", "locale", "setlocale", "asciit", "encodet", "translatet", "_ascii_lower_mapRw", "locale_aliasR", "localenameR", "modifierR", "lang_encR", "lookup_namet", "defmod", "locale", "Parses", "locale", "localename", "returns", "result", "tuple", "language", "encoding", "localename", "normalized", "passed", "through", "locale", "alias", "engine", "ValueError", "raised", "locale", "cannot", "parsed", "language", "corresponds", "encoding", "values", "cannot", "determined", "unknown", "implementation", "euroR", "unknown", "locale", "locale", "_parse_localename", "Builds", "locale", "given", "tuple", "language", "encoding", "aliasing", "normalizing", "takes", "place", "localetuplet", "languageR", "locale", "_build_localename", "LANGt", "LANGUAGEc", "Tries", "determine", "default", "locale", "settings", "returns", "tuple", "language", "encoding", "According", "POSIX", "program", "which", "called", "setlocale", "LC_ALL", "using", "portable", "locale", "Calling", "setlocale", "LC_ALL", "default", "locale", "defined", "variable", "Since", "interfere", "current", "locale", "setting", "emulate", "behavior", "described", "above", "maintain", "compatibility", "other", "platforms", "variable", "tested", "variables", "given", "envvars", "parameter", "first", "found", "defined", "envvars", "defaults", "search", "gettext", "always", "contain", "variable", "Except", "language", "corresponds", "encoding", "values", "cannot", "determined", "win32i", "_localet", "_getdefaultlocalet", "ImportErrort", "AttributeErrort", "platformt", "windows_localeR", "environR0", "envvarsR", "lookupt", "variableR", "locale", "Returns", "current", "setting", "given", "locale", "category", "tuple", "language", "encoding", "category", "value", "except", "LC_ALL", "defaults", "LC_CTYPE", "Except", "language", "corresponds", "encoding", "values", "cannot", "determined", "category", "LC_ALL", "supported", "_setlocaleR", "TypeErrorR", "locale", "locale", "given", "category", "locale", "string", "iterable", "strings", "language", "encoding", "Iterables", "converted", "strings", "using", "locale", "aliasing", "engine", "Locale", "strings", "passed", "directly", "category", "given", "values", "_strR", "locale", "locale", "locale", "category", "default", "setting", "default", "setting", "determined", "calling", "getdefaultlocale", "category", "defaults", "LC_ALL", "locale", "Return", "charset", "likely", "using", "do_setlocaleR", "locale", "Return", "charset", "likely", "using", "looking", "environment", "variables", "locale", "Return", "charset", "likely", "using", "according", "system", "configuration", "nl_langinfot", "CODESET", "oldloct", "result", "locale", "ISO8859", "JIS7t", "jis7t", "eucJPt", "ajecR", "latin_1t", "iso8859_1s", "ISO8859", "iso8859_10s", "ISO8859", "iso8859_11s", "ISO8859", "iso8859_13s", "ISO8859", "iso8859_14s", "ISO8859", "iso8859_15s", "ISO8859", "iso8859_16s", "ISO8859", "iso8859_2s", "ISO8859", "iso8859_3s", "ISO8859", "iso8859_4s", "ISO8859", "iso8859_5s", "ISO8859", "iso8859_6s", "ISO8859", "iso8859_7s", "ISO8859", "iso8859_8s", "ISO8859", "iso8859_9t", "iso2022_jpt", "SJISt", "shift_jist", "TACTISt", "tactist", "euc_jpt", "eucKRt", "euc_krs", "utf_8s", "koi8_rs", "koi8_us", "az_AZ", "a3_azs", "a3_az", "koi8cs", "a3_az", "koics", "aa_DJ", "ISO8859", "aa_djs", "aa_ER", "aa_ers", "aa_ET", "aa_ets", "af_ZA", "ISO8859", "af_zas", "af_za", "iso88591s", "am_ET", "am_ets", "en_US", "ISO8859", "americans", "american", "iso88591s", "an_ES", "ISO8859", "an_ess", "ar_AA", "ISO8859", "ar_aas", "ar_aa", "iso88596s", "ar_AE", "ISO8859", "ar_aes", "ar_ae", "iso88596s", "ar_BH", "ISO8859", "ar_bhs", "ar_bh", "iso88596s", "ar_DZ", "ISO8859", "ar_dzs", "ar_dz", "iso88596s", "ar_EG", "ISO8859", "ar_egs", "ar_eg", "iso88596s", "ar_IN", "ar_ins", "ar_IQ", "ISO8859", "ar_iqs", "ar_iq", "iso88596s", "ar_JO", "ISO8859", "ar_jos", "ar_jo", "iso88596s", "ar_KW", "ISO8859", "ar_kws", "ar_kw", "iso88596s", "ar_LB", "ISO8859", "ar_lbs", "ar_lb", "iso88596s", "ar_LY", "ISO8859", "ar_lys", "ar_ly", "iso88596s", "ar_MA", "ISO8859", "ar_mas", "ar_ma", "iso88596s", "ar_OM", "ISO8859", "ar_oms", "ar_om", "iso88596s", "ar_QA", "ISO8859", "ar_qas", "ar_qa", "iso88596s", "ar_SA", "ISO8859", "ar_sas", "ar_sa", "iso88596s", "ar_SD", "ISO8859", "ar_sds", "ar_sd", "iso88596s", "ar_SY", "ISO8859", "ar_sys", "ar_sy", "iso88596s", "ar_TN", "ISO8859", "ar_tns", "ar_tn", "iso88596s", "ar_YE", "ISO8859", "ar_yes", "ar_ye", "iso88596t", "arabics", "arabic", "iso88596s", "as_IN", "as_ins", "ast_ES", "ISO8859", "ast_ess", "ayc_PE", "ayc_pes", "az_AZ", "ISO8859", "az_azs", "az_az", "iso88599es", "be_BY", "CP1251t", "be_BY", "latins", "latins", "bg_BG", "be_bg", "utf8t", "be_bys", "be_by", "cp1251s", "be_by", "microsoftcp1251s", "be_by", "latins", "be_by", "latins", "bem_ZM", "bem_zms", "ber_DZ", "ber_dzs", "ber_MA", "ber_mas", "bg_BG", "CP1251t", "bg_bgs", "bg_bg", "cp1251s", "bg_BG", "ISO8859", "bg_bg", "iso88595s", "bg_BG", "bg_bg", "koi8rs", "bg_bg", "microsoftcp1251s", "bho_IN", "bho_ins", "bn_BD", "bn_bds", "bn_IN", "bn_ins", "bo_CN", "bo_cns", "bo_IN", "bo_ins", "nb_NO", "ISO8859", "bokmals", "br_FR", "ISO8859", "br_frs", "br_fr", "iso88591s", "br_FR", "ISO8859", "br_fr", "iso885914s", "br_FR", "ISO8859", "br_fr", "iso885915s", "br_fr", "iso885915", "euros", "br_FR", "br_fr", "euros", "br_fr", "euros", "brx_IN", "brx_ins", "bs_BA", "ISO8859", "bs_bas", "bs_ba", "iso88592t", "bulgarians", "byn_ER", "byn_ers", "fr_CA", "ISO8859", "frenchs", "french", "iso88591s", "asciis", "iso88591s", "en_US", "utf8t", "ca_ES", "ISO8859", "ca_AD", "ISO8859", "ca_ads", "ca_ad", "iso88591s", "ca_AD", "ISO8859", "ca_ad", "iso885915s", "ca_ad", "iso885915", "euros", "ca_AD", "ca_ad", "euros", "ca_ad", "eurot", "ca_ess", "ca_es", "iso88591s", "ca_ES", "ISO8859", "ca_es", "iso885915s", "ca_es", "iso885915", "euros", "ca_ES", "ca_es", "euros", "ca_ES", "ISO8859", "valencias", "ca_es", "valencias", "ca_es", "euros", "ca_FR", "ISO8859", "ca_frs", "ca_fr", "iso88591s", "ca_FR", "ISO8859", "ca_fr", "iso885915s", "ca_fr", "iso885915", "euros", "ca_FR", "ca_fr", "euros", "ca_fr", "euros", "ca_IT", "ISO8859", "ca_its", "ca_it", "iso88591s", "ca_IT", "ISO8859", "ca_it", "iso885915s", "ca_it", "iso885915", "euros", "ca_IT", "ca_it", "euros", "ca_it", "eurot", "catalant", "cextends", "cextend", "zh_CN", "eucCNs", "chinese", "zh_TW", "eucTWs", "chinese", "crh_UA", "crh_uas", "hr_HR", "ISO8859", "croatians", "cs_CZ", "ISO8859", "cs_css", "cs_cs", "iso88592t", "cs_czs", "cs_cz", "iso88592s", "csb_PL", "csb_pls", "cv_RU", "cv_rus", "cy_GB", "ISO8859", "cy_gbs", "cy_gb", "iso88591s", "cy_GB", "ISO8859", "cy_gb", "iso885914s", "cy_GB", "ISO8859", "cy_gb", "iso885915s", "cy_gb", "eurot", "cz_czt", "czechs", "da_DK", "ISO8859", "da_DK", "ISO8859", "iso885915t", "da_dks", "da_dk", "88591s", "da_dk", "885915s", "da_dk", "iso88591s", "da_dk", "iso885915s", "da_dk", "eurot", "danishs", "danish", "iso88591t", "dansks", "de_DE", "ISO8859", "de_DE", "ISO8859", "iso885915s", "de_AT", "ISO8859", "de_ats", "de_at", "iso88591s", "de_AT", "ISO8859", "de_at", "iso885915s", "de_at", "iso885915", "euros", "de_AT", "de_at", "euros", "de_at", "euros", "de_BE", "ISO8859", "de_bes", "de_be", "iso88591s", "de_BE", "ISO8859", "de_be", "iso885915s", "de_be", "iso885915", "euros", "de_BE", "de_be", "euros", "de_be", "euros", "de_CH", "ISO8859", "de_chs", "de_ch", "iso88591s", "de_CH", "ISO8859", "de_ch", "iso885915s", "de_ch", "eurot", "de_des", "de_de", "88591s", "de_de", "885915s", "de_de", "885915", "euros", "de_de", "iso88591s", "de_de", "iso885915s", "de_de", "iso885915", "euros", "de_DE", "de_de", "euros", "de_de", "euros", "de_LI", "de_li", "utf8s", "de_LU", "ISO8859", "de_lus", "de_lu", "iso88591s", "de_LU", "ISO8859", "de_lu", "iso885915s", "de_lu", "iso885915", "euros", "de_LU", "de_lu", "euros", "de_lu", "eurot", "deutschs", "doi_IN", "doi_ins", "nl_NL", "ISO8859", "dutchs", "nl_BE", "ISO8859", "dutch", "iso88591s", "dv_MV", "dv_mvs", "dz_BT", "dz_bts", "ee_EE", "ISO8859", "ee_ees", "ee_ee", "iso88594s", "et_EE", "ISO8859", "eestis", "el_GR", "ISO8859", "el_CY", "ISO8859", "el_cyt", "el_grs", "el_gr", "iso88597s", "el_GR", "ISO8859", "el_gr", "euros", "iso88591s", "en_AG", "en_ags", "en_AU", "ISO8859", "en_aus", "en_au", "iso88591s", "en_BE", "ISO8859", "en_bes", "en_BE", "ISO8859", "en_be", "euros", "en_BW", "ISO8859", "en_bws", "en_bw", "iso88591s", "en_CA", "ISO8859", "en_cas", "en_ca", "iso88591s", "en_DK", "ISO8859", "en_dks", "en_DL", "en_dl", "utf8s", "en_GB", "ISO8859", "en_gbs", "en_gb", "88591s", "en_gb", "iso88591s", "en_GB", "ISO8859", "en_gb", "iso885915s", "en_gb", "euros", "en_HK", "ISO8859", "en_hks", "en_hk", "iso88591s", "en_IE", "ISO8859", "en_ies", "en_ie", "iso88591s", "en_IE", "ISO8859", "en_ie", "iso885915s", "en_ie", "iso885915", "euros", "en_IE", "en_ie", "euros", "en_ie", "euros", "en_IN", "ISO8859", "en_ins", "en_NG", "en_ngs", "en_NZ", "ISO8859", "en_nzs", "en_nz", "iso88591s", "en_PH", "ISO8859", "en_phs", "en_ph", "iso88591s", "en_SG", "ISO8859", "en_sgs", "en_sg", "iso88591t", "en_ukt", "en_uss", "en_us", "88591s", "en_US", "ISO8859", "en_us", "885915s", "en_us", "iso88591s", "en_us", "iso885915s", "en_us", "iso885915", "euros", "en_us", "euros", "en_us", "euros", "en_ZA", "ISO8859", "en_zas", "en_za", "88591s", "en_za", "iso88591s", "en_ZA", "ISO8859", "en_za", "iso885915s", "en_za", "euros", "en_ZM", "en_zms", "en_ZW", "ISO8859", "en_zws", "en_zw", "iso88591s", "en_ZS", "en_zw", "utf8t", "eng_gbs", "eng_gb", "8859s", "en_EN", "ISO8859", "englishs", "english", "iso88591t", "english_uks", "english_uk", "8859s", "english_united", "statess", "english_united", "states", "english_uss", "english_us", "8859s", "english_us", "asciis", "eo_XX", "ISO8859", "utf8s", "eo_EO", "ISO8859", "eo_eos", "eo_eo", "iso88593s", "eo_US", "eo_us", "utf8t", "eo_xxs", "eo_xx", "iso88593s", "es_ES", "ISO8859", "es_AR", "ISO8859", "es_ars", "es_ar", "iso88591s", "es_BO", "ISO8859", "es_bos", "es_bo", "iso88591s", "es_CL", "ISO8859", "es_cls", "es_cl", "iso88591s", "es_CO", "ISO8859", "es_cos", "es_co", "iso88591s", "es_CR", "ISO8859", "es_crs", "es_cr", "iso88591s", "es_CU", "es_cus", "es_DO", "ISO8859", "es_dos", "es_do", "iso88591s", "es_EC", "ISO8859", "es_ecs", "es_ec", "iso88591t", "es_ess", "es_es", "88591s", "es_es", "iso88591s", "es_ES", "ISO8859", "es_es", "iso885915s", "es_es", "iso885915", "euros", "es_ES", "es_es", "euros", "es_es", "euros", "es_GT", "ISO8859", "es_gts", "es_gt", "iso88591s", "es_HN", "ISO8859", "es_hns", "es_hn", "iso88591s", "es_MX", "ISO8859", "es_mxs", "es_mx", "iso88591s", "es_NI", "ISO8859", "es_nis", "es_ni", "iso88591s", "es_PA", "ISO8859", "es_pas", "es_pa", "iso88591s", "es_PA", "ISO8859", "es_pa", "iso885915s", "es_pa", "euros", "es_PE", "ISO8859", "es_pes", "es_pe", "iso88591s", "es_PE", "ISO8859", "es_pe", "iso885915s", "es_pe", "euros", "es_PR", "ISO8859", "es_prs", "es_pr", "iso88591s", "es_PY", "ISO8859", "es_pys", "es_py", "iso88591s", "es_PY", "ISO8859", "es_py", "iso885915s", "es_py", "euros", "es_SV", "ISO8859", "es_svs", "es_sv", "iso88591s", "es_SV", "ISO8859", "es_sv", "iso885915s", "es_sv", "euros", "es_US", "ISO8859", "es_uss", "es_us", "iso88591s", "es_UY", "ISO8859", "es_uys", "es_uy", "iso88591s", "es_UY", "ISO8859", "es_uy", "iso885915s", "es_uy", "euros", "es_VE", "ISO8859", "es_ves", "es_ve", "iso88591s", "es_VE", "ISO8859", "es_ve", "iso885915s", "es_ve", "eurot", "estonians", "et_EE", "ISO8859", "et_ees", "et_ee", "iso88591s", "et_EE", "ISO8859", "et_ee", "iso885913s", "et_ee", "iso885915s", "et_EE", "ISO8859", "et_ee", "iso88594s", "et_ee", "euros", "eu_ES", "ISO8859", "eu_ess", "eu_es", "iso88591s", "eu_ES", "ISO8859", "eu_es", "iso885915s", "eu_es", "iso885915", "euros", "eu_ES", "eu_es", "euros", "eu_es", "euros", "eu_FR", "ISO8859", "eu_frs", "fa_IR", "fa_irs", "fa_IR", "ISIRI", "3342s", "fa_ir", "isiri3342s", "ff_SN", "ff_sns", "fi_FI", "ISO8859", "iso885915t", "fi_fis", "fi_FI", "ISO8859", "fi_fi", "88591s", "fi_fi", "iso88591s", "fi_fi", "iso885915s", "fi_fi", "iso885915", "euros", "fi_FI", "fi_fi", "euros", "fi_fi", "euros", "fil_PH", "fil_pht", "finnishs", "finnish", "iso88591s", "fo_FO", "ISO8859", "fo_fos", "fo_fo", "iso88591s", "fo_FO", "ISO8859", "fo_fo", "iso885915s", "fo_fo", "euros", "fr_FR", "ISO8859", "fr_FR", "ISO8859", "iso885915s", "fr_BE", "ISO8859", "fr_bes", "fr_be", "88591s", "fr_be", "iso88591s", "fr_BE", "ISO8859", "fr_be", "iso885915s", "fr_be", "iso885915", "euros", "fr_BE", "fr_be", "euros", "fr_be", "eurot", "fr_cas", "fr_ca", "88591s", "fr_ca", "iso88591s", "fr_CA", "ISO8859", "fr_ca", "iso885915s", "fr_ca", "euros", "fr_CH", "ISO8859", "fr_chs", "fr_ch", "88591s", "fr_ch", "iso88591s", "fr_CH", "ISO8859", "fr_ch", "iso885915s", "fr_ch", "eurot", "fr_frs", "fr_fr", "88591s", "fr_fr", "iso88591s", "fr_fr", "iso885915s", "fr_fr", "iso885915", "euros", "fr_FR", "fr_fr", "euros", "fr_fr", "euros", "fr_LU", "ISO8859", "fr_lus", "fr_lu", "88591s", "fr_lu", "iso88591s", "fr_LU", "ISO8859", "fr_lu", "iso885915s", "fr_lu", "iso885915", "euros", "fr_LU", "fr_lu", "euros", "fr_lu", "euros", "fre_frs", "fre_fr", "8859t", "frenchs", "french", "iso88591t", "french_frances", "french_france", "8859s", "fur_IT", "fur_its", "fy_DE", "fy_des", "fy_NL", "fy_nls", "ga_IE", "ISO8859", "ga_ies", "ga_ie", "iso88591s", "ga_IE", "ISO8859", "ga_ie", "iso885914s", "ga_IE", "ISO8859", "ga_ie", "iso885915s", "ga_ie", "iso885915", "euros", "ga_IE", "ga_ie", "euros", "ga_ie", "euros", "gl_ES", "ISO8859", "galegot", "galicians", "gd_GB", "ISO8859", "gd_gbs", "gd_gb", "iso88591s", "gd_GB", "ISO8859", "gd_gb", "iso885914s", "gd_GB", "ISO8859", "gd_gb", "iso885915s", "gd_gb", "eurot", "ger_des", "ger_de", "8859t", "germans", "german", "iso88591t", "german_germanys", "german_germany", "8859s", "gez_ER", "gez_ers", "gez_ET", "gez_ett", "gl_ess", "gl_es", "iso88591s", "gl_ES", "ISO8859", "gl_es", "iso885915s", "gl_es", "iso885915", "euros", "gl_ES", "gl_es", "euros", "gl_es", "eurot", "greeks", "greek", "iso88597s", "gu_IN", "gu_ins", "gv_GB", "ISO8859", "gv_gbs", "gv_gb", "iso88591s", "gv_GB", "ISO8859", "gv_gb", "iso885914s", "gv_GB", "ISO8859", "gv_gb", "iso885915s", "gv_gb", "euros", "ha_NG", "ha_ngs", "he_IL", "ISO8859", "he_ils", "he_IL", "CP1255s", "he_il", "cp1255s", "he_il", "iso88598s", "he_il", "microsoftcp1255t", "hebrews", "hebrew", "iso88598s", "hi_IN", "ISCII", "hi_ins", "hi_in", "isciidevs", "hne_IN", "hne_int", "hr_hrs", "hr_hr", "iso88592t", "hrvatskis", "hsb_DE", "ISO8859", "hsb_des", "ht_HT", "ht_hts", "hu_HU", "ISO8859", "hu_hus", "hu_hu", "iso88592t", "hungarians", "hy_AM", "hy_ams", "hy_AM", "ARMSCII_8s", "hy_am", "armscii8s", "ia_FR", "ia_frs", "is_IS", "ISO8859", "icelandics", "icelandic", "iso88591s", "id_ID", "ISO8859", "id_ids", "ig_NG", "ig_ngs", "ik_CA", "ik_cat", "in_idR", "is_iss", "is_is", "iso88591s", "is_IS", "ISO8859", "is_is", "iso885915s", "is_is", "euros", "iso8859", "iso8859", "iso_8859_1t", "iso_8859_15s", "it_IT", "ISO8859", "it_IT", "ISO8859", "iso885915s", "it_CH", "ISO8859", "it_chs", "it_ch", "iso88591s", "it_CH", "ISO8859", "it_ch", "iso885915s", "it_ch", "eurot", "it_its", "it_it", "88591s", "it_it", "iso88591s", "it_it", "iso885915s", "it_it", "iso885915", "euros", "it_IT", "it_it", "euros", "it_it", "eurot", "italians", "italian", "iso88591s", "iu_CA", "NUNACOM", "iu_cas", "iu_ca", "nunacom8t", "iw_ils", "iw_il", "iso88598s", "iw_IL", "iw_il", "utf8s", "ja_JP", "eucJPt", "ja_JP", "JIS7s", "ja_JP", "SJISs", "sjist", "ja_jps", "ja_jp", "ajecs", "ja_jp", "ja_jp", "eucjps", "ja_jp", "ja_jp", "iso2022jps", "ja_jp", "ja_jp", "jis7s", "ja_jp", "mscodes", "ja_jp", "ja_jp", "sjiss", "ja_jp", "ujist", "japant", "japaneses", "japanese", "japanese", "japanese", "sjist", "jp_jps", "ka_GE", "GEORGIAN", "ACADEMYt", "ka_ges", "ka_ge", "georgianacademys", "ka_GE", "GEORGIAN", "ka_ge", "georgianpss", "ka_ge", "georgianrss", "kk_KZ", "RK1048t", "kk_kzs", "kl_GL", "ISO8859", "kl_gls", "kl_gl", "iso88591s", "kl_GL", "ISO8859", "kl_gl", "iso885915s", "kl_gl", "euros", "km_KH", "km_khs", "kn_IN", "kn_ins", "ko_KR", "eucKRt", "ko_krs", "ko_kr", "ko_kr", "euckrs", "kok_IN", "kok_int", "koreans", "korean", "ks_IN", "ks_ins", "ks_IN", "devanagaris", "ks_in", "devanagaris", "ks_in", "devanagari", "utf8s", "ku_TR", "ISO8859", "ku_trs", "kw_GB", "ISO8859", "kw_gbs", "kw_gb", "iso88591s", "kw_GB", "ISO8859", "kw_gb", "iso885914s", "kw_GB", "ISO8859", "kw_gb", "iso885915s", "kw_gb", "euros", "ky_KG", "ky_kgs", "lb_LU", "lb_lus", "lg_UG", "ISO8859", "lg_ugs", "li_BE", "li_bes", "li_NL", "li_nls", "lij_IT", "lij_its", "lt_LT", "ISO8859", "lithuanians", "lo_LA", "MULELAO", "lo_las", "lo_LA", "CP1133s", "lo_la", "cp1133s", "lo_la", "ibmcp1133s", "lo_la", "mulelao1t", "lt_lts", "lt_lt", "iso885913s", "lt_LT", "ISO8859", "lt_lt", "iso88594s", "lv_LV", "ISO8859", "lv_lvs", "lv_lv", "iso885913s", "lv_LV", "ISO8859", "lv_lv", "iso88594s", "mag_IN", "mag_ins", "mai_IN", "mai_ins", "mg_MG", "ISO8859", "mg_mgs", "mhr_RU", "mhr_rus", "mi_NZ", "ISO8859", "mi_nzs", "mi_nz", "iso88591s", "mk_MK", "ISO8859", "mk_mks", "mk_MK", "CP1251s", "mk_mk", "cp1251s", "mk_mk", "iso88595s", "mk_mk", "microsoftcp1251s", "ml_IN", "ml_ins", "mn_MN", "mn_mns", "mni_IN", "mni_ins", "mr_IN", "mr_ins", "ms_MY", "ISO8859", "ms_mys", "ms_my", "iso88591s", "mt_MT", "ISO8859", "mt_mts", "mt_mt", "iso88593s", "my_MM", "my_mms", "nan_TW", "latins", "nan_tw", "latint", "nb_nos", "nb_no", "88591s", "nb_no", "iso88591s", "nb_NO", "ISO8859", "nb_no", "iso885915s", "nb_no", "euros", "nds_DE", "nds_des", "nds_NL", "nds_nls", "ne_NP", "ne_nps", "nhn_MX", "nhn_mxs", "niu_NU", "niu_nus", "niu_NZ", "niu_nzt", "nl_NL", "ISO8859", "iso885915s", "nl_AW", "nl_awt", "nl_bes", "nl_be", "88591s", "nl_be", "iso88591s", "nl_BE", "ISO8859", "nl_be", "iso885915s", "nl_be", "iso885915", "euros", "nl_BE", "nl_be", "euros", "nl_be", "eurot", "nl_nls", "nl_nl", "88591s", "nl_nl", "iso88591s", "nl_nl", "iso885915s", "nl_nl", "iso885915", "euros", "nl_NL", "nl_nl", "euros", "nl_nl", "euros", "nn_NO", "ISO8859", "nn_nos", "nn_no", "88591s", "nn_no", "iso88591s", "nn_NO", "ISO8859", "nn_no", "iso885915s", "nn_no", "euros", "no_NO", "ISO8859", "ny_NO", "ISO8859", "nynorskt", "no_nos", "no_no", "88591s", "no_no", "iso88591s", "no_NO", "ISO8859", "no_no", "iso885915s", "no_no", "iso88591", "bokmals", "no_no", "iso88591", "nynorsks", "no_no", "eurot", "norwegians", "norwegian", "iso88591s", "nr_ZA", "ISO8859", "nr_zas", "nr_za", "iso88591s", "nso_ZA", "ISO8859", "nso_zas", "nso_za", "iso885915t", "ny_nos", "ny_no", "88591s", "ny_no", "iso88591s", "ny_NO", "ISO8859", "ny_no", "iso885915s", "ny_no", "eurot", "nynorsks", "oc_FR", "ISO8859", "oc_frs", "oc_fr", "iso88591s", "oc_FR", "ISO8859", "oc_fr", "iso885915s", "oc_fr", "euros", "om_ET", "om_ets", "om_KE", "ISO8859", "om_kes", "or_IN", "or_ins", "os_RU", "os_rus", "pa_IN", "pa_ins", "pa_PK", "pa_pks", "pap_AN", "pap_ans", "pd_US", "ISO8859", "pd_DE", "ISO8859", "pd_des", "pd_de", "iso88591s", "pd_DE", "ISO8859", "pd_de", "iso885915s", "pd_de", "eurot", "pd_uss", "pd_us", "iso88591s", "pd_US", "ISO8859", "pd_us", "iso885915s", "pd_us", "euros", "ph_PH", "ISO8859", "ph_phs", "ph_ph", "iso88591s", "pl_PL", "ISO8859", "pl_pls", "pl_pl", "iso88592t", "polishs", "pt_PT", "ISO8859", "portugueses", "portuguese", "iso88591s", "pt_BR", "ISO8859", "portuguese_brazils", "portuguese_brazil", "8859t", "posixs", "posix", "utf2s", "pp_AN", "ISO8859", "pp_ans", "pp_an", "iso88591s", "ps_AF", "ps_aft", "pt_PT", "ISO8859", "iso885915t", "pt_brs", "pt_br", "88591s", "pt_br", "iso88591s", "pt_BR", "ISO8859", "pt_br", "iso885915s", "pt_br", "eurot", "pt_pts", "pt_pt", "88591s", "pt_pt", "iso88591s", "pt_pt", "iso885915s", "pt_pt", "iso885915", "euros", "pt_PT", "pt_pt", "euros", "pt_pt", "euros", "ro_RO", "ISO8859", "ro_ros", "ro_ro", "iso88592t", "romanians", "ru_RU", "ru_RU", "koi8rt", "ru_rus", "ru_RU", "CP1251s", "ru_ru", "cp1251s", "ru_RU", "ISO8859", "ru_ru", "iso88595s", "ru_ru", "koi8rs", "ru_ru", "microsoftcp1251s", "ru_UA", "ru_uas", "ru_UA", "CP1251s", "ru_ua", "cp1251s", "ru_ua", "koi8us", "ru_ua", "microsoftcp1251t", "rumaniant", "russians", "rw_RW", "ISO8859", "rw_rws", "rw_rw", "iso88591s", "sa_IN", "sa_ins", "sat_IN", "sat_ins", "sc_IT", "sc_its", "sd_IN", "sd_IN", "devanagaris", "devanagarit", "sd_ins", "sd_in", "devanagaris", "sd_in", "devanagari", "utf8s", "sd_PK", "sd_pks", "se_NO", "se_nos", "sr_RS", "latint", "serbocroatiant", "sr_CS", "ISO8859", "sh_ba", "iso88592", "bosnias", "sh_HR", "ISO8859", "sh_hrs", "sh_hr", "iso88592t", "sh_spt", "sh_yus", "shs_CA", "shs_cas", "si_LK", "si_lks", "sid_ET", "sid_ett", "sinhalas", "sk_SK", "ISO8859", "sk_sks", "sk_sk", "iso88592s", "sl_SI", "ISO8859", "sl_CS", "ISO8859", "sl_cst", "sl_sis", "sl_si", "iso88592t", "slovakt", "slovenet", "slovenians", "so_DJ", "ISO8859", "so_djs", "so_ET", "so_ets", "so_KE", "ISO8859", "so_kes", "so_SO", "ISO8859", "so_sos", "sr_CS", "ISO8859", "sp_yut", "spanishs", "spanish", "iso88591t", "spanish_spains", "spanish_spain", "8859s", "sq_AL", "ISO8859", "sq_als", "sq_al", "iso88592s", "sq_MK", "sq_mks", "sr_RS", "cyrillics", "latins", "sr_CS", "latins", "latns", "sr_CS", "sr_css", "sr_cs", "iso88592s", "sr_cs", "iso88592", "latns", "sr_cs", "iso88595s", "sr_cs", "latns", "sr_cs", "latns", "sr_ME", "sr_met", "sr_rss", "sr_rs", "latins", "sr_rs", "latnt", "sr_spt", "sr_yus", "sr_CS", "CP1251s", "sr_yu", "cp1251", "cyrillics", "sr_yu", "iso88592s", "sr_yu", "iso88595s", "sr_yu", "iso88595", "cyrillics", "sr_yu", "microsoftcp1251", "cyrillics", "sr_yu", "utf8s", "sr_yu", "cyrillics", "sr_yu", "cyrillics", "ss_ZA", "ISO8859", "ss_zas", "ss_za", "iso88591s", "st_ZA", "ISO8859", "st_zas", "st_za", "iso88591s", "sv_SE", "ISO8859", "sv_SE", "ISO8859", "iso885915s", "sv_FI", "ISO8859", "sv_fis", "sv_fi", "iso88591s", "sv_FI", "ISO8859", "sv_fi", "iso885915s", "sv_fi", "iso885915", "euros", "sv_FI", "sv_fi", "euros", "sv_fi", "eurot", "sv_ses", "sv_se", "88591s", "sv_se", "iso88591s", "sv_se", "iso885915s", "sv_se", "euros", "sw_KE", "sw_kes", "sw_TZ", "sw_tzt", "swedishs", "swedish", "iso88591s", "szl_PL", "szl_pls", "ta_IN", "TSCII", "ta_ins", "ta_in", "tsciis", "ta_in", "tscii0s", "ta_LK", "ta_lks", "te_IN", "te_ins", "tg_TJ", "tg_tjs", "tg_tj", "koi8cs", "th_TH", "ISO8859", "th_ths", "th_th", "iso885911s", "th_TH", "TIS620s", "th_th", "tactiss", "th_th", "tis620t", "thais", "ti_ER", "ti_ers", "ti_ET", "ti_ets", "tig_ER", "tig_ers", "tk_TM", "tk_tms", "tl_PH", "ISO8859", "tl_phs", "tl_ph", "iso88591s", "tn_ZA", "ISO8859", "tn_zas", "tn_za", "iso885915s", "tr_TR", "ISO8859", "tr_CY", "ISO8859", "tr_cyt", "tr_trs", "tr_tr", "iso88599s", "ts_ZA", "ISO8859", "ts_zas", "ts_za", "iso88591s", "tt_RU", "TATAR", "tt_rus", "tt_RU", "tt_ru", "koi8cs", "tt_ru", "tatarcyrs", "tt_RU", "iqtelifs", "tt_ru", "iqtelift", "turkishs", "turkish", "iso88599s", "ug_CN", "ug_cns", "uk_UA", "uk_uas", "uk_UA", "CP1251s", "uk_ua", "cp1251s", "uk_UA", "ISO8859", "uk_ua", "iso88595s", "uk_ua", "koi8us", "uk_ua", "microsoftcp1251s", "en_US", "univt", "universals", "universal", "ucs4s", "unm_US", "unm_uss", "ur_PK", "CP1256t", "ur_IN", "ur_int", "ur_pks", "ur_pk", "cp1256s", "ur_pk", "microsoftcp1256s", "uz_UZ", "uz_uzs", "uz_UZ", "ISO8859", "uz_uz", "iso88591s", "uz_uz", "cyrillics", "uz_uz", "cyrillics", "ve_ZA", "ve_zas", "vi_VN", "TCVNt", "vi_vns", "vi_vn", "tcvns", "vi_vn", "tcvn5712s", "vi_VN", "VISCIIs", "vi_vn", "visciis", "vi_vn", "viscii111s", "wa_BE", "ISO8859", "wa_bes", "wa_be", "iso88591s", "wa_BE", "ISO8859", "wa_be", "iso885915s", "wa_be", "iso885915", "euros", "wa_be", "euros", "wae_CH", "wae_chs", "wal_ET", "wal_ets", "wo_SN", "wo_sns", "xh_ZA", "ISO8859", "xh_zas", "xh_za", "iso88591s", "yi_US", "CP1255t", "yi_uss", "yi_us", "cp1255s", "yi_us", "microsoftcp1255s", "yo_NG", "yo_ngs", "yue_HK", "yue_hkt", "zh_CN", "gb2312t", "zh_cns", "zh_TW", "big5s", "zh_cn", "big5s", "zh_cn", "zh_CN", "gb18030s", "zh_cn", "gb18030s", "zh_cn", "gb2312s", "zh_CN", "zh_cn", "zh_HK", "big5hkscst", "zh_hks", "zh_HK", "big5s", "zh_hk", "big5s", "zh_hk", "big5hks", "zh_hk", "big5hkscss", "zh_SG", "GB2312t", "zh_sgs", "zh_SG", "zh_sg", "zh_tws", "zh_tw", "big5s", "zh_tw", "zh_tw", "euctws", "zu_ZA", "ISO8859", "zu_zas", "zu_za", "iso88591t", "af_ZAi6", "sq_ALi", "gsw_FRi", "am_ETi", "ar_SAi", "ar_IQi", "ar_EGi", "ar_LYi", "ar_DZi", "ar_MAi", "ar_TNi", "ar_OMi", "ar_YEi", "ar_SYi", "ar_JOi", "ar_LBi", "ar_KWi", "ar_AEi", "ar_BHi", "ar_QAi", "hy_AMi", "as_INiM", "az_AZi", "ba_RUim", "eu_ESi", "be_BYi", "bn_INiE", "bs_BAi", "br_FRi", "bg_BGi", "ca_ESi", "zh_CHSt", "zh_TWi", "zh_CNi", "zh_HKi", "zh_SGi", "zh_MOi", "zh_CHTi", "co_FRi", "hr_HRi", "hr_BAi", "cs_CZi", "da_DKi", "gbz_AFi", "div_MVie", "nl_NLi", "nl_BEi", "en_USi", "en_GBi", "en_AUi", "en_CAi", "en_NZi", "en_IEi", "en_ZAi", "en_JAi", "en_CBi", "en_BZi", "en_TTi", "en_ZWi", "en_PHi", "en_INi", "en_MYi", "et_EEi", "fo_FOi8", "fil_PHid", "fi_FIi", "fr_FRi", "fr_BEi", "fr_CAi", "fr_CHi", "fr_LUi", "fr_MCi", "fy_NLib", "gl_ESiV", "ka_GEi7", "de_DEi", "de_CHi", "de_ATi", "de_LUi", "de_LIi", "el_GRi", "kl_GLio", "gu_INiG", "ha_NGih", "he_ILi", "hi_INi9", "hu_HUi", "is_ISi", "id_IDi!", "iu_CAi", "ga_IEi", "it_ITi", "it_CHi", "ja_JPi", "kn_INiK", "kk_KZi", "kh_KHiS", "qut_GTi", "rw_RWi", "kok_INiW", "ko_KRi", "ky_KGi", "lo_LAiT", "lv_LVi&", "lt_LTi", "dsb_DEi", "lb_LUin", "mk_MKi", "ms_MYi", "ms_BNi", "ml_INiL", "mt_MTi", "mi_NZi", "arn_CLiz", "mr_INiN", "moh_CAi", "mn_MNiP", "mn_CNiP", "ne_NPia", "nb_NOi", "nn_NOi", "oc_FRi", "or_INiH", "ps_AFic", "fa_IRi", "pl_PLi", "pt_BRi", "pt_PTi", "pa_INiF", "quz_BOik", "quz_ECik", "quz_PEik", "ro_ROi", "rm_CHi", "ru_RUi", "smn_FIi", "smj_NOi", "smj_SEi", "se_NOi", "se_SEi", "se_FIi", "sms_FIi", "sma_NOi", "sma_SEi", "sa_INiO", "sr_SPi", "sr_BAi", "si_LKi", "ns_ZAil", "tn_ZAi2", "sk_SKi", "sl_SIi$", "es_ESi", "es_MXi", "es_GTi", "es_CRi", "es_PAi", "es_DOi", "es_VEi", "es_COi", "es_PEi", "es_ARi", "es_ECi", "es_CLi", "es_URi", "es_PYi", "es_BOi", "es_SVi", "es_HNi", "es_NIi", "es_PRi", "es_USi", "sw_KEiA", "sv_SEi", "sv_FIi", "syr_SYiZ", "tg_TJi", "tmz_DZi_", "ta_INiI", "tt_RUiD", "te_INiJ", "th_THi", "bo_BTiQ", "bo_CNiQ", "tr_TRi", "tk_TMiB", "ug_CNi", "uk_UAi", "wen_DEi", "ur_PKi", "ur_INi", "uz_UZiC", "vi_VNi", "cy_GBiR", "wo_SNi", "xh_ZAi4", "sah_RUi", "ii_CNix", "yo_NGij", "zu_ZAi5", "GHHqw", "GHHqt", "function", "globalst", "items", "categoriest", "locale", "_init_categories", "Locale", "defaults", "determined", "getdefaultlocale", "Language", "undefined", "Encoding", "Locale", "settings", "startup", "Language", "Encoding", "Locale", "settings", "after", "calling", "resetlocale", "setlocale", "LC_ALL", "support", "default", "locales&", "given", "environment", "variables", "Locale", "settings", "after", "calling", "setlocale", "LC_ALL", "langt", "nameR1", "locale", "_print_locale", "LC_MESSAGESt", "__main__s", "Locale", "aliasing", "Number", "formatting", "__doc__R", "encodings", "aliasest", "functoolsR", "unicodeR", "NameErrort", "objectt", "__all__R", "wrapsR", "compileRR", "floatR", "rangeR", "startswithR", "locale", "module", "logging", "__init__", "Logging", "package", "Python", "Based", "comments", "thereto", "python", "Copyright", "Vinay", "Sajip", "Rights", "Reserved", "simply", "import", "logging", "away!", "BASIC_FORMATt", "BufferingFormattert", "CRITICALt", "DEBUGt", "ERRORt", "FATALt", "FileHandlert", "Filtert", "Formattert", "Handlert", "INFOt", "LogRecordt", "Loggert", "LoggerAdaptert", "NOTSETt", "NullHandlert", "StreamHandlert", "WARNt", "WARNINGt", "addLevelNamet", "basicConfigt", "captureWarningst", "criticalt", "debugt", "disablet", "errort", "exceptiont", "fatalt", "getLevelNamet", "getLoggert", "getLoggerClasst", "infot", "makeLogRecordt", "setLoggerClasst", "warnt", "warnings&", "Vinay", "Sajip", "vinay_sajip", "productions", "February", "2010c", "Return", "frame", "object", "caller", "stack", "frame", "Exceptiont", "exc_infot", "tb_framet", "f_back", "logging", "__init__", "currentframe", "_getframec", "logging", "__init__", "lambda", "Return", "textual", "representation", "logging", "level", "level", "level", "predefined", "levels", "CRITICAL", "ERROR", "WARNING", "DEBUG", "corresponding", "string", "associated", "levels", "names", "using", "addLevelName", "associated", "level", "returned", "numeric", "value", "corresponding", "defined", "levels", "passed", "corresponding", "string", "representation", "returned", "Otherwise", "string", "Level", "level", "returned", "Level", "_levelNamest", "level", "logging", "__init__", "Associate", "levelName", "level", "converting", "levels", "during", "message", "formatting", "_acquireLockR", "_releaseLock", "levelName", "logging", "__init__", "Unknown", "level", "Level", "integer", "valid", "string", "isinstancet", "longt", "ValueErrort", "TypeError", "logging", "__init__", "_checkLevel", "Acquire", "module", "level", "serializing", "access", "shared", "should", "released", "_releaseLock", "_lockt", "acquire", "logging", "__init__", "pycR1", "Release", "module", "level", "acquired", "calling", "_acquireLock", "release", "logging", "__init__", "pycR2", "LogRecord", "instance", "represents", "event", "being", "logged", "LogRecord", "instances", "created", "every", "something", "logged", "contain", "information", "pertinent", "event", "being", "logged", "information", "passed", "which", "combined", "using", "create", "message", "field", "record", "record", "includes", "information", "record", "created", "source", "where", "logging", "exception", "information", "logged", "Initialize", "logging", "record", "interesting", "information", "Unknown", "modulei", "MainProcesst", "multiprocessingt", "getpidN", "timet", "namet", "lenR4", "collectionst", "Mappingt", "argsR", "levelnamet", "levelnot", "pathnamet", "patht", "basenamet", "filenamet", "splitextt", "moduleR9", "AttributeErrorR", "Nonet", "exc_textt", "linenot", "funcNamet", "createdR6", "msecst", "_startTimet", "relativeCreatedt", "logThreadst", "threadt", "get_identt", "threadingt", "current_threadt", "threadNamet", "logMultiprocessingt", "processNameR", "modulesR", "current_processt", "StandardErrort", "logProcessest", "hasattrRA", "process", "selfRC", "funct", "logging", "__init__", "__init__", "LogRecord", "logging", "__init__", "__str__4", "Return", "message", "LogRecord", "Return", "message", "LogRecord", "after", "merging", "supplied", "arguments", "message", "_unicodeR7", "basestringt", "UnicodeErrorRH", "logging", "__init__", "getMessage8", "__name__t", "__module__t", "__doc__RS", "logging", "__init__", "LogRecord", "whose", "attributes", "defined", "specified", "dictionary", "function", "useful", "converting", "logging", "event", "received", "socket", "connection", "which", "dictionary", "LogRecord", "instance", "__dict__t", "update", "dictR", "logging", "__init__", "pycR!", "Formatter", "instances", "convert", "LogRecord", "Formatters", "LogRecord", "constructed", "responsible", "converting", "LogRecord", "usually", "string", "which", "interpreted", "either", "human", "external", "system", "Formatter", "allows", "formatting", "string", "specified", "supplied", "default", "value", "message", "Formatter", "initialized", "format", "string", "which", "makes", "knowledge", "LogRecord", "attributes", "default", "value", "mentioned", "above", "makes", "message", "arguments", "formatted", "LogRecord", "message", "attribute", "Currently", "useful", "attributes", "LogRecord", "described", "logger", "logging", "channel", "levelno", "Numeric", "logging", "level", "message", "DEBUG", "WARNING", "ERROR", "CRITICAL", "levelname", "logging", "level", "message", "DEBUG", "WARNING", "ERROR", "CRITICAL", "pathname", "pathname", "source", "where", "logging", "issued", "available", "filename", "Filename", "portion", "pathname", "module", "Module", "portion", "filename", "lineno", "Source", "number", "where", "logging", "issued", "available", "funcName", "Function", "created", "LogRecord", "created", "return", "value", "asctime", "Textual", "LogRecord", "created", "msecs", "Millisecond", "portion", "creation", "relativeCreated", "milliseconds", "LogRecord", "created", "relative", "logging", "module", "loaded", "typically", "application", "startup", "thread", "Thread", "available", "threadName", "Thread", "available", "process", "Process", "available", "message", "result", "record", "getMessage", "computed", "record", "emitted", "Initialize", "formatter", "specified", "format", "strings", "Initialize", "formatter", "either", "specified", "format", "string", "default", "described", "above", "Allow", "specialized", "formatting", "optional", "datefmt", "argument", "omitted", "ISO8601", "format", "message", "_fmtt", "datefmt", "logging", "__init__", "pycRm", "Return", "creation", "specified", "LogRecord", "formatted", "method", "should", "called", "format", "formatter", "which", "wants", "formatted", "method", "overridden", "formatters", "provide", "specific", "requirement", "basic", "behaviour", "follows", "datefmt", "string", "specified", "strftime", "format", "creation", "record", "Otherwise", "ISO8601", "format", "resulting", "string", "returned", "function", "configurable", "function", "convert", "creation", "tuple", "default", "localtime", "change", "particular", "formatter", "instance", "converter", "attribute", "function", "signature", "localtime", "gmtime", "change", "formatters", "example", "logging", "times", "shown", "converter", "attribute", "Formatter", "class", "converterRW", "strftimeRX", "recordR", "logging", "__init__", "formatTime", "Format", "return", "specified", "exception", "information", "string", "default", "implementation", "traceback", "print_exception", "cStringIOt", "StringIOt", "tracebackt", "print_exceptionRS", "getvaluet", "close", "logging", "__init__", "formatException", "Check", "format", "creation", "record", "asctime", "logging", "__init__", "usesTime", "Format", "specified", "record", "record", "attribute", "dictionary", "operand", "string", "formatting", "operation", "which", "yields", "returned", "string", "Before", "formatting", "dictionary", "couple", "preparatory", "steps", "carried", "message", "attribute", "record", "computed", "using", "LogRecord", "getMessage", "formatting", "string", "determined", "usesTime", "formatTime", "called", "format", "event", "there", "exception", "information", "formatted", "using", "formatException", "appended", "message", "replace", "messageR", "asctimeRz", "UnicodeDecodeErrorRC", "decodeR", "getfilesystemencoding", "logging", "__init__", "format", "localtimeR", "logging", "__init__", "formatter", "suitable", "formatting", "number", "records", "Optionally", "specify", "formatter", "which", "format", "individual", "record", "linefmtt", "_defaultFormatter", "logging", "__init__", "pycRm", "Return", "header", "string", "specified", "records", "records", "logging", "__init__", "formatHeader", "Return", "footer", "string", "specified", "records", "logging", "__init__", "formatFooter", "Format", "specified", "records", "return", "result", "string", "logging", "__init__", "logging", "__init__", "Filter", "instances", "perform", "arbitrary", "filtering", "LogRecords", "Loggers", "Handlers", "optionally", "Filter", "instances", "filter", "records", "desired", "filter", "class", "allows", "events", "which", "below", "certain", "point", "logger", "hierarchy", "example", "filter", "initialized", "allow", "events", "logged", "loggers", "initialized", "empty", "string", "events", "passed", "Initialize", "filter", "Initialize", "logger", "which", "together", "children", "events", "allowed", "through", "filter", "specified", "allow", "every", "event", "logging", "__init__", "pycRm", "Determine", "specified", "record", "logged", "specified", "record", "logged", "Returns", "nonzero", "deemed", "appropriate", "record", "modified", "place", "logging", "__init__", "filter7", "logging", "__init__", "Filtererc", "class", "loggers", "handlers", "which", "allows", "share", "common", "Initialize", "filters", "empty", "filters", "logging", "__init__", "pycRm", "specified", "filter", "handler", "append", "logging", "__init__", "addFilterQ", "Remove", "specified", "filter", "handler", "remove", "logging", "__init__", "removeFilterX", "Determine", "record", "loggable", "consulting", "filters", "default", "allow", "record", "logged", "filter", "record", "dropped", "Returns", "value", "record", "dropped", "logging", "__init__", "logging", "__init__", "Remove", "handler", "reference", "internal", "cleanup", "_handlerListR", "handlers", "logging", "__init__", "_removeHandlerRefu", "handler", "internal", "cleanup", "using", "reference", "weakreft", "handler", "logging", "__init__", "_addHandlerRef", "Handler", "instances", "dispatch", "logging", "events", "specific", "destinations", "handler", "class", "placeholder", "which", "defines", "Handler", "interface", "Handlers", "optionally", "Formatter", "instances", "format", "records", "desired", "default", "formatter", "specified", "message", "determined", "record", "message", "logged", "Initializes", "instance", "basically", "setting", "formatter", "filter", "empty", "_nameR", "formatterR", "createLock", "logging", "__init__", "pycRm", "logging", "__init__", "get_name", "_handlersR2", "logging", "__init__", "set_name", "Acquire", "thread", "serializing", "access", "underlying", "RLockt", "lockRS", "logging", "__init__", "Acquire", "thread", "logging", "__init__", "Release", "thread", "logging", "__init__", "logging", "level", "handler", "logging", "__init__", "setLevel", "Format", "specified", "record", "formatter", "Otherwise", "default", "formatter", "module", "logging", "__init__", "whatever", "takes", "actually", "specified", "logging", "record", "version", "intended", "implemented", "subclasses", "raises", "NotImplementedError", "implemented", "Handler", "subclassesN", "NotImplementedError", "logging", "__init__", "Conditionally", "specified", "logging", "record", "Emission", "depends", "filters", "which", "added", "handler", "actual", "emission", "record", "acquisition", "release", "thread", "Returns", "whether", "filter", "passed", "record", "emission", "logging", "__init__", "handle", "formatter", "handler", "logging", "__init__", "setFormatter", "Ensure", "logging", "output", "flushed", "version", "nothing", "intended", "implemented", "subclasses", "logging", "__init__", "flush", "resources", "handler", "version", "removes", "handler", "internal", "handlers", "_handlers", "which", "handler", "lookup", "Subclasses", "should", "ensure", "called", "overridden", "close", "methods", "logging", "__init__", "Handle", "errors", "which", "occur", "during", "method", "should", "called", "handlers", "exception", "encountered", "during", "raiseExceptions", "false", "exceptions", "silently", "ignored", "mostly", "wanted", "logging", "system", "users", "about", "errors", "logging", "system", "interested", "application", "errors", "could", "however", "replace", "custom", "handler", "record", "which", "being", "processed", "passed", "method", "Logged", "raiseExceptionsR", "stderrR", "writeRO", "IOError", "logging", "__init__", "handleError", "propertyRC", "logging", "__init__", "handler", "class", "which", "writes", "logging", "records", "appropriately", "formatted", "stream", "class", "close", "stream", "stdout", "stderr", "Initialize", "handler", "stream", "specified", "stderr", "stream", "logging", "__init__", "pycRm", "Flushes", "stream", "logging", "__init__", "record", "formatter", "specified", "format", "record", "record", "written", "stream", "trailing", "newline", "exception", "information", "present", "formatted", "using", "traceback", "print_exception", "appended", "stream", "stream", "encoding", "attribute", "determine", "output", "stream", "encodingu", "unicodet", "getattrRS", "UnicodeEncodeErrort", "encodeR", "KeyboardInterruptt", "SystemExitR", "logging", "__init__", "logging", "__init__", "handler", "class", "which", "writes", "formatted", "logging", "records", "files", "specified", "stream", "logging", "codecsRS", "abspatht", "baseFilenamet", "modeR", "delayR", "_open", "logging", "__init__", "pycRm", "Closes", "stream", "logging", "__init__", "current", "original", "encoding", "Return", "resulting", "stream", "openR", "logging", "__init__", "record", "stream", "opened", "because", "delay", "specified", "constructor", "before", "calling", "superclass", "logging", "__init__", "logging", "__init__", "PlaceHolderc", "PlaceHolder", "instances", "Manager", "logger", "hierarchy", "place", "nodes", "which", "loggers", "defined", "class", "intended", "internal", "public", "Initialize", "specified", "logger", "being", "child", "placeholder", "loggerMap", "alogger", "logging", "__init__", "pycRm", "specified", "logger", "child", "placeholder", "logging", "__init__", "logging", "__init__", "class", "instantiating", "logger", "class", "should", "define", "__init__", "argument", "required", "__init__", "should", "Logger", "__init__", "logger", "derived", "logging", "Logger", "issubclassR9", "_loggerClass", "klass", "logging", "__init__", "Return", "class", "instantiating", "logger", "logging", "__init__", "Managerc", "There", "under", "normal", "circumstances", "Manager", "instance", "which", "holds", "hierarchy", "loggers", "Initialize", "manager", "logger", "hierarchy", "rootR", "emittedNoHandlerWarningt", "loggerDictRS", "loggerClass", "rootnode", "logging", "__init__", "pycRm", "logger", "specified", "channel", "creating", "doesn", "exist", "separated", "hierarchical", "similar", "PlaceHolder", "existed", "specified", "logger", "exist", "child", "replace", "created", "logger", "parent", "child", "references", "which", "pointed", "placeholder", "point", "logger", "logger", "string", "Unicodes", "managert", "_fixupChildrent", "_fixupParentsR2", "logging", "__init__", "class", "instantiating", "logger", "Manager", "logger", "derived", "logging", "Logger", "logging", "__init__", "Ensure", "there", "either", "loggers", "placeholders", "specified", "logger", "logger", "hierarchy", "rfindRS", "AssertionErrorR", "parent", "substrt", "logging", "__init__", "Ensure", "children", "placeholder", "connected", "specified", "logger", "keysR", "namelent", "logging", "__init__", "logging", "__init__", "Instances", "Logger", "class", "represent", "single", "logging", "channel", "logging", "channel", "indicates", "application", "Exactly", "defined", "application", "developer", "Since", "application", "number", "areas", "logging", "channels", "identified", "unique", "string", "Application", "areas", "nested", "input", "processing", "might", "include", "areas", "files", "files", "Gnumeric", "files", "cater", "natural", "nesting", "channel", "names", "organized", "namespace", "hierarchy", "where", "levels", "separated", "periods", "Python", "package", "namespace", "instance", "given", "above", "channel", "names", "might", "input", "upper", "level", "input", "input", "input", "levels", "There", "arbitrary", "limit", "depth", "nesting", "Initialize", "logger", "optional", "level", "propagateR", "disabled", "logging", "__init__", "pycRm", "logging", "level", "logger", "logging", "__init__", "severity", "DEBUG", "exception", "information", "keyword", "argument", "exc_info", "value", "logger", "debug", "Houston", "thorny", "problem", "exc_info", "isEnabledForR", "kwargs", "logging", "__init__", "severity", "exception", "information", "keyword", "argument", "exc_info", "value", "logger", "Houston", "interesting", "problem", "exc_info", "logging", "__init__", "severity", "WARNING", "exception", "information", "keyword", "argument", "exc_info", "value", "logger", "warning", "Houston", "problem", "exc_info", "logging", "__init__", "pycR$", "severity", "ERROR", "exception", "information", "keyword", "argument", "exc_info", "value", "logger", "error", "Houston", "major", "problem", "exc_info", "logging", "__init__", "Convenience", "method", "logging", "ERROR", "exception", "information", "logging", "__init__", "severity", "CRITICAL", "exception", "information", "keyword", "argument", "exc_info", "value", "logger", "critical", "Houston", "major", "disaster", "exc_info", "logging", "__init__", "integer", "severity", "level", "exception", "information", "keyword", "argument", "exc_info", "value", "logger", "level", "mysterious", "problem", "exc_info", "level", "integerN", "logging", "__init__", "stack", "frame", "caller", "source", "number", "function", "unknown", "unknown", "function", "f_codeN", "unknown", "unknown", "function", "normcaset", "co_filenamet", "_srcfilet", "f_linenot", "co_name", "logging", "__init__", "findCaller", "factory", "method", "which", "overridden", "subclasses", "create", "specialized", "LogRecords", "Attempt", "overwrite", "LogRecordN", "KeyError", "lnoRD", "extraR", "logging", "__init__", "makeRecord", "level", "logging", "routine", "which", "creates", "LogRecord", "calls", "handlers", "logger", "handle", "record", "unknown", "unknown", "function", "unknown", "unknown", "function", "unknown", "unknown", "function", "tupleR", "logging", "__init__", "handlers", "specified", "record", "method", "unpickled", "records", "received", "socket", "those", "created", "locally", "Logger", "level", "filtering", "applied", "callHandlers", "logging", "__init__", "specified", "handler", "logger", "logging", "__init__", "addHandler", "Remove", "specified", "handler", "logger", "logging", "__init__", "removeHandler", "record", "relevant", "handlers", "through", "handlers", "logger", "parents", "logger", "hierarchy", "handler", "found", "output", "error", "message", "stderr", "searching", "hierarchy", "whenever", "logger", "propagate", "attribute", "found", "logger", "whose", "handlers", "called", "handlers", "could", "found", "logger", "foundR", "logging", "__init__", "effective", "level", "logger", "through", "logger", "parents", "logger", "hierarchy", "looking", "logging", "level", "Return", "first", "found", "logger", "logging", "__init__", "getEffectiveLevelB", "logger", "enabled", "level", "level", "logging", "__init__", "logger", "which", "descendant", "convenience", "method", "logging", "getLogger", "getChild", "logging", "getLogger", "useful", "example", "parent", "logger", "named", "using", "__name__", "rather", "literal", "string", "joinRC", "suffix", "logging", "__init__", "getChildX", "logging", "__init__", "RootLoggerc", "logger", "different", "other", "logger", "except", "logging", "level", "there", "instance", "hierarchy", "Initialize", "logger", "logging", "__init__", "pycRm", "logging", "__init__", "adapter", "loggers", "which", "makes", "easier", "specify", "contextual", "information", "logging", "output", "Initialize", "adapter", "logger", "object", "which", "provides", "contextual", "information", "constructor", "signature", "allows", "stacking", "LoggerAdapters", "desired", "effectively", "keyword", "arguments", "shown", "following", "example", "adapter", "LoggerAdapter", "someLogger", "logging", "__init__", "pycRm", "Process", "logging", "message", "keyword", "arguments", "passed", "logging", "insert", "contextual", "information", "either", "manipulate", "message", "itself", "keyword", "Return", "message", "kwargs", "modified", "needs", "Normally", "override", "method", "LoggerAdapter", "subclass", "specific", "needs", "logging", "__init__", "pycRh", "Delegate", "debug", "underlying", "logger", "after", "adding", "contextual", "information", "adapter", "instance", "logging", "__init__", "Delegate", "underlying", "logger", "after", "adding", "contextual", "information", "adapter", "instance", "logging", "__init__", "Delegate", "warning", "underlying", "logger", "after", "adding", "contextual", "information", "adapter", "instance", "logging", "__init__", "pycR$", "Delegate", "error", "underlying", "logger", "after", "adding", "contextual", "information", "adapter", "instance", "logging", "__init__", "Delegate", "exception", "underlying", "logger", "after", "adding", "contextual", "information", "adapter", "instance", "logging", "__init__", "Delegate", "critical", "underlying", "logger", "after", "adding", "contextual", "information", "adapter", "instance", "logging", "__init__", "Delegate", "underlying", "logger", "after", "adding", "contextual", "information", "adapter", "instance", "logging", "__init__", "underlying", "logger", "enabled", "specified", "level", "logging", "__init__", "logging", "__init__", "levelname", "message", "basic", "configuration", "logging", "system", "function", "nothing", "logger", "already", "handlers", "configured", "convenience", "method", "intended", "simple", "scripts", "configuration", "logging", "package", "default", "behaviour", "create", "StreamHandler", "which", "writes", "stderr", "formatter", "using", "BASIC_FORMAT", "format", "string", "handler", "logger", "number", "optional", "keyword", "arguments", "specified", "which", "alter", "default", "behaviour", "filename", "Specifies", "FileHandler", "created", "using", "specified", "filename", "rather", "StreamHandler", "filemode", "Specifies", "filename", "specified", "filemode", "unspecified", "defaults", "format", "specified", "format", "string", "handler", "datefmt", "specified", "format", "level", "logger", "level", "specified", "level", "stream", "specified", "stream", "initialize", "StreamHandler", "argument", "incompatible", "filename", "present", "stream", "ignored", "could", "specify", "stream", "created", "using", "filename", "rather", "passing", "filename", "However", "should", "remembered", "StreamHandler", "close", "stream", "since", "using", "stdout", "stderr", "whereas", "FileHandler", "closes", "stream", "handler", "closed", "filemodeR", "logging", "__init__", "Return", "logger", "specified", "creating", "necessary", "specified", "return", "logger", "logging", "__init__", "message", "severity", "CRITICAL", "logger", "logging", "__init__", "message", "severity", "ERROR", "logger", "logging", "__init__", "message", "severity", "ERROR", "logger", "exception", "information", "logging", "__init__", "message", "severity", "WARNING", "logger", "logging", "__init__", "pycR$", "message", "severity", "logger", "logging", "__init__", "message", "severity", "DEBUG", "logger", "logging", "__init__", "integer", "severity", "level", "logger", "logging", "__init__", "Disable", "logging", "calls", "severity", "level", "below", "logging", "__init__", "Perform", "cleanup", "actions", "logging", "system", "flushing", "buffers", "Should", "called", "application", "reversedR", "handlerListR", "logging", "__init__", "shutdownu", "handler", "nothing", "intended", "avoid", "handlers", "could", "found", "logger", "warning", "important", "library", "which", "contain", "events", "library", "configure", "logging", "warning", "might", "produced", "avoid", "library", "developer", "simply", "needs", "instantiate", "NullHandler", "level", "logger", "library", "module", "package", "logging", "__init__", "logging", "__init__", "logging", "__init__", "logging", "__init__", "Implementation", "showwarnings", "which", "redirects", "logging", "which", "first", "check", "parameter", "specified", "delegate", "original", "warnings", "implementation", "showwarning", "Otherwise", "warnings", "formatwarning", "resulting", "string", "warnings", "logger", "named", "warnings", "level", "logging", "WARNING", "warningss", "_warnings_showwarningt", "warningst", "formatwarningR", "categoryRO", "filet", "lineR", "logging", "__init__", "_showwarning", "capture", "redirect", "warnings", "logging", "package", "capture", "False", "ensure", "warnings", "redirected", "logging", "their", "original", "destinations", "showwarningR", "capture", "logging", "__init__", "__all__R", "ImportErrorRS", "__author__t", "__status__t", "__version__t", "__date__R", "TrueRo", "NameErrort", "FalseR", "__code__R", "objectR", "WeakValueDictionaryR", "atexitt", "registerR", "logging", "__init__", "module", "ntpath", "Common", "pathname", "manipulations", "WindowsNT", "version", "Instead", "importing", "module", "directly", "import", "refer", "module", "_unicodet", "normcaset", "isabst", "joint", "splitdrivet", "splitt", "splitextt", "basenamet", "dirnamet", "commonprefixt", "getsizet", "getmtimet", "getatimet", "getctimet", "islinkt", "existst", "lexistst", "isdirt", "isfilet", "ismountt", "walkt", "expandusert", "expandvarst", "normpatht", "abspatht", "splitunct", "curdirt", "pardirt", "pathsept", "defpatht", "altsept", "extsept", "devnullt", "realpatht", "supports_unicode_filenamest", "relpatht", "Windowst", "Normalize", "pathname", "Makes", "characters", "lowercase", "slashes", "backslashes", "replacet", "lower", "ntpath", "whether", "absolutei", "ntpath", "pathname", "components", "inserting", "needed", "patht", "pathst", "result_drivet", "result_patht", "p_drivet", "p_path", "ntpath", "Split", "pathname", "drive", "sharepoint", "relative", "specifiers", "Returns", "tuple", "drive_or_unc", "either", "empty", "assign", "result", "splitdrive", "always", "result", "result", "contained", "drive", "letter", "drive_or_unc", "contain", "everything", "including", "colon", "splitdrive", "returns", "contained", "drive_or_unc", "contain", "share", "including", "fourth", "directory", "separator", "character", "splitdrive", "computer", "returns", "computer", "Paths", "cannot", "contain", "drive", "letter", "normpt", "indext", "index2", "ntpath", "Split", "pathname", "mount", "point", "relative", "specifiers", "Return", "tuple", "either", "empty", "empty", "mount", "similar", "using", "backslashes", "always", "input", "Paths", "containing", "drive", "letters", "never", "firstTwoR", "ntpath", "Split", "pathname", "Return", "tuple", "where", "everything", "after", "final", "slash", "Either", "empty", "headt", "tailt", "head2", "ntpath", "genericpatht", "_splitextR", "ntpath", "Returns", "final", "component", "pathnamei", "ntpath", "Returns", "directory", "component", "pathnamei", "ntpath", "symbolic", "WindowsNT", "always", "returns", "false", "False", "ntpath", "whether", "mount", "point", "defined", "drive", "restR5", "ntpath", "Directory", "callback", "function", "directory", "directory", "rooted", "including", "itself", "excluding", "dirname", "fnames", "dirname", "directory", "fnames", "names", "files", "subdirectories", "dirname", "excluding", "modify", "fnames", "place", "slice", "assignment", "recurse", "subdirectories", "whose", "names", "remain", "fnames", "implement", "filter", "impose", "specific", "order", "visiting", "semantics", "defined", "required", "beyond", "always", "passed", "filename", "pattern", "mutable", "object", "designed", "accumulate", "statistics", "Passing", "common", "removed", "favor", "stackleveli", "warningst", "warnpy3kt", "listdirt", "errorR", "funct", "namest", "ntpath", "Expand", "constructs", "$HOME", "unknown", "nothing", "HOMEt", "USERPROFILEt", "HOMEPATHt", "HOMEDRIVER", "environt", "KeyErrorR", "userhomet", "drive", "ntpath", "Expand", "shell", "variables", "forms", "Unknown", "variables", "unchanged", "encodet", "decode", "encoding", "ntpath", "getenvQ", "ntpath", "pycRc", "stringt", "ascii_letterst", "digitst", "isinstanceR", "getfilesystemencodingR8", "ValueErrorRY", "varcharsRc", "pathlent", "ntpath", "Normalize", "eliminating", "double", "slashes", "startswithR", "lstripR", "endswitht", "appendR", "backslasht", "prefixt", "compsR", "ntpath", "_getfullpathnamec", "Return", "absolute", "version", "getcwdut", "getcwdR", "ntpath", "Return", "absolute", "version", "WindowsErrorRi", "ntpath", "getwindowsversioni", "boolR", "absRw", "is_unct", "ntpath", "_abspath_split", "Return", "relative", "version", "paths", "specifieds", "Cannot", "paths", "start", "drive", "start", "drive", "startt", "start_is_unct", "start_prefixt", "start_listt", "path_is_unct", "path_prefixt", "path_listR", "rel_list", "ntpath", "_isdir", "__doc__RK", "statRC", "__all__R", "builtin_module_namesR", "ImportErrorR", "hasattrR", "ntpath", "module", "opcode", "opcode", "module", "potentially", "shared", "between", "other", "modules", "which", "operate", "bytecodes", "peephole", "optimizers", "cmp_opt", "hasconstt", "hasnamet", "hasjrelt", "hasjabst", "haslocalt", "hascomparet", "hasfreet", "opnamet", "opmapt", "HAVE_ARGUMENTt", "EXTENDED_ARGt", "exception", "matcht", "namet", "opcode", "def_op", "append", "opcode", "name_op", "opcode", "jrel_op", "opcode", "jabs_op", "STOP_CODEi", "POP_TOPi", "ROT_TWOi", "ROT_THREEi", "DUP_TOPi", "ROT_FOURi", "UNARY_POSITIVEi", "UNARY_NEGATIVEi", "UNARY_NOTi", "UNARY_CONVERTi", "UNARY_INVERTi", "BINARY_POWERi", "BINARY_MULTIPLYi", "BINARY_DIVIDEi", "BINARY_MODULOi", "BINARY_ADDi", "BINARY_SUBTRACTi", "BINARY_SUBSCRi", "BINARY_FLOOR_DIVIDEi", "BINARY_TRUE_DIVIDEi", "INPLACE_FLOOR_DIVIDEi", "INPLACE_TRUE_DIVIDEi", "SLICE", "SLICE", "SLICE", "SLICE", "STORE_SLICE", "STORE_SLICE", "STORE_SLICE", "STORE_SLICE", "DELETE_SLICE", "DELETE_SLICE", "DELETE_SLICE", "DELETE_SLICE", "STORE_MAPi6", "INPLACE_ADDi7", "INPLACE_SUBTRACTi8", "INPLACE_MULTIPLYi9", "INPLACE_DIVIDEi", "INPLACE_MODULOi", "STORE_SUBSCRi", "DELETE_SUBSCRi", "BINARY_LSHIFTi", "BINARY_RSHIFTi", "BINARY_ANDi", "BINARY_XORiA", "BINARY_ORiB", "INPLACE_POWERiC", "GET_ITERiD", "PRINT_EXPRiF", "PRINT_ITEMiG", "PRINT_NEWLINEiH", "PRINT_ITEM_TOiI", "PRINT_NEWLINE_TOiJ", "INPLACE_LSHIFTiK", "INPLACE_RSHIFTiL", "INPLACE_ANDiM", "INPLACE_XORiN", "INPLACE_ORiO", "BREAK_LOOPiP", "WITH_CLEANUPiQ", "LOAD_LOCALSiR", "RETURN_VALUEiS", "IMPORT_STARiT", "EXEC_STMTiU", "YIELD_VALUEiV", "POP_BLOCKiW", "END_FINALLYiX", "BUILD_CLASSiY", "STORE_NAMEt", "DELETE_NAMEi", "UNPACK_SEQUENCEi", "FOR_ITERi", "LIST_APPENDi", "STORE_ATTRi_", "DELETE_ATTRi", "STORE_GLOBALia", "DELETE_GLOBALib", "DUP_TOPXic", "LOAD_CONSTid", "LOAD_NAMEie", "BUILD_TUPLEif", "BUILD_LISTig", "BUILD_SETih", "BUILD_MAPii", "LOAD_ATTRij", "COMPARE_OPik", "IMPORT_NAMEil", "IMPORT_FROMim", "JUMP_FORWARDin", "JUMP_IF_FALSE_OR_POPio", "JUMP_IF_TRUE_OR_POPip", "JUMP_ABSOLUTEiq", "POP_JUMP_IF_FALSEir", "POP_JUMP_IF_TRUEis", "LOAD_GLOBALit", "CONTINUE_LOOPiw", "SETUP_LOOPix", "SETUP_EXCEPTiy", "SETUP_FINALLYiz", "LOAD_FASTi", "STORE_FASTi", "DELETE_FASTi", "RAISE_VARARGSi", "CALL_FUNCTIONi", "MAKE_FUNCTIONi", "BUILD_SLICEi", "MAKE_CLOSUREi", "LOAD_CLOSUREi", "LOAD_DEREFi", "STORE_DEREFi", "CALL_FUNCTION_VARi", "CALL_FUNCTION_KWi", "CALL_FUNCTION_VAR_KWi", "SETUP_WITHi", "SET_ADDi", "MAP_ADDi", "exception", "matchR", "__doc__t", "__all__R", "rangeR", "opcode", "module", "optparse", "powerful", "extensible", "option", "parser", "gward", "python", "Originally", "distributed", "Optik", "support", "optik", "users", "lists", "sourceforge", "mailing", "lists", "sourceforge", "lists", "listinfo", "optik", "users", "Simple", "usage", "example", "optparse", "import", "OptionParser", "parser", "OptionParser", "parser", "add_option", "filename", "write", "report", "metavar", "parser", "add_option", "quiet", "action", "store_false", "verbose", "default", "print", "status", "messages", "stdout", "options", "parser", "parse_args", "Optiont", "make_optiont", "SUPPRESS_HELPt", "SUPPRESS_USAGEt", "Valuest", "OptionContainert", "OptionGroupt", "OptionParsert", "HelpFormattert", "IndentedHelpFormattert", "TitledHelpFormattert", "OptParseErrort", "OptionErrort", "OptionConflictErrort", "OptionValueErrort", "BadOptionErrors", "Copyright", "Gregory", "rights", "reserved", "Copyright", "Python", "Software", "Foundation", "rights", "reserved", "Redistribution", "source", "binary", "forms", "without", "modification", "permitted", "provided", "following", "conditions", "Redistributions", "source", "retain", "above", "copyright", "notice", "conditions", "following", "disclaimer", "Redistributions", "binary", "reproduce", "above", "copyright", "notice", "conditions", "following", "disclaimer", "documentation", "other", "materials", "provided", "distribution", "Neither", "author", "names", "contributors", "endorse", "promote", "products", "derived", "software", "without", "specific", "prior", "written", "permission", "SOFTWARE", "PROVIDED", "COPYRIGHT", "HOLDERS", "CONTRIBUTORS", "EXPRESS", "IMPLIED", "WARRANTIES", "INCLUDING", "LIMITED", "IMPLIED", "WARRANTIES", "MERCHANTABILITY", "FITNESS", "PARTICULAR", "PURPOSE", "DISCLAIMED", "EVENT", "SHALL", "AUTHOR", "CONTRIBUTORS", "LIABLE", "DIRECT", "INDIRECT", "INCIDENTAL", "SPECIAL", "EXEMPLARY", "CONSEQUENTIAL", "DAMAGES", "INCLUDING", "LIMITED", "PROCUREMENT", "SUBSTITUTE", "GOODS", "SERVICES", "PROFITS", "BUSINESS", "INTERRUPTION", "HOWEVER", "CAUSED", "THEORY", "LIABILITY", "WHETHER", "CONTRACT", "STRICT", "LIABILITY", "INCLUDING", "NEGLIGENCE", "OTHERWISE", "ARISING", "SOFTWARE", "ADVISED", "POSSIBILITY", "DAMAGE", "__class__t", "__name__t", "optparse", "_reprO", "gettextc", "message", "optparse", "optparse", "__init__b", "optparse", "__str__e", "__module__R", "optparse", "Raised", "Option", "instance", "created", "invalid", "inconsistent", "arguments", "option_id", "option", "optparse", "option", "optparse", "__doc__R", "optparse", "Raised", "conflicting", "options", "added", "OptionParser", "optparse", "Raised", "invalid", "option", "value", "encountered", "command", "optparse", "Raised", "invalid", "option", "command", "opt_str", "optparse", "option", "optparse", "optparse", "AmbiguousOptionErrorc", "Raised", "ambiguous", "option", "command", "possibilities", "optparse", "ambiguous", "option", "joinR", "optparse", "optparse", "pycR!", "Abstract", "class", "formatting", "option", "OptionParser", "instances", "should", "HelpFormatter", "subclasses", "formatting", "default", "IndentedHelpFormatter", "Instance", "attributes", "parser", "OptionParser", "controlling", "OptionParser", "instance", "indent_increment", "number", "columns", "indent", "nesting", "level", "max_help_position", "maximum", "starting", "column", "option", "help_position", "calculated", "starting", "column", "option", "initially", "maximum", "width", "total", "number", "columns", "output", "constructor", "value", "taken", "$COLUMNS", "environment", "variable", "level", "current", "indentation", "level", "current_indent", "current", "indentation", "level", "columns", "help_width", "number", "columns", "available", "option", "calculated", "default_tag", "replace", "option", "default", "value", "default", "default", "false", "value", "disable", "default", "value", "expansion", "option_strings", "Option", "Option", "instances", "snippet", "explaining", "syntax", "option", "fFILE", "_short_opt_fmt", "format", "string", "controlling", "short", "options", "values", "printed", "either", "fFILE", "because", "those", "syntaxes", "Optik", "supports", "_long_opt_fmt", "similar", "options", "either", "nonec", "COLUMNSiP", "defaults", "Nonet", "parsert", "indent_incrementt", "environt", "KeyErrort", "ValueErrort", "widtht", "help_positiont", "max_help_positiont", "current_indentt", "levelt", "help_widtht", "short_firstt", "default_tagt", "option_stringst", "_short_opt_fmtt", "_long_opt_fmt", "optparse", "optparse", "set_parser", "invalid", "metavar", "delimiter", "short", "options", "delim", "optparse", "set_short_opt_delimiter", "invalid", "metavar", "delimiter", "options", "optparse", "set_long_opt_delimiter", "optparse", "indent", "Indent", "decreased", "below", "AssertionErrorR4", "optparse", "dedent", "subclasses", "implement", "NotImplementedError", "usage", "optparse", "format_usage", "subclasses", "implement", "heading", "optparse", "format_heading", "Format", "paragraph", "inclusion", "output", "current", "indentation", "level", "initial_indentt", "subsequent_indent", "textwrapt", "textt", "text_widthRB", "optparse", "_format_text", "description", "optparse", "format_description", "epilog", "optparse", "format_epilog", "helpt", "defaultst", "destt", "NO_DEFAULTt", "NO_DEFAULT_VALUEt", "replaceR", "default_value", "optparse", "expand_default", "appendRU", "wrapR5", "extendR", "resultt", "optst", "opt_widtht", "indent_firstt", "help_textt", "help_linest", "optparse", "format_option", "option_listt", "format_option_stringsR8", "option_groupsRD", "max_lent", "stringst", "group", "optparse", "store_option_stringsE", "Return", "comma", "separated", "option", "strings", "metavariables", "takes_valuet", "metavarRX", "uppert", "_short_optsR9", "_long_optsR", "soptt", "short_optst", "loptt", "long_optsRc", "optparse", "pycRk", "optparse", "Format", "indented", "section", "bodies", "optparse", "Usage", "optparse", "pycRG", "optparse", "pycRI", "optparse", "Format", "underlined", "section", "headers", "optparse", "Usage", "optparse", "pycRG", "optparse", "pycRI", "optparse", "lower", "typet", "radix", "optparse", "_parse_num", "optparse", "_parse_int", "optparse", "_parse_long", "integerR", "integerR", "floating", "pointt", "floatt", "complexc", "option", "invalid", "value", "_builtin_cvtR", "valuet", "optparse", "check_builtin", "option", "invalid", "choice", "choose", "choicesR", "reprR", "optparse", "check_choice", "DEFAULTc", "Instance", "attributes", "_short_opts", "string", "_long_opts", "string", "action", "string", "string", "string", "default", "nargs", "const", "choices", "string", "callback", "function", "callback_args", "callback_kwargs", "string", "string", "metavar", "string", "actionR", "defaultt", "nargst", "constR", "callbackt", "callback_argst", "callback_kwargsRU", "storet", "store_constt", "store_truet", "store_falseR_", "append_constt", "countt", "versiont", "stringR", "choicec", "_check_opt_stringst", "_set_opt_stringst", "_set_attrst", "CHECK_METHODS", "attrst", "checker", "optparse", "least", "option", "string", "supplied", "filterR&", "TypeError", "optparse", "invalid", "option", "string", "least", "characters", "longi", "invalid", "short", "option", "string", "invalid", "option", "string", "start", "followed", "optparse", "invalid", "keyword", "arguments", "ATTRSt", "setattrRY", "keyst", "sortR", "optparse", "invalid", "action", "ACTIONSR", "optparse", "_check_actionv", "invalid", "option", "supply", "action", "ALWAYS_TYPED_ACTIONSR", "__builtin__t", "typest", "TypeTypet", "hasattrt", "getattrR", "TYPESR", "TYPED_ACTIONS", "optparse", "_check_type", "supply", "choices", "choice", "choices", "strings", "supplied", "supply", "choices", "TupleTypet", "ListTypeR", "split", "optparse", "_check_choice", "STORE_ACTIONSR", "optparse", "_check_dest", "const", "supplied", "action", "CONST_ACTIONSR", "optparse", "_check_const", "nargs", "supplied", "action", "optparse", "_check_nargs", "__call__s", "callback", "callable", "callback_args", "supplied", "tuple", "callback_kwargs", "supplied", "callback", "supplied", "callback", "options", "callback_args", "supplied", "callback", "options0", "callback_kwargs", "supplied", "callback", "option", "DictType", "optparse", "_check_callback", "optparse", "optparse", "pycRr", "optparse", "get_opt_string", "TYPE_CHECKERRW", "optparse", "check_value", "tuple", "optparse", "convert_value", "take_actionR", "valuesR", "optparse", "process", "unknown", "action", "Truet", "Falset", "ensure_valueR_", "print_helpt", "exitt", "print_versionR", "argst", "kwargs", "optparse", "__repr__Rr", "optparse", "SUPPRESSt", "HELPt", "USAGEc", "isinstanceR", "StringTypet", "UnicodeType", "optparse", "isbasestring", "basestring", "optparse", "itemsR", "optparse", "__dict__", "optparse", "other", "optparse", "__cmp__P", "Update", "option", "values", "arbitrary", "dictionary", "already", "corresponding", "attribute", "without", "corresponding", "attribute", "silently", "ignored", "dirR&", "dictR", "optparse", "_update_carefulX", "Update", "option", "values", "arbitrary", "dictionary", "using", "dictionary", "regardless", "whether", "corresponding", "attribute", "update", "optparse", "_update_loosee", "carefult", "looses", "invalid", "update", "optparse", "_updatem", "__import__t", "modulesR", "modnameR", "optparse", "read_moduleu", "execfileR", "filenameR", "optparse", "read_filez", "optparse", "optparse", "Abstract", "class", "Class", "attributes", "standard_option_list", "Option", "standard", "options", "accepted", "instances", "parser", "class", "intended", "overridden", "subclasses", "Instance", "attributes", "option_list", "Option", "Option", "objects", "contained", "OptionContainer", "_short_opt", "string", "Option", "dictionary", "mapping", "short", "option", "strings", "Option", "instances", "implement", "Option", "multiple", "short", "option", "strings", "appear", "dictionary", "multiple", "times", "_long_opt", "string", "Option", "dictionary", "mapping", "option", "strings", "exclude", "Option", "instances", "implement", "Again", "given", "Option", "occur", "multiple", "times", "dictionary", "defaults", "string", "dictionary", "mapping", "option", "destination", "names", "default", "values", "destination", "These", "mappings", "common", "shared", "components", "controlling", "OptionParser", "where", "initially", "created", "_create_option_listt", "option_classt", "set_conflict_handlert", "set_description", "conflict_handlerRQ", "optparse", "_short_optt", "_long_optRV", "optparse", "_create_option_mappings", "optparse", "_share_option_mappings", "errort", "resolves$", "invalid", "conflict_resolution", "value", "handler", "optparse", "optparse", "optparse", "get_description", "OptionParser", "destroy", "optparse", "destroy", "conflicting", "option", "string", "startswitht", "removet", "containerRj", "conflict_optsRn", "c_option", "optparse", "_check_conflict", "add_option", "Option", "add_option", "opt_str", "kwarg", "Option", "instance", "invalid", "argumentsN", "StringTypesR", "optparse", "add_option", "optparse", "add_options", "optparse", "get_option", "optparse", "has_option", "option", "optparse", "remove_option", "formatterRb", "optparse", "format_option_help", "optparse", "pycRR", "optparse", "format_help8", "optparse", "title", "optparse", "optparse", "optparse", "set_titleM", "OptionParser", "destroy", "optparse", "optparse", "optparse", "Class", "attributes", "standard_option_list", "Option", "standard", "options", "accepted", "instances", "parser", "class", "intended", "overridden", "subclasses", "Instance", "attributes", "usage", "string", "usage", "string", "program", "Before", "displayed", "expanded", "program", "basename", "string", "current", "program", "override", "basename", "description", "string", "paragraph", "giving", "brief", "overview", "program", "optparse", "reformats", "paragraph", "current", "terminal", "width", "prints", "requests", "after", "usage", "before", "options", "epilog", "string", "paragraph", "print", "after", "option", "option_groups", "OptionGroup", "option", "groups", "parser", "option", "groups", "irrelevant", "parsing", "command", "useful", "generating", "allow_interspersed_args", "positional", "arguments", "interspersed", "options", "Assuming", "single", "argument", "command", "ablah", "interpreted", "ablah", "false", "command", "would", "interpreted", "ablah", "processing", "options", "first", "option", "argument", "tradition", "followed", "Python", "getopt", "module", "Getopt", "other", "argument", "parsing", "libraries", "generally", "annoying", "users", "process_default_values", "option", "default", "values", "processed", "similarly", "option", "values", "command", "passed", "checking", "function", "option", "default", "value", "string", "really", "matters", "defined", "custom", "types", "955889", "false", "restore", "behaviour", "Optik", "earlier", "rargs", "string", "argument", "currently", "being", "parsed", "parse_args", "active", "continually", "trimmed", "consume", "arguments", "Mainly", "there", "benefit", "callback", "options", "largs", "string", "leftover", "arguments", "skipped", "while", "parsing", "options", "allow_interspersed_args", "false", "always", "empty", "values", "Values", "option", "values", "currently", "being", "accumulated", "parse_args", "active", "mainly", "callbacks", "Because", "rargs", "largs", "values", "attributes", "OptionParser", "thread", "perverse", "reason", "parse", "command", "arguments", "simultaneously", "different", "threads", "different", "OptionParser", "instances", "add_help", "set_usaget", "progR", "allow_interspersed_argst", "process_default_valuesR&", "_populate_option_listt", "_init_parsing_state", "add_help_optionR", "optparse", "Declare", "OptionParser", "cleans", "reference", "cycles", "OptionParser", "objects", "referenced", "garbage", "collected", "promptly", "After", "calling", "destroy", "OptionParser", "unusable", "optparse", "optparse", "helpR", "message", "optparse", "_add_help_option", "versionR", "program", "version", "number", "optparse", "_add_version_option", "standard_option_listR", "optparse", "rargst", "largsR", "optparse", "pycR&", "options", "usage", "optparse", "pycR!", "parsing", "first", "option", "allowing", "interspersing", "switches", "command", "arguments", "default", "behavior", "disable_interspersed_args", "class", "documentation", "description", "attribute", "allow_interspersed_args", "optparse", "enable_interspersed_args", "parsing", "first", "option", "command", "processor", "which", "another", "command", "options", "these", "options", "confused", "optparse", "disable_interspersed_args", "optparse", "set_process_default_values", "optparse", "set_default", "optparse", "set_defaults", "optionsRp", "optparse", "_get_all_options!", "copyR3", "optparse", "get_default_values", "OptionGroup", "instance", "invalid", "OptionGroup", "wrong", "parser", "invalid", "arguments", "optparse", "add_option_group8", "optparse", "get_option_groupH", "optparse", "_get_argsR", "parse_args", "string", "values", "Values", "values", "Values", "string", "Parse", "command", "options", "found", "default", "errors", "result", "error", "which", "default", "prints", "usage", "message", "stderr", "calls", "error", "message", "success", "returns", "values", "where", "values", "Values", "instance", "option", "values", "arguments", "after", "parsing", "options", "_process_argsR", "check_values", "stopt", "optparse", "parse_argsX", "check_values", "values", "Values", "string", "values", "Values", "string", "Check", "supplied", "option", "values", "leftover", "arguments", "valid", "Returns", "option", "values", "leftover", "arguments", "possibly", "adjusted", "possibly", "completely", "whatever", "Default", "implementation", "returns", "passed", "values", "subclasses", "override", "desired", "optparse", "_process_args", "largs", "string", "rargs", "string", "values", "Values", "Process", "command", "arguments", "populate", "values", "consuming", "options", "arguments", "rargs", "allow_interspersed_args", "false", "first", "option", "argument", "accumulate", "interspersed", "option", "arguments", "largs", "_process_long_optR", "_process_short_optsR", "optparse", "_match_long_opt", "string", "string", "Determine", "which", "option", "string", "matches", "which", "unambiguous", "abbreviation", "Raises", "BadOptionError", "doesn", "unambiguously", "match", "option", "string", "_match_abbrevR", "optparse", "_match_long_opt", "option", "requires", "arguments", "option", "requires", "argumentss", "option", "value", "insertR", "next_argt", "had_explicit_valueR", "optparse", "option", "requires", "arguments", "option", "requires", "arguments", "optparse", "patht", "basenameR", "optparse", "get_prog_name", "optparse", "expand_prog_name", "optparse", "stderrt", "writeR", "statusR", "optparse", "error", "string", "Print", "usage", "message", "incorporating", "stderr", "override", "subclass", "should", "return", "should", "either", "raise", "exception", "error", "print_usageR", "optparse", "optparse", "get_usage2", "print_usage", "stdout", "Print", "usage", "message", "current", "program", "usage", "default", "stdout", "occurrence", "string", "usage", "replaced", "current", "program", "basename", "nothing", "usage", "empty", "defined", "optparse", "pycRR", "optparse", "get_versionE", "print_version", "stdout", "Print", "version", "message", "program", "version", "default", "stdout", "print_usage", "occurrence", "version", "replaced", "current", "program", "nothing", "version", "empty", "undefined", "optparse", "Optionss", "optparse", "optparse", "pycRT", "optparse", "encoding", "getdefaultencoding", "optparse", "_get_encodingw", "print_help", "stdout", "Print", "extended", "message", "listing", "options", "provided", "default", "stdout", "stdoutRY", "encode", "optparse", "optparse", "_match_abbrev", "string", "wordmap", "string", "Option", "string", "Return", "string", "wordmap", "which", "unambiguous", "abbreviation", "found", "ambiguous", "doesn", "match", "words", "raise", "BadOptionError", "wordmapt", "wordR", "optparse", "pycRB", "__version__t", "__all__t", "__copyright__R", "ImportErrorR", "ExceptionR", "NameErrorR", "optparse", "module", "routines", "Posix", "depending", "system", "exports", "functions", "posix", "unlink", "modules", "posixpath", "ntpath", "posix", "riscos", "curdir", "string", "representing", "current", "directory", "pardir", "string", "representing", "parent", "directory", "common", "pathname", "separator", "extsep", "extension", "separator", "altsep", "alternate", "pathname", "separator", "pathsep", "component", "separator", "$PATH", "linesep", "separator", "files", "defpath", "default", "search", "executables", "devnull", "device", "Programs", "import", "stand", "better", "chance", "being", "portable", "between", "different", "platforms", "course", "functions", "defined", "platforms", "unlink", "opendir", "leave", "pathname", "manipulation", "split", "altsept", "curdirt", "pardirt", "extsept", "pathsept", "linesept", "defpatht", "namet", "patht", "devnullt", "SEEK_SETt", "SEEK_CURt", "SEEK_ENDc", "listt", "__all__t", "AttributeErrort", "modulet", "_get_exports_list", "posixs", "_exitt", "linkt", "riscoss", "specific", "module", "founds", "makedirs", "Super", "mkdir", "create", "directory", "intermediate", "Works", "mkdir", "except", "intermediate", "segment", "rightmost", "created", "exist", "recursive", "splitt", "existst", "makedirst", "OSErrort", "errnot", "EEXISTR", "mkdir", "modet", "headt", "tailt", "removedirs", "Super", "rmdir", "remove", "directory", "empty", "intermediate", "Works", "rmdir", "except", "directory", "successfully", "removed", "directories", "corresponding", "rightmost", "segments", "pruned", "until", "either", "whole", "consumed", "error", "occurs", "Errors", "during", "latter", "phase", "ignored", "generally", "directory", "empty", "rmdirR", "error", "removedirs", "renames", "Super", "rename", "create", "directories", "necessary", "delete", "empty", "Works", "rename", "except", "creation", "intermediate", "directories", "needed", "pathname", "attempted", "first", "After", "rename", "directories", "corresponding", "rightmost", "segments", "pruned", "until", "either", "whole", "consumed", "nonempty", "directory", "found", "function", "directory", "structure", "permissions", "needed", "unlink", "directory", "renameR", "newR&", "renames", "Directory", "generator", "directory", "directory", "rooted", "including", "itself", "excluding", "yields", "tuple", "dirpath", "dirnames", "filenames", "dirpath", "string", "directory", "dirnames", "names", "subdirectories", "dirpath", "excluding", "filenames", "names", "directory", "files", "dirpath", "names", "lists", "names", "components", "which", "begins", "directory", "dirpath", "dirpath", "optional", "topdown", "specified", "triple", "directory", "generated", "before", "triples", "subdirectories", "directories", "generated", "topdown", "false", "triple", "directory", "generated", "after", "triples", "subdirectories", "directories", "generated", "bottom", "topdown", "caller", "modify", "dirnames", "place", "slice", "assignment", "recurse", "subdirectories", "whose", "names", "remain", "dirnames", "prune", "search", "impose", "specific", "order", "visiting", "Modifying", "dirnames", "topdown", "false", "ineffective", "since", "directories", "dirnames", "already", "generated", "dirnames", "itself", "generated", "matter", "value", "topdown", "subdirectories", "retrieved", "before", "tuples", "directory", "subdirectories", "generated", "default", "errors", "listdir", "ignored", "optional", "onerror", "specified", "should", "function", "called", "argument", "error", "instance", "report", "error", "continue", "raise", "exception", "abort", "filename", "available", "filename", "attribute", "exception", "object", "default", "follow", "symbolic", "links", "subdirectories", "systems", "support", "order", "functionality", "optional", "argument", "followlinks", "Caution", "relative", "pathname", "change", "current", "working", "directory", "between", "resumptions", "never", "changes", "current", "directory", "assumes", "client", "doesn", "either", "Example", "import", "import", "getsize", "files", "python", "email", "print", "consumes", "print", "getsize", "files", "print", "bytes", "files", "directory", "files", "remove", "visit", "directories", "islinkt", "joint", "isdirt", "listdirR", "Nonet", "appendt", "topdownt", "onerrort", "followlinksR0", "namest", "dirst", "nondirsR", "new_patht", "pycR6", "execl", "Execute", "executable", "argument", "replacing", "current", "process", "execv", "filet", "execl5", "execle", "Execute", "executable", "argument", "environment", "replacing", "current", "process", "execve", "execle", "execlp", "Execute", "executable", "which", "searched", "along", "$PATH", "argument", "replacing", "current", "process", "execvp", "execlpD", "execlpe", "Execute", "executable", "which", "searched", "along", "$PATH", "argument", "environment", "replacing", "current", "process", "execvpe", "execlpeK", "execvp", "Execute", "executable", "which", "searched", "along", "$PATH", "argument", "replacing", "current", "process", "tuple", "strings", "_execvpe", "pycRH", "execvpe", "Execute", "executable", "which", "searched", "along", "$PATH", "argument", "environment", "replacing", "current", "process", "tuple", "strings", "pycRJ", "PATHi", "environR", "exc_infoR", "ENOENTt", "ENOTDIR", "funct", "argrestR&", "envpathRM", "saved_exct", "saved_tbR", "fullnameR", "pycRL", "putenv", "unsetenv", "_EnvironR", "UserDictt", "__init__t", "datat", "itemst", "upper", "selfRN", "__setitem__", "__getitem__", "__delitem__", "pycRj", "keysR", "clear", "popRc", "pycRm", "has_key", "__contains__", "getRc", "failobj", "pycRp", "update", "dictt", "kwargsRk", "pycRr", "__name__t", "__module__R", "NameErrorRj", "pycRh", "pycRr", "pycRj", "pycRl", "pycRm", "pycRu", "environment", "variable", "return", "doesn", "exist", "optional", "second", "argument", "specify", "alternate", "default", "default", "getenv", "globals", "_exists", "forkt", "spawnvRA", "stopped", "signaled", "exited", "P_NOWAITt", "waitpidt", "WIFSTOPPEDt", "WIFSIGNALEDt", "WTERMSIGt", "WIFEXITEDt", "WEXITSTATUSR", "wpidt", "_spawnvef", "spawnv", "integer", "Execute", "arguments", "subprocess", "P_NOWAIT", "return", "process", "P_WAIT", "return", "process", "exits", "normally", "otherwise", "return", "where", "signal", "killed", "spawnve", "integer", "Execute", "arguments", "subprocess", "specified", "environment", "P_NOWAIT", "return", "process", "P_WAIT", "return", "process", "exits", "normally", "otherwise", "return", "where", "signal", "killed", "spawnve7", "spawnvp", "integer", "Execute", "which", "looked", "along", "$PATH", "arguments", "subprocess", "P_NOWAIT", "return", "process", "P_WAIT", "return", "process", "exits", "normally", "otherwise", "return", "where", "signal", "killed", "spawnvpC", "spawnvpe", "integer", "Execute", "which", "looked", "along", "$PATH", "arguments", "subprocess", "supplied", "environment", "P_NOWAIT", "return", "process", "P_WAIT", "return", "process", "exits", "normally", "otherwise", "return", "where", "signal", "killed", "spawnvpeM", "spawnl", "integer", "Execute", "arguments", "subprocess", "P_NOWAIT", "return", "process", "P_WAIT", "return", "process", "exits", "normally", "otherwise", "return", "where", "signal", "killed", "spawnl", "spawnle", "integer", "Execute", "arguments", "subprocess", "supplied", "environment", "P_NOWAIT", "return", "process", "P_WAIT", "return", "process", "exits", "normally", "otherwise", "return", "where", "signal", "killed", "spawnled", "spawnlp", "integer", "Execute", "which", "looked", "along", "$PATH", "arguments", "subprocess", "supplied", "environment", "P_NOWAIT", "return", "process", "P_WAIT", "return", "process", "exits", "normally", "otherwise", "return", "where", "signal", "killed", "spawnlpv", "spawnlpe", "integer", "Execute", "which", "looked", "along", "$PATH", "arguments", "subprocess", "supplied", "environment", "P_NOWAIT", "return", "process", "P_WAIT", "return", "process", "exits", "normally", "otherwise", "return", "where", "signal", "killed", "spawnlpe", "popen2t", "Execute", "shell", "command", "process", "sequence", "which", "arguments", "passed", "directly", "program", "without", "shell", "intervention", "spawnv", "string", "passed", "shell", "system", "bufsize", "specified", "buffer", "pipes", "objects", "child_stdin", "child_stdout", "returned", "popen2", "deprecated", "subprocess", "module", "stackleveli", "shellt", "bufsizet", "stdint", "stdoutt", "close_fds", "warningst", "warnt", "DeprecationWarningt", "subprocesst", "PIPEt", "Popent", "isinstancet", "basestringt", "TrueR", "popen3c", "Execute", "shell", "command", "process", "sequence", "which", "arguments", "passed", "directly", "program", "without", "shell", "intervention", "spawnv", "string", "passed", "shell", "system", "bufsize", "specified", "buffer", "pipes", "objects", "child_stdin", "child_stdout", "child_stderr", "returned", "popen3", "deprecated", "subprocess", "module", "stderrR", "popen4c", "Execute", "shell", "command", "process", "sequence", "which", "arguments", "passed", "directly", "program", "without", "shell", "intervention", "spawnv", "string", "passed", "shell", "system", "bufsize", "specified", "buffer", "pipes", "objects", "child_stdin", "child_stdout_stderr", "returned", "popen4", "deprecated", "subprocess", "module", "STDOUTR", "stat_result", "tupRs", "_make_stat_result", "__reduce__R", "typeRC", "_pickle_stat_result", "statvfs_result", "_make_statvfs_result", "_pickle_statvfs_result", "__doc__RO", "builtin_module_namest", "_namesR", "ImportErrort", "posixpathR", "extendR", "ntpathR", "versiont", "findt", "os2emxpatht", "_emx_linkR", "riscospatht", "modulest", "pathR", "FalseR6", "riscosenvironR", "IterableUserDictRz", "P_WAITR", "P_NOWAITOR", "copy_regt", "_copy_regR", "pickleR", "module", "os2emxpath", "Common", "pathname", "manipulations", "version", "Instead", "importing", "module", "directly", "import", "refer", "module", "_unicode", "expandusert", "expandvarst", "isabst", "islinkt", "splitdrivet", "splitextt", "splitt", "walkt", "normcaseR", "joinR", "basenamet", "dirnamet", "commonprefixt", "getsizet", "getmtimet", "getatimet", "getctimeR", "existst", "lexistst", "isdirt", "isfilet", "ismountR", "normpatht", "abspatht", "splitunct", "curdirt", "pardirt", "pathsept", "defpatht", "altsept", "extsept", "devnullt", "realpatht", "supports_unicode_filenamest", "Normalize", "pathname", "Makes", "characters", "lowercase", "altseps", "replacet", "lower", "os2emxpath", "pathname", "components", "inserting", "neededt", "patht", "os2emxpath", "Split", "pathname", "mount", "point", "relative", "specifiers", "Return", "tuple", "either", "empty", "empty", "mount", "similar", "using", "backslashes", "always", "input", "Paths", "containing", "drive", "letters", "never", "findt", "firstTwot", "normpt", "index", "os2emxpath", "Returns", "final", "component", "pathnamei", "os2emxpath", "Returns", "directory", "component", "pathnamei", "os2emxpath", "whether", "mount", "point", "defined", "drive", "restR", "os2emxpath", "Normalize", "eliminating", "double", "slashes", "appendR", "prefixt", "compst", "os2emxpath", "Return", "absolute", "version", "isinstanceR", "getcwdut", "getcwdR", "os2emxpath", "__doc__R", "statt", "genericpathR", "ntpathR", "__all__R", "FalseR$", "os2emxpath", "module", "Python", "debugger", "Reprt", "Restartc", "Causes", "debugger", "restarted", "debugged", "python", "program", "__name__t", "__module__t", "__doc__", "runevalt", "runctxt", "runcallt", "set_tracet", "post_mortemt", "helpc", "compilet", "escapet", "opent", "IOErrort", "Nonet", "readlinet", "matcht", "close", "funcnamet", "filenamet", "linenot", "answert", "find_function", "skipi", "HOMEs", "pdbrc", "__init__t", "use_rawinputt", "promptt", "aliasest", "mainpyfilet", "_wait_for_mainpyfileR", "ImportErrort", "rcLinest", "environR", "patht", "joinR", "readlinest", "appendR", "commandst", "commands_dopromptt", "commands_silentt", "Falset", "commands_definingR", "commands_bnum", "selft", "completekeyt", "stdint", "stdoutR!", "envHomet", "rcFileR", "resett", "forget", "pycRA", "stackt", "curindext", "curframe", "pycRB", "get_stackRC", "f_localst", "curframe_localst", "execRcLines", "setupu", "onecmd", "pycRI", "method", "called", "there", "remote", "possibility", "function", "stop_hereR", "interactionR", "framet", "argument_list", "user_call", "function", "called", "break", "canonict", "f_codet", "co_filenamet", "f_linenot", "bp_commandsRQ", "user_line", "every", "command", "current", "active", "breakpoint", "there", "Returns", "normal", "interaction", "function", "called", "False", "otherwise", "currentbpi", "getattrR8", "lastcmdRL", "print_stack_entryRC", "cmdloopRB", "lastcmd_backR", "pycRY", "function", "called", "return", "__return__s", "Return", "return_value", "user_return", "function", "called", "exception", "occurs", "below", "level", "__exception__R", "typeR", "_safereprRQ", "exc_infot", "exc_typet", "exc_valuet", "exc_tracebackt", "exc_type_name", "user_exception", "traceback", "pycRQ", "Custom", "displayhook", "default", "which", "prevents", "assignment", "variable", "builtins", "displayhook", "stdin", "singlei", "f_globalsR", "localst", "globalst", "codet", "save_stdoutt", "save_stdint", "save_displayhookRK", "default", "Handle", "alias", "expansion", "separator", "aliass", "stript", "splitR", "replacet", "strR2", "findt", "lstript", "cmdqueueR4", "rstrip", "argst", "tmpArgt", "markert", "precmd", "Interpret", "argument", "though", "typed", "response", "prompt", "Checks", "whether", "typed", "normal", "prompt", "breakpoint", "command", "definition", "handle_command_def", "pycRO", "Handles", "command", "during", "command", "definition", "silentt", "parselinet", "TrueR7", "AttributeErrorR", "func_namet", "commands_resumingR8", "cmdlistt", "Defines", "commands", "associated", "breakpoint", "Those", "commands", "executed", "whenever", "breakpoint", "causes", "program", "execution", "Usage", "commands", "endNs", "Breakpointt", "bpbynumbert", "bnumt", "prompt_back", "do_commands", "Wheret", "found", "paths", "lineno", "im_funcs", "specified", "objects", "functions", "found", "along", "Breakpoint", "breaksR", "bpprintR", "rfindt", "lookupmoduleRo", "ValueErrort", "evalRE", "hasattrR", "func_codet", "co_namet", "co_firstlinenoRW", "lineinfot", "defaultFilet", "checklinet", "set_breakt", "get_breakst", "numbert", "fileR", "temporaryt", "condt", "commat", "colonR", "do_breakX", "Produce", "reasonable", "default", "string", "do_tbreak", "identifiert", "failedt", "idstringt", "partst", "fnamet", "itemRJ", "Check", "whether", "specified", "seems", "executable", "Return", "lineno", "docstring", "comment", "blank", "Warning", "testing", "comprehensive", "filei", "Blank", "commentN", "linecachet", "getlineR", "globsR", "Breakpoint", "index", "numberi", "breakpoint", "numbered", "enable", "do_enable", "Breakpoint", "index", "numberi", "breakpoint", "numbered", "disable", "do_disable", "Breakpoint", "index", "numbers", "Breakpoint", "index", "validR", "unconditional", "IndexErrorR", "bpnumR", "do_condition", "number", "followed", "ignore", "count", "Breakpoint", "index", "numberNi", "Breakpoint", "index", "valids", "ignore", "crossingss", "crossings", "breakpoint", "breakpoints", "reached", "ignore", "countR", "reply", "do_ignore", "Three", "possibilities", "tried", "order", "clear", "clear", "breaks", "confirmation", "clear", "lineno", "clear", "breaks", "lineno", "clear", "clear", "breakpoints", "numbers", "Clear", "breaks", "yesNRe", "Invalid", "number", "Breakpoint", "index", "numberi", "breakpoint", "numbereds", "Deleted", "breakpoint", "raw_inputt", "EOFErrorR", "lowert", "clear_all_breaksR", "clear_breakR", "clear_bpbynumber", "numberlist", "do_clearH", "print_stack_trace", "do_whereu", "Oldest", "framei", "do_upz", "Newest", "framei", "do_down", "set_untilRE", "do_until", "set_step", "do_step", "set_nextRE", "do_next", "Restart", "program", "raising", "exception", "caught", "debugger", "arguments", "given", "shlexRu", "argvR", "argv0", "do_run", "set_returnRE", "do_return", "set_continue", "do_continue", "within", "bottom", "frames", "command", "requires", "number", "failed", "do_jump", "ENTERING", "RECURSIVE", "DEBUGGERs", "LEAVING", "RECURSIVE", "DEBUGGER", "settraceR", "call_tracingR", "trace_dispatchR", "do_debug", "_user_requested_quitt", "set_quit", "do_quit", "do_EOF", "undefined", "co_argcountt", "co_flagst", "ranget", "co_varnamesR", "dictt", "do_args", "returned!", "do_retval", "isinstanceR", "_getval", "pprintR", "do_pp", "IJPqI", "listi", "Error", "argument", "get_file_breaksR", "rjustRN", "KeyboardInterrupt", "lastt", "firstR", "breaklistR", "do_list", "Functiont", "Method", "valueRK", "do_whatis", "keyst", "sortR", "do_aliasW", "do_unaliasd", "frame_lineno", "format_stack_entry", "prompt_prefixRR", "help_h", "help_help", "Without", "argument", "print", "available", "commands", "command", "argument", "print", "about", "command", "pipes", "documentation", "$PAGER", "gives", "command", "help_w", "help_where", "Print", "stack", "trace", "recent", "frame", "bottom", "arrow", "indicates", "current", "frame", "which", "determines", "context", "commands", "alias", "command", "help_d", "help_down", "current", "frame", "level", "stack", "trace", "newer", "frame", "help_u", "help_up", "current", "frame", "level", "stack", "trace", "older", "frame", "help_b", "help_break", "lineno", "function", "condition", "number", "argument", "break", "there", "current", "function", "break", "first", "executable", "function", "Without", "argument", "breaks", "second", "argument", "present", "string", "specifying", "expression", "which", "evaluate", "before", "breakpoint", "honored", "number", "prefixed", "filename", "colon", "specify", "breakpoint", "another", "probably", "loaded", "searched", "suffix", "omitted", "help_cl", "help_clear", "filename", "linenos", "bpnumber", "bpnumber", "space", "separated", "breakpoint", "numbers", "clear", "those", "breakpoints", "Without", "argument", "clear", "breaks", "first", "confirmation", "filename", "lineno", "argument", "clear", "breaks", "argument", "different", "previous", "versions", "debugger", "python", "distributions", "before", "where", "linenumber", "instead", "either", "filename", "lineno", "breakpoint", "numbers", "pycR1", "tbreak", "arguments", "break", "breakpoint", "removed", "first", "help_tbreak", "enable", "bpnumber", "bpnumber", "Enables", "breakpoints", "given", "space", "separated", "numbers", "help_enable", "disable", "bpnumber", "bpnumber", "Disables", "breakpoints", "given", "space", "separated", "numbers", "help_disable", "ignore", "bpnumber", "count", "ignore", "count", "given", "breakpoint", "number", "breakpoint", "becomes", "active", "ignore", "count", "count", "decremented", "breakpoint", "reached", "breakpoint", "disabled", "associated", "condition", "evaluates", "help_ignore", "condition", "bpnumber", "str_condition", "str_condition", "string", "specifying", "expression", "which", "evaluate", "before", "breakpoint", "honored", "str_condition", "absent", "existing", "condition", "removed", "breakpoint", "unconditional", "help_condition", "help_s", "help_step", "Execute", "current", "first", "possible", "occasion", "either", "function", "called", "current", "function", "pycR8", "help_unt", "help_until", "Continue", "execution", "until", "number", "greater", "current", "reached", "until", "current", "frame", "returns", "help_n", "help_next", "Continue", "execution", "until", "current", "function", "reached", "returns", "help_r", "help_return", "eturn", "Continue", "execution", "until", "current", "function", "returns", "help_c", "help_continue", "help_cont", "Continue", "execution", "breakpoint", "encountered", "help_j", "help_jump", "lineno", "executed", "pycRC", "debug", "Enter", "recursive", "debugger", "steps", "through", "argument", "which", "arbitrary", "expression", "statement", "executed", "current", "environment", "help_debug", "help_l", "help_list!", "first", "source", "current", "Without", "arguments", "lines", "around", "current", "continue", "previous", "listing", "argument", "lines", "starting", "arguments", "given", "range", "second", "argument", "first", "count", "pycRF", "help_a", "help_args", "Print", "arguments", "current", "function", "pycRH", "expression", "Print", "value", "expression", "help_p4", "expression", "Pretty", "print", "value", "expression", "help_pp8", "statement", "Execute", "statement", "context", "current", "stack", "frame", "exclamation", "point", "omitted", "unless", "first", "statement", "resembles", "debugger", "command", "assign", "global", "variable", "always", "prefix", "command", "global", "command", "global", "list_options", "list_options", "help_exec", "Restart", "debugged", "python", "program", "string", "supplied", "split", "shlex", "result", "History", "breakpoints", "actions", "debugger", "options", "preserved", "restart", "alias", "help_runG", "help_q", "help_quitP", "debugger", "program", "being", "executed", "aborted", "pycRN", "whatis", "Prints", "argument", "help_whatisY", "Handles", "receipt", "command", "help_EOF", "alias", "command", "parameter", "parameter", "Creates", "alias", "called", "executes", "command", "command", "enclosed", "quotes", "Replaceable", "parameters", "indicated", "while", "replaced", "parameters", "command", "given", "current", "alias", "shown", "given", "aliases", "listed", "Aliases", "nested", "contain", "anything", "legally", "typed", "prompt", "Note!", "override", "internal", "commands", "aliases!", "Those", "internal", "commands", "hidden", "until", "alias", "removed", "Aliasing", "recursively", "applied", "first", "command", "other", "words", "alone", "useful", "aliases", "especially", "placed", "pdbrc", "Print", "instance", "variables", "usage", "classInst", "alias", "__dict__", "print", "__dict__", "Print", "instance", "variables", "alias", "help_aliasa", "unalias", "Deletes", "specified", "alias", "help_unaliasy", "commands", "bpnumber", "Specify", "commands", "breakpoint", "number", "bpnumber", "commands", "themselves", "appear", "following", "lines", "containing", "terminate", "commands", "remove", "commands", "breakpoint", "commands", "follow", "immediately", "commands", "bpnumber", "argument", "commands", "refers", "breakpoint", "breakpoint", "commands", "start", "program", "again", "Simply", "continue", "command", "other", "command", "resumes", "execution", "Specifying", "command", "resuming", "execution", "currently", "continue", "return", "their", "abbreviations", "terminates", "command", "command", "immediately", "followed", "because", "resume", "execution", "simple", "encounter", "another", "breakpoint", "which", "could", "command", "leading", "ambiguities", "about", "which", "execute", "silent", "command", "command", "usual", "message", "about", "stopping", "breakpoint", "printed", "desirable", "breakpoints", "print", "specific", "message", "continue", "other", "commands", "print", "anything", "breakpoint", "reached", "help_commands", "help_pdb", "Helper", "function", "break", "clear", "parsing", "overridden", "lookupmodule", "translates", "possibly", "incomplete", "module", "absolute", "isabst", "existsR2", "splitextt", "islinkt", "readlinkR", "roott", "dirnamet", "fullname", "__main__R", "__file__t", "__builtins__i", "execfile", "__dict__t", "cleart", "updateRa", "statement", "_runscript", "do_helpt", "do_hR", "do_bR", "do_clR", "do_wt", "do_btR", "do_uR", "do_dR", "do_untR", "do_sR", "do_nR", "do_restartR", "do_rR", "do_ct", "do_contR", "do_jR", "do_qt", "do_exitR", "do_aR", "do_rvR", "do_lR", "line_prefixR", "help_btR", "help_restartRO", "help_exitRP", "expressionRw", "_getframet", "f_back", "valid", "traceback", "passed", "exception", "being", "handled", "last_traceback", "import", "TESTCMD", "PAGER", "Pager", "status", "Sorry", "along", "Python", "search", "system", "helps", "usage", "scriptfile", "Error", "existi", "program", "finished", "restartedt", "Restartings", "arguments", "program", "exited", "status", "Uncaught", "exception", "Entering", "mortem", "debuggings1", "Running", "restart", "programs", "mortem", "debugger", "finished", "restarted", "helps", "exitR", "SystemExitRh", "SyntaxErrorRn", "print_excRQ", "pdbRK", "ExceptionR", "_reprt", "maxstringRg", "__all__R", "module", "pickle", "Create", "portable", "serialized", "representations", "Python", "objects", "module", "cPickle", "faster", "implementation", "module", "copy_reg", "mechanism", "registering", "custom", "picklers", "module", "pickletools", "source", "extensive", "comments", "Classes", "Pickler", "Unpickler", "Functions", "object", "dumps", "object", "string", "object", "loads", "string", "object", "variables", "__version__", "format_version", "compatible_formats", "$Revision", "72223", "dispatch_table", "_extension_registryt", "_inverted_registryt", "_extension_cacheNt", "PickleErrort", "PicklingErrort", "UnpicklingErrort", "Picklert", "Unpicklert", "dumpt", "dumpst", "loadt", "loadss", "common", "class", "other", "pickling", "exceptions", "__name__t", "__module__t", "__doc__", "pickle", "exception", "raised", "unpicklable", "object", "passed", "method", "pickle", "exception", "raised", "there", "problem", "unpickling", "object", "security", "violation", "other", "exceptions", "raised", "during", "unpickling", "including", "necessarily", "limited", "AttributeError", "EOFError", "ImportError", "IndexError", "pickle", "_Stopc", "value", "selfR", "pickle", "__init__S", "pickle", "PyStringMapt", "takes", "object", "writing", "pickle", "stream", "optional", "protocol", "argument", "tells", "pickler", "given", "protocol", "supported", "protocols", "default", "protocol", "backwards", "compatible", "Protocol", "protocol", "written", "opened", "successfully", "using", "protocol", "higher", "opened", "binary", "pickling", "unpickling", "Protocol", "efficient", "protocol", "protocol", "efficient", "protocol", "Specifying", "negative", "protocol", "version", "selects", "highest", "protocol", "version", "supported", "higher", "protocol", "recent", "version", "Python", "needed", "pickle", "produced", "parameter", "write", "method", "accepts", "single", "string", "argument", "object", "StringIO", "object", "other", "custom", "object", "meets", "interface", "pickle", "protocol", "Nonet", "HIGHEST_PROTOCOLt", "ValueErrort", "writet", "memot", "protot", "filet", "protocol", "pickle", "Clears", "pickler", "structure", "remembers", "which", "objects", "pickler", "already", "shared", "recursive", "objects", "pickled", "reference", "value", "method", "useful", "using", "picklers", "clear", "pickle", "clear_memo", "Write", "pickled", "representation", "PROTOt", "savet", "pickle", "Store", "object", "AssertionErrort", "lenRB", "memo_len", "pickle", "memoize", "BINPUTRM", "LONG_BINPUTt", "pickle", "pycRT", "BINGETRM", "LONG_BINGETt", "GETRZ", "pickle", "__reduce_ex__t", "__reduce__s", "pickle", "object", "return", "string", "tuplei", "Tuple", "returned", "elementsRP", "persistent_idR", "save_persRC", "typet", "dispatchR", "issubclasst", "TypeTypet", "TypeErrort", "save_globalt", "getattrRE", "StringTypet", "TupleTypeRS", "save_reduce", "reducet", "isscR4", "pickle", "pycRN", "pickle", "pycRb", "BINPERSIDt", "PERSIDt", "pickle", "pycRc", "reduce", "should", "tuplet", "__call__s", "reduce", "should", "callablei", "__newobj__i", "__new__s", "__newobj__", "__new__s0", "__newobj__", "wrong", "classi", "isinstanceRl", "hasattrRN", "__class__t", "NEWOBJt", "REDUCERQ", "POPR_", "_batch_appendst", "_batch_setitemst", "BUILD", "funct", "argst", "statet", "listitemst", "dictitemsRP", "pickle", "pycRm", "pickle", "save_none", "NEWTRUEt", "NEWFALSEt", "TRUEt", "FALSE", "pickle", "save_bool", "BININT1RM", "BININT2t", "BININTt", "INTRZ", "high_bits", "pickle", "save_int", "encode_longRS", "LONG1RM", "LONG4t", "LONGRZ", "bytest", "pickle", "save_long", "BINFLOATt", "FLOATRZ", "pickle", "save_float", "SHORT_BINSTRINGRM", "BINSTRINGt", "STRINGRZ", "pickle", "save_string", "u005cs", "u000as", "unicode", "escape", "encodeRS", "BINUNICODEt", "replacet", "UNICODERV", "encodingR", "pickle", "save_unicode", "u005cs", "u000as", "unicode", "escape", "isunicodeRF", "unicodeR4", "pickle", "EMPTY_TUPLEt", "MARKt", "TUPLERN", "_tuplesize2codeRV", "POP_MARK", "elementR_", "pickle", "save_tuple", "pickle", "save_empty_tupleR", "EMPTY_LISTR", "LISTRV", "pickle", "save_listU", "APPENDt", "xranget", "_BATCHSIZER", "nextt", "appendt", "StopIterationRS", "APPENDS", "itemsRN", "tmpR2", "pickle", "EMPTY_DICTR", "DICTRV", "iteritems", "pickle", "save_dict", "SETITEMR", "SETITEMS", "pickle", "__getinitargs__s", "_keep_aliveR", "INSTR", "__getstate__t", "AttributeErrort", "__dict__R", "getstatet", "stuff", "pickle", "save_inst", "pickle", "found", "pickle", "object", "whichmodulet", "__import__t", "modulest", "ImportErrort", "KeyErrorR", "EXT1RM", "EXT2t", "EXT4t", "GLOBALRV", "nameR", "modulet", "klasst", "pickle", "pycRi", "structR", "NoneTypeR", "boolR", "IntTypeR", "LongTypeR", "FloatTypeR", "UnicodeTypeR", "ListTypeR", "DictionaryTypeR", "InstanceTypeRi", "ClassTypet", "FunctionTypet", "BuiltinFunctionTypeRg", "pickle", "Keeps", "reference", "object", "Because", "remember", "objects", "their", "assure", "possibly", "temporary", "objects", "alive", "referencing", "store", "reference", "which", "should", "normally", "unless", "someone", "tries", "deepcopy", "itself", "pickle", "Figure", "module", "which", "function", "occurs", "Search", "modules", "module", "Cache", "classmap", "Return", "module", "function", "cannot", "found", "return", "__main__", "__main__N", "classmapR", "funcnameR", "pickle", "takes", "object", "reading", "pickle", "stream", "protocol", "version", "pickle", "detected", "automatically", "proto", "argument", "needed", "object", "methods", "method", "takes", "integer", "argument", "readline", "method", "requires", "arguments", "methods", "should", "return", "string", "object", "object", "opened", "reading", "StringIO", "object", "other", "custom", "object", "meets", "interface", "readlinet", "readRC", "pickle", "pickled", "object", "representation", "Return", "reconstituted", "object", "hierarchy", "specified", "objectt", "markt", "stackR", "stopinst", "pickle", "pickle", "markerl", "EOFError", "pickle", "load_eofu", "unsupported", "pickle", "protocol", "pickle", "load_protoy", "persistent_load", "pickle", "load_persid", "pickle", "load_binpersid", "pickle", "load_none", "False", "pickle", "load_false", "pickle", "load_true", "longR", "datat", "pickle", "load_int", "mloadsR", "pickle", "load_binint", "pickle", "load_binint1", "pickle", "load_binint2", "pickle", "load_long", "decode_long", "pickle", "load_long1", "pickle", "load_long4", "floatR", "pickle", "load_float", "unpack", "pickle", "load_binfloat", "insecure", "string", "pickles", "string", "escape", "startswithRS", "endswithRA", "decode", "repR8", "pickle", "load_string", "pickle", "load_binstring", "unicode", "escape", "pickle", "load_unicode", "pickle", "load_binunicode", "pickle", "load_short_binstring", "tupleR", "pickle", "load_tuple", "pickle", "load_empty_tuple", "pickle", "load_tuple1", "pickle", "load_tuple2", "pickle", "load_tuple3", "pickle", "load_empty_list", "pickle", "load_empty_dictionary", "pickle", "load_list", "rangeRS", "pickle", "load_dict", "constructor", "_EmptyClassR", "RuntimeErrorRh", "exc_infoR", "instantiatedR", "pickle", "_instantiate", "find_classR2", "pickle", "load_inst0", "pickle", "load_obj7", "pickle", "load_newobj", "pickle", "load_globalE", "get_extension", "pickle", "load_ext1L", "pickle", "load_ext2Q", "pickle", "load_ext4V", "unregistered", "extension", "nilRP", "pickle", "pycR8", "pickle", "pycR3", "pickle", "load_reduceo", "pickle", "load_popw", "pickle", "load_pop_mark", "pickle", "load_dup", "pickle", "load_get", "pickle", "load_binget", "pickle", "load_long_binget", "pickle", "load_put", "pickle", "load_binput", "pickle", "load_long_binput", "pickle", "load_append", "extend", "pickle", "load_appends", "pickle", "load_setitem", "pickle", "load_setitems", "__setstate__i", "internRh", "updateR", "setattr", "instt", "setstatet", "slotstateR", "pickle", "load_build", "pickle", "load_mark", "pickle", "load_stop", "TUPLE1R&", "TUPLE2R", "TUPLE3R", "DUPRA", "pickle", "pickle", "Encode", "complement", "little", "endian", "binary", "string", "special", "returning", "empty", "string", "LONG1", "pickling", "context", "encode_long", "encode_long", "encode_long", "32767L", "encode_long", "encode_long", "32768L", "encode_long", "encode_long", "0x00i", "0xffi", "_binasciit", "unhexlify", "ashext", "njunkcharst", "nibblest", "nbitst", "newnibblest", "binary", "pickle", "Decode", "complement", "little", "endian", "binary", "string", "decode_long", "decode_long", "decode_long", "32767L", "decode_long", "decode_long", "32768L", "decode_long", "decode_long", "hexlifyR", "nbytesRc", "pickle", "StringIOc", "pickle", "getvalue", "pickle", "pickle", "pickle", "doctestt", "testmod", "pickle", "_testp", "__version__t", "typest", "copy_regR", "marshalR", "__all__t", "format_versiont", "compatible_formatsR", "ExceptionR", "python", "coreR", "NameErrorR", "dirRo", "matchR", "binasciiRa", "cStringIORk", "pickle", "module", "posixpath", "Common", "operations", "Posix", "pathnames", "Instead", "importing", "module", "directly", "import", "refer", "module", "alias", "module", "Posix", "systems", "other", "systems", "Windows", "provides", "operations", "manner", "specific", "platform", "alias", "another", "module", "macpath", "ntpath", "actually", "useful", "Posix", "systems", "manipulation", "pathname", "component", "_unicodet", "normcaset", "isabst", "joint", "splitdrivet", "splitt", "splitextt", "basenamet", "dirnamet", "commonprefixt", "getsizet", "getmtimet", "getatimet", "getctimet", "islinkt", "existst", "lexistst", "isdirt", "isfilet", "ismountt", "walkt", "expandusert", "expandvarst", "normpatht", "abspatht", "samefilet", "sameopenfilet", "samestatt", "curdirt", "pardirt", "pathsept", "defpatht", "altsept", "extsept", "devnullt", "realpatht", "supports_unicode_filenamest", "relpatht", "nullc", "Normalize", "pathname", "effect", "under", "Posix", "posixpath", "whether", "absoluteR", "startswith", "posixpath", "pathname", "components", "inserting", "needed", "component", "absolute", "previous", "components", "discarded", "empty", "result", "separator", "endswith", "patht", "posixpath", "Split", "pathname", "Returns", "tuple", "where", "everything", "after", "final", "slash", "Either", "empty", "rfindt", "rstrip", "headt", "posixpath", "genericpatht", "_splitextR", "posixpath", "Split", "pathname", "drive", "Posix", "drive", "always", "empty", "posixpath", "Returns", "final", "component", "pathnameR", "posixpath", "Returns", "directory", "component", "pathnameR", "posixpath", "whether", "symbolic", "lstatt", "errort", "AttributeErrort", "Falset", "statt", "S_ISLNKt", "st_mode", "posixpath", "whether", "exists", "Returns", "broken", "symbolic", "links", "posixpath", "whether", "pathnames", "reference", "actual", "posixpath", "whether", "objects", "reference", "fstatR", "fp2RG", "posixpath", "whether", "buffers", "reference", "st_inot", "st_dev", "posixpath", "whether", "mount", "points", "dev1t", "dev2t", "ino1t", "posixpath", "Directory", "callback", "function", "directory", "directory", "rooted", "including", "itself", "excluding", "dirname", "fnames", "dirname", "directory", "fnames", "names", "files", "subdirectories", "dirname", "excluding", "modify", "fnames", "place", "slice", "assignment", "recurse", "subdirectories", "whose", "names", "remain", "fnames", "implement", "filter", "impose", "specific", "order", "visiting", "semantics", "defined", "required", "beyond", "always", "passed", "filename", "pattern", "mutable", "object", "designed", "accumulate", "statistics", "Passing", "common", "removed", "favor", "stackleveli", "warningst", "warnpy3kR", "listdirR", "S_ISDIRRB", "funct", "namest", "nameRC", "posixpath", "Expand", "constructions", "$HOME", "unknown", "nothing", "HOMEi", "findR4", "environt", "getpwuidt", "getuidt", "pw_dirt", "getpwnamt", "KeyErrorR5", "userhomet", "pwent", "posixpath", "Expand", "shell", "variables", "Unknown", "variables", "unchanged", "isinstanceR", "_uvarprogt", "compilet", "UNICODEt", "getfilesystemencodingt", "_varprogt", "NoneRD", "searcht", "spant", "groupR", "encodeR", "decodeR4", "varprogt", "encodingR6", "value", "posixpath", "Normalize", "eliminating", "double", "slashes", "appendt", "slasht", "initial_slashest", "compst", "new_compst", "posixpath", "Return", "absolute", "getcwdut", "getcwdR", "posixpath", "Return", "canonical", "specified", "filename", "eliminating", "symbolic", "links", "encountered", "_joinrealpathR", "filenameR1", "posixpath", "partitionR", "readlinkRD", "restt", "seenR", "newpathR", "posixpath", "darwinc", "Return", "relative", "version", "paths", "specified", "ValueErrorR", "startt", "start_listt", "path_listR6", "rel_list", "posixpath", "__doc__R", "__all__R", "platformR&", "posixpath", "module", "pprint", "Support", "pretty", "print", "lists", "tuples", "dictionaries", "recursively", "simple", "useful", "especially", "debugging", "structures", "Classes", "PrettyPrinter", "Handle", "pretty", "printing", "operations", "stream", "using", "configured", "formatting", "parameters", "Functions", "pformat", "Format", "Python", "object", "pretty", "printed", "representation", "pprint", "Pretty", "print", "Python", "object", "stream", "default", "stdout", "saferepr", "Generate", "standard", "value", "protect", "against", "recursive", "structures", "StringIOt", "pprintt", "pformatt", "isreadablet", "isrecursivet", "safereprt", "PrettyPrinters", "Pretty", "print", "Python", "object", "stream", "default", "stdout", "streamt", "indentt", "widtht", "depthN", "objectR", "printer", "pprint", "Format", "Python", "object", "pretty", "printed", "representation", "pprint", "Version", "which", "handle", "recursive", "structures", "_safe_reprt", "pprint", "Determine", "saferepr", "object", "readable", "pprint", "Determine", "object", "requires", "recursive", "representation", "pprint", "ignores", "comparing", "unequal", "types", "supported", "warningst", "catch_warningst", "_syst", "py3kwarningt", "filterwarningst", "DeprecationWarningt", "sorted", "iterable", "pprint", "_sortedM", "Handle", "pretty", "printing", "operations", "stream", "using", "configured", "parameters", "indent", "Number", "spaces", "indent", "level", "nesting", "width", "Attempted", "maximum", "number", "columns", "output", "depth", "maximum", "depth", "print", "nested", "structures", "stream", "desired", "output", "stream", "omitted", "false", "standard", "output", "stream", "available", "construction", "indent", "depth", "width", "AssertionErrorR", "_deptht", "_indent_per_levelt", "_widtht", "_streamR", "stdout", "selfR", "pprint", "__init__U", "_formatR", "write", "pprint", "_StringIOR", "getvalue", "pprint", "format", "pprint", "readablet", "recursive", "pprint", "__repr__t", "_recursiont", "Truet", "_recursivet", "Falset", "_readablet", "_reprt", "_typet", "_lenR", "getattrR", "issubclasst", "dictR", "itemsR", "listt", "tuplet", "frozensett", "__name__t", "allowancet", "contextt", "levelt", "objidt", "sepLinesR", "lengthR", "endchar", "pprint", "copyR", "reprR", "pprint", "Format", "object", "specific", "context", "returning", "string", "flags", "indicating", "whether", "representation", "readable", "whether", "object", "represents", "recursive", "construct", "maxlevelsRI", "pprint", "__module__R", "pprint", "localet", "modulesRT", "getR$", "isalphaR", "appendR", "_commajoinRA", "startswith", "closuret", "quotest", "qgetR&", "charRN", "componentsR_", "kreprt", "kreadablet", "krecurt", "vreprt", "vreadablet", "vrecurR", "oreprt", "oreadablet", "orecurRK", "pprint", "Recursion", "pprint", "pycR5", "stringi", "_safe_repr", "pformat", "timeR", "pprint", "_perfcheckL", "__main__", "__doc__t", "cStringIOR", "ImportErrort", "__all__t", "joinR", "typeR", "pprint", "module", "quopri", "Conversions", "quoted", "printable", "transport", "encoding", "encodet", "decodet", "encodestringt", "decodestringt", "0123456789ABCDEFt", "a2b_qpt", "b2a_qpc", "Decide", "whether", "particular", "character", "needs", "quoted", "quotetabs", "indicates", "whether", "embedded", "spaces", "should", "quoted", "ending", "spaces", "always", "encoded", "ESCAPE", "quotetabst", "header", "quopri", "needsquoting", "Quote", "single", "character", "quopri", "quote", "input", "apply", "quoted", "printable", "encoding", "write", "output", "input", "output", "files", "readline", "write", "methods", "quotetabs", "indicates", "whether", "embedded", "spaces", "should", "quoted", "ending", "spaces", "always", "encoded", "header", "indicates", "whether", "encoding", "spaces", "writeR", "outputt", "lineEnd", "quopri", "Nonet", "readR", "readlineR", "appendt", "EMPTYSTRINGt", "joint", "MAXLINESIZE", "inputR", "datat", "odataR", "prevlinet", "linet", "outlinet", "strippedR", "thisline", "quopri", "StringIO", "cStringIOR", "getvalue", "infpt", "outfp", "quopri", "input", "apply", "quoted", "printable", "decoding", "write", "output", "input", "output", "files", "readline", "write", "methods", "header", "decode", "underscore", "space", "ishext", "unhex", "newR&", "partialR", "quopri", "quopri", "Return", "character", "hexadecimal", "digit", "quopri", "integer", "value", "hexadecimal", "number", "bitsR", "quopri", "pycR1", "usage", "quopri", "quote", "tabss", "decode", "default", "encodei", "mutually", "exclusivet", "getoptt", "argvt", "errort", "stderrt", "stdoutt", "exitt", "stdint", "opent", "IOErrorR", "close", "optst", "argst", "decot", "tabst", "filet", "quopri", "__main__N", "__doc__t", "__all__R", "binasciiR", "ImportErrorR", "__name__", "quopri", "module", "random", "Random", "variable", "generators", "integers", "uniform", "within", "range", "sequences", "random", "element", "random", "sample", "generate", "random", "permutation", "distributions", "uniform", "triangular", "normal", "Gaussian", "lognormal", "negative", "exponential", "gamma", "pareto", "Weibull", "distributions", "circle", "angles", "circular", "uniform", "Mises", "General", "notes", "underlying", "Mersenne", "Twister", "generator", "period", "19937", "extensively", "tested", "generators", "existence", "Without", "direct", "compute", "steps", "forward", "semantics", "jumpahead", "weakened", "simply", "another", "distant", "state", "large", "period", "avoid", "overlapping", "sequences", "random", "method", "implemented", "executes", "single", "Python", "therefore", "threadsafe", "division", "MethodTypet", "BuiltinMethodType", "sqrtt", "acost", "urandom", "hexlifyNt", "Randomt", "seedt", "randomt", "uniformt", "randintt", "choicet", "samplet", "randranget", "shufflet", "normalvariatet", "lognormvariatet", "expovariatet", "vonmisesvariatet", "gammavariatet", "triangulart", "gausst", "betavariatet", "paretovariatet", "weibullvariatet", "getstatet", "setstatet", "jumpaheadt", "WichmannHillt", "getrandbitst", "SystemRandomi", "Random", "number", "generator", "class", "bound", "module", "functions", "instantiate", "instances", "Random", "generators", "share", "state", "Especially", "useful", "multi", "threaded", "programs", "creating", "different", "instance", "Random", "thread", "using", "jumpahead", "method", "ensure", "generated", "sequences", "thread", "overlap", "Class", "Random", "subclassed", "different", "basic", "generator", "devising", "override", "following", "methods", "random", "getstate", "setstate", "jumpahead", "Optionally", "implement", "getrandbits", "method", "randrange", "cover", "arbitrarily", "large", "ranges", "Initialize", "instance", "Optional", "argument", "controls", "seeding", "Random", "Nonet", "gauss_next", "selft", "random", "__init__", "Initialize", "internal", "state", "hashable", "object", "argument", "seeds", "current", "operating", "system", "specific", "randomness", "source", "available", "instead", "longt", "_hexlifyt", "_urandomt", "NotImplementedErrort", "timet", "superR", "random", "Return", "internal", "state", "passed", "setstate", "later", "VERSIONR2", "random", "Restore", "internal", "state", "object", "returned", "getstate", "random", "genexpr", "state", "version", "passed", "Random", "setstate", "version", "tuplet", "ValueErrort", "TypeErrorR4", "statet", "versiont", "internalstateR", "random", "Change", "internal", "state", "likely", "current", "state", "method", "better", "simply", "reseed", "sha512i", "reprR", "_hashlibt", "hexdigestR2", "random", "pycR$", "random", "__getstate__", "random", "__setstate__", "__class__R", "random", "__reduce__", "Choose", "random", "range", "start", "fixes", "problem", "randint", "which", "includes", "endpoint", "Python", "usually", "integer", "randrange", "empty", "range", "randrange", "integer", "randrange", "empty", "range", "randrange", "integer", "randrange", "randrange", "_randbelowR", "startt", "stopt", "stept", "_intt", "_maxwidtht", "istartt", "istopt", "widtht", "istepRB", "random", "Return", "random", "integer", "range", "including", "points", "random", "Return", "random", "range", "Handles", "where", "returned", "single", "underlying", "generator", "Underlying", "random", "generator", "supply", "enough", "choose", "population", "range", "large", "AttributeErrort", "typeR", "_warn", "_logRL", "_Methodt", "_BuiltinMethodR&", "random", "pycRH", "Choose", "random", "element", "empty", "sequence", "random", "random", "random", "random", "shuffle", "place", "return", "Optional", "random", "argument", "function", "returning", "random", "float", "default", "standard", "random", "random", "reversedt", "xrangeR", "random", "Chooses", "unique", "random", "elements", "population", "sequence", "Returns", "containing", "elements", "population", "while", "leaving", "original", "population", "unchanged", "resulting", "selection", "order", "slices", "valid", "random", "samples", "allows", "raffle", "winners", "sample", "partitioned", "grand", "prize", "second", "place", "winners", "subslices", "Members", "population", "hashable", "unique", "population", "contains", "repeats", "occurrence", "possible", "selection", "sample", "choose", "sample", "range", "integers", "xrange", "argument", "especially", "space", "efficient", "sampling", "large", "population", "sample", "xrange", "10000000", "sample", "larger", "populationi", "keysi", "_ceilRV", "hasattrt", "listR", "addR8", "KeyErrort", "isinstanceR", "populationRY", "resultt", "setsizet", "poolR_", "selectedt", "selected_add", "random", "random", "number", "range", "depending", "rounding", "random", "Triangular", "distribution", "Continuous", "distribution", "bounded", "given", "lower", "upper", "limits", "having", "given", "value", "between", "wikipedia", "Triangular_distribution", "ZeroDivisionError", "hight", "modet", "random", "Normal", "distribution", "sigma", "standard", "deviation", "NV_MAGICCONSTRV", "sigmaR", "random", "normal", "distribution", "natural", "logarithm", "distribution", "normal", "distribution", "standard", "deviation", "sigma", "value", "sigma", "greater", "_expR", "random", "Exponential", "distribution", "lambd", "divided", "desired", "should", "nonzero", "parameter", "would", "called", "lambda", "reserved", "Python", "Returned", "values", "range", "positive", "infinity", "lambd", "positive", "negative", "infinity", "lambd", "negative", "lambd", "random", "Circular", "distribution", "angle", "expressed", "radians", "between", "kappa", "concentration", "parameter", "which", "greater", "equal", "kappa", "equal", "distribution", "reduces", "uniform", "random", "angle", "range", "TWOPIt", "_sqrtt", "_cost", "_acos", "kappaR", "theta", "random", "Gamma", "distribution", "gamma", "function!", "Conditions", "parameters", "alpha", "probability", "distribution", "function", "alpha", "gamma", "alpha", "alpha", "gammavariate", "alpha", "LOG4RV", "SG_MAGICCONSTt", "alphat", "betaR", "ainvt", "cccRx", "random", "Gaussian", "distribution", "sigma", "standard", "deviation", "slightly", "faster", "normalvariate", "function", "thread", "without", "around", "calls", "x2pit", "g2rad", "random", "distribution", "Conditions", "parameters", "alpha", "Returned", "values", "range", "between", "random", "Pareto", "distribution", "alpha", "shape", "parameter", "random", "Weibull", "distribution", "alpha", "scale", "parameter", "shape", "parameter", "random", "pycR!", "__name__t", "__module__t", "__doc__R4", "_MethodTypet", "_BuiltinMethodTypeRH", "random", "Initialize", "internal", "state", "hashable", "object", "argument", "seeds", "current", "operating", "system", "specific", "randomness", "source", "available", "instead", "directly", "Distinct", "values", "between", "27814431486575L", "inclusive", "guaranteed", "yield", "distinct", "internal", "states", "guarantee", "specific", "default", "Wichmann", "generator", "hasht", "divmodt", "_seedR", "random", "random", "number", "range", "random", "Return", "internal", "state", "passed", "setstate", "later", "random", "Restore", "internal", "state", "object", "returned", "getstate", "state", "version", "passed", "Random", "setstate", "version", "random", "calls", "random", "quickly", "greater", "equal", "Example", "threads", "consume", "million", "random", "numbers", "create", "Random", "objects", "setstate", "getstate", "jumpahead", "1000000", "guaranteed", "disjoint", "segments", "period", "random", "pycR$", "Wichmann", "These", "integers", "range", "seeds", "integersi", "seeds", "range", "random", "__whseed", "hashable", "object", "argument", "seeds", "current", "guaranteed", "objects", "distinct", "codes", "distinct", "internal", "states", "obsolete", "provided", "compatibility", "routine", "prior", "Python", "method", "instead", "_WichmannHill__whseedR", "random", "whseed", "random", "Alternate", "random", "number", "generator", "using", "sources", "provided", "operating", "system", "urandom", "CryptGenRandom", "Windows", "available", "systems", "urandom", "details", "random", "number", "range", "RECIP_BPF", "random", "getrandbits", "Generates", "random", "number", "greater", "zeros", "number", "should", "integeri", "bytesR", "random", "pycR&", "method", "system", "random", "number", "generator", "argst", "random", "_stub", "Method", "should", "called", "system", "random", "number", "generator", "System", "entropy", "source", "state", "random", "_notimplemented", "random", "timesg", "stddev", "ranget", "roundR", "funcR", "totalt", "sqsumt", "smallestt", "largestt", "stddev", "random", "_test_generatorG", "gUUUUUU", "random", "_test", "__main__", "__future__R", "warningsR", "typesR", "mathR", "binasciiR", "hashlibR", "__all__Ru", "_randomR", "_instR", "random", "module", "Support", "regular", "expressions", "module", "provides", "regular", "expression", "matching", "operations", "similar", "those", "found", "supports", "Unicode", "strings", "pattern", "strings", "being", "processed", "contain", "bytes", "characters", "outside", "ASCII", "range", "Regular", "expressions", "contain", "special", "ordinary", "characters", "ordinary", "characters", "simplest", "regular", "expressions", "simply", "match", "themselves", "concatenate", "ordinary", "characters", "matches", "string", "special", "characters", "Matches", "character", "except", "newline", "Matches", "start", "string", "Matches", "string", "before", "newline", "string", "Matches", "greedy", "repetitions", "preceding", "Greedy", "means", "match", "repetitions", "possible", "Matches", "greedy", "repetitions", "preceding", "Matches", "greedy", "preceding", "greedy", "versions", "previous", "three", "special", "characters", "Matches", "repetitions", "preceding", "greedy", "version", "above", "Either", "escapes", "special", "characters", "signals", "special", "sequence", "Indicates", "characters", "first", "character", "indicates", "complementing", "creates", "match", "either", "Matches", "inside", "parentheses", "contents", "retrieved", "matched", "later", "string", "iLmsux", "below", "grouping", "version", "regular", "parentheses", "substring", "matched", "group", "accessible", "Matches", "matched", "earlier", "group", "named", "comment", "ignored", "Matches", "matches", "doesn", "consume", "string", "Matches", "doesn", "match", "Matches", "preceded", "fixed", "length", "Matches", "preceded", "fixed", "length", "Matches", "pattern", "group", "matched", "optional", "pattern", "otherwise", "special", "sequences", "consist", "character", "below", "ordinary", "character", "resulting", "match", "second", "character", "number", "Matches", "contents", "group", "number", "Matches", "start", "string", "Matches", "string", "Matches", "empty", "string", "start", "Matches", "empty", "string", "start", "Matches", "decimal", "digit", "equivalent", "Matches", "digit", "character", "equivalent", "Matches", "whitespace", "character", "equivalent", "Matches", "whitespace", "character", "equiv", "Matches", "alphanumeric", "character", "equivalent", "LOCALE", "match", "characters", "defined", "letters", "current", "locale", "Matches", "complement", "Matches", "literal", "backslash", "module", "exports", "following", "functions", "match", "Match", "regular", "expression", "pattern", "beginning", "string", "search", "Search", "string", "presence", "pattern", "Substitute", "occurrences", "pattern", "found", "string", "return", "number", "substitutions", "split", "Split", "string", "occurrences", "pattern", "findall", "occurrences", "pattern", "string", "finditer", "Return", "iterator", "yielding", "match", "object", "match", "compile", "Compile", "pattern", "RegexObject", "purge", "Clear", "regular", "expression", "cache", "escape", "Backslash", "alphanumerics", "string", "functions", "module", "takes", "flags", "optional", "parameters", "IGNORECASE", "Perform", "insensitive", "matching", "LOCALE", "dependent", "current", "locale", "MULTILINE", "matches", "beginning", "lines", "after", "newline", "string", "matches", "lines", "before", "newline", "string", "DOTALL", "matches", "character", "including", "newline", "VERBOSE", "Ignore", "whitespace", "comments", "nicer", "looking", "UNICODE", "dependent", "Unicode", "locale", "module", "defines", "exception", "error", "matcht", "searcht", "subnt", "splitt", "findallt", "compilet", "purget", "templatet", "escapet", "IGNORECASEt", "LOCALEt", "MULTILINEt", "DOTALLt", "VERBOSEt", "UNICODEt", "errors", "apply", "pattern", "start", "string", "returning", "match", "object", "match", "found", "_compileR", "patternt", "stringt", "flags", "through", "string", "looking", "match", "pattern", "returning", "match", "object", "match", "found", "Return", "string", "obtained", "replacing", "leftmost", "overlapping", "occurrences", "pattern", "string", "replacement", "either", "string", "callable", "string", "backslash", "escapes", "processed", "callable", "passed", "match", "object", "return", "replacement", "string", "replR", "countR", "Return", "tuple", "containing", "new_string", "number", "new_string", "string", "obtained", "replacing", "leftmost", "overlapping", "occurrences", "pattern", "source", "string", "replacement", "number", "number", "substitutions", "either", "string", "callable", "string", "backslash", "escapes", "processed", "callable", "passed", "match", "object", "return", "replacement", "string", "Split", "source", "string", "occurrences", "pattern", "returning", "containing", "resulting", "substrings", "maxsplitR", "Return", "overlapping", "matches", "string", "groups", "present", "pattern", "return", "groups", "tuples", "pattern", "group", "Empty", "matches", "included", "result", "finditerc", "Return", "iterator", "overlapping", "matches", "string", "match", "iterator", "returns", "match", "object", "Empty", "matches", "included", "result", "Compile", "regular", "expression", "pattern", "returning", "pattern", "object", "Clear", "regular", "expression", "cacheN", "_cachet", "cleart", "_cache_repl", "Compile", "template", "pattern", "returning", "pattern", "object", "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789c", "Escape", "alphanumeric", "characters", "pattern", "listt", "_alphanumt", "enumeratet", "alphanumt", "Cannot", "process", "flags", "argument", "compiled", "patterns1", "first", "argument", "string", "compiled", "pattern", "DEBUGt", "typeR", "Nonet", "_localet", "setlocalet", "LC_CTYPEt", "KeyErrort", "isinstancet", "_pattern_typet", "ValueErrort", "sre_compilet", "isstringt", "TypeErrorR", "_MAXCACHER", "bypass_cachet", "cachekeyt", "sre_parset", "parse_templateR", "_compile_repl", "expand_template", "_expand", "filter", "_subx", "_pickle", "Scannerc", "BRANCHt", "SUBPATTERNi", "sre_constantsRL", "lexiconRC", "PatternR", "appendt", "SubPatternR", "parset", "groupsR", "scanner", "selfRO", "phraset", "action", "__init__3", "__call__", "endRO", "lastindext", "hasattrt", "groupR", "resultRQ", "scanA", "__name__t", "__module__RY", "pycRK", "__doc__t", "sysR7", "ImportErrorR", "__all__t", "__version__t", "SRE_FLAG_IGNORECASER", "SRE_FLAG_LOCALER", "SRE_FLAG_UNICODER", "SRE_FLAG_MULTILINER", "SRE_FLAG_DOTALLR", "SRE_FLAG_VERBOSER", "SRE_FLAG_TEMPLATER", "TEMPLATEt", "SRE_FLAG_DEBUGR", "hexversionRQ", "frozensetR", "copy_regRJ", "pickleRK", "module", "builtin", "representation", "limits", "sizes", "Reprt", "repri", "islicec", "maxlevelt", "maxtuplet", "maxlistt", "maxarrayt", "maxdictt", "maxsett", "maxfrozensett", "maxdequet", "maxstringt", "maxlongt", "maxother", "__init__", "repr1R", "repr_i", "typet", "__name__t", "splitt", "joint", "hasattrt", "getattrt", "__builtin__R", "levelt", "typenamet", "partst", "appendR", "leftt", "rightt", "maxitert", "trailt", "newlevelR", "elemt", "pieces", "_repr_iterable", "repr_tuple6", "repr_list9", "array", "typecodeR", "header", "repr_array", "_possibly_sortedR", "repr_set", "frozenset", "repr_frozensetD", "deque", "repr_dequeI", "keyreprt", "valreprR!", "repr_dictL", "repr_str", "repr_longd", "instance", "Exceptiont", "__class__R", "repr_instancel", "__module__R", "sortedRC", "pycR9", "__doc__t", "__all__R", "itertoolsR", "aReprR", "module", "shlex", "lexical", "analyzer", "class", "simple", "shell", "syntaxes", "deque", "StringIOt", "shlext", "splitc", "lexical", "analyzer", "class", "simple", "shell", "syntaxes", "abcdfeghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_s", "shlex", "reading", "isinstancet", "basestringR", "Nonet", "instreamt", "infilet", "stdint", "posixt", "commenterst", "wordcharst", "whitespacet", "Falset", "whitespace_splitt", "quotest", "escapet", "escapedquotest", "stateR", "pushbackt", "linenot", "debugt", "tokent", "filestackt", "source", "selfR", "shlex", "__init__", "token", "stack", "popped", "get_token", "methodi", "shlex", "pushing", "token", "reprR", "appendleft", "shlex", "push_token", "input", "source", "lexer", "input", "source", "stack", "shlex", "pushing", "shlex", "pushing", "stream", "newstreamt", "newfile", "shlex", "push_sourceA", "input", "source", "stack", "shlex", "popping", "closeR", "popleftR", "shlex", "pop_sourceO", "token", "input", "stream", "stack", "nonempty", "shlex", "popping", "token", "shlex", "token", "shlex", "token", "read_tokenR", "sourcehookR", "get_tokenR", "specR", "shlex", "shlex", "states", "character", "shlex", "whitespace", "whitespace", "statet", "shlex", "quotes", "states", "closing", "quotations", "shlex", "escape", "states", "escaped", "characters", "shlex", "whitespace", "states&", "shlex", "punctuation", "states", "shlex", "token", "shlex", "token", "TrueR", "readR", "readlineR", "ValueErrorR", "quotedt", "escapedstatet", "nextchart", "result", "shlex", "called", "filename", "sourced", "patht", "isabst", "joint", "dirnamet", "shlex", "compiler", "Emacs", "friendly", "error", "message", "leader", "shlex", "error_leader", "shlex", "__iter__", "StopIteration", "shlex", "__name__t", "__module__t", "__doc__R", "shlex", "commentsR", "shlex", "__main__i", "Token", "pathR", "collectionsR", "cStringIOR", "ImportErrort", "__all__R", "argvt", "lexert", "fileRA", "shlex", "module", "zipextimporter", "zipextimporter", "importer", "which", "import", "extension", "modules", "zipfiles", "_memimporter", "py2exe", "package", "Overview", "zipextimporter", "contains", "ZipExtImporter", "class", "which", "allows", "Python", "binary", "extension", "modules", "contained", "archive", "without", "unpacking", "system", "zipextimporter", "install", "function", "install", "import", "containing", "extension", "modules", "import", "_memimporter", "extension", "which", "Joachim", "Bauch", "MemoryModule", "library", "library", "emulates", "win32", "function", "LoadLibrary", "Sample", "usage", "prepare", "archive", "containing", "Python", "_socket", "example", "import", "zipextimporter", "zipextimporter", "install", "import", "insert", "import", "_socket", "print", "_socket", "module", "_socket", "_socket", "_socket", "__file__", "_socket", "_socket", "__loader__", "ZipExtensionImporter", "object", "Reloading", "works", "correctly", "_socket", "reload", "_socket", "ZipExtensionImporterc", "pywintypest", "pythoncoms", "zipimportt", "zipimportert", "find_modulet", "version_infot", "replacet", "_filest", "_suffixest", "selft", "fullnamet", "patht", "resultt", "zipextimporter", "get_dataR", "zipextimporter", "locate_dll_imageB", "import", "previously", "loaded", "zipfile", "initR", "found", "zipfile", "import", "loaded", "zipfile", "module", "modulest", "has_keyt", "_memimportert", "get_verbose_flagt", "stderrt", "writet", "archivet", "set_find_procR", "load_modulet", "ZipImportErrort", "splitR", "import_modulet", "__file__t", "__loader__", "initnamet", "filenamet", "suffixesR", "zipextimporter", "object", "__class__t", "__name__R", "zipextimporter", "__repr__j", "__module__t", "get_suffixesR", "C_EXTENSIONR", "zipextimporter", "Install", "zipextimporteri", "path_hookst", "insertR", "path_importer_cachet", "clear", "zipextimporter", "installm", "__doc__R", "zipextimporter", "module", "retained", "backwards", "compatibility", "removed", "future", "moved", "version", "module", "deprecated", "please", "import", "__all__", "_compile", "__doc__t", "warningst", "warnt", "DeprecationWarningt", "module", "sre_compile", "Internal", "support", "module", "module", "mismatchi", "sre_compile", "genexpr", "tuple", "sre_compile", "dictcomp", "_sret", "getlower", "literalt", "flags", "sre_compile", "fixupe", "internal", "unsupported", "template", "operatori", "behind", "requires", "fixed", "width", "patterns", "unsupported", "operand", "appendt", "_LITERAL_CODESt", "_REPEATING_CODESt", "_SUCCESS_CODESt", "_ASSERT_CODESt", "SRE_FLAG_IGNORECASEt", "SRE_FLAG_LOCALEt", "SRE_FLAG_UNICODEt", "_ignorecase_fixest", "NoneR", "OPCODESt", "IN_IGNOREt", "NOT_LITERALt", "NEGATEt", "LITERALt", "FAILUREt", "OP_IGNOREt", "_compile_charsett", "SRE_FLAG_DOTALLt", "ANY_ALLt", "SRE_FLAG_TEMPLATEt", "errort", "REPEATt", "_compilet", "SUCCESSt", "_simplet", "MAX_REPEATt", "REPEAT_ONEt", "MIN_REPEAT_ONEt", "MAX_UNTILt", "MIN_UNTILt", "SUBPATTERNt", "MARKt", "getwidtht", "CALLt", "SRE_FLAG_MULTILINEt", "AT_MULTILINEt", "AT_LOCALEt", "AT_UNICODEt", "ATCODESt", "BRANCHt", "JUMPt", "CATEGORYt", "CH_LOCALEt", "CH_UNICODEt", "CHCODESt", "GROUPREFt", "GROUPREF_EXISTSt", "ValueError", "codet", "patternR", "emitt", "_lent", "LITERAL_CODESt", "REPEATING_CODESt", "SUCCESS_CODESt", "ASSERT_CODESt", "fixest", "skipt", "tailt", "tailappendt", "skipyest", "skipno", "sre_compile", "internal", "unsupported", "operator", "_optimize_charsetR", "RANGEt", "CHARSETt", "extendt", "BIGCHARSETR", "charsetR", "sre_compile", "bytearrayt", "TrueR", "ranget", "IndexErrorR", "_fixup_ranget", "findR", "_mk_bitmapRV", "bytest", "_bytes_to_codesRX", "isunicodet", "outRP", "charmapRJ", "rangest", "runst", "datat", "compst", "mappingt", "blockt", "chunk", "sre_compile", "pycRT", "enumeratet", "insertR", "sre_compile", "pycR_", "translatet", "_BITS_TRANSR", "bitst", "_CODEBITSt", "_intt", "sre_compile", "pycRc", "arrayR", "CODESIZERd", "itemsizet", "AssertionErrorR", "tolist", "sre_compile", "pycRe", "sre_compile", "INFOt", "SRE_INFO_PREFIXt", "SRE_INFO_LITERALt", "SRE_INFO_CHARSETt", "MAXCODERW", "xrangeR", "prefixt", "prefixappendt", "prefix_skipRY", "charsetappendRJ", "cappendRm", "maskt", "tableR", "sre_compile", "_compile_info", "STRING_TYPESt", "isinstance", "sre_compile", "isstring", "sre_compile", "_code", "sorry", "version", "supports", "named", "groupsi", "sre_parset", "parseR", "groupsR", "groupdictt", "itemsR", "compileR", "groupindext", "indexgroupRN", "sre_compile", "__doc__R", "sre_constantst", "MAGICR", "MIN_REPEATR", "ASSERTt", "ASSERT_NOTR", "_equivalencesR", "intRc", "unicodet", "NameErrort", "typeR", "sre_compile", "module", "sre_constants", "Internal", "support", "module", "MAXREPEATNi", "errorc", "__name__t", "__module__", "sre_constants", "failuret", "successt", "any_allt", "assertt", "assert_nott", "bigcharsett", "brancht", "callt", "categoryt", "charsett", "groupreft", "groupref_ignoret", "groupref_existst", "in_ignoret", "infot", "jumpt", "literalt", "literal_ignoret", "markt", "max_repeatt", "max_untilt", "min_repeatt", "min_untilt", "negatet", "not_literalt", "not_literal_ignoret", "ranget", "repeatt", "repeat_onet", "subpatternt", "min_repeat_onet", "at_beginningt", "at_beginning_linet", "at_beginning_stringt", "at_boundaryt", "at_non_boundaryt", "at_endt", "at_end_linet", "at_end_stringt", "at_loc_boundaryt", "at_loc_non_boundaryt", "at_uni_boundaryt", "at_uni_non_boundaryt", "category_digitt", "category_not_digitt", "category_spacet", "category_not_spacet", "category_wordt", "category_not_wordt", "category_linebreakt", "category_not_linebreakt", "category_loc_wordt", "category_loc_not_wordt", "category_uni_digitt", "category_uni_not_digitt", "category_uni_spacet", "category_uni_not_spacet", "category_uni_wordt", "category_uni_not_wordt", "category_uni_linebreakt", "category_uni_not_linebreakc", "listt", "sre_constants", "makedict", "__main__c", "sre_constants", "lambda", "define", "itemst", "sortt", "writet", "upper", "prefixRM", "sre_constants", "sre_constants", "Secret", "Regular", "Expression", "Engine", "regular", "expression", "matching", "engine", "generated", "sre_constants", "change", "anything", "sre_constants", "Copyright", "Secret", "rights", "reserved", "information", "usage", "redistribution", "define", "SRE_MAGIC", "SRE_OPt", "define", "SRE_FLAG_TEMPLATE", "define", "SRE_FLAG_IGNORECASE", "define", "SRE_FLAG_LOCALE", "define", "SRE_FLAG_MULTILINE", "define", "SRE_FLAG_DOTALL", "define", "SRE_FLAG_UNICODE", "define", "SRE_FLAG_VERBOSE", "define", "SRE_INFO_PREFIX", "define", "SRE_INFO_LITERAL", "define", "SRE_INFO_CHARSET", "__doc__t", "MAGICt", "_sreR", "ImportErrort", "ExceptionR", "FAILUREt", "SUCCESSt", "ANY_ALLt", "ASSERTt", "ASSERT_NOTt", "BIGCHARSETt", "BRANCHt", "CALLt", "CATEGORYt", "CHARSETt", "GROUPREFt", "GROUPREF_IGNOREt", "GROUPREF_EXISTSt", "IN_IGNOREt", "INFOt", "JUMPt", "LITERALt", "LITERAL_IGNOREt", "MARKt", "MAX_REPEATt", "MAX_UNTILt", "MIN_REPEATt", "MIN_UNTILt", "NEGATEt", "NOT_LITERALt", "NOT_LITERAL_IGNOREt", "RANGEt", "REPEATt", "REPEAT_ONEt", "SUBPATTERNt", "MIN_REPEAT_ONEt", "AT_BEGINNINGt", "AT_BEGINNING_LINEt", "AT_BEGINNING_STRINGt", "AT_BOUNDARYt", "AT_NON_BOUNDARYt", "AT_ENDt", "AT_END_LINEt", "AT_END_STRINGt", "AT_LOC_BOUNDARYt", "AT_LOC_NON_BOUNDARYt", "AT_UNI_BOUNDARYt", "AT_UNI_NON_BOUNDARYt", "CATEGORY_DIGITt", "CATEGORY_NOT_DIGITt", "CATEGORY_SPACEt", "CATEGORY_NOT_SPACEt", "CATEGORY_WORDt", "CATEGORY_NOT_WORDt", "CATEGORY_LINEBREAKt", "CATEGORY_NOT_LINEBREAKt", "CATEGORY_LOC_WORDt", "CATEGORY_LOC_NOT_WORDt", "CATEGORY_UNI_DIGITt", "CATEGORY_UNI_NOT_DIGITt", "CATEGORY_UNI_SPACEt", "CATEGORY_UNI_NOT_SPACEt", "CATEGORY_UNI_WORDt", "CATEGORY_UNI_NOT_WORDt", "CATEGORY_UNI_LINEBREAKt", "CATEGORY_UNI_NOT_LINEBREAKt", "OPCODESt", "ATCODESt", "CHCODESRH", "OP_IGNOREt", "AT_MULTILINEt", "AT_LOCALEt", "AT_UNICODEt", "CH_LOCALEt", "CH_UNICODEt", "SRE_FLAG_TEMPLATEt", "SRE_FLAG_IGNORECASEt", "SRE_FLAG_LOCALEt", "SRE_FLAG_MULTILINEt", "SRE_FLAG_DOTALLt", "SRE_FLAG_UNICODEt", "SRE_FLAG_VERBOSEt", "SRE_FLAG_DEBUGt", "SRE_INFO_PREFIXt", "SRE_INFO_LITERALt", "SRE_INFO_CHARSETR", "openRQ", "close", "sre_constants", "module", "sre_parse", "Internal", "support", "module", "0123456789t", "01234567t", "0123456789abcdefABCDEFs", "Patternc", "flagst", "opent", "groupst", "groupdictt", "lookbehind", "sre_parse", "__init__C", "redefinition", "group", "group", "group", "NoneR", "errort", "reprR", "append", "namet", "sre_parse", "opengroupJ", "remove", "sre_parse", "closegroupU", "sre_parse", "checkgroupW", "__name__t", "__module__R", "sre_parse", "SubPatternc", "patternR", "datat", "width", "sre_parse", "elsei", "tuplet", "listR", "BRANCHt", "enumeratet", "dumpt", "GROUPREF_EXISTSt", "isinstanceR!", "levelt", "seqtypest", "condgroupt", "item_yest", "item_not", "sre_parse", "sre_parse", "__repr__", "sre_parse", "__len__", "index", "sre_parse", "__delitem__", "sliceR!", "sre_parse", "__getitem__", "sre_parse", "__setitem__", "insert", "sre_parse", "pycRA", "sre_parse", "RANGER", "LITERALt", "NOT_LITERALt", "CATEGORYt", "MIN_REPEATt", "MAX_REPEATR", "MAXREPEATt", "getwidtht", "CALLt", "SUBPATTERNt", "SUCCESS", "UNITCODESt", "REPEATCODESR1", "sre_parse", "pycRJ", "sre_parse", "pycR!", "Tokenizerc", "stringR", "_Tokenizer__next", "sre_parse", "bogus", "escape", "nextt", "IndexErrorR", "chart", "sre_parse", "__next", "sre_parse", "match", "sre_parse", "sre_parse", "sre_parse", "sre_parse", "pycRW", "sre_parse", "isident", "sre_parse", "isdigit", "FalseRk", "sre_parse", "isname", "bogus", "escape", "ESCAPESR", "CATEGORIESR", "HEXDIGITSR9", "OCTDIGITSt", "DIGITSt", "ValueError", "sourcet", "escapeR", "sre_parse", "_class_escape", "cannot", "refer", "groupi", "group", "references", "lookbehind", "assertions", "supporteds", "bogus", "escape", "warningst", "warnt", "RuntimeWarningt", "GROUPREFRu", "stateR", "groupRz", "sre_parse", "_escape", "pattern", "properly", "closedi", "_parseRZ", "nestedt", "itemst", "itemsappendt", "sourcematcht", "subpatternt", "subpatternappendt", "prefixt", "itemt", "setappend", "sre_parse", "_parse_sub", "conditional", "backref", "branchesR", "pattern", "properly", "closed", "sre_parse", "_parse_sub_condx", "unexpected", "regular", "expressiont", "character", "rangei", "repetition", "number", "larges", "repeat", "intervals", "supportedi", "nothing", "repeats", "multiple", "repeatt", "unterminated", "namet", "missing", "group", "names", "character", "group", "character", "backref", "group", "unknown", "group", "group", "references", "lookbehind", "assertions", "supporteds", "unexpected", "patterns", "unknown", "specifier", "unbalanced", "parenthesiss", "syntax", "errors", "character", "group", "names", "unknown", "extensiont", "parser", "error", "_PATTERNENDERSt", "_ASSERTCHARSt", "_LOOKBEHINDASSERTCHARSt", "_REPEATCODESRZ", "SRE_FLAG_VERBOSEt", "WHITESPACEt", "SPECIAL_CHARSRD", "NEGATERy", "REPEAT_CHARSRI", "OverflowErrort", "formatR", "ASSERTt", "ASSERT_NOTRv", "FLAGSR", "AT_BEGINNINGt", "AT_ENDR", "sourcegetR", "_lent", "PATTERNENDERSt", "ASSERTCHARSt", "LOOKBEHINDASSERTCHARSRS", "startt", "code1t", "code2RP", "hereR", "msgRz", "condnameR", "sre_parse", "unbalanced", "parenthesiss", "bogus", "characters", "regular", "expression", "parset", "SRE_FLAG_DEBUGR", "sre_parse", "literalR", "pappend", "sre_parse", "unterminated", "group", "nameR", "missing", "group", "names", "negative", "group", "numbers", "character", "group", "names", "unknown", "group", "typet", "unichrR", "groupindext", "KeyErrorR", "MARKRZ", "sgetR", "makecharRa", "isoctalR", "groupsappendt", "literals", "sre_parse", "parse_template", "unmatched", "groups", "invalid", "group", "reference", "templateR", "sre_parse", "expand_template6", "__doc__t", "sre_constantsR", "AT_BEGINNING_STRINGt", "AT_BOUNDARYt", "AT_NON_BOUNDARYR", "CATEGORY_DIGITt", "CATEGORY_NOT_DIGITt", "CATEGORY_SPACEt", "CATEGORY_NOT_SPACEt", "CATEGORY_WORDt", "CATEGORY_NOT_WORDt", "AT_END_STRINGRp", "SRE_FLAG_IGNORECASEt", "SRE_FLAG_LOCALEt", "SRE_FLAG_MULTILINEt", "SRE_FLAG_DOTALLR", "SRE_FLAG_TEMPLATEt", "SRE_FLAG_UNICODER", "sre_parse", "module", "Constants", "functions", "interpreting", "results", "lstat", "Suggested", "usage", "import", "S_IMODE", "S_IFMT", "S_IFDIR", "S_ISDIR", "S_IFCHR", "S_ISCHR", "S_IFBLK", "S_ISBLK", "S_IFREG", "S_ISREG1", "S_IFIFO", "S_ISFIFO4", "S_IFLNK", "S_ISLNK7", "S_IFSOCK", "S_ISSOCK", "__doc__t", "ST_MODEt", "ST_INOt", "ST_DEVt", "ST_NLINKt", "ST_UIDt", "ST_GIDt", "ST_SIZEt", "ST_ATIMEt", "ST_MTIMEt", "ST_CTIMER", "S_ISUIDt", "S_ISGIDt", "S_ENFMTt", "S_ISVTXt", "S_IREADt", "S_IWRITEt", "S_IEXECt", "S_IRWXUt", "S_IRUSRt", "S_IWUSRt", "S_IXUSRt", "S_IRWXGt", "S_IRGRPt", "S_IWGRPt", "S_IXGRPt", "S_IRWXOt", "S_IROTHt", "S_IWOTHt", "S_IXOTHt", "UF_NODUMPt", "UF_IMMUTABLEt", "UF_APPENDt", "UF_OPAQUEt", "UF_NOUNLINKt", "UF_COMPRESSEDt", "UF_HIDDENt", "SF_ARCHIVEDt", "SF_IMMUTABLEt", "SF_APPENDt", "SF_NOUNLINKt", "SF_SNAPSHOT", "module", "string", "collection", "string", "operations", "longer", "Warning", "normally", "nowadays", "Beginning", "Python", "these", "functions", "implemented", "methods", "standard", "string", "object", "implemented", "built", "module", "called", "strop", "strop", "obsolete", "itself", "Public", "module", "variables", "whitespace", "string", "containing", "characters", "considered", "whitespace", "lowercase", "string", "containing", "characters", "considered", "lowercase", "letters", "uppercase", "string", "containing", "characters", "considered", "uppercase", "letters", "letters", "string", "containing", "characters", "considered", "letters", "digits", "string", "containing", "characters", "considered", "decimal", "digits", "hexdigits", "string", "containing", "characters", "considered", "hexadecimal", "digits", "octdigits", "string", "containing", "characters", "considered", "octal", "digits", "punctuation", "string", "containing", "characters", "considered", "punctuation", "printable", "string", "containing", "characters", "considered", "printable", "abcdefghijklmnopqrstuvwxyzt", "ABCDEFGHIJKLMNOPQRSTUVWXYZt", "0123456789t", "abcdeft", "ABCDEFt", "01234567s", "capwords", "string", "Split", "argument", "words", "using", "split", "capitalize", "using", "capitalize", "capitalized", "words", "using", "optional", "second", "argument", "absent", "whitespace", "characters", "replaced", "single", "space", "leading", "trailing", "whitespace", "removed", "otherwise", "split", "words", "capitalize", "string", "genexpr", "joint", "split", "string", "capwords", "maketrans", "string", "Return", "translation", "table", "string", "bytes", "suitable", "string", "translate", "strings", "length", "maketrans", "arguments", "lengthR", "ValueErrort", "_idmapLt", "listt", "_idmapt", "rangeR", "fromstrt", "tostrt", "string", "maketrans", "_multimapc", "Helper", "class", "combining", "multiple", "mappings", "safe_", "substitute", "combine", "mapping", "keyword", "arguments", "_primaryt", "_secondary", "selft", "primaryt", "secondary", "string", "__init__", "KeyErrorR", "string", "__getitem___", "__name__t", "__module__t", "__doc__R", "string", "_TemplateMetaclassc", "delim", "escaped", "delim", "Escape", "sequence", "delimiters", "named", "delimiter", "Python", "identifier", "braced", "delimiter", "braced", "identifier", "invalid", "Other", "formed", "delimiter", "exprs", "patternt", "delimt", "superR", "escapet", "delimitert", "idpatternt", "compilet", "IGNORECASEt", "VERBOSE", "namet", "basest", "string", "string", "Templatec", "string", "class", "supporting", "substitutions", "template", "string", "invalidi", "Invalid", "placeholder", "string", "startR", "splitlinest", "TrueR", "linest", "colnot", "lineno", "string", "_invalid", "descriptor", "substitute", "Template", "object", "needs", "argumenti", "positional", "argumentsc", "namedt", "braceds", "escapedR", "Unrecognized", "named", "group", "pattern", "groupt", "NoneR1", "mappingR", "string", "convert", "TypeErrorR", "argst", "kwsRM", "string", "substitute", "descriptor", "safe_substitute", "Template", "object", "needs", "argumenti", "positional", "argumentsc", "Unrecognized", "named", "group", "pattern", "string", "pycRM", "string", "safe_substitute", "__metaclass__R1", "string", "lower", "string", "Return", "string", "converted", "lowercase", "lower", "string", "pycRU", "upper", "string", "Return", "string", "converted", "uppercase", "upper", "string", "pycRV", "swapcase", "string", "Return", "string", "upper", "characters", "converted", "lowercase", "versa", "swapcase", "string", "pycRW", "strip", "chars", "string", "Return", "string", "leading", "trailing", "whitespace", "removed", "chars", "given", "remove", "characters", "chars", "instead", "chars", "unicode", "converted", "unicode", "before", "stripping", "strip", "chars", "string", "pycRX", "lstrip", "chars", "string", "Return", "string", "leading", "whitespace", "removed", "chars", "given", "remove", "characters", "chars", "instead", "lstrip", "string", "pycRZ", "rstrip", "chars", "string", "Return", "string", "trailing", "whitespace", "removed", "chars", "given", "remove", "characters", "chars", "instead", "rstrip", "string", "split", "maxsplit", "strings", "Return", "words", "string", "using", "delimiter", "string", "maxsplit", "given", "splits", "maxsplit", "places", "resulting", "maxsplit", "words", "specified", "whitespace", "string", "separator", "split", "splitfields", "synonymous", "maxsplit", "string", "rsplit", "maxsplit", "strings", "Return", "words", "string", "using", "delimiter", "string", "starting", "string", "working", "front", "maxsplit", "given", "maxsplit", "splits", "specified", "whitespace", "string", "separator", "rsplit", "string", "string", "Return", "string", "composed", "words", "intervening", "occurrences", "default", "separator", "single", "space", "joinfields", "synonymous", "wordsR", "string", "index", "start", "raises", "ValueError", "substring", "found", "index", "string", "pycR_", "rindex", "start", "rfind", "raises", "ValueError", "substring", "found", "rindex", "string", "count", "start", "Return", "number", "occurrences", "substring", "string", "start", "Optional", "arguments", "start", "interpreted", "slice", "notation", "count", "string", "pycRa", "start", "Return", "lowest", "index", "where", "substring", "found", "contained", "within", "start", "Optional", "arguments", "start", "interpreted", "slice", "notation", "Return", "failure", "string", "pycRb", "rfind", "start", "Return", "highest", "index", "where", "substring", "found", "contained", "within", "start", "Optional", "arguments", "start", "interpreted", "slice", "notation", "Return", "failure", "rfind", "string", "pycRc", "float", "Return", "floating", "point", "number", "represented", "string", "_float", "string", "Return", "integer", "represented", "string", "given", "which", "defaults", "string", "consist", "digits", "possibly", "preceded", "chosen", "leading", "characters", "octal", "hexadecimal", "preceding", "accepted", "string", "Return", "integer", "represented", "string", "given", "which", "defaults", "string", "consist", "digits", "possibly", "preceded", "chosen", "leading", "characters", "octal", "hexadecimal", "preceding", "accepted", "trailing", "accepted", "unless", "_long", "string", "ljust", "width", "fillchar", "string", "Return", "justified", "version", "field", "specified", "width", "padded", "spaces", "needed", "string", "never", "truncated", "specified", "fillchar", "instead", "spaces", "ljust", "widthRP", "string", "pycRk", "rjust", "width", "fillchar", "string", "Return", "right", "justified", "version", "field", "specified", "width", "padded", "spaces", "needed", "string", "never", "truncated", "specified", "fillchar", "instead", "spaces", "rjust", "string", "pycRm", "center", "width", "fillchar", "string", "Return", "center", "version", "field", "specified", "width", "padded", "spaces", "needed", "string", "never", "truncated", "specified", "fillchar", "instead", "spaces", "center", "string", "pycRn", "zfill", "width", "string", "numeric", "string", "zeros", "field", "specified", "width", "string", "never", "truncated", "isinstancet", "basestringt", "reprt", "zfill", "string", "pycRr", "expandtabs", "tabsize", "string", "Return", "string", "characters", "replaced", "appropriate", "number", "spaces", "depending", "current", "column", "tabsize", "default", "expandtabs", "tabsize", "string", "pycRs", "translate", "table", "deletions", "string", "Return", "string", "where", "characters", "occurring", "optional", "argument", "deletions", "removed", "remaining", "characters", "mapped", "through", "given", "translation", "table", "which", "string", "length", "deletions", "argument", "allowed", "Unicode", "strings", "translate", "tablet", "deletions", "string", "pycRu", "capitalize", "string", "Return", "string", "first", "character", "capitalized", "string", "replace", "maxreplace", "string", "Return", "string", "occurrences", "substring", "replaced", "optional", "argument", "maxreplace", "given", "first", "maxreplace", "occurrences", "replaced", "replace", "maxreplace", "string", "pycRx", "lowercaset", "uppercaset", "whitespacet", "Formatterc", "descriptor", "format", "Formatter", "object", "needs", "argumenti", "format_strings", "format", "missing", "required", "positional", "argument", "format_string", "IndexErrort", "vformat", "kwargsR", "string", "format", "_vformatt", "check_unused_args", "used_argst", "result", "string", "string", "recursion", "exceededi", "parset", "appendRJ", "get_fieldt", "convert_fieldR", "format_fieldR", "recursion_depthR", "literal_textt", "field_namet", "format_spect", "conversiont", "arg_used", "string", "string", "get_valueY", "string", "valueR", "string", "Unknown", "conversion", "specifier", "strRq", "string", "_formatter_parser", "string", "_formatter_field_name_splitR", "getattr", "firstt", "restR", "is_attrR", "string", "string", "letterst", "ascii_lowercaset", "ascii_uppercaset", "ascii_letterst", "digitst", "hexdigitst", "octdigitst", "punctuationt", "printableR", "xranget", "typeR", "index_errort", "atoi_errort", "atof_errort", "atol_errorRU", "splitfieldsR", "joinfieldsR_", "floatRd", "stropt", "ImportErrort", "objectR", "string", "module", "stringprep", "Library", "exposes", "various", "tables", "found", "StringPrep", "There", "kinds", "tables", "which", "member", "provided", "mappings", "which", "mapping", "function", "provided", "ucd_3_2_0s", "unicodedatat", "categoryt", "Falset", "codet", "stringprep", "in_table_a1", "b1_set", "stringprep", "in_table_b1", "teli!!", "hpaiq3", "auis3", "oviu3", "b3_exceptionst", "Nonet", "lower", "stringprep", "map_table_b3", "NFKCu", "normalizet", "stringprep", "map_table_b2", "stringprep", "in_table_c11", "stringprep", "in_table_c12", "stringprep", "in_table_c11_c12", "stringprep", "in_table_c21", "Truet", "c22_specials", "stringprep", "in_table_c22", "stringprep", "in_table_c21_c22", "stringprep", "in_table_c3", "stringprep", "in_table_c4", "stringprep", "in_table_c5", "c6_set", "stringprep", "in_table_c6", "c7_set", "stringprep", "in_table_c7", "c8_set", "stringprep", "in_table_c8", "c9_set", "stringprep", "in_table_c9", "bidirectional", "stringprep", "in_table_d1", "stringprep", "in_table_d2", "__doc__R", "unidata_versiont", "AssertionErrorR", "rangeR", "stringprep", "module", "struct", "_clearcache", "__doc__N", "_structR", "struct", "module", "subprocess", "Subprocesses", "accessible", "streams", "module", "allows", "spawn", "processes", "connect", "their", "input", "output", "error", "pipes", "obtain", "their", "return", "codes", "complete", "description", "module", "Python", "documentation", "command", "waits", "complete", "returns", "return", "check_call", "raises", "CalledProcessError", "return", "check_output", "check_call", "returns", "contents", "stdout", "instead", "return", "Popen", "class", "flexibly", "executing", "command", "process", "Constants", "Special", "value", "indicates", "should", "created", "STDOUT", "Special", "value", "indicates", "stderr", "should", "stdout", "win32t", "CalledProcessErrorc", "exception", "raised", "process", "check_call", "check_output", "returns", "status", "Attributes", "returncode", "output", "returncodet", "output", "selfR", "subprocess", "__init__3", "Command", "returned", "status", "subprocess", "__str__7", "__name__t", "__module__t", "__doc__t", "NoneR", "subprocess", "STARTUPINFOc", "dwFlagsR", "hStdInputt", "hStdOutputt", "hStdErrort", "wShowWindow", "subprocess", "pywintypesc", "IOErrort", "error", "subprocess", "pollt", "PIPE_BUFi", "Popent", "PIPEt", "STDOUTt", "callt", "check_callt", "check_output", "CREATE_NEW_CONSOLEt", "CREATE_NEW_PROCESS_GROUPt", "STD_INPUT_HANDLEt", "STD_OUTPUT_HANDLEt", "STD_ERROR_HANDLEt", "SW_HIDEt", "STARTF_USESTDHANDLESt", "STARTF_USESHOWWINDOWR", "SC_OPEN_MAXi", "_deadstate", "_activet", "_internal_pollt", "maxintR", "removet", "ValueError", "instt", "subprocess", "_cleanupg", "Truet", "OSErrorR", "errnot", "EINTR", "funct", "argst", "subprocess", "_eintr_retry_callv", "Return", "command", "arguments", "reproducing", "current", "settings", "flags", "warnoptions", "debugt", "optimizet", "dont_write_bytecodet", "no_user_sitet", "no_sitet", "ignore_environmentt", "verboset", "bytes_warningt", "py3k_warningi", "hash_randomizations", "itemst", "getattrR", "flagst", "appendt", "warnoptions", "flag_opt_mapR5", "flagt", "optRD", "subprocess", "_args_from_interpreter_flags", "command", "arguments", "command", "complete", "return", "returncode", "attribute", "arguments", "Popen", "constructor", "Example", "retcode", "popenargst", "kwargs", "subprocess", "command", "arguments", "command", "complete", "return", "otherwise", "raise", "CalledProcessError", "CalledProcessError", "object", "return", "returncode", "attribute", "arguments", "Popen", "constructor", "Example", "check_call", "retcodeR", "subprocess", "command", "arguments", "return", "output", "string", "raises", "CalledProcessError", "CalledProcessError", "object", "return", "returncode", "attribute", "output", "output", "attribute", "arguments", "Popen", "constructor", "Example", "check_output", "stdout", "argument", "allowed", "internally", "capture", "standard", "error", "result", "stderr", "STDOUT", "check_output", "non_existent_file", "stderr", "STDOUT", "non_existent_file", "directory", "stdouts3", "stdout", "argument", "allowed", "overridden", "communicateR", "processR", "unused_errRY", "subprocess", "Translate", "sequence", "arguments", "command", "string", "using", "rules", "runtime", "Arguments", "delimited", "white", "space", "which", "either", "space", "string", "surrounded", "double", "quotation", "marks", "interpreted", "single", "argument", "regardless", "white", "space", "contained", "within", "quoted", "string", "embedded", "argument", "double", "quotation", "preceded", "backslash", "interpreted", "literal", "double", "quotation", "Backslashes", "interpreted", "literally", "unless", "immediately", "precede", "double", "quotation", "backslashes", "immediately", "precede", "double", "quotation", "every", "backslashes", "interpreted", "literal", "backslash", "number", "backslashes", "backslash", "escapes", "double", "quotation", "described", "FalseRO", "extendt", "resultt", "needquotet", "bs_buft", "subprocess", "list2cmdline", "Execute", "child", "program", "process", "complete", "description", "arguments", "Python", "documentation", "Arguments", "string", "sequence", "program", "arguments", "bufsize", "supplied", "buffering", "argument", "function", "creating", "stdin", "stdout", "stderr", "objects", "executable", "replacement", "program", "execute", "stdin", "stdout", "stderr", "These", "specify", "executed", "programs", "standard", "input", "standard", "output", "standard", "error", "handles", "respectively", "preexec_fn", "POSIX", "object", "called", "child", "process", "before", "child", "executed", "close_fds", "Controls", "closing", "inheriting", "descriptors", "shell", "command", "executed", "through", "shell", "current", "directory", "before", "child", "executed", "Defines", "environment", "variables", "process", "universal_newlines", "universal", "endings", "objects", "stdin", "stdout", "stderr", "startupinfo", "creationflags", "Windows", "Attributes", "stdin", "stdout", "stderr", "returncode", "Create", "Popen", "instance", "bufsize", "integers0", "preexec_fn", "supported", "Windows", "platformssS", "close_fds", "supported", "Windows", "platforms", "redirect", "stdin", "stdout", "stderrs2", "startupinfo", "supported", "Windows", "platformsi", "creationflags", "supported", "Windows", "platformst", "isinstancet", "longt", "TypeErrort", "mswindowsR", "stdinRZ", "stderrt", "universal_newlinest", "_get_handlest", "_execute_childt", "ExceptionR", "exc_infot", "Closet", "closet", "EnvironmentErrort", "msvcrtt", "open_osfhandlet", "Detacht", "fdopen", "bufsizet", "executableRt", "preexec_fnt", "close_fdst", "shellt", "envRw", "startupinfot", "creationflagst", "p2creadt", "p2cwritet", "c2preadt", "c2pwritet", "errreadt", "errwritet", "to_closet", "exc_typet", "exc_valuet", "exc_tracet", "subprocess", "replace", "subprocess", "_translate_newlines", "_child_createdR", "_maxint", "subprocess", "__del__", "Interact", "process", "stdin", "stdout", "stderr", "until", "reached", "process", "terminate", "optional", "input", "argument", "should", "string", "child", "process", "should", "child", "communicate", "returns", "tuple", "stdout", "stderr", "countR", "writeR", "EPIPEt", "EINVALR", "readRU", "_communicate", "inputRZ", "subprocess", "Check", "child", "process", "terminated", "return", "returncode", "attribute", "subprocess", "Construct", "return", "tuple", "objects", "p2cread", "p2cwrite", "c2pread", "c2pwrite", "errread", "errwrite", "NNNNNN", "_subprocesst", "GetStdHandleR", "CreatePipeR", "get_osfhandlet", "filenot", "_make_inheritablet", "subprocess", "pycRx", "Return", "duplicate", "handle", "which", "inheritablei", "DuplicateHandlet", "GetCurrentProcesst", "DUPLICATE_SAME_ACCESS", "handle", "subprocess", "return", "absolut", "w9xpopen", "w9xpopen", "exesZ", "Cannot", "locate", "w9xpopen", "which", "needed", "Popen", "shell", "platform", "pathRd", "dirnameR", "GetModuleFileNamet", "existsR", "exec_prefixt", "RuntimeError", "w9xpopen", "subprocess", "_find_w9xpopen9", "Execute", "program", "Windows", "version", "COMSPECs", "command", "subprocess", "_close_in_parents", "typest", "StringTypesRk", "environRX", "formatt", "GetVersionR", "basenamet", "lowerR", "CreateProcessRp", "WindowsErrorR5", "_handleRv", "comspecR", "tidR6", "subprocess", "pycRy", "Check", "child", "process", "terminated", "Returns", "returncode", "attribute", "method", "called", "__del__", "refer", "objects", "local", "scope", "_WaitForSingleObjectt", "_WAIT_OBJECT_0t", "_GetExitCodeProcess", "subprocess", "child", "process", "terminate", "Returns", "returncode", "attribute", "WaitForSingleObjectR", "INFINITEt", "GetExitCodeProcess", "subprocess", "pycRU", "buffer", "subprocess", "_readerthread", "targetR5", "newlines", "threadingt", "ThreadR", "setDaemonR0", "startRu", "hasattrt", "fileR", "stdout_threadt", "stderr_threadR6", "subprocess", "signal", "process", "Unsupported", "signal", "signalt", "SIGTERMt", "terminatet", "CTRL_C_EVENTR", "killRv", "CTRL_BREAK_EVENTR", "subprocess", "send_signal", "Terminates", "process", "TerminateProcessR", "winerrorR", "STILL_ACTIVER", "subprocess", "Construct", "return", "tuple", "objects", "p2cread", "p2cwrite", "c2pread", "c2pwrite", "errread", "errwrite", "pipe_cloexect", "updateRo", "__stdout__", "subprocess", "pycRx", "fcntlt", "FD_CLOEXECt", "AttributeErrort", "F_GETFDt", "F_SETFD", "cloexect", "cloexec_flagt", "subprocess", "_set_cloexec_flagI", "Create", "CLOEXEC", "pipeR", "subprocess", "closerangei", "MAXFDt", "xrangeR", "subprocess", "_close_fdsb", "Execute", "program", "POSIX", "version", "subprocess", "subprocess", "_dup2", "listR", "isenabledt", "disableR", "forkRv", "enableR0", "chdirR", "execvpt", "execvpeR", "tracebackt", "format_exceptionRd", "child_tracebackR", "picklet", "dumpst", "_exitR7", "waitpidR1", "ECHILDt", "loads", "errpipe_readt", "errpipe_writet", "gc_was_enabledR", "closedR", "exc_linesR", "pickle_bitsR6", "child_exception", "subprocess", "pycRy", "Unknown", "child", "status!", "_WIFSIGNALEDt", "_WTERMSIGt", "_WIFEXITEDt", "_WEXITSTATUS", "subprocess", "_handle_exitstatus", "Check", "child", "process", "terminated", "Returns", "returncode", "attribute", "method", "called", "__del__", "cannot", "reference", "anything", "outside", "local", "scope", "methods", "calls", "_waitpidt", "_WNOHANGt", "_os_errort", "_ECHILDRv", "subprocess", "child", "process", "terminate", "Returns", "returncode", "attribute", "subprocess", "pycRU", "flushR", "_has_pollt", "_communicate_with_pollt", "_communicate_with_selectR", "subprocess", "registerR", "file_objt", "eventmask", "fd2filet", "poller", "subprocess", "register_and_appendi", "unregisterR", "subprocess", "close_unregister_and_removem", "selectR", "POLLOUTt", "POLLINt", "POLLPRIRZ", "_PIPE_BUFR", "fd2outputR", "select_POLLIN_POLLPRIt", "input_offsett", "readyR6", "modet", "chunkR", "subprocess", "read_sett", "write_setRZ", "rlistt", "wlistt", "xlistR6", "bytes_writtenR", "subprocess", "signal", "process", "subprocess", "Terminate", "process", "SIGTERM", "subprocess", "process", "SIGKILL", "SIGKILL", "subprocess", "WAIT_OBJECT_0R", "WIFSIGNALEDt", "WTERMSIGt", "WIFEXITEDt", "WEXITSTATUSR!", "WNOHANGR", "subprocess", "GHWnF", "Process", "setuid", "subprocess", "lambda", "Looking", "dmesgt", "grept", "hdaRt", "Trying", "weird", "exists", "exist", "thought", "Child", "traceback", "Errors", "error", "getuidRU", "reprR1", "ENOENTR", "plistt", "subprocess", "_demo_posix", "Looking", "PROMPT", "output", "PROMPT", "Executing", "subprocess", "_demo_windows", "__main__", "platformRs", "__all__R", "sysconfR", "objectR", "subprocess", "module", "tempfile", "Temporary", "files", "module", "provides", "generic", "level", "interfaces", "creating", "temporary", "files", "directories", "interfaces", "provided", "module", "without", "conditions", "except", "mktemp", "mktemp", "subject", "conditions", "should", "provided", "backward", "compatibility", "module", "provides", "items", "TMP_MAX", "maximum", "number", "names", "tried", "before", "giving", "template", "default", "prefix", "temporary", "names", "change", "control", "default", "prefix", "tempdir", "string", "before", "first", "routine", "module", "considered", "another", "candidate", "location", "store", "temporary", "files", "NamedTemporaryFilet", "TemporaryFilet", "SpooledTemporaryFilet", "mkstempt", "mkdtempt", "mktempt", "TMP_MAXt", "gettempprefixt", "tempdirt", "gettempdiri", "Random", "StringIOc", "tempfile", "_set_cloexec", "_fcntlt", "fcntlt", "F_GETFDt", "IOErrort", "FD_CLOEXECt", "F_SETFD", "flags", "tempfile", "O_NOINHERITt", "O_NOFOLLOWt", "O_BINARYi", "lstatt", "statc", "openR", "errort", "close", "tempfile", "_stat", "Falset", "tempfile", "_existsd", "_RandomNameSequencec", "instance", "_RandomNameSequence", "generates", "endless", "sequence", "unpredictable", "strings", "which", "safely", "incorporated", "names", "string", "characters", "Multiple", "threads", "safely", "instance", "_RandomNameSequence", "iterator", "abcdefghijklmnopqrstuvwxyzt", "ABCDEFGHIJKLMNOPQRSTUVWXYZt", "0123456789_c", "_allocate_lockt", "mutexR", "patht", "normcase", "tempfile", "__init__x", "_rng_pid", "getpidt", "getattrt", "Nonet", "_Randomt", "_rngR", "cur_pid", "tempfile", "tempfile", "__iter__", "123456t", "charactersR6", "choicet", "acquiret", "releaseR", "chooset", "dummyt", "letters", "tempfile", "__name__t", "__module__t", "__doc__R", "propertyR6", "tempfile", "Generate", "candidate", "temporary", "directories", "which", "_get_default_tempdir", "TMPDIRt", "TEMPt", "riscoss", "Wimp$ScrapDirt", "temps", "temps", "getenvt", "appendt", "namet", "extendt", "getcwdt", "AttributeErrorR", "curdir", "dirlistt", "envnamet", "dirname", "tempfile", "_candidate_tempdir_list", "Calculate", "default", "directory", "temporary", "files", "routine", "should", "called", "exactly", "determine", "whether", "candidate", "usable", "trying", "create", "write", "directory", "successful", "deleted", "prevent", "denial", "service", "randomized", "closefdt", "blatNi", "usable", "temporary", "directory", "found", "_text_openflagsR", "abspatht", "xrangeRD", "writeR", "unlinkt", "OSErrorR", "argst", "_errnot", "EEXISTRP", "EACCESt", "isdirt", "accesst", "W_OKt", "ENOENT", "namerRU", "seqRP", "filenameR", "tempfile", "_get_default_tempdir", "Common", "setup", "sequence", "callable", "interfaces", "_name_sequenceR2", "_once_lockR", "tempfile", "_get_candidate_names", "common", "mkstemp", "TemporaryFile", "NamedTemporaryFile", "usable", "temporary", "foundN", "errnoRd", "namesRm", "fileR", "tempfile", "_mkstemp_inner", "Accessor", "tempdir", "template", "template", "tempfile", "Accessor", "tempfile", "tempdir", "tempfile", "callable", "function", "create", "return", "unique", "temporary", "return", "value", "where", "descriptor", "returned", "filename", "suffix", "specified", "suffix", "otherwise", "there", "suffix", "prefix", "specified", "begin", "prefix", "otherwise", "default", "prefix", "specified", "created", "directory", "otherwise", "default", "directory", "specified", "opened", "default", "opened", "binary", "operating", "systems", "makes", "difference", "readable", "writable", "creating", "operating", "system", "permission", "indicate", "whether", "executable", "executable", "descriptor", "inherited", "children", "process", "Caller", "responsible", "deleting", "_bin_openflagsRz", "suffixt", "prefixRl", "textR", "tempfile", "callable", "function", "create", "return", "unique", "temporary", "directory", "return", "value", "pathname", "directory", "Arguments", "mkstemp", "except", "argument", "accepted", "directory", "readable", "writable", "searchable", "creating", "Caller", "responsible", "deleting", "directory", "usable", "temporary", "directory", "foundN", "mkdirRb", "tempfile", "callable", "function", "return", "unique", "temporary", "created", "Arguments", "mkstemp", "except", "argument", "accepted", "function", "unsafe", "should", "refers", "exist", "point", "around", "creating", "someone", "beaten", "punch", "usable", "temporary", "filename", "foundN", "tempfile", "_TemporaryFileWrapperc", "Temporary", "wrapper", "class", "provides", "wrapper", "around", "files", "opened", "temporary", "particular", "seeks", "automatically", "remove", "longer", "needed", "close_calledt", "delete", "tempfile", "__dict__R1", "issubclasst", "typet", "setattr", "tempfile", "__getattr__", "__enter__", "tempfile", "tempfile", "tempfile", "__del__", "__exit__R", "valuet", "result", "tempfile", "tempfile", "tempfile", "Create", "return", "temporary", "Arguments", "prefix", "suffix", "mkstemp", "argument", "fdopen", "default", "bufsize", "buffer", "argument", "fdopen", "default", "delete", "whether", "deleted", "close", "default", "created", "mkstemp", "would", "Returns", "object", "interface", "accessible", "attribute", "automatically", "deleted", "closed", "unless", "delete", "argument", "False", "O_TEMPORARYRz", "fdopenR", "BaseExceptionRa", "modet", "bufsizeR", "tempfile", "posixt", "cygwinc", "Create", "return", "temporary", "Arguments", "prefix", "suffix", "mkstemp", "argument", "fdopen", "default", "bufsize", "buffer", "argument", "fdopen", "default", "created", "mkstemp", "would", "Returns", "object", "interface", "cease", "exist", "closed", "tempfile", "Temporary", "wrapper", "specialized", "switch", "StringIO", "exceeds", "certain", "fileno", "needed", "_StringIOt", "_filet", "_max_sizeR", "_rolledt", "_TemporaryFileArgs", "max_sizeR", "tempfile", "tellt", "rollover", "tempfile", "_check", "getvaluet", "seekR", "newfile", "tempfile", "Cannot", "enter", "context", "closed", "closedt", "ValueError", "tempfile", "tempfile", "tempfile", "pycR7", "tempfile", "tempfile", "fileno", "tempfile", "flush", "tempfile", "isatty", "tempfile", "tempfile", "tempfile", "pycRP", "tempfile", "pycRD", "tempfile", "readline", "tempfile", "readlines", "tempfile", "tempfile", "softspace", "tempfile", "tempfile", "truncate", "tempfile", "tempfile", "writelinesR", "iterableRy", "tempfile", "xreadlines", "hasattrR", "iterR", "tempfile", "tempfile", "__all__t", "randomR", "cStringIOR", "ImportErrorR", "threadt", "_threadt", "dummy_threadt", "allocate_lockR", "O_RDWRt", "O_CREATt", "O_EXCLR", "platformR", "tempfile", "module", "textwrap", "wrapping", "filling", "$Id$i", "_unicodec", "__name__t", "__module__", "textwrap", "TextWrappert", "wrapt", "fillt", "dedents", "Object", "wrapping", "filling", "public", "interface", "consists", "methods", "other", "methods", "there", "subclasses", "override", "order", "tweak", "default", "behaviour", "completely", "replace", "wrapping", "algorithm", "probably", "override", "_wrap_chunks", "Several", "instance", "attributes", "control", "various", "aspects", "wrapping", "width", "default", "maximum", "width", "wrapped", "lines", "unless", "break_long_words", "false", "initial_indent", "default", "string", "prepended", "first", "wrapped", "output", "Counts", "towards", "width", "subsequent_indent", "default", "string", "prepended", "lines", "first", "wrapped", "output", "counts", "towards", "width", "expand_tabs", "default", "Expand", "input", "spaces", "before", "further", "processing", "become", "spaces", "depending", "position", "false", "treated", "single", "character", "replace_whitespace", "default", "Replace", "whitespace", "characters", "input", "spaces", "after", "expansion", "expand_tabs", "false", "replace_whitespace", "every", "converted", "single", "space!", "fix_sentence_endings", "default", "false", "Ensure", "sentence", "ending", "punctuation", "always", "followed", "spaces", "default", "because", "algorithm", "unavoidably", "imperfect", "break_long_words", "default", "Break", "words", "longer", "width", "false", "those", "words", "broken", "lines", "might", "longer", "width", "break_on_hyphens", "default", "Allow", "breaking", "hyphenated", "words", "wrapping", "occur", "preferably", "whitespaces", "right", "after", "hyphens", "compound", "words", "drop_whitespace", "default", "leading", "trailing", "whitespace", "lines", "widtht", "initial_indentt", "subsequent_indentt", "expand_tabst", "replace_whitespacet", "fix_sentence_endingst", "break_long_wordst", "drop_whitespacet", "break_on_hyphenst", "compilet", "wordsep_ret", "patternt", "wordsep_re_unit", "wordsep_simple_ret", "wordsep_simple_re_uni", "selfR", "textwrap", "__init__s", "_munge_whitespace", "string", "string", "Munge", "whitespace", "expand", "convert", "other", "whitespace", "characters", "spaces", "becomes", "expandtabsR", "isinstancet", "translatet", "whitespace_transR", "unicode_whitespace_trans", "textwrap", "_munge_whitespace", "_split", "string", "string", "Split", "indivisible", "chunks", "Chunks", "quite", "words", "_wrap_chunks", "details", "example", "option!", "breaks", "following", "chunks", "option!", "break_on_hyphens", "option!", "otherwise", "splitt", "filtert", "chunks", "textwrap", "_split", "_fix_sentence_endings", "chunks", "string", "Correct", "sentence", "endings", "buried", "chunks", "original", "contains", "munge_whitespace", "split", "convert", "which", "spaces", "method", "simply", "changes", "space", "sentence_end_ret", "searcht", "patsearch", "textwrap", "_fix_sentence_endings", "_handle_long_word", "chunks", "string", "cur_line", "string", "cur_len", "width", "Handle", "chunk", "likely", "whitespace", "appendt", "reversed_chunkst", "cur_linet", "cur_lenR", "space_left", "textwrap", "_handle_long_word", "_wrap_chunks", "chunks", "string", "string", "sequence", "chunks", "return", "lines", "length", "width", "break_long_words", "false", "lines", "longer", "Chunks", "correspond", "roughly", "words", "whitespace", "between", "chunk", "indivisible", "modulo", "break_long_words", "break", "between", "chunks", "Chunks", "should", "internal", "whitespace", "chunk", "either", "whitespace", "Whitespace", "chunks", "removed", "beginning", "lines", "apart", "whitespace", "preserved", "invalid", "width", "ValueErrort", "reverseR", "stripR0", "linesR3", "indentR", "textwrap", "_wrap_chunks", "string", "string", "Reformat", "single", "paragraph", "lines", "width", "columns", "return", "wrapped", "lines", "expanded", "string", "expandtabs", "other", "whitespace", "characters", "including", "newline", "converted", "space", "textwrap", "string", "string", "Reformat", "single", "paragraph", "lines", "width", "columns", "return", "string", "containing", "entire", "wrapped", "paragraph", "textwrap", "__doc__t", "stringt", "maketranst", "_whitespaceR", "uspacet", "lowercaseR", "Truet", "FalseR", "textwrap", "single", "paragraph", "returning", "wrapped", "lines", "Reformat", "single", "paragraph", "lines", "width", "columns", "return", "wrapped", "lines", "default", "expanded", "string", "expandtabs", "other", "whitespace", "characters", "including", "newline", "converted", "space", "TextWrapper", "class", "available", "keyword", "customize", "wrapping", "behaviour", "kwargst", "textwrap", "single", "paragraph", "returning", "string", "Reformat", "single", "paragraph", "lines", "width", "columns", "return", "string", "containing", "entire", "wrapped", "paragraph", "expanded", "other", "whitespace", "characters", "converted", "space", "TextWrapper", "class", "available", "keyword", "customize", "wrapping", "behaviour", "textwrap", "Remove", "common", "leading", "whitespace", "every", "triple", "quoted", "strings", "display", "while", "still", "presenting", "source", "indented", "spaces", "treated", "whitespace", "equal", "lines", "hello", "thello", "considered", "common", "leading", "whitespace", "behaviour", "Python", "older", "versions", "module", "incorrectly", "expanded", "before", "searching", "common", "leading", "whitespace", "margin", "_whitespace_only_ret", "_leading_whitespace_ret", "findallt", "startswitht", "enumeratet", "AssertionErrorR", "margint", "indentsR", "textwrap", "__main__s", "Hello", "there", "indented", "__revision__R", "unicodeR", "NameErrort", "objectt", "__all__RB", "MULTILINERL", "textwrap", "module", "threading", "Thread", "module", "emulating", "subset", "threading", "model", "deque", "count", "timet", "sleep", "format_exct", "activeCountt", "active_countt", "Conditiont", "currentThreadt", "current_threadt", "enumeratet", "Eventt", "Lockt", "RLockt", "Semaphoret", "BoundedSemaphoret", "Threadt", "Timert", "setprofilet", "settracet", "localt", "stack_sizet", "ignoret", "categoryt", "modulet", "threadingt", "messages", "exc_cleart", "_Verbosec", "Nonet", "_VERBOSEt", "_Verbose__verbose", "selft", "verbose", "threading", "__init__", "thread", "_get_identt", "_activet", "namet", "KeyErrort", "_syst", "stderrt", "write", "formatt", "argst", "identR$", "threading", "_note", "__name__t", "__module__R", "threading", "profile", "function", "threads", "started", "threading", "module", "passed", "setprofile", "thread", "before", "method", "called", "_profile_hook", "threading", "trace", "function", "threads", "started", "threading", "module", "passed", "settrace", "thread", "before", "method", "called", "_trace_hook", "threading", "Factory", "function", "returns", "reentrant", "reentrant", "released", "thread", "acquired", "thread", "acquired", "reentrant", "thread", "acquire", "again", "without", "blocking", "thread", "release", "acquired", "_RLock", "kwargs", "threading", "reentrant", "released", "thread", "acquired", "thread", "acquired", "reentrant", "thread", "acquire", "again", "without", "blocking", "thread", "release", "acquired", "_allocate_lockt", "_RLock__blockR", "_RLock__ownert", "_RLock__count", "threading", "pycR!", "owner", "count", "__class__R", "owner", "threading", "__repr__", "Acquire", "blocking", "blocking", "invoked", "without", "arguments", "thread", "already", "increment", "recursion", "level", "return", "immediately", "Otherwise", "another", "thread", "block", "until", "unlocked", "unlocked", "owned", "thread", "ownership", "recursion", "level", "return", "thread", "blocked", "waiting", "until", "unlocked", "ownership", "There", "return", "value", "invoked", "blocking", "argument", "thing", "called", "without", "arguments", "return", "invoked", "blocking", "argument", "false", "block", "without", "argument", "would", "block", "return", "false", "immediately", "otherwise", "thing", "called", "without", "arguments", "return", "acquire", "recursive", "successs", "acquire", "initial", "successs", "acquire", "failure", "acquire", "blockingt", "threading", "Release", "decrementing", "recursion", "level", "after", "decrement", "reset", "unlocked", "owned", "thread", "other", "threads", "blocked", "waiting", "become", "unlocked", "allow", "exactly", "proceed", "after", "decrement", "recursion", "level", "still", "nonzero", "remains", "locked", "owned", "calling", "thread", "method", "calling", "thread", "RuntimeError", "raised", "method", "called", "unlocked", "There", "return", "value", "cannot", "release", "acquired", "locki", "release", "final", "releases", "release", "final", "releaseN", "RuntimeErrorR7", "releaseR", "threading", "threading", "__exit__", "_acquire_restore", "count_ownerR", "threading", "_acquire_restore", "_release_save", "threading", "_release_save", "threading", "_is_owned", "__doc__R", "__enter__R", "threading", "pycR2", "Factory", "function", "returns", "condition", "variable", "object", "condition", "variable", "allows", "threads", "until", "notified", "another", "thread", "argument", "given", "RLock", "object", "underlying", "Otherwise", "RLock", "object", "created", "underlying", "_Condition", "threading", "Condition", "variables", "allow", "threads", "until", "notified", "another", "thread", "_Condition__lockR", "AttributeErrorRF", "_Condition__waiters", "lockR", "threading", "pycR!", "threading", "pycRJ", "threading", "pycRD", "Condition", "lenRN", "threading", "threading", "pycRG", "threading", "pycRF", "Falset", "threading", "pycRH", "until", "notified", "until", "timeout", "occurs", "calling", "thread", "acquired", "method", "called", "RuntimeError", "raised", "method", "releases", "underlying", "blocks", "until", "awakened", "notify", "notifyAll", "condition", "variable", "another", "thread", "until", "optional", "timeout", "occurs", "awakened", "timed", "acquires", "returns", "timeout", "argument", "present", "should", "floating", "point", "number", "specifying", "timeout", "operation", "seconds", "fractions", "thereof", "underlying", "RLock", "released", "using", "release", "method", "since", "actually", "unlock", "acquired", "multiple", "times", "recursively", "Instead", "internal", "interface", "RLock", "class", "which", "really", "unlocks", "recursively", "acquired", "several", "times", "Another", "internal", "interface", "restore", "recursion", "level", "reacquired", "cannot", "acquired", "locks", "timed", "appendRG", "_timeRS", "_sleept", "removet", "ValueErrorRF", "timeoutt", "waitert", "saved_statet", "endtimet", "delayt", "gotitt", "remaining", "threading", "wait5", "threads", "waiting", "condition", "calling", "thread", "acquired", "method", "called", "RuntimeError", "raised", "method", "wakes", "threads", "waiting", "condition", "variable", "threads", "waiting", "cannot", "notify", "acquired", "locks", "notify", "waitersNs", "notify", "notifying", "waiter", "waitersR", "threading", "notifyu", "threads", "waiting", "condition", "calling", "thread", "acquired", "method", "called", "RuntimeError", "raised", "threading", "notifyAll", "notify_all", "threading", "pycRK", "factory", "function", "returns", "semaphore", "Semaphores", "manage", "counter", "representing", "number", "release", "calls", "minus", "number", "acquire", "calls", "initial", "value", "acquire", "method", "blocks", "necessary", "until", "return", "without", "making", "counter", "negative", "given", "value", "defaults", "_Semaphore", "threading", "Semaphores", "manage", "counter", "representing", "number", "release", "calls", "minus", "number", "acquire", "calls", "initial", "value", "acquire", "method", "blocks", "necessary", "until", "return", "without", "making", "counter", "negative", "given", "value", "defaults", "semaphore", "initial", "value", "_Semaphore__condt", "_Semaphore__value", "valueR", "threading", "pycR!", "Acquire", "semaphore", "decrementing", "internal", "counter", "invoked", "without", "arguments", "internal", "counter", "larger", "entry", "decrement", "return", "immediately", "entry", "block", "waiting", "until", "other", "thread", "called", "release", "larger", "proper", "interlocking", "multiple", "acquire", "calls", "blocked", "release", "exactly", "implementation", "random", "order", "which", "blocked", "threads", "awakened", "should", "relied", "There", "return", "value", "invoked", "blocking", "thing", "called", "without", "arguments", "return", "invoked", "blocking", "false", "block", "without", "argument", "would", "block", "return", "false", "immediately", "otherwise", "thing", "called", "without", "arguments", "return", "acquire", "blocked", "waiting", "value", "acquire", "success", "value", "threading", "Release", "semaphore", "incrementing", "internal", "counter", "counter", "entry", "another", "thread", "waiting", "become", "larger", "again", "thread", "release", "success", "value", "threading", "threading", "pycRD", "threading", "pycRi", "factory", "function", "returns", "bounded", "semaphore", "bounded", "semaphore", "checks", "current", "value", "doesn", "exceed", "initial", "value", "ValueError", "raised", "situations", "semaphores", "guard", "resources", "limited", "capacity", "semaphore", "released", "times", "given", "value", "defaults", "regular", "semaphores", "bounded", "semaphores", "manage", "counter", "representing", "number", "release", "calls", "minus", "number", "acquire", "calls", "initial", "value", "acquire", "method", "blocks", "necessary", "until", "return", "without", "making", "counter", "negative", "given", "value", "defaults", "_BoundedSemaphore", "threading", "bounded", "semaphore", "checks", "current", "value", "doesn", "exceed", "initial", "value", "ValueError", "raised", "situations", "semaphores", "guard", "resources", "limited", "capacity", "_initial_value", "threading", "pycR!", "Release", "semaphore", "incrementing", "internal", "counter", "counter", "entry", "another", "thread", "waiting", "become", "larger", "again", "thread", "number", "releases", "exceeds", "number", "acquires", "raise", "ValueError", "Semaphore", "released", "timesi", "threading", "threading", "pycRm", "factory", "function", "returns", "event", "Events", "manage", "method", "reset", "false", "clear", "method", "method", "blocks", "until", "_Event", "threading", "factory", "function", "returns", "event", "object", "event", "manages", "method", "reset", "false", "clear", "method", "method", "blocks", "until", "_Event__condRR", "_Event__flag", "threading", "pycR!", "threading", "_reset_internal_locks6", "Return", "internal", "threading", "isSet", "internal", "threads", "waiting", "become", "awakened", "Threads", "block", "threading", "Reset", "internal", "false", "Subsequently", "threads", "calling", "block", "until", "called", "internal", "again", "threading", "clearK", "Block", "until", "internal", "internal", "entry", "return", "immediately", "Otherwise", "block", "until", "another", "thread", "calls", "until", "optional", "timeout", "occurs", "timeout", "argument", "present", "should", "floating", "point", "number", "specifying", "timeout", "operation", "seconds", "fractions", "thereof", "method", "returns", "internal", "always", "return", "except", "timeout", "given", "operation", "times", "threading", "pycRa", "is_setRt", "threading", "pycRo", "Thread", "_counter", "template", "threading", "_newnamel", "class", "represents", "thread", "control", "class", "safely", "subclassed", "limited", "fashion", "constructor", "should", "always", "called", "keyword", "arguments", "Arguments", "group", "should", "reserved", "future", "extension", "ThreadGroup", "class", "implemented", "target", "callable", "object", "invoked", "method", "Defaults", "meaning", "nothing", "called", "thread", "default", "unique", "constructed", "Thread", "where", "small", "decimal", "number", "argument", "tuple", "target", "invocation", "Defaults", "kwargs", "dictionary", "keyword", "arguments", "target", "invocation", "Defaults", "subclass", "overrides", "constructor", "invoke", "class", "constructor", "Thread", "__init__", "before", "doing", "anything", "thread", "group", "argument", "AssertionErrorR", "_Thread__targett", "strRy", "_Thread__namet", "_Thread__argst", "_Thread__kwargst", "_set_daemont", "_Thread__daemonict", "_Thread__identR", "_Thread__startedRR", "_Thread__stoppedR", "_Thread__blockRS", "_Thread__initializedR&", "_Thread__stderr", "groupt", "targetR$", "threading", "pycR!", "hasattrR", "threading", "pycRr", "threading", "_block", "daemon", "threading", "Thread", "__init__", "calledt", "initialt", "startedt", "stoppeds", "daemons", "status", "threading", "Start", "thread", "activity", "called", "thread", "object", "arranges", "object", "method", "invoked", "separate", "thread", "control", "method", "raise", "RuntimeError", "called", "thread", "object", "thread", "__init__", "calleds", "threads", "started", "onces", "start", "starting", "threadN", "_active_limbo_lockt", "_limbot", "_start_new_threadt", "_Thread__bootstrapt", "ExceptionRa", "threading", "start", "Method", "representing", "thread", "activity", "override", "method", "subclass", "standard", "method", "invokes", "callable", "object", "passed", "object", "constructor", "target", "argument", "sequential", "keyword", "arguments", "taken", "kwargs", "arguments", "respectively", "threading", "_Thread__bootstrap_innerR", "threading", "__bootstrap", "threading", "_set_ident", "__bootstrap", "thread", "starteds", "__bootstrap", "registering", "trace", "hooks", "__bootstrap", "registering", "profile", "hooks", "__bootstrap", "raised", "SystemExits", "__bootstrap", "unhandled", "exceptions", "Exception", "thread", "Exception", "thread", "likely", "raised", "during", "interpreter", "shutdown", "Traceback", "recent", "__bootstrap", "normal", "return", "SystemExitR", "_format_excR", "_Thread__exc_infot", "tb_framet", "f_codet", "co_filenamet", "tb_linenot", "co_namet", "tb_nextt", "_Thread__exc_cleart", "_Thread__stopR", "exc_typet", "exc_valuet", "exc_tb", "threading", "__bootstrap_inner", "threading", "__stopY", "QXWn&", "Remove", "current", "thread", "currently", "running", "threads", "dummy_threading", "modules", "threading", "__deletec", "until", "thread", "terminates", "blocks", "calling", "thread", "until", "thread", "whose", "method", "called", "terminates", "either", "normally", "through", "unhandled", "exception", "until", "optional", "timeout", "occurs", "timeout", "argument", "present", "should", "floating", "point", "number", "specifying", "timeout", "operation", "seconds", "fractions", "thereof", "always", "returns", "isAlive", "after", "decide", "whether", "timeout", "happened", "thread", "still", "alive", "timed", "timeout", "argument", "present", "operation", "block", "until", "thread", "terminates", "thread", "times", "raises", "RuntimeError", "attempt", "current", "thread", "would", "cause", "deadlock", "error", "thread", "before", "started", "attempts", "raises", "exception", "Thread", "__init__", "calleds", "cannot", "thread", "before", "starteds", "cannot", "current", "threads", "waiting", "until", "thread", "stopss", "thread", "stoppedi", "timed", "deadlineR", "threading", "string", "identification", "purposes", "semantics", "Multiple", "threads", "given", "initial", "constructor", "Thread", "__init__", "called", "threading", "pycR$", "Thread", "__init__", "called", "threading", "pycR$", "Thread", "identifier", "thread", "started", "nonzero", "integer", "thread", "get_ident", "function", "Thread", "identifiers", "recycled", "thread", "exits", "another", "thread", "created", "identifier", "available", "after", "thread", "exited", "Thread", "__init__", "called", "threading", "Return", "whether", "thread", "alive", "method", "returns", "before", "method", "starts", "until", "after", "method", "terminates", "module", "function", "enumerate", "returns", "alive", "threads", "Thread", "__init__", "called", "threading", "isAlive", "boolean", "value", "indicating", "whether", "thread", "daemon", "thread", "False", "before", "start", "called", "otherwise", "RuntimeError", "raised", "initial", "value", "inherited", "creating", "thread", "thread", "daemon", "thread", "therefore", "threads", "created", "thread", "default", "daemon", "False", "entire", "Python", "program", "exits", "alive", "daemon", "threads", "Thread", "__init__", "called", "threading", "Thread", "__init__", "calleds", "cannot", "daemon", "status", "active", "thread", "daemonic", "threading", "threading", "isDaemon", "threading", "setDaemon", "threading", "getName", "threading", "setName", "exc_infoR", "exc_clearR", "propertyR", "_Thread__deleteR", "setterR", "is_aliveR", "threading", "Factory", "function", "create", "Timer", "object", "Timers", "function", "after", "specified", "number", "seconds", "Timer", "kwargs", "start", "cancel", "timer", "action", "still", "waiting", "_Timer", "threading", "function", "after", "specified", "number", "seconds", "Timer", "kwargs", "start", "cancel", "timer", "action", "still", "waiting", "intervalt", "functionR", "finished", "threading", "pycR!", "timer", "finished", "threading", "cancel", "threading", "threading", "_MainThreadc", "MainThread", "threading", "pycR!", "threading", "waiting", "other", "threadss", "exiting", "_pickSomeNonDaemonThreadR", "threading", "_exitfuncC", "threading", "threading", "_DummyThreadc", "Dummy", "threading", "pycR!", "threading", "cannot", "dummy", "thread", "threading", "threading", "Return", "current", "Thread", "object", "corresponding", "caller", "thread", "control", "caller", "thread", "control", "created", "through", "threading", "module", "dummy", "thread", "object", "limited", "functionality", "returned", "threading", "Return", "number", "Thread", "objects", "currently", "alive", "returned", "count", "equal", "length", "returned", "enumerate", "threading", "valuesR", "threading", "_enumerate", "Return", "Thread", "objects", "currently", "alive", "includes", "daemonic", "threads", "dummy", "thread", "objects", "created", "current_thread", "thread", "excludes", "terminated", "threads", "threads", "started", "threading", "_local", "updateRP", "new_activet", "currentt", "threadR", "threading", "_after_fork", "BoundedQueuec", "limitt", "_dequet", "queue", "threading", "pycR!", "queue", "fulls", "appended", "length", "threading", "queue", "emptys", "popleftRP", "threading", "threading", "ProducerThreadc", "Producer", "quota", "threading", "pycR!", "randomi", "counter", "threading", "threading", "ConsumerThreadc", "Consumer", "threading", "pycR!", "threading", "threading", "Producer", "rangeR$", "threading", "_test", "__main__", "sysR&", "ImportErrorR", "warningst", "collectionsR", "itertoolsR", "_countR", "tracebackR", "__all__t", "start_new_threadR", "allocate_lockR4", "get_identR", "errort", "ThreadErrort", "filterwarningst", "DeprecationWarningRR", "objectR", "nextRw", "_shutdownR", "_threading_localR", "threading", "module", "token", "Token", "constants", "token", "NT_OFFSET", "token", "ISTERMINALK", "token", "ISNONTERMINALN", "ENDMARKER", "token", "ISEOFQ", "Include", "token", "token", "error", "define", "start", "constants", "constants", "target", "contain", "format", "markersi", "argvt", "opent", "IOErrort", "stdoutt", "writet", "exitt", "readt", "splitt", "closet", "compilet", "IGNORECASEt", "matcht", "groupt", "keyst", "sortt", "stderrt", "indext", "ValueErrort", "appendt", "argst", "inFileNamet", "outFileNamet", "linest", "progt", "tokenst", "lineR", "namet", "formatt", "startt", "token", "mainU", "__main__N", "__doc__R", "NAMEt", "NUMBERt", "STRINGt", "NEWLINEt", "INDENTt", "DEDENTt", "LPARt", "RPARt", "LSQBt", "RSQBt", "COLONt", "COMMAt", "SEMIt", "PLUSt", "MINUSt", "STARt", "SLASHt", "VBARt", "AMPERt", "LESSt", "GREATERt", "EQUALt", "PERCENTt", "BACKQUOTEt", "LBRACEt", "RBRACEt", "EQEQUALt", "NOTEQUALt", "LESSEQUALt", "GREATEREQUALt", "TILDEt", "CIRCUMFLEXt", "LEFTSHIFTt", "RIGHTSHIFTt", "DOUBLESTARt", "PLUSEQUALt", "MINEQUALt", "STAREQUALt", "SLASHEQUALt", "PERCENTEQUALt", "AMPEREQUALt", "VBAREQUALt", "CIRCUMFLEXEQUALt", "LEFTSHIFTEQUALt", "RIGHTSHIFTEQUALt", "DOUBLESTAREQUALt", "DOUBLESLASHt", "DOUBLESLASHEQUALt", "ERRORTOKENt", "N_TOKENSR", "tok_namet", "globalst", "itemst", "_namet", "_valuet", "typeR", "__name__", "token", "module", "tokenize", "Tokenization", "Python", "programs", "generate_tokens", "readline", "generator", "breaks", "stream", "Python", "tokens", "accepts", "readline", "method", "which", "called", "repeatedly", "input", "generates", "tuples", "these", "members", "token", "token", "token", "string", "starting", "column", "indices", "token", "tuple", "ending", "column", "indices", "token", "tuple", "original", "string", "designed", "match", "working", "Python", "tokenizer", "exactly", "except", "produces", "COMMENT", "tokens", "comments", "gives", "operators", "Older", "entry", "points", "tokenize_loop", "readline", "tokeneater", "tokenize", "readline", "tokeneater", "printtoken", "except", "instead", "generating", "tokens", "tokeneater", "callback", "function", "which", "fields", "described", "above", "passed", "arguments", "token", "found", "Peters", "Thomas", "Wouters", "Drake", "Montanaro", "Raymond", "Hettingeri", "chainN", "COMMENTt", "tokenizet", "generate_tokenst", "untokenizei", "choices", "tokenize", "group", "tokenize", "tokenize", "maybe", "TokenErrorc", "__name__t", "__module__", "tokenize", "StopTokenizingc", "tokenize", "tok_namet", "typet", "tokent", "srow_scolt", "erow_ecolt", "linet", "srowt", "scolt", "erowt", "tokenize", "printtoken", "tokenize", "function", "accepts", "parameters", "representing", "input", "stream", "providing", "output", "mechanism", "tokenize", "first", "parameter", "readline", "callable", "object", "which", "provides", "interface", "readline", "method", "built", "objects", "function", "should", "return", "input", "string", "second", "parameter", "tokeneater", "callable", "object", "called", "token", "arguments", "corresponding", "tuples", "generated", "generate_tokens", "tokenize_loopR", "readlinet", "tokeneater", "tokenize", "token_info", "tokenize", "Untokenizerc", "tokenst", "prev_rowt", "prev_col", "tokenize", "__init__", "start", "precedes", "previous", "ValueErrort", "formatR", "append", "startt", "row_offsett", "col_offset", "tokenize", "add_whitespace", "itert", "Falset", "compatt", "ENDMARKERt", "INDENTR7", "DEDENTt", "popR0", "NEWLINER", "TrueR", "iterablet", "indentst", "startlinet", "tok_typeR!", "endR$", "indent", "tokenize", "NAMEt", "NUMBERt", "STRINGRH", "toks_appendRL", "prevstringt", "toknumt", "tokval", "tokenize", "pycRB", "tokenize", "Transform", "tokens", "Python", "source", "element", "returned", "iterable", "token", "sequence", "least", "elements", "token", "number", "token", "value", "tokens", "passed", "resulting", "output", "Round", "invariant", "input", "Untokenized", "source", "match", "input", "source", "exactly", "Round", "invariant", "limited", "intput", "Output", "tokenize", "input", "generate_tokens", "readline", "newcode", "untokenize", "readline", "newcode", "splitlines", "generate_tokens", "readline", "assert", "tokenize", "generate_tokens", "generator", "requires", "argument", "readline", "which", "callable", "object", "which", "provides", "interface", "readline", "method", "built", "objects", "function", "should", "return", "input", "string", "Alternately", "readline", "callable", "function", "terminating", "StopIteration", "readline", "myfile", "Example", "alternate", "readline", "generator", "produces", "tuples", "these", "members", "token", "token", "string", "tuple", "specifying", "column", "where", "token", "begins", "source", "tuple", "specifying", "column", "where", "token", "source", "which", "token", "found", "passed", "logical", "continuation", "lines", "included", "0123456789R", "multi", "stringi", "unindent", "match", "outer", "indentation", "levels", "tokenize", "multi", "statementt", "stringt", "ascii_letterst", "Nonet", "StopIterationRA", "matchRO", "ERRORTOKENt", "tabsizet", "rstripR", "IndentationErrorRE", "pseudoprogt", "spanRR", "endswitht", "AssertionErrort", "triple_quotedt", "endprogst", "single_quotedRQ", "lnumt", "parenlevt", "continuedt", "namecharst", "numcharst", "contstrt", "needcontt", "contlineRK", "strstartt", "endprogt", "endmatchRO", "columnt", "comment_tokent", "nl_post", "pseudomatchR8", "spost", "eposR!", "initialRP", "tokenize", "__main__", "__doc__t", "__author__t", "__credits__t", "itertoolsR", "startswitht", "__all__t", "N_TOKENSR", "Whitespacet", "Commentt", "Ignoret", "Namet", "Hexnumbert", "Octnumbert", "Binnumbert", "Decnumbert", "Intnumbert", "Exponentt", "Pointfloatt", "Expfloatt", "Floatnumbert", "Imagnumbert", "Numbert", "Singlet", "Doublet", "Single3t", "Double3t", "Triplet", "Stringt", "Operatort", "Brackett", "Specialt", "Funnyt", "PlainTokent", "Tokent", "ContStrt", "PseudoExtrast", "PseudoTokent", "compilet", "tokenprogRf", "single3progt", "double3progR_", "ExceptionR", "sysRA", "argvt", "openR", "stdin", "tokenize", "module", "traceback", "Extract", "format", "print", "information", "about", "Python", "stack", "traces", "extract_stackt", "extract_tbt", "format_exceptiont", "format_exception_onlyt", "format_listt", "format_stackt", "format_tbt", "print_exct", "format_exct", "print_exceptiont", "print_lastt", "print_stackt", "print_tbt", "tb_linenot", "write", "filet", "terminator", "traceback", "_print", "Print", "tuples", "returned", "extract_tb", "extract_stack", "formatted", "stack", "trace", "given", "Nonet", "stderrR", "strip", "extracted_listR", "filenamet", "linenot", "namet", "traceback", "print_list", "Format", "traceback", "entry", "tuples", "printing", "Given", "tuples", "returned", "extract_tb", "extract_stack", "return", "strings", "ready", "printing", "string", "resulting", "corresponds", "index", "argument", "string", "newline", "strings", "contain", "internal", "newlines", "those", "items", "whose", "source", "append", "listR", "traceback", "Print", "limit", "stack", "trace", "entries", "traceback", "limit", "omitted", "entries", "printed", "omitted", "output", "stderr", "otherwise", "should", "object", "write", "method", "tracebacklimiti", "hasattrR!", "tb_frameR", "f_codet", "co_filenamet", "co_nameR", "linecachet", "checkcachet", "getlinet", "f_globalsR", "tb_next", "limitR", "traceback", "shorthand", "format_list", "extract_tb", "limit", "traceback", "Return", "limit", "processed", "entries", "traceback", "useful", "alternate", "formatting", "stack", "traces", "limit", "omitted", "entries", "extracted", "processed", "stack", "trace", "entry", "quadruple", "filename", "number", "function", "representing", "information", "usually", "printed", "stack", "trace", "string", "leading", "trailing", "whitespace", "stripped", "source", "available", "traceback", "Print", "exception", "limit", "stack", "trace", "entries", "differs", "print_tb", "following", "traceback", "prints", "header", "Traceback", "recent", "prints", "exception", "value", "after", "stack", "trace", "SyntaxError", "value", "appropriate", "format", "prints", "where", "syntax", "error", "occurred", "caret", "indicating", "approximate", "position", "error", "Traceback", "recent", "etypet", "valueR", "linesR", "traceback", "Format", "stack", "trace", "exception", "information", "arguments", "meaning", "corresponding", "arguments", "print_exception", "return", "value", "strings", "ending", "newline", "containing", "internal", "newlines", "these", "lines", "concatenated", "printed", "exactly", "printed", "print_exception", "Traceback", "recent", "traceback", "Format", "exception", "traceback", "arguments", "exception", "value", "given", "last_type", "last_value", "return", "value", "strings", "ending", "newline", "Normally", "contains", "single", "string", "however", "SyntaxError", "exceptions", "contains", "several", "lines", "printed", "display", "detailed", "information", "about", "where", "syntax", "error", "occurred", "message", "indicating", "which", "exception", "occurred", "always", "string", "string", "isspace", "traceback", "genexpr", "isinstancet", "BaseExceptiont", "typest", "InstanceTypeR", "typeR", "_format_final_exc_linet", "__name__t", "issubclasst", "SyntaxErrort", "argst", "ExceptionR", "rstript", "lstript", "stypeR3", "offsett", "badlinet", "caretspace", "traceback", "Return", "single", "normal", "format_exception_onlys", "_some_strR", "valuestrR", "traceback", "asciit", "backslashreplaces", "unprintable", "object", "unicodet", "encodeR", "traceback", "pycRM", "Shorthand", "print_exception", "exc_type", "exc_value", "exc_traceback", "limit", "exc_info", "retrieve", "information", "thread", "exc_infoR", "traceback", "print_exc", "return", "string", "traceback", "shorthand", "print_exception", "last_type", "last_value", "last_traceback", "limit", "last_types", "exceptionN", "ValueErrorR", "last_valuet", "last_traceback", "traceback", "Print", "stack", "trace", "invocation", "point", "optional", "argument", "specify", "alternate", "stack", "frame", "which", "start", "optional", "limit", "arguments", "meaning", "print_exception", "ZeroDivisionErrorR", "f_backR", "traceback", "Shorthand", "format_list", "extract_stack", "limit", "traceback", "Extract", "traceback", "current", "stack", "frame", "return", "value", "format", "extract_tb", "optional", "limit", "arguments", "meaning", "print_stack", "quadruple", "filename", "number", "function", "entries", "order", "oldest", "newest", "stack", "frame", "f_linenoR$", "reverse", "traceback", "Calculate", "correct", "number", "traceback", "given", "Obsolete", "traceback", "__doc__R", "__all__R", "traceback", "module", "types", "Define", "names", "symbols", "known", "standard", "interpreter", "Types", "optional", "modules", "array", "listed", "types", "types", "lambda", "types", "types", "__name__t", "__module__R", "types", "types", "genexpr", "__doc__t", "typeR", "NoneTypet", "TypeTypet", "objectt", "ObjectTypet", "IntTypet", "longt", "LongTypet", "floatt", "FloatTypet", "boolt", "BooleanTypet", "complext", "ComplexTypet", "NameErrort", "StringTypet", "unicodet", "UnicodeTypet", "StringTypest", "buffert", "BufferTypet", "tuplet", "TupleTypet", "listt", "ListTypet", "dictt", "DictTypet", "DictionaryTypeR", "FunctionTypet", "LambdaTypet", "func_codet", "CodeTypeR", "GeneratorTypeR", "ClassTypeR", "UnboundMethodTypet", "InstanceTypet", "MethodTypet", "BuiltinFunctionTypet", "appendt", "BuiltinMethodTypet", "ModuleTypet", "filet", "FileTypet", "xranget", "XRangeTypet", "TypeErrort", "exc_infot", "TracebackTypet", "tb_framet", "FrameTypet", "slicet", "SliceTypet", "Ellipsist", "EllipsisTypet", "__dict__t", "DictProxyTypet", "NotImplementedt", "NotImplementedTypet", "GetSetDescriptorTypet", "func_globalst", "MemberDescriptorTypet", "globalst", "__all__", "types", "module", "unittest", "__init__", "Python", "testing", "framework", "based", "Erich", "Gamma", "JUnit", "Smalltalk", "testing", "framework", "module", "contains", "framework", "classes", "basis", "specific", "cases", "suites", "TestCase", "TestSuite", "based", "utility", "class", "running", "tests", "reporting", "results", "TextTestRunner", "Simple", "usage", "import", "unittest", "class", "IntegerArithmeticTestCase", "unittest", "TestCase", "testAdd", "method", "names", "begin", "assertEqual", "assertEqual", "testMultiply", "assertEqual", "assertEqual", "__name__", "__main__", "unittest", "Further", "information", "available", "bundled", "documentation", "python", "library", "unittest", "Copyright", "Steve", "Purcell", "Copyright", "Python", "Software", "Foundation", "module", "software", "redistribute", "modify", "under", "terms", "Python", "itself", "copyright", "message", "disclaimer", "retained", "their", "original", "EVENT", "SHALL", "AUTHOR", "LIABLE", "PARTY", "DIRECT", "INDIRECT", "SPECIAL", "INCIDENTAL", "CONSEQUENTIAL", "DAMAGES", "ARISING", "AUTHOR", "ADVISED", "POSSIBILITY", "DAMAGE", "AUTHOR", "SPECIFICALLY", "DISCLAIMS", "WARRANTIES", "INCLUDING", "LIMITED", "IMPLIED", "WARRANTIES", "MERCHANTABILITY", "FITNESS", "PARTICULAR", "PURPOSE", "PROVIDED", "HEREUNDER", "BASIS", "THERE", "OBLIGATION", "WHATSOEVER", "PROVIDE", "MAINTENANCE", "SUPPORT", "UPDATES", "ENHANCEMENTS", "MODIFICATIONS", "TestResultt", "TestCaset", "TestSuitet", "TextTestRunnert", "TestLoadert", "FunctionTestCaset", "maint", "defaultTestLoadert", "SkipTestt", "skipt", "skipIft", "skipUnlesst", "expectedFailuret", "TextTestResultt", "installHandlert", "registerResultt", "removeResultt", "removeHandlert", "getTestCaseNamest", "makeSuitet", "findTestCasesi", "BaseTestSuiteR", "TestProgramR", "__doc__t", "__all__t", "extendt", "Truet", "__unittestt", "resultR", "caseR", "suiteR", "loaderR", "runnerR", "signalsR", "_TextTestResult", "unittest", "__init__", "module", "unittest", "implementationi", "result", "strclasst", "safe_reprt", "unorderable_list_differencet", "_count_diff_all_purposet", "_count_diff_hashables", "characters", "maxDiff", "SkipTestc", "Raise", "exception", "Usually", "TestCase", "skipTest", "skipping", "decorators", "instead", "raising", "directly", "__name__t", "__module__t", "__doc__", "unittest", "_ExpectedFailurec", "Raise", "expected", "implementation", "detail", "superR", "__init__t", "exc_info", "selfR", "unittest", "unittest", "_UnexpectedSuccessc", "supposed", "unittest", "unittest", "Unconditionally", "argst", "kwargs", "reason", "unittest", "skip_wrapper", "isinstancet", "typet", "typest", "ClassTypet", "functoolst", "wrapst", "Truet", "__unittest_skip__t", "__unittest_skip_why__", "test_itemR", "unittest", "decorator", "unittest", "skip6", "condition", "conditionR", "unittest", "skipIfF", "unless", "condition", "unittest", "skipUnlessN", "ExceptionR", "unittest", "wrapperX", "unittest", "expectedFailureW", "_AssertRaisesContextc", "context", "manager", "implement", "TestCase", "assertRaises", "methods", "expectedt", "failureExceptiont", "expected_regexp", "test_caseR", "unittest", "unittest", "__enter__j", "raiseds", "match", "NoneR", "AttributeErrort", "formatt", "issubclasst", "Falset", "exceptionR", "searcht", "pattern", "exc_typet", "exc_valuet", "exc_nameR", "unittest", "__exit__m", "unittest", "TestCasec", "class", "whose", "instances", "single", "cases", "default", "itself", "should", "placed", "method", "named", "runTest", "fixture", "cases", "create", "methods", "needed", "instantiating", "TestCase", "subclass", "specify", "constructor", "arguments", "method", "instance", "execute", "authors", "should", "subclass", "TestCase", "their", "tests", "Construction", "deconstruction", "environment", "fixture", "implemented", "overriding", "setUp", "tearDown", "methods", "respectively", "necessary", "override", "__init__", "method", "class", "__init__", "method", "always", "called", "important", "subclasses", "should", "change", "signature", "their", "__init__", "method", "since", "instances", "classes", "instantiated", "automatically", "parts", "framework", "order", "subclassing", "TestCase", "these", "attributes", "failureException", "determines", "which", "exception", "raised", "instance", "assertion", "methods", "methods", "raising", "exception", "deemed", "failed", "rather", "errored", "longMessage", "determines", "whether", "messages", "including", "objects", "assert", "methods", "printed", "failure", "addition", "explicit", "message", "passed", "maxDiff", "maximum", "length", "failure", "messages", "assert", "methods", "using", "difflib", "looked", "instance", "attribute", "configured", "individual", "tests", "required", "runTestc", "Create", "instance", "class", "named", "method", "executed", "Raises", "ValueError", "instance", "method", "specified", "method", "assertDictEqualt", "assertListEqualt", "assertTupleEqualt", "assertSetEqualt", "assertMultiLineEqualN", "_testMethodNameR0", "_resultForDoCleanupst", "getattrR1", "ValueErrort", "__class__R", "_testMethodDoct", "_cleanupst", "_type_equality_funcst", "addTypeEqualityFunct", "dictt", "listt", "tuplet", "frozensett", "unicodet", "NameError", "methodNamet", "testMethod", "unittest", "specific", "assertEqual", "style", "function", "compare", "method", "TestCase", "subclasses", "register", "their", "equality", "functions", "provide", "nicer", "error", "messages", "typeobj", "function", "values", "assertEqual", "function", "callable", "taking", "arguments", "optional", "argument", "raises", "failureException", "useful", "error", "message", "arguments", "equal", "typeobjt", "function", "unittest", "pycRM", "function", "arguments", "called", "completed", "Functions", "added", "called", "basis", "called", "after", "tearDown", "failure", "success", "Cleanup", "items", "called", "setUp", "fails", "unlike", "tearDown", "append", "unittest", "addCleanup", "method", "setting", "fixture", "before", "exercising", "unittest", "setUp", "method", "deconstructing", "fixture", "after", "testing", "unittest", "tearDown", "method", "setting", "class", "fixture", "before", "running", "tests", "class", "unittest", "setUpClass", "method", "deconstructing", "class", "fixture", "after", "running", "tests", "class", "unittest", "tearDownClass", "unittest", "countTestCases", "TestResult", "unittest", "defaultTestResult", "Returns", "description", "description", "provided", "default", "implementation", "method", "returns", "first", "specified", "method", "docstring", "splitt", "stripR0", "unittest", "shortDescription", "unittest", "NotImplementedRE", "other", "unittest", "__eq__", "unittest", "__ne__", "hashR", "unittest", "__hash__", "unittest", "__str__", "testMethod", "unittest", "__repr__", "addSkips4", "TestResult", "addSkip", "method", "skips", "reportedi", "warningst", "warnt", "RuntimeWarningt", "addSuccess", "unittest", "_addSkip", "startTestRunR", "addExpectedFailures", "TestResult", "addExpectedFailure", "method", "reporting", "passest", "addUnexpectedSuccesssD", "TestResult", "addUnexpectedSuccess", "method", "reporting", "failurest", "stopTestRun", "startTestRE", "stopTestR", "KeyboardInterruptt", "addErrorR&", "addFailureR", "doCleanups", "orig_resultRv", "skip_whyt", "successt", "cleanUpSuccessRz", "unittest", "Execute", "cleanup", "functions", "Normally", "called", "after", "tearDown", "unittest", "unittest", "__call__", "without", "collecting", "errors", "TestResulti", "unittest", "debug", "unittest", "skipTest", "immediately", "given", "message", "unittest", "Check", "expression", "false", "falseN", "_formatMessageR", "exprR", "unittest", "assertFalse", "Check", "expression", "trueN", "unittest", "assertTrue", "Honour", "longMessage", "attribute", "generating", "failure", "messages", "longMessage", "False", "means", "explicit", "message", "provided", "Otherwise", "standard", "message", "assert", "longMessage", "standard", "message", "explicit", "message", "provided", "explicit", "message", "longMessageR0", "UnicodeDecodeErrorR", "standardMsg", "unittest", "unless", "exception", "class", "excClass", "raised", "callableObj", "invoked", "arguments", "keyword", "arguments", "kwargs", "different", "exception", "raised", "caught", "deemed", "suffered", "error", "exactly", "unexpected", "exception", "called", "callableObj", "omitted", "return", "context", "object", "assertRaises", "SomeException", "do_something", "context", "manager", "keeps", "reference", "exception", "exception", "attribute", "allows", "inspect", "exception", "after", "assertion", "assertRaises", "SomeException", "do_something", "the_exception", "exception", "assertEqual", "the_exception", "error_code", "excClasst", "callableObjR", "context", "unittest", "assertRaises", "detailed", "comparison", "function", "types", "Returns", "callable", "accepting", "first", "second", "raise", "failure", "exception", "first", "second", "useful", "human", "readable", "error", "message", "those", "types", "getR0", "basestringRG", "_baseAssertEqual", "firstt", "secondt", "asserter", "unittest", "_getAssertEqualityFunc", "default", "assertEqual", "implementation", "specific", "unittest", "objects", "unequal", "determined", "operator", "assertion_func", "unittest", "assertEqual", "objects", "equal", "determined", "operator", "unittest", "assertNotEqual", "objects", "unequal", "determined", "their", "difference", "rounded", "given", "number", "decimal", "places", "default", "comparing", "comparing", "between", "objects", "given", "delta", "decimal", "places", "usually", "significant", "digits", "measured", "significant", "digit", "objects", "compare", "equal", "automatically", "compare", "almost", "equal", "specify", "delta", "places", "boths", "within", "deltai", "within", "places", "TypeErrort", "roundR", "placesR", "deltaR", "unittest", "assertAlmostEqual", "objects", "equal", "determined", "their", "difference", "rounded", "given", "number", "decimal", "places", "default", "comparing", "comparing", "between", "objects", "given", "delta", "decimal", "places", "usually", "significant", "digits", "measured", "significant", "digit", "Objects", "equal", "automatically", "specify", "delta", "places", "bothNs", "within", "deltai", "within", "places", "unittest", "assertNotAlmostEqual3", "Please", "instead", "PendingDeprecationWarning", "original_func", "unittest", "deprecated_func", "unittest", "_deprecate_", "equality", "assertion", "ordered", "sequences", "lists", "tuples", "purposes", "function", "valid", "ordered", "sequence", "which", "indexed", "length", "equality", "operator", "first", "sequence", "compare", "second", "sequence", "compare", "seq_type", "expected", "datatype", "sequences", "datatype", "should", "enforced", "Optional", "message", "failure", "instead", "differences", "First", "sequence", "Second", "sequence", "sequences", "First", "length", "sequence", "Second", "length", "sequence", "differ", "Unable", "index", "element", "first", "Unable", "index", "element", "second", "First", "differing", "element", "First", "contains", "additional", "elements", "First", "extra", "element", "Unable", "index", "element", "first", "Second", "contains", "additional", "elements", "Unable", "index", "element", "second", "NotImplementedErrort", "capitalizet", "xranget", "IndexErrorR", "joint", "difflibt", "ndifft", "pprintt", "pformatt", "splitlinest", "_truncateMessageR", "seq1t", "seq2R", "seq_typet", "seq_type_namet", "differingt", "len1t", "len2t", "seq1_reprt", "seq2_reprt", "elementst", "item1t", "item2R", "diffMsg", "unittest", "assertSequenceEqualo", "maxDiffR0", "DIFF_OMITTED", "messaget", "difft", "max_diff", "unittest", "specific", "equality", "assertion", "list1", "first", "compare", "list2", "second", "compare", "Optional", "message", "failure", "instead", "differences", "list1t", "list2R", "unittest", "pycRA", "tuple", "specific", "equality", "assertion", "tuple1", "first", "tuple", "compare", "tuple2", "second", "tuple", "compare", "Optional", "message", "failure", "instead", "differences", "tuple1t", "tuple2R", "unittest", "pycRB", "specific", "equality", "assertion", "first", "compare", "second", "compare", "Optional", "message", "failure", "instead", "differences", "assertSetEqual", "ducktyping", "support", "different", "types", "optimized", "specifically", "parameters", "support", "difference", "method", "invalid", "attempting", "difference", "first", "argument", "support", "difference", "second", "argument", "support", "difference", "Items", "first", "second", "Items", "second", "first", "differenceR", "reprR", "set1t", "set2R", "difference1R", "difference2t", "linest", "itemR", "unittest", "pycRC", "assertTrue", "nicer", "default", "message", "found", "membert", "containerR", "unittest", "assertIn", "assertTrue", "nicer", "default", "message", "unexpectedly", "found", "unittest", "assertNotIn", "assertTrue", "nicer", "default", "message", "expr1t", "expr2R", "unittest", "assertIs", "assertTrue", "nicer", "default", "message", "unexpectedly", "identical", "unittest", "assertIsNot3", "First", "argument", "dictionarys", "Second", "argument", "dictionarys", "assertIsInstanceRN", "unittest", "Checks", "whether", "actual", "superset", "expected", "expected", "actual", "Missing", "unittest", "genexpr", "Mismatched", "values", "iteritemsRY", "actualR", "missingt", "mismatchedt", "valueR", "unittest", "assertDictContainsSubsetE", "unordered", "sequence", "specific", "comparison", "asserts", "actual_seq", "expected_seq", "element", "counts", "Equivalent", "assertEqual", "Counter", "actual_seq", "Counter", "expected_seq", "Asserts", "element", "count", "sequences", "Example", "compare", "equal", "compare", "unequal", "inequality", "comparisonss", "builtin_function_or_method", "order", "comparisonss", "comparing", "unequal", "typest", "ignoreNs", "Element", "counts", "equal", "First", "Second", "catch_warningsR&", "py3kwarningt", "filterwarningst", "DeprecationWarningt", "collectionst", "CounterR", "expected_seqt", "actual_seqR", "first_seqt", "second_seqt", "_msgR", "differencesR", "unittest", "assertItemsEqual_", "Assert", "multi", "strings", "equal", "First", "argument", "strings", "Second", "argument", "stringi", "_diffThresholdR", "firstlinest", "secondlinesR", "unittest", "pycRD", "assertTrue", "nicer", "default", "message", "unittest", "assertLess", "assertTrue", "nicer", "default", "message", "equal", "unittest", "assertLessEqual", "assertTrue", "nicer", "default", "message", "greater", "unittest", "assertGreater", "assertTrue", "nicer", "default", "message", "greater", "equal", "unittest", "assertGreaterEqual", "assertTrue", "nicer", "default", "message", "NoneN", "unittest", "assertIsNone", "Included", "symmetry", "assertIsNone", "unexpectedly", "NoneN", "unittest", "assertIsNotNone", "assertTrue", "isinstance", "nicer", "default", "message", "instance", "unittest", "Included", "symmetry", "assertIsInstance", "instance", "unittest", "assertNotIsInstance", "Asserts", "message", "raised", "exception", "matches", "regexp", "expected_exception", "Exception", "class", "expected", "raised", "expected_regexp", "Regexp", "pattern", "object", "string", "expected", "found", "error", "message", "callable_obj", "Function", "called", "Extra", "kwargs", "Extra", "kwargs", "compileR", "expected_exceptionR", "callable_objR", "unittest", "assertRaisesRegexp", "unless", "matches", "regular", "expression", "Regexp", "matchs", "found", "textR", "unittest", "assertRegexpMatches", "matches", "regular", "expression", "Regexp", "matcheds", "matches", "startt", "endR8", "unexpected_regexpR", "match", "unittest", "assertNotRegexpMatches", "AssertionErrorR", "_classSetupFailedR", "classmethodR", "assertEqualst", "assertNotEqualst", "assertAlmostEqualst", "assertNotAlmostEqualst", "assert_R", "failUnlessEqualt", "failIfEqualt", "failUnlessAlmostEqualt", "failIfAlmostEqualt", "failUnlesst", "failUnlessRaisest", "failIfR", "unittest", "FunctionTestCasec", "wraps", "function", "useful", "slipping", "existing", "functions", "unittest", "framework", "Optionally", "functions", "supplied", "TestCase", "tearDown", "function", "always", "called", "setUp", "function", "successfully", "_setUpFunct", "_tearDownFunct", "_testFunct", "_description", "testFuncR", "description", "unittest", "unittest", "unittest", "unittest", "unittest", "pycRg", "unittest", "pycRj", "unittest", "pycRk", "unittest", "pycRm", "unittest", "pycRn", "unittest", "pycRo", "unittest", "pycRf", "unittest", "utilR", "__unittestR", "objectR", "unittest", "module", "unittest", "loader", "Loading", "unittests", "cmp_to_key", "fnmatchi", "caset", "suites", "Failed", "import", "module", "ModuleImportFailure", "tracebackt", "format_exct", "_make_failed_testt", "ImportError", "namet", "suiteClasst", "message", "unittest", "loader", "_make_failed_import_test", "LoadTestsFailure", "exceptionR", "unittest", "loader", "_make_failed_load_tests", "unittest", "loader", "testFailure", "typeR", "TestCase", "classnamet", "methodnameR", "attrst", "TestClass", "unittest", "loader", "TestLoaderc", "class", "responsible", "loading", "tests", "according", "various", "criteria", "returning", "wrapped", "TestSuite", "testc", "Return", "suite", "tests", "cases", "contained", "testCaseClasssY", "cases", "should", "derived", "TestSuite", "Maybe", "meant", "derive", "TestCase", "runTest", "issubclassR", "TestSuitet", "TypeErrort", "getTestCaseNamest", "hasattrR", "testCaseClasst", "testCaseNamest", "loaded_suite", "unittest", "loader", "loadTestsFromTestCase0", "Return", "suite", "tests", "cases", "contained", "given", "modulet", "load_testsN", "getattrt", "isinstanceR", "appendR$", "NoneR", "ExceptionR", "__name__", "modulet", "use_load_testst", "testsR", "unittest", "loader", "loadTestsFromModule", "Return", "suite", "tests", "cases", "given", "string", "specifier", "resolve", "either", "module", "class", "method", "within", "class", "callable", "object", "which", "returns", "TestCase", "TestSuite", "instance", "method", "optionally", "resolves", "names", "relative", "given", "module", "__call__s", "calling", "returned", "tests$", "splitR", "__import__t", "joinR", "typest", "ModuleTypeR2", "UnboundMethodTypeR", "partst", "parts_copyR0", "partt", "parentt", "instR", "unittest", "loader", "loadTestsFromNameM", "Return", "suite", "tests", "cases", "found", "using", "given", "sequence", "string", "specifiers", "loadTestsFromName", "namesR", "suites", "unittest", "loader", "loadTestsFromNames", "Return", "sorted", "sequence", "method", "names", "found", "within", "testCaseClass", "startswithR", "attrnameR!", "prefix", "unittest", "loader", "isTestMethod", "testMethodPrefixt", "filterR&", "sortTestMethodsUsingt", "sortt", "_CmpToKey", "testFnNames", "unittest", "loader", "return", "modules", "specified", "start", "directory", "recursing", "subdirectories", "files", "match", "pattern", "loaded", "Using", "shell", "style", "pattern", "matching", "modules", "importable", "level", "project", "start", "directory", "level", "directory", "level", "directory", "specified", "separately", "package", "directory", "__init__", "matches", "pattern", "package", "checked", "load_tests", "function", "exists", "called", "loader", "tests", "pattern", "load_tests", "exists", "discovery", "recurse", "package", "load_tests", "responsible", "loading", "tests", "package", "pattern", "deliberately", "stored", "loader", "attribute", "packages", "continue", "discovery", "themselves", "top_level_dir", "stored", "load_tests", "argument", "loader", "discover", "__init__", "Start", "directory", "importable", "FalseR", "_top_level_dirt", "Truet", "patht", "abspatht", "insertt", "isdirt", "isfileR7", "modulesR5", "dirnamet", "__file__t", "_get_directory_containing_modulet", "removet", "listt", "_find_testsR", "start_dirt", "patternt", "top_level_dirt", "set_implicit_topt", "is_not_importablet", "the_modulet", "top_partR", "unittest", "loader", "discover", "__init__", "basenamet", "lowerRD", "module_nameR", "full_path", "unittest", "loader", "within", "projects", "splitextt", "normpatht", "relpathRP", "isabst", "AssertionErrorRD", "replacet", "_relpathR", "unittest", "loader", "_get_name_from_path", "unittest", "loader", "_get_module_from_name", "unittest", "loader", "_match_path", "discovery", "Yields", "suites", "loads", "module", "incorrectly", "imported", "Expected", "module", "globally", "installed", "__init__", "listdirRS", "VALID_MODULE_NAMEt", "matchRv", "realpathRi", "pathsRS", "mod_fileRz", "fullpath_noextt", "module_dirt", "mod_namet", "expected_dirt", "packageR", "unittest", "loader", "pycR_", "__module__t", "__doc__RI", "cmpRK", "unittest", "loader", "sortUsingR", "loader", "unittest", "loader", "_makeLoader", "unittest", "loader", "unittest", "loader", "makeSuite6", "unittest", "loader", "findTestCases", "functoolsR", "__unittestt", "compilet", "IGNORECASERx", "objectR", "defaultTestLoaderR", "unittest", "loader", "module", "unittest", "Unittest", "programi", "loadert", "runner", "installHandlers", "failfast", "first", "failure", "catch", "Catch", "control", "display", "results", "buffer", "Buffer", "stdout", "stderr", "during", "Usage", "progName", "options", "tests", "Options", "message", "verbose", "Verbose", "output", "quiet", "Minimal", "output", "failfast", "catchbreak", "buffer", "Examples", "progName", "test_module", "tests", "test_module", "progName", "module", "TestClass", "tests", "module", "TestClass", "progName", "module", "Class", "test_method", "specified", "method", "tests", "number", "modules", "classes", "methods", "Alternative", "Usage", "progName", "discover", "options", "Options", "verbose", "Verbose", "output", "failfast", "catchbreak", "buffer", "directory", "Directory", "start", "discovery", "default", "pattern", "Pattern", "match", "files", "default", "directory", "level", "directory", "project", "default", "start", "directory", "discovery", "modules", "importable", "level", "directory", "project", "Usage", "progName", "options", "Options", "message", "verbose", "Verbose", "output", "quiet", "Minimal", "output", "failfast", "catchbreak", "buffer", "Examples", "progName", "default", "tests", "progName", "MyTestSuite", "suite", "MyTestSuite", "progName", "MyTestCase", "testSomething", "MyTestCase", "testSomething", "progName", "MyTestCase", "methods", "MyTestCase", "TestProgramc", "command", "program", "tests", "primarily", "making", "modules", "conveniently", "executable", "__main__i", "isinstancet", "basestringt", "__import__t", "modulet", "splitt", "getattrt", "Nonet", "argvt", "exitt", "failfastt", "catchbreakt", "verbosityt", "buffert", "defaultTestt", "testRunnert", "testLoadert", "patht", "basenamet", "progNamet", "parseArgst", "runTests", "selfR", "unittest", "__init__H", "Falset", "FAILFASTR", "CATCHBREAKR", "BUFFEROUTPUTt", "USAGER", "usage", "unittest", "usageExita", "discoveri", "helpt", "verboset", "quietR", "catchR", "hHvqfcbs", "helps", "quieti", "verboses", "failfasts", "catchs", "bufferR", "quiet", "verbose", "failfast", "catch", "buffer", "lowert", "_do_discoveryt", "getoptR", "TrueR", "testNamest", "__name__R", "createTestst", "error", "long_optst", "optionst", "argst", "valueR&", "unittest", "loadTestsFromModuleR", "testt", "loadTestsFromNames", "unittest", "pycR6", "unittest", "lambda", "discoveri", "verboset", "destR", "defaultR", "Verbose", "outputt", "actiont", "store_trues", "failfastR", "first", "errors", "catchR", "Catch", "display", "results", "bufferR", "Buffer", "stdout", "stderr", "during", "testss", "start", "directoryt", "startR", "Directory", "start", "discovery", "default", "patternt", "patterns", "Pattern", "match", "tests", "default", "level", "directoryt", "level", "directory", "project", "defaults", "start", "directory", "optparset", "OptionParsert", "progt", "add_optionR!", "parse_argsR", "setattrR", "LoaderRH", "parserR9", "nameR", "start_dirRF", "top_level_dirR", "unittest", "pycR1", "TextTestRunnerR", "typet", "typest", "ClassTypeR", "TypeErrort", "resultR", "wasSuccessful", "unittest", "__module__t", "__doc__t", "USAGE_FROM_MODULER", "defaultTestLoaderR3", "unittest", "signalsR", "__unittestR", "USAGE_AS_MAINR", "objectR", "unittest", "module", "unittest", "result", "result", "objecti", "StringIOi", "wrapsc", "failfast", "getattrt", "Falset", "selft", "argst", "method", "unittest", "result", "inner", "unittest", "result", "Stdout", "Stderr", "TestResultc", "Holder", "result", "information", "results", "automatically", "managed", "TestCase", "TestSuite", "classes", "explicitly", "manipulated", "writers", "tests", "instance", "holds", "total", "number", "tests", "collections", "failures", "errors", "occurred", "among", "those", "collections", "contain", "tuples", "testcase", "exceptioninfo", "where", "exceptioninfo", "formatted", "traceback", "error", "occurred", "failurest", "errorst", "testsRunt", "skippedt", "expectedFailurest", "unexpectedSuccessest", "shouldStopt", "buffert", "Nonet", "_stdout_buffert", "_stderr_buffert", "stdoutt", "_original_stdoutt", "stderrt", "_original_stderrt", "_mirrorOutput", "streamt", "descriptionst", "verbosity", "unittest", "result", "__init__", "Called", "TestRunner", "after", "unittest", "result", "printErrors8", "Called", "given", "about", "_setupStdout", "unittest", "result", "startTest", "unittest", "result", "Called", "before", "tests", "executed", "startTest", "method", "called", "before", "unittest", "result", "startTestRunI", "Called", "given", "_restoreStdoutR", "unittest", "result", "stopTestO", "getvalueR", "endswithR", "writet", "STDOUT_LINER", "STDERR_LINER", "seekt", "truncateR", "outputt", "error", "unittest", "result", "Called", "after", "tests", "executed", "stopTest", "method", "called", "after", "unittest", "result", "stopTestRuni", "Called", "error", "occurred", "tuple", "values", "returned", "exc_info", "appendt", "_exc_info_to_stringt", "TrueR", "unittest", "result", "addErroro", "Called", "error", "occurred", "tuple", "values", "returned", "exc_info", "unittest", "result", "addFailurew", "Called", "completed", "successfullyN", "unittest", "result", "addSuccess", "Called", "skipped", "reason", "unittest", "result", "addSkip", "Called", "expected", "failure", "error", "occurred", "unittest", "result", "addExpectedFailure", "Called", "expected", "succeed", "unittest", "result", "addUnexpectedSuccess", "Tells", "whether", "result", "successi", "unittest", "result", "wasSuccessful", "Indicates", "tests", "should", "abortedN", "unittest", "result", "Converts", "exc_info", "style", "tuple", "values", "string", "_is_relevant_tb_levelt", "tb_nextt", "failureExceptiont", "_count_relevant_tb_levelst", "tracebackt", "format_exceptionR", "exctypet", "valuet", "lengtht", "msgLinesR0", "unittest", "result", "pycR4", "__unittest", "tb_framet", "f_globals", "unittest", "result", "pycRA", "unittest", "result", "pycRD", "errors", "failures", "strclasst", "__class__R", "unittest", "result", "__repr__", "__name__t", "__module__t", "__doc__R", "_previousTestClassR", "_testRunEnteredt", "_moduleSetUpFailedR!", "unittest", "result", "functoolsR", "objectR", "unittest", "result", "module", "unittest", "runner", "Running", "testsi", "result", "registerResultt", "_WritelnDecoratorc", "decorate", "objects", "handy", "writeln", "methodc", "stream", "selfR", "unittest", "runner", "__init__", "__getstate__", "AttributeErrort", "getattrR", "unittest", "runner", "__getattr__", "write", "unittest", "runner", "writeln", "__name__t", "__module__t", "__doc__R", "NoneR", "unittest", "runner", "TextTestResultc", "result", "class", "print", "formatted", "results", "stream", "TextTestRunner", "superR", "showAllt", "dotst", "descriptions", "verbosity", "unittest", "runner", "shortDescriptionR", "joint", "testt", "doc_first_line", "unittest", "runner", "getDescription", "startTestR", "flush", "unittest", "runner", "addSuccessR", "unittest", "runner", "pycR$", "ERRORt", "addErrorR", "unittest", "runner", "FAILt", "addFailureR", "unittest", "runner", "skipped", "addSkipR", "formatR", "reason", "unittest", "runner", "expected", "failuret", "addExpectedFailureR", "unittest", "runner", "pycR1", "unexpected", "successt", "addUnexpectedSuccessR", "unittest", "runner", "pycR3", "printErrorListt", "errorst", "failures", "unittest", "runner", "printErrorsi", "separator1R", "separator2", "flavourR5", "unittest", "runner", "pycR4", "unittest", "runner", "TextTestRunnerc", "runner", "class", "displays", "results", "textual", "prints", "names", "tests", "errors", "occur", "summary", "results", "failfastt", "bufferR", "resultclass", "unittest", "runner", "unittest", "runner", "_makeResult", "given", "suite", "startTestRunNt", "stopTestRunR9", "FAILEDs", "failures", "errors", "skipped", "expected", "failures", "unexpected", "successes", "timeR", "hasattrR", "testsRunt", "expectedFailurest", "unexpectedSuccessest", "skippedR", "wasSuccessfulR", "appendR", "startTimeR", "stopTimet", "timeTakent", "expectedFailsRK", "resultst", "infost", "failedt", "errored", "unittest", "runner", "pycRR", "stderrt", "Truet", "FalseR", "unittest", "runner", "signalsR", "__unittestt", "objectR", "TestResultR", "unittest", "runner", "module", "unittest", "signals", "wrapst", "_InterruptHandlerc", "unused_signumt", "unused_frame", "unittest", "signals", "default_handler", "expected", "SIGINT", "signal", "handler", "signal", "SIG_IGN", "signal", "SIG_DFL", "callable", "object", "Falset", "calledt", "original_handlert", "isinstancet", "signalt", "SIG_DFLt", "default_int_handlert", "SIG_IGNt", "TypeErrorR", "selfR", "unittest", "signals", "__init__", "getsignalt", "SIGINTR", "Truet", "_resultst", "keyst", "signumt", "framet", "installed_handlert", "result", "unittest", "signals", "__call__", "__name__t", "__module__R", "unittest", "signals", "unittest", "signals", "registerResult", "boolR", "unittest", "signals", "removeResult", "_interrupt_handlerR!", "unittest", "signals", "installHandler1", "removeHandler", "argst", "kwargst", "initial", "method", "unittest", "signals", "inner", "unittest", "signals", "weakreft", "functoolsR", "__unittestt", "objectR", "WeakKeyDictionaryR", "unittest", "signals", "module", "unittest", "suite", "TestSuitei", "utilc", "unittest", "suite", "lambda", "getattr", "parentt", "attrt", "unittest", "suite", "_call_if_exists", "BaseTestSuitec", "simple", "suite", "doesn", "provide", "class", "module", "shared", "fixtures", "_testst", "addTests", "selft", "tests", "unittest", "suite", "__init__", "tests", "strclasst", "__class__t", "unittest", "suite", "__repr__", "isinstanceR", "NotImplementedR", "other", "unittest", "suite", "__eq__", "unittest", "suite", "__ne__", "iterR", "unittest", "suite", "__iter__", "countTestCases", "casest", "unittest", "suite", "__call__s", "callablesN", "TestCases", "TestSuites", "instantiated", "before", "passing", "addTest", "hasattrt", "TypeErrort", "formatt", "reprR", "typet", "issubclassR", "TestCaseR", "append", "unittest", "suite", "addTest", "tests", "iterable", "tests", "string", "basestringR", "unittest", "suite", "shouldStop", "resultR", "unittest", "suite", "argst", "unittest", "suite", "tests", "without", "collecting", "errors", "TestResultN", "debug", "unittest", "suite", "__name__t", "__module__t", "__doc__R", "__hash__R", "unittest", "suite", "suite", "composite", "consisting", "number", "TestCases", "create", "instance", "TestSuite", "instances", "tests", "added", "suite", "passed", "runner", "TextTestRunner", "individual", "cases", "order", "which", "added", "aggregating", "results", "subclassing", "forget", "class", "constructor", "_testRunEnteredt", "_classSetupFailedt", "_moduleSetUpFailed", "FalseR", "TrueR3", "_isnotsuitet", "_tearDownPreviousClasst", "_handleModuleFixturet", "_handleClassSetUpR", "_previousTestClassR", "_handleModuleTearDown", "topLevelR", "unittest", "suite", "tests", "without", "collecting", "errors", "TestResultN", "_DebugResultR", "unittest", "suite", "__unittest_skip__t", "setUpClasst", "_setupStdouts", "setUpClass", "_restoreStdout", "ExceptionR", "_addClassOrModuleLevelException", "previousClasst", "currentClassRA", "classNamet", "errorName", "unittest", "suite", "previousModuleRF", "unittest", "suite", "_get_previous_module", "setUpModuleRB", "setUpModule", "modulest", "KeyErrorR", "currentModulet", "moduleRM", "unittest", "suite", "addSkip", "_ErrorHolderR", "SkipTestt", "addErrorRN", "exc_info", "exceptionRJ", "errorRS", "unittest", "suite", "pycRE", "tearDownModuleRB", "tearDownModule", "unittest", "suite", "tearDownClassRB", "tearDownClass", "unittest", "suite", "pycR9", "unittest", "suite", "Placeholder", "TestCase", "inside", "result", "TestResult", "concerned", "looks", "exactly", "insert", "arbitrary", "errors", "suite", "description", "unittest", "suite", "unittest", "suite", "unittest", "suite", "shortDescription", "ErrorHolder", "description", "unittest", "suite", "unittest", "suite", "__str__", "unittest", "suite", "unittest", "suite", "unittest", "suite", "failureExceptionR", "unittest", "suite", "pycRT", "crude", "apart", "testcases", "suites", "typing", "unittest", "suite", "pycR8", "TestSuite", "previous", "class", "running", "debug", "unittest", "suite", "__unittestR", "objectR", "unittest", "suite", "module", "unittest", "Various", "utility", "functions", "namedtuplet", "OrderedDictiP", "truncated", "reprt", "Exceptiont", "objectt", "__repr__t", "_MAX_LENGTH", "shortt", "result", "unittest", "safe_repr", "__module__t", "__name__", "unittest", "strclass", "Finds", "elements", "other", "sorted", "input", "lists", "Returns", "element", "tuple", "lists", "first", "contains", "those", "elements", "expected", "actual", "second", "contains", "those", "elements", "actual", "expected", "Duplicate", "elements", "either", "input", "ignored", "Truet", "appendt", "IndexErrort", "extend", "expectedt", "actualt", "missingt", "unexpectedt", "unittest", "sorted_list_difference", "behavior", "sorted_list_difference", "lists", "unorderable", "items", "dicts", "linear", "search", "remove", "performance", "removet", "ValueErrorR", "ignore_duplicateR", "itemt", "unittest", "unorderable_list_difference", "Mismatchs", "actual", "expected", "valuec", "Returns", "cnt_act", "cnt_exp", "triples", "where", "counts", "differi", "listR", "enumeratet", "ranget", "_MismatchR", "NULLR", "elemt", "cnt_st", "cnt_tR", "other_elemt", "unittest", "_count_diff_all_purposed", "Return", "element", "counts", "order", "first", "seeni", "iterablet", "unittest", "_ordered_count", "Returns", "cnt_act", "cnt_exp", "triples", "where", "counts", "differi", "itemsR4", "unittest", "_count_diff_hashable", "__doc__t", "collectionsR", "__unittestR", "FalseR", "unittest", "module", "warnings", "Python", "warnings", "subsystem", "warnt", "warn_explicitt", "showwarningt", "formatwarningt", "filterwarningst", "simplefiltert", "resetwarningst", "catch_warningsi", "Issue", "deprecation", "warning", "Python", "related", "changes", "Warnings", "omitted", "unless", "Python", "started", "option", "py3kwarningt", "Nonet", "DeprecationWarningR", "messaget", "categoryt", "stacklevel", "warnings", "warnpy3k", "write", "warning", "replace", "stderrt", "writeR", "IOErrort", "UnicodeError", "filenamet", "linenot", "filet", "warnings", "_show_warning", "Function", "format", "warning", "standard", "latin1s", "unicodet", "NameErrort", "UnicodeEncodeErrort", "__name__R", "linecachet", "getlinet", "stript", "isinstanceR", "getfilesystemencodingt", "UnicodeDecodeError", "unicodetypet", "warnings", "Insert", "entry", "warnings", "filters", "front", "action", "error", "ignore", "always", "default", "module", "message", "regex", "warning", "message", "match", "category", "class", "warning", "subclass", "module", "regex", "module", "match", "lineno", "integer", "number", "matches", "warnings", "append", "append", "filters", "errort", "ignoret", "alwayst", "defaultt", "modulet", "onces", "invalid", "action", "message", "strings", "category", "classs", "category", "Warning", "subclasss", "module", "stringi", "lineno", "AssertionErrorR", "basestringt", "typet", "typest", "ClassTypet", "issubclasst", "Warningt", "compilet", "filterst", "appendt", "insert", "actionR", "warnings", "Insert", "simple", "entry", "warnings", "filters", "front", "simple", "filter", "matches", "modules", "messages", "action", "error", "ignore", "always", "default", "module", "category", "class", "warning", "subclass", "lineno", "integer", "number", "matches", "warnings", "append", "append", "filters", "invalid", "action", "lineno", "warnings", "Clear", "warning", "filters", "filters", "active", "warnings", "_OptionErrorc", "Exception", "option", "processing", "helpers", "__module__t", "__doc__", "warnings", "Invalid", "option", "ignored", "_setoptionR", "argst", "warnings", "_processoptions", "fields", "invalid", "lineno", "splitt", "_getactiont", "escapet", "_getcategoryR7", "ValueErrort", "OverflowErrorR", "partsR&", "warnings", "pycRB", "invalid", "action", "startswithR", "warnings", "pycRK", "unknown", "warning", "category", "invalid", "module", "invalid", "warning", "category", "matcht", "evalR", "rfindt", "__import__R", "ImportErrort", "getattrt", "AttributeErrorR5", "klasst", "warnings", "pycRM", "Issue", "warning", "maybe", "ignore", "raise", "exception", "string", "__file__s", "__main__i", "__warningregistry__N", "__class__R", "UserWarningR5", "_getframeRN", "__dict__t", "f_globalst", "f_linenot", "lowert", "endswitht", "argvR", "setdefaultR", "callert", "globalsR", "registry", "warnings", "unknown", "Unrecognized", "action", "warnings", "filters", "defaultactionR", "getlinest", "onceregistryt", "RuntimeErrorR", "module_globalst", "textt", "oncekeyt", "altkey", "warnings", "WarningMessagec", "Holds", "result", "single", "showwarning", "localst", "_WARNING_DETAILSt", "setattrR", "_category_name", "selfR", "local_valuest", "warnings", "__init__6", "message", "category", "filename", "lineno", "warnings", "__str__", "warnings", "context", "manager", "copies", "restores", "warnings", "filter", "exiting", "context", "record", "argument", "specifies", "whether", "warnings", "should", "captured", "custom", "implementation", "warnings", "showwarning", "appended", "returned", "context", "manager", "Otherwise", "returned", "context", "manager", "objects", "appended", "arguments", "whose", "attributes", "mirror", "arguments", "showwarning", "module", "argument", "specify", "alternative", "module", "module", "named", "warnings", "imported", "under", "argument", "useful", "testing", "warnings", "module", "itself", "Specify", "whether", "record", "warnings", "alternative", "module", "should", "other", "modules", "warnings", "compatibility", "Python", "please", "consider", "arguments", "keyword", "warningsN", "_recordR", "modulest", "_modulet", "Falset", "_entered", "recordR", "warnings", "record", "TrueR", "module", "warnings", "__repr__", "Cannot", "enter", "twicec", "kwargs", "warnings", "TrueR", "_filtersR", "_showwarningR", "warnings", "__enter__i", "Cannot", "without", "entering", "first", "exc_info", "warnings", "__exit__y", "warnings", "default_actiont", "once_registryR", "__all__R", "ExceptionR", "objectR", "_warnings_defaultst", "_warningsR", "warnoptionst", "ImportWarningt", "PendingDeprecationWarningt", "silenceR", "flagst", "division_warningR", "bytes_warningt", "bytes_actiont", "BytesWarning", "warnings", "module", "weakref", "reference", "support", "Python", "module", "implementation", "python", "getweakrefcountt", "getweakrefst", "proxyt", "CallableProxyTypet", "ProxyTypet", "ReferenceType", "WeakSett", "_IterationGuard", "ReferenceErrorR", "WeakKeyDictionaryR", "ProxyTypest", "WeakValueDictionaryR", "Mapping", "class", "references", "values", "weakly", "Entries", "dictionary", "discarded", "strong", "reference", "value", "exists", "anymore", "descriptor", "__init__", "WeakValueDictionary", "object", "needs", "argumenti", "expected", "arguments", "Nonet", "_iteratingt", "_pending_removalst", "appendt", "selfreft", "weakref", "remove7", "TypeErrort", "_removeR", "UserDictt", "__init__", "argst", "weakref", "weakref", "_commit_removalsD", "KeyError", "weakref", "__getitem__L", "weakref", "__delitem__S", "FalseR", "weakref", "__contains__X", "weakref", "has_key_", "WeakValueDictionary", "weakref", "__repr__f", "KeyedRefR", "value", "weakref", "__setitem__i", "clear", "weakref", "itemsR", "weakref", "copys", "deepcopy", "__class__R", "memoR3", "weakref", "__deepcopy__", "defaultR", "weakref", "weakref", "pycR0", "itervaluesR", "weakref", "iteritems", "iterkeys", "weakref", "Return", "iterator", "yields", "references", "values", "references", "guaranteed", "result", "calling", "references", "needs", "checked", "before", "being", "avoid", "creating", "references", "cause", "garbage", "collector", "values", "around", "longer", "needed", "weakref", "itervaluerefs", "weakref", "popitemR", "weakref", "weakref", "weakref", "setdefault", "descriptor", "update", "WeakValueDictionary", "object", "needs", "argumenti", "expected", "arguments", "hasattrt", "typeR0", "update", "kwargsR", "dictR!", "weakref", "pycRD", "Return", "references", "values", "references", "guaranteed", "result", "calling", "references", "needs", "checked", "before", "being", "avoid", "creating", "references", "cause", "garbage", "collector", "values", "around", "longer", "needed", "values", "weakref", "valuerefs", "weakref", "pycRG", "__name__t", "__module__t", "__doc__R", "__copy__R6", "__iter__R", "weakref", "Specialized", "reference", "includes", "corresponding", "value", "WeakValueDictionary", "avoid", "having", "create", "function", "object", "stored", "mapping", "shared", "callback", "object", "attribute", "KeyedRef", "instead", "getting", "reference", "enclosing", "scope", "__new__R", "callbackR", "weakref", "pycRN", "superR", "weakref", "__slots__RN", "weakref", "Mapping", "class", "references", "weakly", "Entries", "dictionary", "discarded", "there", "longer", "strong", "reference", "associate", "additional", "object", "owned", "other", "parts", "application", "without", "adding", "attributes", "those", "objects", "especially", "useful", "objects", "override", "attribute", "accesses", "weakref", "weakref", "weakref", "weakref", "pycR&", "weakref", "WeakKeyDictionary", "weakref", "weakref", "weakref", "pycR2", "weakref", "pycR6", "weakref", "pycR8", "weakref", "weakref", "weakref", "pycR0", "weakref", "Return", "iterator", "yields", "references", "references", "guaranteed", "result", "calling", "references", "needs", "checked", "before", "being", "avoid", "creating", "references", "cause", "garbage", "collector", "around", "longer", "needed", "weakref", "iterkeyrefs", "weakref", "weakref", "Return", "references", "references", "guaranteed", "result", "calling", "references", "needs", "checked", "before", "being", "avoid", "creating", "references", "cause", "garbage", "collector", "around", "longer", "needed", "weakref", "keyrefs", "weakref", "pycRT", "weakref", "weakref", "weakref", "pycRA", "weakref", "pycRD", "weakref", "_weakrefR", "_weakrefsetR", "exceptionsR", "__all__R", "weakref", "module", "_hashlib", "pydMZ", "!This", "program", "cannot", "rdata", "reloc", "L$$PQ", "QPShL", "VWSRj", "PRVhp", "PRWhp", "PRVhp", "QWSVQ", "SRVPW", "QRVSW", "QSVW3", "VRPWQ", "T$4RPQ", "L$4QRP", "L$DQj", "L$4QRP", "D$4PQR", "PQRSV", "j0PQSV", "ORPQSV", "j0PQRV", "OQRPSV", "j0QWSV", "8SVW3", "VjEhP", "t&hPQ", "G8PWj", "QSQju", "A$RSV", "QSVW3", "T$$QR", "L$$Q3", "T$$SR", "L$8PQ", "T$$R3", "PWSRh", "COWSP", "$g&3g", "N4QVj", "T$0WR", "D$LPQ", "T$HVR", "HPhLn", "T$0QRj", "L$lQR", "SVWj2", "T$lRQ", "D$4QPP", "T$TWPQRj", "QSWVR", "D$DRPSWVQ", "t$49G", "HPhLn", "D$$WPP", "t$dPSWVj", "t$0SWV", "$TQRVPWS", "VSPQRW", "Y$VW3", "QWSWR", "VQRWS", "RVSQP", "QRPVW", "D$4RP", "D$DPQ", "PRWSV", "RPWSQ", "VPWSQ", "t$0WV", "S$QWVRj", "PQVRj", "K0QSj", "L$DPQ", "D$8RP", "QRPWV", "T$$VQR", "L$DQ3", "T$$VR", "T$LQR", "L$DQ3", "L$LPQ", "T$DR3", "L10PQ", "V0RSV", "u$jVh", "T$8ht", "L$DQj", "t$$hR", "VRQPW", "_v!jq", "SWQRP", "AAh81", "VPRQW", "VPRQW", "SWQVj", "VWPQj", "D$$t&h", "RPWVj", "RPWSj", "QRWVj", "SPQVj", "GmhH2", "VRPWQ", "FmhH2", "CmhH2", "SRVVj", "SVW9H", "SRPPj", "RSVPWW", "SRWVj", "C$VW3", "GmhH2", "6QPWV", "D$LSRPP", "9D$DrEw", "9L$Dw", "SRVVO", "PVQR3", "L$$PQR", "uAVh0", "QSVW3", "QWSVj", "QWRVj", "CmhH2", "PVSSj", "QSVRP", "PQVRj", "FmhH2", "C$9s$u99s", "SVWPj", "PWQRS", "PWQRS", "RWPQS", "QWRPS", "PVQRS", "PVQRS", "RVPQS", "QVRPS", "SSWV3", "8SVW3", "CnhH2", "8SVW3", "CnhH2", "C$VW3", "GmhH2", "SQPRj", "SPWWj", "SWh0B", "SWhDB", "SWhLB", "A$SWhTB", "SWhlB", "VWtZj", "T$$Rj", "T$$RSh", "L$$VQS", "9PRhXD", "T$$PRh", "L$0ht", "SVh$E", "SVh4E", "SWhDE", "jchhE", "u$juhhE", "$SVW3", "D$$PQ", "L$0ht", "T$LQR", "L$LPQ", "PRVhp", "PRWhp", "PRVhp", "GmhH2", "ClhH2", "PWVVj", "PWVVj", "QQRPPj", "PSWWj", "RNVWS", "RVWPj", "D$$QPPP", "QSVWj", "T$$RV", "u!9D$", "jjh8L", "Vjjh8L", "jjh8L", "jlh8L", "0SVW3", "PSQhdN", "PQPQhDP", "QSVW3", "tUSVW", "Fqhxa", "BAhxa", "QPVRW", "tSSQV", "QVSRPh", "QVSRPh", "PQh0D", "QSVW3", "WRSSV", "WQSSV", "VPSSW", "VQSSW", "tAWVSS", "QRSWV", "8QRSWV", "PQRSWV", "XQRSWV", "jMhXm", "G8RPSW", "D$$WSh", "L$4WQP", "QVhps", "SPQRV", "SPQR3", "uqhtw", "WQhLz", "$SVW3", "VRPhD", "RQPhD", "L$XVSWQP", "T$$RW", "$HtVV", "D$0Pj", "RRPQj", "D$8Pj", "uGjOh", "PQRVW", "QSRVj", "OtQSW", "OtQVW", "SWVVj", "SQWWj", "GHPSSj", "VQSRW", "GHPQR", "WRPQS", "QRVVP", "QSRSP", "tUSVV", "VtRSSV", "PSQSR", "WPQRV", "PQVVR", "FtPQRV", "WPSSV", "RPSSV", "HQVVj", "CmhH2", "VSWPQ", "CmhH2", "WQRSS", "VWRPS", "CmhH2", "VRPSW", "VRSPW", "VPSSW", "VPSSW", "VRSSW", "VRSSW", "VSRSW", "VPSPW", "VQSSW", "VQPWS", "QRPWS", "PQVWRS", "N8PSV", "N8RPV", "u$AJ3", "RVPSW", "PSWQR", "PRVQu", "$SVWj", "T$0VR", "T$HRj", "T$DRP", "SSVSSR", "D$LPR", "98tR9x", "QSVW3", "u!VWh", "u9VWV", "UUUU3", "UUUU3", "D$$vT2", "VPWQR", "VRWPQ", "L$8QS", "D$8PS", "3xh3Pt", "VPQRS", "L$03L$", "L$83L$H", "D$D1D$4", "L$41D$", "1L$$1T$", "3D$H3", "T$T1T$4", "1L$01D$8", "D$01D$", "L$41D$", "T$43L$", "SPWQR", "SRWPV", "SPWWj", "QSVW3", "CmhH2", "G$9_$u39_", "QVWWj", "SQRVj", "SPQWj", "SPWWj", "SQWWj", "USVW1", "USVW1", "USVW1", "ot$0J", "ot$0f", "ot$0f", "ot$0f", "ot$0f", "SHA512", "block", "transform", "CRYPTOGAMS", "appro", "openssl", "3D$$!", "3T$01", "3L$41", "3D$$1", "3T$01", "3L$41", "3L$$1", "3t$01", "3T$81", "3L$$1", "3t$01", "3T$81", "3D$4!", "3t$8!", "3D$41", "3t$81", "3D$$1", "3T$01", "3L$41", "3D$$1", "3T$01", "3L$41", "oL$p1", "oT$p1", "block", "transform", "CRYPTOGAMS", "appro", "openssl", "SHA256", "block", "transform", "CRYPTOGAMS", "appro", "openssl", "OO!OBn", "OO!OBn", "mRRUR", "CKK1Kbz", "KK1Kbz", "JJ5Jj", "JJ5Jj", "II9Irp", "II9Irp", "d__a_", "$QQYQ", "USVW1", "Montgomery", "Multiplication", "CRYPTOGAMS", "appro", "openssl", "$43D$03", "Multiplication", "CRYPTOGAMS", "appro", "openssl", "L&&jL&&jl66Zl66Z", "sb11Sb11S", "r99Kr99K", "f33Uf33U", "p88Hp88H", "uB!!cB!!c", "d22Vd22Vt", "H$$lH$$l", "Cn77Yn77Y", "j55_j55_", "pHhXpHhX", "lZrNlZrN", "ZwKiZwKi", "CRYPTOGAMS", "appro", "openssl", "33331", "33331", "33331", "33331", "33331", "33331", "D$4PS", "D$8PS", "oL$Pf", "oL$Pf", "Intel", "CRYPTOGAMS", "appro", "openssl", "Vector", "Permutation", "SSSE3", "Hamburg", "Stanford", "University", "lbm$o", "brc4a", "GHASH", "CRYPTOGAMS", "appro", "openssl", "uCWVS", "pbkdf2_hmac", "Returns", "sha512", "object", "optionally", "initialized", "string", "openssl_sha512", "Returns", "sha384", "object", "optionally", "initialized", "string", "openssl_sha384", "Returns", "sha256", "object", "optionally", "initialized", "string", "openssl_sha256", "Returns", "sha224", "object", "optionally", "initialized", "string", "openssl_sha224", "Returns", "object", "optionally", "initialized", "string", "openssl_sha1", "Returns", "object", "optionally", "initialized", "string", "openssl_md5", "dklen", "iterations", "password", "hash_name", "string", "_hashlib", "digestsize", "block_size", "digest_size", "algorithm", "hexdigest", "digest", "update", "unknown", "reasons", "update", "object", "unsupported", "string", "pbkdf2_hmac", "password", "iteration", "value", "greater", "iteration", "value", "great", "length", "greater", "length", "great", "sha224", "sha256", "sha384", "sha512", "_hashlib", "openssl_md_meth_names", "sha224", "sha256", "sha384", "sha512", "sizeof", "build27", "cpython", "externals", "openssl", "crypto", "build27", "cpython", "externals", "openssl", "crypto", "digest", "digest", "md_size", "EVP_MAX_MD_SIZE", "called", "function", "disabled", "compile", "internal", "error", "passed", "parameter", "called", "function", "should", "malloc", "failure", "fatal", "missing", "length", "mismatch", "expecting", "sequence", "object", "object", "header", "nested", "error", "ENGINE", "PKCS12", "X509V3", "PKCS7", "CRYPTO", "system", "fread", "opendir", "WSAstartup", "accept", "listen", "ioctlsocket", "socket", "getservbyname", "connect", "fopen", "routines", "routines", "routines", "routines", "engine", "routines", "stamp", "routines", "support", "routines", "random", "number", "generator", "PKCS12", "routines", "routines", "PKCS7", "routines", "routines", "routines", "elliptic", "curve", "routines", "common", "libcrypto", "routines", "configuration", "routines", "encoding", "routines", "certificate", "routines", "routines", "routines", "object", "identifier", "routines", "memory", "buffer", "routines", "digital", "envelope", "routines", "Diffie", "Hellman", "routines", "routines", "bignum", "routines", "system", "library", "unknown", "library", "1122447788", "CCEEFFIIJJLLOOQQRRTTWWXX", "aabbddgghhkkmmnnppssuuvvyyzz", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", "456789", "OpenSSL", "OpenSSL", "Content", "application", "request", "Content", "Length", "CONF_def", "OpenSSL", "OpenSSL", "0123456789ABCDEF", "0123456789ABCDEF", "OpenSSL", "OpenSSL", "OpenSSL", "0123456789ABCDEF", "!5!A!I!O!Y!", "!_!s!", "$A$C$M$_$g$k$y$", "&K&S&Y&e&i&o&", "0U0Y0", "0g0q0y0", "191C1E1K1", "1a1g1m1s1", "252Y2", "2c2k2o2u2w2", "353A3G3", "3_3g3k3s3y3", "474E4U4W4c4i4m4", "5A5Q5e5o5q5w5", "6165676", "6M6O6S6Y6a6k6m6", "7E7I7O7", "7a7u7", "8!83858A8G8K8S8W8_8e8o8q8", "9A9M9", "9k9y9", "A!A3A5A", "AYAeAkAwA", "BCBSBUB", "BaBsB", "C3C7C9COCWCiC", "DEDKDQDSDYDeDoD", "E1EAEIESEUEaEwE", "OO!OBn", "mRRUR", "CKK1Kbz", "JJ5Jj", "II9Irp", "d__a_", "$QQYQ", "OpenSSL", "OpenSSL", "ECDSA", "OpenSSL", "OpenSSL", "10123456789ABCDEF", "A2VPD", "cs73KI", "C!FReQ", "MinghuaQu", "MinghuaQuS", "MinghuaQu", "MinghuaQu", "A2VPD", "MinghuaQu", "kV!DA", "MinghuaQuw", "aybSr", "Diffie", "Hellman", "OpenSSL", "Yb6N4", "OpenSSL", "OpenSSL", "MinghuaQu", "OpenSSL", "ggRcjh", "UUUUUUUUUUUa", "MinghuaQu", "Vg3LE", "UUUUUUUUUUUUUU", "oMinghuaQu", "tfjgvmfv", "VggjeK", "J_spY", "J_spY", "J_spY", "J_spY", "$Cw!R", "J_spY", "o&1m&", "w8i_q", "H5gRR", "OpenSSL", "OpenSSL", "OpenSSL", "OpenSSL", "MD160", "OpenSSL", "0123456789ABCDEF", "OpenSSL", "Number", "OpenSSL", "Stack", "OpenSSL", "lhash", "OpenSSL", "build27", "cpython", "externals", "openssl", "crypto", "int_err_get", "int_thread_get", "unknown", "reason", "error", "sizeof", "build27", "cpython", "externals", "openssl", "crypto", "evp_lib", "sizeof", "build27", "cpython", "externals", "openssl", "crypto", "objects", "o_names", "RIPEMD160", "ripemd", "rmd160", "fips2", "store", "ec_pre_comp", "ecdsa", "engine", "dynlock", "debug_malloc2", "RSA_blinding", "readdir", "gethostbyname", "debug_malloc", "rand2", "ssl_method", "ssl_sess_cert", "ssl_session", "ssl_cert", "ssl_ctx", "x509_store", "evp_pkey", "x509_req", "x509_crl", "x509_pkey", "x509_info", "ex_data", "ERROR", "build27", "cpython", "externals", "openssl", "crypto", "cryptlib", "pointer", "dynamic", "ERROR", "OPENSSL_ia32cap", "_OPENSSL_isservice", "OpenSSL", "OpenSSL", "FATAL", "OpenSSL", "internal", "error", "assertion", "failed", "build27", "cpython", "externals", "openssl", "crypto", "pmeth_lib", "build27", "cpython", "externals", "openssl", "crypto", "engine", "tb_digest", "build27", "cpython", "externals", "openssl", "crypto", "engine", "eng_init", "build27", "cpython", "externals", "openssl", "crypto", "jurisdictionCountryName", "jurisdictionC", "jurisdictionStateOrProvinceName", "jurisdictionST", "jurisdictionLocalityName", "jurisdictionL", "Certificate", "ct_cert_scts", "Precertificate", "Signer", "ct_precert_signer", "Precertificate", "Poison", "ct_precert_poison", "Precertificate", "ct_precert_scts", "sha256", "SHA256", "sha256", "SHA256", "sha256", "SHA256", "cofactor", "dhSinglePass", "cofactorDH", "sha512kdf", "scheme", "dhSinglePass", "cofactorDH", "sha384kdf", "scheme", "dhSinglePass", "cofactorDH", "sha256kdf", "scheme", "dhSinglePass", "cofactorDH", "sha224kdf", "scheme", "dhSinglePass", "cofactorDH", "sha1kdf", "scheme", "dhSinglePass", "stdDH", "sha512kdf", "scheme", "dhSinglePass", "stdDH", "sha384kdf", "scheme", "dhSinglePass", "stdDH", "sha256kdf", "scheme", "dhSinglePass", "stdDH", "sha224kdf", "scheme", "dhSinglePass", "stdDH", "sha1kdf", "scheme", "pSpecified", "PSPECIFIED", "brainpoolP512t1", "brainpoolP512r1", "brainpoolP384t1", "brainpoolP384r1", "brainpoolP320t1", "brainpoolP320r1", "brainpoolP256t1", "brainpoolP256r1", "brainpoolP224t1", "brainpoolP224r1", "brainpoolP192t1", "brainpoolP192r1", "brainpoolP160t1", "brainpoolP160r1", "dhpublicnumber", "rsaesOaep", "RSAES", "rsassaPss", "RSASSA", "Extended", "Usage", "anyExtendedKeyUsage", "camellia256", "camellia192", "camellia128", "aes256", "aes256", "aes256", "aes192", "aes192", "aes192", "aes128", "aes128", "aes128", "dmdName", "deltaRevocationList", "supportedAlgorithms", "houseIdentifier", "uniqueMember", "distinguishedName", "protocolInformation", "enhancedSearchGuide", "crossCertificatePair", "certificateRevocationList", "authorityRevocationList", "cACertificate", "userCertificate", "userPassword", "seeAlso", "roleOccupant", "owner", "member", "supportedApplicationContext", "presentationAddress", "preferredDeliveryMethod", "destinationIndicator", "registeredAddress", "internationaliSDNNumber", "x121Address", "facsimileTelephoneNumber", "teletexTerminalIdentifier", "telexNumber", "telephoneNumber", "physicalDeliveryOfficeName", "postOfficeBox", "postalAddress", "businessCategory", "searchGuide", "Permanent", "Identifier", "permanentIdentifier", "X509v3", "Freshest", "freshestCRL", "Microsoft", "Local", "LocalKeySet", "Parameter", "Cryptocom", "GostR3410", "ParamSet", "Cryptocom", "GostR3411", "GostR3410", "Cryptocom", "GostR3411", "GostR3410", "Cryptocom", "gost2001cc", "Cryptocom", "gost94cc", "28147", "Cryptocom", "ParamSet", "Gost28147", "GostR3410", "GostR3410", "GostR3410", "GostR3410", "GostR3410", "CryptoPro", "ParamSet", "GostR3410", "CryptoPro", "ParamSet", "GostR3410", "CryptoPro", "ParamSet", "GostR3410", "CryptoPro", "ParamSet", "GostR3410", "CryptoPro", "ParamSet", "GostR3410", "TestParamSet", "GostR3410", "CryptoPro", "ParamSet", "GostR3410", "CryptoPro", "ParamSet", "GostR3410", "CryptoPro", "ParamSet", "GostR3410", "CryptoPro", "ParamSet", "GostR3410", "CryptoPro", "ParamSet", "GostR3410", "CryptoPro", "ParamSet", "GostR3410", "CryptoPro", "ParamSet", "GostR3410", "TestParamSet", "Gost28147", "CryptoPro", "ParamSet", "Gost28147", "CryptoPro", "Oscar", "ParamSet", "Gost28147", "CryptoPro", "Oscar", "ParamSet", "Gost28147", "CryptoPro", "ParamSet", "Gost28147", "CryptoPro", "ParamSet", "Gost28147", "CryptoPro", "ParamSet", "Gost28147", "CryptoPro", "ParamSet", "Gost28147", "TestParamSet", "GostR3411", "CryptoProParamSet", "GostR3411", "TestParamSet", "Gost28147", "KeyMeshing", "Gost28147", "CryptoPro", "KeyMeshing", "GostR3410", "GostR3410", "2001DH", "gostr3411", "28147", "gost89", "28147", "gost89", "gost94", "gost2001", "HMACGostR3411", "md_gost94", "GostR3411", "GostR3410", "GostR3411", "GostR3410", "cryptocom", "cryptopro", "whirlpool", "dsa_with_SHA256", "dsa_with_SHA224", "hmacWithSHA512", "hmacWithSHA384", "hmacWithSHA256", "hmacWithSHA224", "hmacWithMD5", "ecdsa", "SHA512", "ecdsa", "SHA384", "ecdsa", "SHA256", "ecdsa", "SHA224", "ecdsa", "Specified", "ecdsa", "Recommended", "aes256", "aes192", "aes128", "asciiTextWithCRLF", "smime", "compressedData", "Repository", "caRepository", "suppLangTags", "Diffie", "Hellman", "based", "DHBasedMac", "password", "based", "PasswordBasedMAC", "X509v3", "Certificate", "Issuer", "certificateIssuer", "X509v3", "Issuing", "Distrubution", "Point", "issuingDistributionPoint", "X509v3", "Subject", "Directory", "Attributes", "subjectDirectoryAttributes", "camellia", "CAMELLIA", "camellia", "CAMELLIA", "camellia", "CAMELLIA", "camellia", "CAMELLIA", "camellia", "CAMELLIA", "camellia", "CAMELLIA", "camellia", "CAMELLIA", "camellia", "CAMELLIA", "camellia", "CAMELLIA", "camellia", "CAMELLIA", "camellia", "CAMELLIA", "camellia", "CAMELLIA", "camellia", "CAMELLIA", "camellia", "CAMELLIA", "camellia", "CAMELLIA", "camellia", "CAMELLIA", "camellia", "CAMELLIA", "camellia", "CAMELLIA", "ipsec4", "Oakley", "ipsec3", "Oakley", "X509v3", "Inhibit", "Policy", "inhibitAnyPolicy", "X509v3", "Policy", "Mappings", "policyMappings", "X509v3", "Policy", "anyPolicy", "wtls12", "wtls11", "wtls10", "wtls9", "wtls8", "wtls7", "wtls6", "wtls5", "wtls4", "wtls3", "wtls1", "sect571r1", "sect571k1", "sect409r1", "sect409k1", "sect283r1", "sect283k1", "sect239k1", "sect233r1", "sect233k1", "sect193r2", "sect193r1", "sect163r2", "sect163r1", "sect163k1", "sect131r2", "sect131r1", "sect113r2", "sect113r1", "secp521r1", "secp384r1", "secp256k1", "secp224r1", "secp224k1", "secp192k1", "secp160r2", "secp160r1", "secp160k1", "secp128r2", "secp128r1", "secp112r2", "secp112r1", "c2tnb431r1", "c2pnb368w1", "c2tnb359v1", "c2pnb304w1", "c2pnb272w1", "c2onb239v5", "c2onb239v4", "c2tnb239v3", "c2tnb239v2", "c2tnb239v1", "c2pnb208w1", "c2onb191v5", "c2onb191v4", "c2tnb191v3", "c2tnb191v2", "c2tnb191v1", "c2pnb176v1", "c2pnb163v3", "c2pnb163v2", "c2pnb163v1", "ppBasis", "tpBasis", "onBasis", "characteristic", "basis", "certicom", "identified", "organization", "SHA224", "SHA512", "SHA384", "SHA256", "sha224WithRSAEncryption", "SHA224", "sha512WithRSAEncryption", "SHA512", "sha384WithRSAEncryption", "SHA384", "sha256WithRSAEncryption", "SHA256", "Independent", "independent", "X509v3", "Constraints", "nameConstraints", "Inherit", "inheritAll", "language", "anyLanguage", "Proxy", "Certificate", "Information", "proxyCertInfo", "postalCode", "streetAddress", "street", "Microsoft", "Universal", "Principal", "msUPN", "Microsoft", "Smartcardlogin", "msSmartcardLogin", "International", "Organizations", "international", "organizations", "joint", "JOINT", "rsaOAEPEncryptionSET", "brand", "Novus", "brand", "MasterCard", "brand", "brand", "brand", "AmericanExpress", "brand", "Diners", "brand", "secure", "device", "signature", "setAttr", "SecDevSig", "token", "signature", "setAttr", "TokICCsig", "cleartext", "track", "setAttr", "T2cleartxt", "encrypted", "track", "setAttr", "T2Enc", "generate", "cryptogram", "setAttr", "GenCryptgrm", "setAttr", "IssCap", "setAttr", "IssCap", "setAttr", "IssCap", "setAttr", "Token", "B0Prime", "setAttr", "Token", "addPolicy", "rootKeyThumb", "issuer", "capabilities", "setAttr", "IssCap", "setAttr", "TokenType", "payment", "gateway", "capabilities", "setAttr", "PGWYcap", "setAttr", "setCext", "IssuerCapabilities", "setCext", "TokenType", "setCext", "Track2Data", "setCext", "TokenIdentifier", "setCext", "PGWYcapabilities", "setCext", "setQualf", "setCext", "setExt", "setCext", "tunneling", "setCext", "cCertRequired", "setCext", "merchData", "setCext", "certType", "setCext", "hashedRoot", "policy", "additional", "verification", "setext", "setext", "track2", "setext", "pinAny", "setext", "pinSecure", "merchant", "initiated", "setext", "miAuth", "generic", "cryptogram", "setext", "genCrypt", "setct", "BCIDistributionTBS", "setct", "CRLNotificationResTBS", "setct", "CRLNotificationTBS", "setct", "CertResTBE", "setct", "CertReqTBEX", "setct", "CertReqTBE", "setct", "RegFormReqTBE", "setct", "BatchAdminResTBE", "setct", "BatchAdminReqTBE", "setct", "CredRevResTBE", "setct", "CredRevReqTBEX", "setct", "CredRevReqTBE", "setct", "CredResTBE", "setct", "CredReqTBEX", "setct", "CredReqTBE", "setct", "CapRevResTBE", "setct", "CapRevReqTBEX", "setct", "CapRevReqTBE", "setct", "CapResTBE", "setct", "CapReqTBEX", "setct", "CapReqTBE", "setct", "AuthRevResTBEB", "setct", "AuthRevResTBE", "setct", "AuthRevReqTBE", "setct", "AcqCardCodeMsgTBE", "setct", "CapTokenTBEX", "setct", "CapTokenTBE", "setct", "AuthTokenTBE", "setct", "AuthResTBEX", "setct", "AuthResTBE", "setct", "AuthReqTBE", "setct", "PIUnsignedTBE", "setct", "PIDualSignedTBE", "setct", "ErrorTBS", "setct", "CertInqReqTBS", "setct", "CertResData", "setct", "CertReqTBS", "setct", "CertReqData", "setct", "RegFormResTBS", "setct", "MeAqCInitResTBS", "setct", "CardCInitResTBS", "setct", "BatchAdminResData", "setct", "BatchAdminReqData", "setct", "PCertResTBS", "setct", "PCertReqData", "setct", "CredRevResData", "setct", "CredRevReqTBSX", "setct", "CredRevReqTBS", "setct", "CredResData", "setct", "CredReqTBSX", "setct", "CredReqTBS", "setct", "CapRevResData", "setct", "CapRevReqTBSX", "setct", "CapRevReqTBS", "setct", "CapResData", "setct", "CapReqTBSX", "setct", "CapReqTBS", "setct", "AuthRevResTBS", "setct", "AuthRevResData", "setct", "AuthRevReqTBS", "setct", "AcqCardCodeMsg", "setct", "CapTokenTBS", "setct", "CapTokenData", "setct", "AuthTokenTBS", "setct", "AuthResTBSX", "setct", "AuthResTBS", "setct", "AuthReqTBS", "setct", "PResData", "setct", "setct", "PInitResData", "setct", "CapTokenSeq", "setct", "AuthRevResBaggage", "setct", "AuthRevReqBaggage", "setct", "AuthResBaggage", "setct", "HODInput", "setct", "PIDataUnsigned", "setct", "PIData", "setct", "setct", "OIData", "setct", "PANOnly", "setct", "PANToken", "setct", "PANData", "brand", "certificate", "extensions", "certExt", "policy", "message", "extensions", "msgExt", "content", "types", "ctype", "Secure", "Electronic", "Transactions", "pseudonym", "generationQualifier", "multipart", "message", "partial", "message", "bodies", "headings", "x500UniqueIdentifier", "documentPublisher", "audio", "dITRedirect", "personalSignature", "subtreeMaximumQuality", "subtreeMinimumQuality", "singleLevelQuality", "dSAQuality", "buildingName", "mailPreferenceOption", "janetMailbox", "organizationalStatus", "friendlyCountryName", "pagerTelephoneNumber", "mobileTelephoneNumber", "personalTitle", "homePostalAddress", "associatedName", "associatedDomain", "cNAMERecord", "sOARecord", "nSRecord", "mXRecord", "pilotAttributeType27", "aRecord", "lastModifiedBy", "lastModifiedTime", "otherMailbox", "secretary", "homeTelephoneNumber", "documentLocation", "documentAuthor", "documentVersion", "documentTitle", "documentIdentifier", "manager", "userClass", "photo", "roomNumber", "favouriteDrink", "rfc822Mailbox", "textEncodedORAddress", "userId", "qualityLabelledData", "pilotDSA", "pilotOrganization", "simpleSecurityObject", "friendlyCountry", "domainRelatedObject", "dNSDomain", "rFC822localPart", "documentSeries", "document", "account", "pilotPerson", "pilotObject", "caseIgnoreIA5StringSyntax", "iA5StringSyntax", "pilotGroups", "pilotObjectClass", "pilotAttributeSyntax", "pilotAttributeType", "pilot", "Instruction", "Reject", "holdInstructionReject", "Instruction", "Issuer", "holdInstructionCallIssuer", "Instruction", "holdInstructionNone", "Instruction", "holdInstructionCode", "Microsoft", "CSPName", "ecdsa", "prime256v1", "prime239v3", "prime239v2", "prime239v1", "prime192v3", "prime192v2", "prime192v1", "ecPublicKey", "characteristic", "field", "prime", "field", "X509v3", "Revocation", "Available", "noRevAvail", "X509v3", "Targeting", "targetInformation", "X509v3", "Policy", "Constraints", "policyConstraints", "encAttrs", "Subject", "Information", "Access", "subjectInfoAccess", "proxying", "md4WithRSAEncryption", "clearance", "Selected", "Attribute", "Types", "selected", "attribute", "types", "Domain", "domain", "domainComponent", "dcObject", "dcobject", "Enterprises", "enterprises", "SNMPv2", "snmpv2", "Security", "security", "Private", "private", "Experimental", "experimental", "Management", "Directory", "directory", "directory", "services", "algorithms", "X500algorithms", "rsaSignature", "algorithm", "Trust", "trustRoot", "valid", "Extended", "Status", "extendedStatus", "Service", "Locator", "serviceLocator", "Archive", "Cutoff", "archiveCutoff", "Check", "noCheck", "Acceptable", "Responses", "acceptableResponses", "CrlID", "Nonce", "Nonce", "Basic", "Response", "basicOCSPResponse", "AD_DVCS", "Stamping", "ad_timestamping", "PKIResponse", "PKIData", "pkixQCSyntax", "group", "chargingIdentity", "accessIdentity", "authenticationInfo", "countryOfResidence", "countryOfCitizenship", "gender", "placeOfBirth", "dateOfBirth", "personalData", "confirmCertAcceptance", "popLinkWitness", "popLinkRandom", "queryPending", "responseInfo", "regInfo", "revokeRequest", "getCRL", "getCert", "lraPOPWitness", "decryptedPOP", "encryptedPOP", "addExtensions", "recipientNonce", "senderNonce", "transactionId", "dataReturn", "identityProof", "identification", "statusInfo", "noSignature", "des40", "regInfo", "certReq", "regInfo", "utf8Pairs", "regCtrl", "protocolEncrKey", "regCtrl", "oldCertID", "regCtrl", "pkiArchiveOptions", "regCtrl", "pkiPublicationInfo", "regCtrl", "authenticator", "regCtrl", "regToken", "regInfo", "regCtrl", "origPKIMessage", "confirmWaitTime", "implicitConfirm", "revPassphrase", "keyPairParamRep", "keyPairParamReq", "subscriptionResponse", "subscriptionRequest", "unsupportedOIDs", "currentCRL", "caKeyUpdateInfo", "preferredSymmAlg", "encKeyPairTypes", "signKeyPairTypes", "caProtEncCert", "IPSec", "ipsecUser", "IPSec", "Tunnel", "ipsecTunnel", "IPSec", "System", "ipsecEndSystem", "textNotice", "routerIdentifier", "autonomousSysNum", "ipAddrBlock", "aaControls", "targeting", "auditEntity", "qcStatements", "Biometric", "biometricInfo", "cmp2000", "timestamp", "protocol", "attribute", "qualified", "qualified", "profile", "profile", "pkix1", "implicit", "pkix1", "explicit", "pkix1", "implicit", "pkix1", "explicit", "smime", "proofOfCreation", "smime", "proofOfApproval", "smime", "proofOfSender", "smime", "proofOfDelivery", "smime", "proofOfReceipt", "smime", "proofOfOrigin", "smime", "unotice", "smime", "smime", "smime", "CMSRC2wrap", "smime", "CMS3DESwrap", "smime", "smime", "RC2wrap", "smime", "3DESwrap", "smime", "ESDHwithRC2", "smime", "ESDHwith3DES", "smime", "smime", "signatureType", "smime", "archiveTimeStamp", "smime", "certCRLTimestamp", "smime", "escTimeStamp", "smime", "revocationValues", "smime", "certValues", "smime", "RevocationRefs", "smime", "CertificateRefs", "smime", "contentTimestamp", "smime", "otherSigCert", "smime", "signerAttr", "smime", "signerLocation", "smime", "commitmentType", "smime", "sigPolicyId", "smime", "timeStampToken", "smime", "smimeEncryptCerts", "smime", "signingCertificate", "smime", "encrypKeyPref", "smime", "contentReference", "smime", "equivalentLabels", "smime", "macValue", "smime", "contentIdentifier", "smime", "encapContentType", "smime", "msgSigDigest", "smime", "contentHint", "smime", "mlExpandHistory", "smime", "securityLabel", "smime", "receiptRequest", "smime", "DVCSResponseData", "smime", "DVCSRequestData", "smime", "contentInfo", "smime", "TDTInfo", "smime", "TSTInfo", "smime", "publishCert", "smime", "authData", "smime", "receipt", "smime", "eSigPolicy", "smime", "eSigPolicy", "smime", "eSignature", "smime", "eSignature", "smime", "smime", "smime", "smime", "smime", "smime", "smime", "smime", "smime", "smime", "smime", "SMIME", "pkcs5", "pkcs1", "Member", "Member", "member", "Signing", "OCSPSigning", "Issuers", "caIssuers", "Authority", "Information", "Access", "authorityInfoAccess", "dnQualifier", "Extension", "Request", "extReq", "Microsoft", "Extension", "Request", "msExtReq", "pbeWithSHA1AndDES", "pbeWithMD5AndRC2", "pbeWithMD2AndRC2", "Capabilities", "SMIME", "Policy", "Qualifier", "Notice", "unotice", "Policy", "Qualifier", "hmacWithSHA1", "PBMAC1", "PBES2", "x509Crl", "sdsiCertificate", "x509Certificate", "localKeyID", "friendlyName", "safeContentsBag", "secretBag", "crlBag", "certBag", "pkcs8ShroudedKeyBag", "keyBag", "pbeWithSHA1And40BitRC2", "pbeWithSHA1And128BitRC2", "pbeWithSHA1And2", "KeyTripleDES", "pbeWithSHA1And3", "KeyTripleDES", "pbeWithSHA1And40BitRC4", "pbeWithSHA1And128BitRC4", "Strong", "Extranet", "SXNetID", "Invalidity", "invalidityDate", "X509v3", "Reason", "CRLReason", "X509v3", "Delta", "Indicator", "deltaCRL", "Netscape", "Server", "Gated", "Crypto", "nsSGC", "Microsoft", "Encrypted", "System", "msEFS", "Microsoft", "Server", "Gated", "Crypto", "msSGC", "Microsoft", "Trust", "Signing", "msCTLSign", "Microsoft", "Commercial", "Signing", "msCodeCom", "Microsoft", "Individual", "Signing", "msCodeInd", "Stamping", "timeStamping", "Protection", "emailProtection", "Signing", "codeSigning", "Client", "Authentication", "clientAuth", "Server", "Authentication", "serverAuth", "X509v3", "Extended", "Usage", "extendedKeyUsage", "compression", "length", "compression", "ripemd160WithRSA", "RIPEMD160", "ripemd160", "dsaEncryption", "sha1WithRSA", "dsaWithSHA1", "pbeWithMD5AndCast5CBC", "cast5", "CAST5", "cast5", "CAST5", "cast5", "CAST5", "cast5", "CAST5", "description", "title", "serialNumber", "md5WithRSA", "X509v3", "Distribution", "Points", "crlDistributionPoints", "initials", "surname", "givenName", "mdc2WithRSA", "X509v3", "Authority", "Identifier", "authorityKeyIdentifier", "X509v3", "Certificate", "Policies", "certificatePolicies", "X509v3", "Number", "crlNumber", "X509v3", "Basic", "Constraints", "basicConstraints", "X509v3", "Issuer", "Alternative", "issuerAltName", "X509v3", "Subject", "Alternative", "subjectAltName", "X509v3", "Private", "Usage", "Period", "privateKeyUsagePeriod", "X509v3", "Usage", "keyUsage", "X509v3", "Subject", "Identifier", "subjectKeyIdentifier", "Netscape", "Certificate", "Sequence", "nsCertSequence", "Netscape", "Comment", "nsComment", "Netscape", "Server", "nsSslServerName", "Netscape", "Policy", "nsCaPolicyUrl", "Netscape", "Renewal", "nsRenewalUrl", "Netscape", "Revocation", "nsCaRevocationUrl", "Netscape", "Revocation", "nsRevocationUrl", "Netscape", "nsBaseUrl", "Netscape", "nsCertType", "dsaWithSHA1", "PBKDF2", "pbeWithSHA1AndRC2", "dsaEncryption", "dsaWithSHA", "sha1WithRSAEncryption", "Netscape", "nsDataType", "Netscape", "Certificate", "Extension", "nsCertExt", "Netscape", "Communications", "Netscape", "extendedCertificateAttributes", "unstructuredAddress", "challengePassword", "countersignature", "signingTime", "messageDigest", "contentType", "unstructuredName", "emailAddress", "pkcs9", "shaWithRSAEncryption", "dhKeyAgreement", "pkcs3", "pkcs7", "encryptedData", "pkcs7", "digestData", "pkcs7", "signedAndEnvelopedData", "pkcs7", "envelopedData", "pkcs7", "signedData", "pkcs7", "pkcs7", "organizationalUnitName", "organizationName", "stateOrProvinceName", "localityName", "countryName", "commonName", "directory", "services", "pbeWithMD5AndDES", "pbeWithMD2AndDES", "md5WithRSAEncryption", "md2WithRSAEncryption", "rsaEncryption", "Security", "Security", "rsadsi", "undefined", "UNDEF", "build27", "cpython", "externals", "openssl", "crypto", "objects", "obj_dat", "build27", "cpython", "externals", "openssl", "crypto", "objects", "obj_xref", "build27", "cpython", "externals", "openssl", "crypto", "evp_pbe", "build27", "cpython", "externals", "openssl", "crypto", "lhash", "lhash", "0123456789ABCDEF", "0123456789abcdef", "0123456789", "build27", "cpython", "externals", "openssl", "crypto", "b_print", "doapr", "build27", "cpython", "externals", "openssl", "crypto", "mem_dbg", "thread", "number", "address", "thread", "bytes", "leaked", "chunks", "build27", "cpython", "externals", "openssl", "crypto", "buffer", "buf_str", "unknown", "OBJ_nid2sn", "OBJ_nid2obj", "OBJ_nid2ln", "OBJ_NAME_new_index", "OBJ_dup", "OBJ_create", "OBJ_add_object", "point", "arithmetic", "failure", "private", "value", "method", "failed", "ECDH_DATA_new_method", "ECDH_compute_key", "ECDH_CHECK", "supported", "inflate", "error", "deflate", "error", "BIO_ZLIB_WRITE", "BIO_ZLIB_READ", "BIO_ZLIB_NEW", "BIO_ZLIB_FLUSH", "wrong", "wrong", "wrong", "public", "unsupported", "unsupported", "public", "unsupported", "encryption", "algorithm", "unsupported", "cipher", "unsupported", "defined", "unknown", "unknown", "signature", "algorithm", "unknown", "public", "unknown", "object", "unknown", "message", "digest", "algorithm", "unknown", "format", "universalstring", "wrong", "length", "unexpected", "unable", "decode", "private", "unable", "decode", "primitive", "constructed", "ascii", "format", "object", "identifier", "known", "value", "string", "short", "string", "streaming", "supported", "invalid", "short", "sequence", "needs", "config", "sequence", "constructed", "sequence", "length", "mismatch", "second", "number", "large", "private", "header", "missing", "number", "chars", "object", "ascii", "format", "wrong", "length", "content", "multipart", "boundary", "multipart", "failure", "matching", "choice", "default", "digest", "content", "enough", "ascii", "format", "characters", "nested", "string", "mstring", "wrong", "mstring", "universal", "missing", "value", "missing", "second", "number", "missing", "parse", "error", "parse", "error", "content", "error", "length", "error", "large", "invalid", "utf8string", "invalid", "universalstring", "length", "invalid", "format", "invalid", "separator", "invalid", "object", "encoding", "invalid", "number", "invalid", "modifier", "invalid", "invalid", "digit", "invalid", "bmpstring", "length", "invalid", "string", "integer", "large", "integer", "ascii", "format", "illegal", "value", "illegal", "tagged", "illegal", "options", "template", "illegal", "optional", "illegal", "object", "illegal", "value", "illegal", "illegal", "nested", "tagging", "illegal", "integer", "illegal", "implicit", "illegal", "illegal", "format", "illegal", "characters", "illegal", "boolean", "illegal", "bitstring", "format", "header", "first", "large", "field", "missing", "explicit", "constructed", "explicit", "length", "mismatch", "expecting", "expecting", "boolean", "expecting", "object", "expecting", "integer", "error", "setting", "cipher", "params", "error", "parsing", "element", "error", "loading", "section", "error", "getting", "encode", "error", "digest", "supported", "depth", "exceeded", "decoding", "error", "decode", "error", "wrong", "context", "initialised", "cipher", "object", "identifier", "buffer", "small", "boolean", "wrong", "length", "bmpstring", "wrong", "length", "password", "object", "header", "class", "error", "parse", "error", "parse", "error", "adding", "object", "X509_PKEY_new", "X509_NEW", "X509_NAME_EX_NEW", "X509_NAME_EX_D2I", "X509_NAME_ENCODE", "X509_INFO_new", "X509_CRL_add0_revoked", "X509_CINF_NEW", "SMIME_text", "SMIME_read_ASN1", "PKCS5_pbkdf2_set", "PKCS5_pbe_set0_algor", "PKCS5_pbe_set", "PKCS5_pbe2_set_iv", "PARSE_TAGGING", "OID_MODULE_INIT", "LONG_C2I", "i2d_RSA_PUBKEY", "i2d_RSA_NET", "i2d_PublicKey", "i2d_PrivateKey", "i2d_EC_PUBKEY", "i2d_DSA_PUBKEY", "I2D_ASN1_TIME", "i2d_ASN1_SET", "i2d_ASN1_bio_stream", "d2i_X509_PKEY", "D2I_X509_CINF", "D2I_X509", "D2I_RSA_NET_2", "d2i_RSA_NET", "d2i_PublicKey", "d2i_PrivateKey", "D2I_NETSCAPE_RSA_2", "d2i_Netscape_RSA", "d2i_AutoPrivateKey", "D2I_ASN1_UTCTIME", "d2i_ASN1_UINTEGER", "d2i_ASN1_type_bytes", "d2i_ASN1_SET", "d2i_ASN1_OBJECT", "D2I_ASN1_INTEGER", "D2I_ASN1_HEADER", "D2I_ASN1_GENERALIZEDTIME", "d2i_ASN1_bytes", "d2i_ASN1_BOOLEAN", "D2I_ASN1_BIT_STRING", "COLLECT_DATA", "c2i_ASN1_OBJECT", "c2i_ASN1_INTEGER", "c2i_ASN1_BIT_STRING", "BN_to_ASN1_INTEGER", "BN_to_ASN1_ENUMERATED", "BITSTR_CB", "BIO_new_NDEF", "B64_WRITE_ASN1", "B64_READ_ASN1", "ASN1_verify", "ASN1_UTCTIME_set", "ASN1_UTCTIME_adj", "ASN1_unpack_string", "ASN1_TYPE_get_octetstring", "ASN1_TYPE_get_int_octetstring", "ASN1_TIME_set", "ASN1_TIME_adj", "ASN1_TEMPLATE_NOEXP_D2I", "ASN1_TEMPLATE_NEW", "ASN1_TEMPLATE_EX_D2I", "ASN1_STRING_type_new", "ASN1_STRING_TABLE_add", "ASN1_STRING_set", "ASN1_STR2TYPE", "ASN1_sign", "ASN1_seq_unpack", "ASN1_seq_pack", "ASN1_PKCS5_PBE_SET", "ASN1_PCTX_new", "ASN1_pack_string", "ASN1_OUTPUT_DATA", "ASN1_OBJECT_new", "ASN1_mbstring_ncopy", "ASN1_item_verify", "ASN1_item_unpack", "ASN1_item_sign_ctx", "ASN1_item_sign", "ASN1_item_pack", "ASN1_item_i2d_fp", "ASN1_item_i2d_bio", "ASN1_ITEM_EX_D2I", "ASN1_ITEM_EX_COMBINE_NEW", "ASN1_item_dup", "ASN1_item_d2i_fp", "ASN1_INTEGER_to_BN", "ASN1_INTEGER_set", "ASN1_i2d_fp", "ASN1_i2d_bio", "ASN1_HEADER_NEW", "ASN1_get_object", "ASN1_generate_v3", "ASN1_GENERALIZEDTIME_set", "ASN1_GENERALIZEDTIME_adj", "ASN1_FIND_END", "ASN1_EX_C2I", "ASN1_ENUMERATED_to_BN", "ASN1_ENUMERATED_set", "ASN1_dup", "ASN1_DO_ADB", "ASN1_digest", "ASN1_D2I_READ_BIO", "ASN1_d2i_fp", "ASN1_D2I_EX_PRIMITIVE", "ASN1_COLLECT", "ASN1_COLLATE_PRIMITIVE", "ASN1_CHECK_TLEN", "ASN1_CB", "ASN1_BIT_STRING_set_bit", "APPEND_EXP", "a2i_ASN1_STRING", "a2i_ASN1_INTEGER", "a2i_ASN1_ENUMERATED", "a2d_ASN1_OBJECT", "BUF_strndup", "BUF_strdup", "BUF_MEM_new", "BUF_MEM_grow_clean", "BUF_MEM_grow", "BUF_memdup", "variable", "value", "unknown", "module", "unable", "create", "section", "value", "section", "environment", "variable", "close", "brace", "module", "initialization", "error", "missing", "function", "missing", "finish", "function", "missing", "equal", "missing", "close", "square", "bracket", "cannot", "error", "loading", "STR_COPY", "NCONF_new", "NCONF_load_fp", "NCONF_load_bio", "NCONF_load", "NCONF_get_string", "NCONF_get_section", "NCONF_get_number_e", "NCONF_get_number", "NCONF_dump_fp", "NCONF_dump_bio", "MODULE_RUN", "MODULE_LOAD_DSO", "MODULE_INIT", "DEF_LOAD_BIO", "DEF_LOAD", "CONF_parse_list", "CONF_modules_load", "CONF_load_fp", "CONF_load_bio", "CONF_load", "CONF_dump_fp", "wrong", "pkcs7", "wrong", "content", "unsupported", "content", "unsupported", "cipher", "unknown", "operation", "unknown", "digest", "unable", "message", "digest", "unable", "unable", "certificate", "smime", "error", "signing", "supported", "signing", "failure", "signer", "certificate", "found", "signature", "failure", "private", "match", "certificate", "pkcs7", "parse", "error", "pkcs7", "parse", "error", "pkcs7", "datasign", "pkcs7", "datafinal", "error", "pkcs7", "datafinal", "pkcs7", "signer", "error", "pkcs7", "signature", "error", "operation", "supported", "signers", "signatures", "recipient", "matches", "recipient", "matches", "certificate", "matching", "digest", "found", "content", "missing", "ceripend", "invalid", "signed", "invalid", "pointer", "error", "setting", "cipher", "error", "adding", "recipient", "encryption", "supported", "encryption", "failure", "digest", "failure", "decrypt", "error", "decrypted", "wrong", "length", "error", "content", "present", "cipher", "initialized", "certificate", "verify", "error", "SMIME_read_PKCS7", "PKCS7_verify", "PKCS7_simple_smimecap", "PKCS7_sign_add_signer", "PKCS7_SIGNER_INFO_sign", "PKCS7_SIGNER_INFO_set", "PKCS7_signatureVerify", "PKCS7_sign", "PKCS7_set_type", "PKCS7_set_digest", "PKCS7_set_content", "PKCS7_set_cipher", "PKCS7_RECIP_INFO_set", "PKCS7_get0_signers", "PKCS7_FIND_DIGEST", "PKCS7_final", "PKCS7_encrypt", "PKCS7_ENCODE_RINFO", "PKCS7_DECRYPT_RINFO", "PKCS7_decrypt", "PKCS7_dataVerify", "PKCS7_DATASIGN", "PKCS7_dataInit", "PKCS7_dataFinal", "PKCS7_dataDecode", "PKCS7_ctrl", "PKCS7_COPY_EXISTING_DIGEST", "PKCS7_BIO_ADD_DIGEST", "PKCS7_add_signer", "PKCS7_add_signature", "PKCS7_add_recipient_info", "PKCS7_add_crl", "PKCS7_add_certificate", "PKCS7_add_attrib_smimecap", "PKCS7_add0_attrib_signing_time", "i2d_PKCS7_bio_stream", "DO_PKCS7_SIGNED_ATTRIB", "B64_WRITE_PKCS7", "B64_READ_PKCS7", "shared", "error", "error", "parameter", "encoding", "error", "parameters", "modulus", "large", "small", "parameter", "error", "invalid", "public", "error", "decode", "error", "generator", "PKEY_DH_KEYGEN", "PKEY_DH_DERIVE", "GENERATE_PARAMETERS", "GENERATE_KEY", "DO_DH_PRINT", "DH_PUB_ENCODE", "DH_PUB_DECODE", "DH_PRIV_ENCODE", "DH_PRIV_DECODE", "DH_PARAM_DECODE", "DH_new_method", "DH_generate_parameters_ex", "DH_generate_key", "DH_compute_key", "DH_CMS_SET_SHARED_INFO", "DH_CMS_SET_PEERKEY", "DH_CMS_DECRYPT", "DH_BUILTIN_GENPARAMS", "DHparams_print_fp", "COMPUTE_KEY", "temporary", "variables", "iterations", "prime", "solution", "inverse", "initialized", "square", "invalid", "shift", "invalid", "range", "invalid", "length", "input", "reduced", "expand", "static", "bignum", "encoding", "error", "called", "modulus", "small", "bignum", "reciprocal", "BN_usub", "BN_rshift", "BN_rand_range", "BN_rand", "BN_new", "BN_mpi2bn", "BN_mod_sqrt", "BN_mod_mul_reciprocal", "BN_mod_lshift_quick", "BN_mod_inverse_no_branch", "BN_mod_inverse", "BN_mod_exp_simple", "BN_mod_exp_recp", "BN_mod_exp_mont_word", "BN_mod_exp_mont_consttime", "BN_mod_exp_mont", "BN_mod_exp2_mont", "BN_lshift", "BN_GF2m_mod_sqrt", "BN_GF2m_mod_sqr", "BN_GF2m_mod_solve_quad_arr", "BN_GF2m_mod_solve_quad", "BN_GF2m_mod_mul", "BN_GF2m_mod_exp", "BN_GF2m_mod", "BN_EXPAND_INTERNAL", "bn_expand2", "BN_exp", "BN_div_recp", "BN_div_no_branch", "BN_div", "BN_CTX_start", "BN_CTX_new", "BN_CTX_get", "BN_bn2hex", "BN_bn2dec", "BN_BLINDING_update", "BN_BLINDING_new", "BN_BLINDING_invert_ex", "BN_BLINDING_create_param", "BN_BLINDING_convert_ex", "BNRAND", "seeded", "random", "method", "error", "instantiating", "error", "initialising", "disabled", "SSLEAY_RAND_BYTES", "RAND_init_fips", "RAND_get_rand_method", "error", "verification", "failure", "unwrap", "failure", "unwrap", "error", "unsupported", "recpientinfo", "unsupported", "recipient", "unsupported", "encryption", "algorithm", "unsupported", "algorithm", "unsupported", "compression", "algorithm", "unknown", "unknown", "digest", "algorihm", "unknown", "cipher", "unable", "finalize", "context", "enveloped", "encrypted", "digested", "compressed", "store", "error", "signfinal", "error", "recipient", "error", "receipt", "decode", "error", "receipt", "request", "public", "private", "password", "msgsigdigest", "matching", "signature", "matching", "recipient", "matching", "digest", "digest", "cipher", "supported", "transport", "agreement", "encrypted", "signed", "receipt", "signer", "msgsigdigest", "wrong", "length", "msgsigdigest", "verification", "failure", "msgsigdigest", "error", "messagedigest", "wrong", "length", "messagedigest", "attribute", "wrong", "length", "error", "invalid", "length", "invalid", "encryption", "parameter", "invalid", "encrypted", "length", "error", "setting", "recipientinfo", "error", "setting", "error", "reading", "messagedigest", "attribute", "error", "getting", "public", "digest", "error", "failure", "content", "verify", "error", "content", "signed", "content", "enveloped", "content", "compressed", "content", "mismatch", "content", "found", "contentidentifier", "mismatch", "datafinal", "error", "cipher", "parameter", "initialisation", "error", "cipher", "initialisation", "error", "certificate", "keyid", "certificate", "already", "present", "signer", "error", "CMS_verify", "CMS_uncompress", "CMS_stream", "CMS_sign_receipt", "CMS_SignerInfo_verify_content", "CMS_SIGNERINFO_VERIFY_CERT", "CMS_SignerInfo_verify", "CMS_SignerInfo_sign", "CMS_SIGNERINFO_CONTENT_SIGN", "CMS_SIGNED_DATA_INIT", "CMS_sign", "CMS_set_detached", "cms_set1_SignerIdentifier", "cms_set1_keyid", "cms_set1_ias", "CMS_SD_ASN1_CTRL", "CMS_RecipientInfo_set0_pkey", "CMS_RecipientInfo_set0_password", "CMS_RecipientInfo_set0_key", "cms_RecipientInfo_pwri_crypt", "CMS_RecipientInfo_ktri_get0_signer_id", "CMS_RecipientInfo_ktri_get0_algs", "CMS_RECIPIENTINFO_KTRI_ENCRYPT", "CMS_RECIPIENTINFO_KTRI_DECRYPT", "CMS_RecipientInfo_ktri_cert_cmp", "CMS_RecipientInfo_kekri_id_cmp", "CMS_RecipientInfo_kekri_get0_id", "CMS_RECIPIENTINFO_KEKRI_ENCRYPT", "CMS_RECIPIENTINFO_KEKRI_DECRYPT", "CMS_RecipientInfo_kari_orig_id_cmp", "CMS_RecipientInfo_kari_get0_reks", "CMS_RecipientInfo_kari_get0_orig_id", "CMS_RecipientInfo_kari_get0_alg", "cms_RecipientInfo_kari_encrypt", "CMS_RecipientInfo_encrypt", "CMS_RecipientInfo_decrypt", "cms_Receipt_verify", "CMS_ReceiptRequest_create0", "cms_msgSigDigest_add1", "CMS_GET0_SIGNED", "CMS_GET0_REVOCATION_CHOICES", "cms_get0_enveloped", "CMS_GET0_ECONTENT_TYPE", "CMS_get0_content", "CMS_GET0_CERTIFICATE_CHOICES", "CMS_final", "cms_env_asn1_ctrl", "CMS_ENVELOPED_DATA_INIT", "cms_EnvelopedData_init_bio", "CMS_EnvelopedData_create", "CMS_EncryptedData_set1_key", "CMS_EncryptedData_encrypt", "CMS_EncryptedData_decrypt", "cms_EncryptedContent_init_bio", "CMS_encrypt", "cms_encode_Receipt", "CMS_digest_verify", "cms_DigestedData_do_final", "cms_DigestAlgorithm_init_bio", "cms_DigestAlgorithm_find_ctx", "CMS_decrypt_set1_pkey", "CMS_decrypt_set1_password", "CMS_decrypt_set1_key", "CMS_decrypt", "CMS_dataInit", "CMS_dataFinal", "CMS_data", "CMS_COPY_MESSAGEDIGEST", "CMS_COPY_CONTENT", "cms_CompressedData_init_bio", "cms_CompressedData_create", "CMS_compress", "CMS_ADD1_SIGNINGTIME", "CMS_add1_signer", "CMS_add1_recipient_cert", "CMS_add1_ReceiptRequest", "CMS_add0_recipient_password", "CMS_add0_recipient_key", "CMS_add0_cert", "CHECK_CONTENT", "wrong", "order", "wrong", "curve", "parameters", "unsupported", "field", "unknown", "order", "unknown", "group", "undefined", "order", "undefined", "generator", "point", "curve", "point", "infinity", "pkparameters2group", "failure", "passed", "parameter", "field", "implemented", "supported", "prime", "prime", "missing", "private", "missing", "parameters", "invalid", "trinomial", "basis", "invalid", "private", "invalid", "pentanomial", "basis", "invalid", "group", "order", "invalid", "invalid", "field", "invalid", "encoding", "invalid", "digest", "invalid", "digest", "invalid", "curve", "invalid", "compression", "invalid", "compressed", "point", "invalid", "argument", "incompatible", "objects", "ecpkparameters", "failure", "group2pkparameters", "failure", "supported", "field", "large", "group", "failure", "discriminant", "ecpkparameters", "failure", "coordinates", "range", "bignum", "range", "unknown", "field", "error", "PKEY_EC_SIGN", "PKEY_EC_PARAMGEN", "PKEY_EC_KEYGEN", "PKEY_EC_DERIVE", "PKEY_EC_CTRL_STR", "PKEY_EC_CTRL", "OLD_EC_PRIV_DECODE", "o2i_ECPublicKey", "NISTP521_PRE_COMP_NEW", "NISTP256_PRE_COMP_NEW", "NISTP224_PRE_COMP_NEW", "i2o_ECPublicKey", "i2d_ECPrivateKey", "i2d_ECPKParameters", "i2d_ECParameters", "ec_wNAF_precompute_mult", "ec_wNAF_mul", "EC_PRE_COMP_NEW", "EC_PRE_COMP_DUP", "EC_POINT_set_to_infinity", "EC_POINT_set_Jprojective_coordinates_GFp", "EC_POINT_set_compressed_coordinates_GFp", "EC_POINT_set_compressed_coordinates_GF2m", "EC_POINT_set_affine_coordinates_GFp", "EC_POINT_set_affine_coordinates_GF2m", "EC_POINT_point2oct", "EC_POINT_oct2point", "EC_POINT_new", "EC_POINT_mul", "EC_POINT_make_affine", "EC_POINT_is_on_curve", "EC_POINT_is_at_infinity", "EC_POINT_invert", "EC_POINT_get_Jprojective_coordinates_GFp", "EC_POINT_get_affine_coordinates_GFp", "EC_POINT_get_affine_coordinates_GF2m", "EC_POINT_dbl", "EC_POINT_copy", "EC_POINT_cmp", "EC_POINT_add", "EC_POINTs_make_affine", "EC_KEY_set_public_key_affine_coordinates", "EC_KEY_print_fp", "EC_KEY_print", "EC_KEY_new", "EC_KEY_generate_key", "EC_KEY_copy", "EC_KEY_check_key", "EC_GROUP_set_generator", "EC_GROUP_SET_EXTRA_DATA", "EC_GROUP_set_curve_GFp", "EC_GROUP_set_curve_GF2m", "EC_GROUP_precompute_mult", "EC_GROUP_NEW_FROM_DATA", "EC_GROUP_new_by_curve_name", "EC_GROUP_new", "EC_GROUP_get_trinomial_basis", "EC_GROUP_get_pentanomial_basis", "EC_GROUP_get_order", "EC_GROUP_get_degree", "EC_GROUP_get_curve_GFp", "EC_GROUP_get_curve_GF2m", "EC_GROUP_get_cofactor", "EC_GROUP_get0_generator", "EC_GROUP_copy", "EC_GROUP_check_discriminant", "EC_GROUP_check", "EC_GFP_SIMPLE_SET_COMPRESSED_COORDINATES_GFP", "ec_GFp_simple_set_compressed_coordinates", "EC_GFP_SIMPLE_POINT_SET_AFFINE_COORDINATES_GFP", "ec_GFp_simple_point_set_affine_coordinates", "EC_GFP_SIMPLE_POINT_GET_AFFINE_COORDINATES_GFP", "ec_GFp_simple_point_get_affine_coordinates", "ec_GFp_simple_points_make_affine", "ec_GFp_simple_point2oct", "ec_GFp_simple_oct2point", "ec_GFp_simple_make_affine", "EC_GFP_SIMPLE_GROUP_SET_GENERATOR", "EC_GFP_SIMPLE_GROUP_SET_CURVE_GFP", "ec_GFp_simple_group_set_curve", "ec_GFp_simple_group_check_discriminant", "ec_GFp_nist_group_set_curve", "ec_GFp_nist_field_sqr", "ec_GFp_nist_field_mul", "ec_GFp_nistp521_point_get_affine_coordinates", "ec_GFp_nistp521_points_mul", "ec_GFp_nistp521_group_set_curve", "ec_GFp_nistp256_point_get_affine_coordinates", "ec_GFp_nistp256_points_mul", "ec_GFp_nistp256_group_set_curve", "ec_GFp_nistp224_point_get_affine_coordinates", "ec_GFp_nistp224_points_mul", "ec_GFp_nistp224_group_set_curve", "EC_GFP_MONT_GROUP_SET_CURVE_GFP", "ec_GFp_mont_group_set_curve", "ec_GFp_mont_field_sqr", "ec_GFp_mont_field_set_to_one", "ec_GFp_mont_field_mul", "ec_GFp_mont_field_encode", "ec_GFp_mont_field_decode", "ec_GF2m_simple_set_compressed_coordinates", "ec_GF2m_simple_point_set_affine_coordinates", "ec_GF2m_simple_point_get_affine_coordinates", "ec_GF2m_simple_point2oct", "ec_GF2m_simple_oct2point", "ec_GF2m_simple_group_set_curve", "ec_GF2m_simple_group_check_discriminant", "EC_GF2M_MONTGOMERY_POINT_MULTIPLY", "EC_EX_DATA_set_data", "EC_ASN1_PKPARAMETERS2GROUP", "EC_ASN1_PARAMETERS2GROUP", "EC_ASN1_GROUP2PKPARAMETERS", "EC_ASN1_GROUP2PARAMETERS", "EC_ASN1_GROUP2FIELDID", "EC_ASN1_GROUP2CURVE", "ECP_NIST_MOD_521", "ECP_NIST_MOD_256", "ECP_NIST_MOD_224", "ECP_NIST_MOD_192", "ecp_nistz256_windowed_mul", "ecp_nistz256_set_words", "ecp_nistz256_pre_comp_new", "ecp_nistz256_points_mul", "ecp_nistz256_mult_precompute", "ecp_nistz256_get_affine", "ECPKParameters_print_fp", "ECPKParameters_print", "ECParameters_print_fp", "ECParameters_print", "ECKEY_TYPE2PARAM", "ECKEY_PUB_ENCODE", "ECKEY_PUB_DECODE", "ECKEY_PRIV_ENCODE", "ECKEY_PRIV_DECODE", "ECKEY_PARAM_DECODE", "ECKEY_PARAM2TYPE", "ECDH_CMS_SET_SHARED_INFO", "ECDH_CMS_DECRYPT", "DO_EC_KEY_PRINT", "d2i_ECPrivateKey", "d2i_ECPKParameters", "d2i_ECParameters", "COMPUTE_WNAF", "BN_TO_FELEM", "WSAStartup", "write", "unsupported", "method", "uninitialized", "unable", "listen", "socket", "unable", "create", "socket", "unable", "socket", "mismatch", "parameter", "specified", "defined", "hostname", "specified", "accept", "specified", "connect", "error", "keepalive", "invalid", "address", "gethostbyname", "error", "setting", "accept", "socket", "error", "setting", "accepted", "socket", "error", "setting", "memory", "connect", "error", "broken", "hostname", "lookup", "fopen", "accept", "error", "WSASTARTUP", "SSL_new", "MEM_WRITE", "MEM_READ", "LINEBUFFER_CTRL", "FILE_READ", "FILE_CTRL", "DGRAM_SCTP_WRITE", "DGRAM_SCTP_READ", "CONN_STATE", "CONN_CTRL", "BUFFER_CTRL", "BIO_write", "BIO_sock_init", "BIO_read", "BIO_puts", "BIO_nwrite0", "BIO_nwrite", "BIO_nread0", "BIO_nread", "BIO_new_mem_buf", "BIO_new_file", "BIO_new", "BIO_MAKE_PAIR", "BIO_get_port", "BIO_get_host_ip", "BIO_get_accept_socket", "BIO_gets", "BIO_gethostbyname", "BIO_ctrl", "BIO_callback_ctrl", "BIO_BER_GET_HEADER", "BIO_accept", "ACPT_STATE", "unsupported", "option", "unknown", "option", "unknown", "extension", "unknown", "extension", "unknown", "string", "argument", "unable", "issuer", "keyid", "unable", "issuer", "details", "section", "found", "policy", "proxy", "language", "requires", "policy", "policy", "syntax", "currently", "supported", "policy", "length", "already", "defined", "policy", "length", "policy", "language", "already", "defined", "othername", "error", "operation", "defined", "number", "digits", "subject", "details", "proxy", "policy", "language", "defined", "policy", "identifier", "issuer", "details", "issuer", "certificate", "config", "database", "organization", "numbers", "issuer", "decode", "error", "invalid", "syntax", "invalid", "section", "invalid", "invalid", "purpose", "invalid", "proxy", "policy", "setting", "invalid", "policy", "identifier", "invalid", "option", "invalid", "object", "identifier", "invalid", "numbers", "invalid", "value", "invalid", "invalid", "argument", "invalid", "invalid", "multiple", "invalid", "ipaddress", "invalid", "inheritance", "invalid", "extension", "string", "invalid", "boolean", "string", "invalid", "asrange", "invalid", "asnumber", "incorrect", "policy", "syntax", "illegal", "digit", "illegal", "empty", "extension", "extension", "value", "error", "extension", "setting", "supported", "extension", "found", "extension", "error", "extension", "exists", "expected", "section", "error", "extension", "error", "creating", "extension", "error", "converting", "duplicate", "distpoint", "already", "dirname", "error", "cannot", "function", "integer", "error", "dec2bn", "error", "object", "address", "X509_PURPOSE_set", "X509_PURPOSE_add", "X509V3_parse_list", "X509V3_get_value_bool", "X509V3_get_string", "X509V3_get_section", "X509V3_EXT_nconf", "X509V3_EXT_i2d", "X509V3_EXT_free", "X509V3_EXT_conf", "X509V3_EXT_add_alias", "X509V3_EXT_add", "X509V3_add_value", "X509V3_add1_i2d", "V3_GENERIC_EXTENSION", "V3_ADDR_VALIDATE_PATH_INTERNAL", "V2I_SUBJECT_ALT", "V2I_POLICY_MAPPINGS", "V2I_POLICY_CONSTRAINTS", "V2I_NAME_CONSTRAINTS", "V2I_ISSUER_ALT", "V2I_IPADDRBLOCKS", "V2I_IDP", "v2i_GENERAL_NAME_ex", "v2i_GENERAL_NAMES", "V2I_EXTENDED_KEY_USAGE", "V2I_CRLD", "V2I_BASIC_CONSTRAINTS", "V2I_AUTHORITY_KEYID", "V2I_AUTHORITY_INFO_ACCESS", "v2i_ASN1_BIT_STRING", "V2I_ASIDENTIFIERS", "SXNET_get_id_ulong", "SXNET_get_id_asc", "SXNET_add_id_ulong", "SXNET_add_id_INTEGER", "SXNET_add_id_asc", "string_to_hex", "SET_DIST_POINT_NAME", "S2I_SKEY_ID", "S2I_ASN1_SKEY_ID", "s2i_ASN1_OCTET_STRING", "s2i_ASN1_INTEGER", "S2I_ASN1_IA5STRING", "R2I_PCI", "R2I_CERTPOL", "PROCESS_PCI_VALUE", "POLICY_SECTION", "NREF_NOS", "NOTICE_SECTION", "I2V_AUTHORITY_INFO_ACCESS", "i2s_ASN1_INTEGER", "I2S_ASN1_IA5STRING", "i2s_ASN1_ENUMERATED", "hex_to_string", "GNAMES_FROM_SECTNAME", "DO_I2V_NAME_CONSTRAINTS", "DO_EXT_NCONF", "DO_EXT_I2D", "DO_EXT_CONF", "DO_DIRNAME", "COPY_ISSUER", "COPY_EMAIL", "ASIDENTIFIERCHOICE_IS_CANONICAL", "ASIDENTIFIERCHOICE_CANONIZE", "a2i_GENERAL_NAME", "unknown", "control", "command", "result", "small", "result", "large", "result", "buffer", "index", "small", "index", "large", "common", "cancel", "characters", "UI_set_result", "UI_new_method", "UI_get0_result", "UI_dup_verify_string", "UI_dup_input_string", "UI_dup_input_boolean", "UI_dup_info_string", "UI_dup_error_string", "UI_ctrl", "GENERAL_ALLOCATE_STRING", "GENERAL_ALLOCATE_PROMPT", "GENERAL_ALLOCATE_BOOLEAN", "version", "incompatibility", "unimplemented", "public", "method", "unimplemented", "digest", "unimplemented", "cipher", "implemented", "provide", "parameters", "unload", "function", "engine", "reference", "function", "index", "control", "function", "loaded", "initialised", "invalid", "string", "invalid", "value", "invalid", "number", "invalid", "internal", "error", "failed", "missing", "could", "obtain", "hardware", "handle", "finish", "failed", "failed", "loading", "public", "failed", "loading", "private", "engine", "section", "error", "engine", "engine", "configuration", "error", "engines", "section", "error", "found", "failure", "implemented", "implemented", "command", "implemented", "conflicting", "engine", "command", "takes", "input", "command", "takes", "input", "executable", "argument", "number", "already", "loaded", "LOG_MESSAGE", "INT_ENGINE_MODULE_INIT", "INT_ENGINE_CONFIGURE", "INT_CTRL_HELPER", "ENGINE_up_ref", "ENGINE_UNLOCKED_FINISH", "ENGINE_UNLOAD_KEY", "ENGINE_TABLE_REGISTER", "ENGINE_set_name", "ENGINE_set_id", "ENGINE_SET_DEFAULT_TYPE", "ENGINE_set_default_string", "ENGINE_remove", "ENGINE_new", "ENGINE_load_ssl_client_cert", "ENGINE_load_public_key", "ENGINE_load_private_key", "ENGINE_LIST_REMOVE", "ENGINE_LIST_ADD", "ENGINE_init", "ENGINE_get_prev", "ENGINE_get_pkey_meth", "ENGINE_get_pkey_asn1_meth", "ENGINE_get_next", "ENGINE_get_digest", "ENGINE_GET_DEFAULT_TYPE", "ENGINE_get_cipher", "ENGINE_FREE_UTIL", "ENGINE_finish", "ENGINE_ctrl_cmd_string", "ENGINE_ctrl_cmd", "ENGINE_ctrl", "ENGINE_cmd_is_executable", "ENGINE_by_id", "ENGINE_add", "DYNAMIC_SET_DATA_CTX", "DYNAMIC_LOAD", "DYNAMIC_GET_DATA_CTX", "DYNAMIC_CTRL", "wrong", "lookup", "unsupported", "algorithm", "unknown", "trust", "unknown", "purpose", "unknown", "unable", "certs", "public", "unable", "parameters", "chain", "should", "retry", "public", "encode", "error", "public", "decode", "error", "number", "verify", "newer", "newer", "method", "supported", "loading", "defaults", "loading", "values", "mismatch", "mismatch", "issuer", "mismatch", "invalid", "trust", "invalid", "field", "invalid", "directory", "mismatch", "verify", "failure", "already", "delta", "already", "table", "check", "base64", "decode", "error", "filetype", "mismatch", "X509_verify_cert", "X509_TRUST_set", "X509_TRUST_add", "X509_to_X509_REQ", "X509_STORE_CTX_purpose_inherit", "X509_STORE_CTX_new", "X509_STORE_CTX_init", "X509_STORE_CTX_get1_issuer", "X509_STORE_add_crl", "X509_STORE_add_cert", "X509_REQ_to_X509", "X509_REQ_print_fp", "X509_REQ_print_ex", "X509_REQ_check_private_key", "X509_PUBKEY_set", "X509_PUBKEY_get", "X509_print_ex_fp", "X509_NAME_print", "X509_NAME_oneline", "X509_NAME_ENTRY_set_object", "X509_NAME_ENTRY_create_by_txt", "X509_NAME_ENTRY_create_by_NID", "X509_NAME_add_entry", "X509_load_crl_file", "X509_load_cert_file", "X509_load_cert_crl_file", "X509_get_pubkey_parameters", "X509_EXTENSION_create_by_OBJ", "X509_EXTENSION_create_by_NID", "X509_CRL_print_fp", "X509_CRL_diff", "X509_check_private_key", "X509_ATTRIBUTE_set1_data", "X509_ATTRIBUTE_get0_data", "X509_ATTRIBUTE_create_by_txt", "X509_ATTRIBUTE_create_by_OBJ", "X509_ATTRIBUTE_create_by_NID", "X509v3_add_ext", "X509at_add1_attr", "NETSCAPE_SPKI_b64_encode", "NETSCAPE_SPKI_b64_decode", "GET_CERT_BY_SUBJECT", "DIR_CTRL", "CHECK_POLICY", "CHECK_NAME_CONSTRAINTS", "BY_FILE_CTRL", "ADD_CERT_DIR", "unsupported", "requestorname", "unknown", "message", "digest", "status", "status", "valid", "status", "expired", "server", "write", "error", "server", "response", "parse", "error", "server", "response", "error", "server", "error", "trusted", "response", "contains", "revocation", "request", "signed", "revoked", "response", "certificates", "chain", "basic", "response", "nextupdate", "before", "thisupdate", "missing", "ocspsigning", "usage", "error", "parsing", "error", "thisupdate", "field", "error", "nextupdate", "field", "digest", "REQUEST_VERIFY", "PARSE_HTTP_LINE1", "OCSP_sendreq_nbio", "OCSP_sendreq_bio", "OCSP_response_get1_basic", "OCSP_request_verify", "OCSP_request_sign", "OCSP_parse_url", "OCSP_MATCH_ISSUERID", "OCSP_check_validity", "OCSP_CHECK_ISSUER", "OCSP_CHECK_IDS", "OCSP_CHECK_DELEGATED", "OCSP_cert_id_new", "OCSP_basic_verify", "OCSP_basic_sign", "OCSP_basic_add1_status", "D2I_OCSP_NONCE", "ASN1_STRING_encode", "signature", "malloc", "failed", "random", "number", "generation", "failed", "setup", "values", "large", "signature", "ECDSA_sign_setup", "ECDSA_METHOD_new", "ECDSA_do_verify", "ECDSA_do_sign", "ECDSA_DATA_NEW_METHOD", "ECDSA_CHECK", "wrong", "final", "block", "length", "allowed", "unsupported", "unsupported", "private", "algorithm", "unsupported", "unsupported", "unsupported", "derivation", "function", "unsupported", "keylength", "unsuported", "number", "rounds", "unknown", "algorithm", "unknown", "digest", "large", "public", "private", "encode", "error", "private", "decode", "error", "pkcs8", "unknown", "broken", "operaton", "initialized", "operation", "supported", "keytype", "verify", "function", "configured", "function", "configured", "operation", "parameters", "cipher", "message", "digest", "keygen", "failure", "invalid", "operation", "invalid", "input", "initialized", "initialization", "error", "supported", "expecting", "expecting", "ecdsa", "expecting", "expecting", "expecting", "cipherinit", "error", "error", "setting", "disabled", "different", "parameters", "different", "types", "multiple", "block", "length", "operation", "implemented", "implemented", "command", "supported", "cipher", "parameter", "error", "camellia", "setup", "failed", "pubkey", "error", "length", "decrypt", "block", "length", "setup", "failed", "setup", "failed", "RC5_CTRL", "RC2_MAGIC_TO_METH", "PKEY_SET_TYPE", "PKCS8_set_broken", "PKCS5_V2_PBKDF2_KEYIVGEN", "PKCS5_v2_PBE_keyivgen", "PKCS5_PBE_keyivgen", "INT_CTX_NEW", "HMAC_Init_ex", "FIPS_MD_CTX_COPY", "FIPS_DIGESTINIT", "FIPS_CIPHER_CTX_SET_KEY_LENGTH", "FIPS_CIPHER_CTX_CTRL", "FIPS_CIPHER_CTX_COPY", "FIPS_CIPHERINIT", "EVP_VerifyFinal", "EVP_SignFinal", "EVP_RIJNDAEL", "EVP_PKEY_verify_recover_init", "EVP_PKEY_verify_recover", "EVP_PKEY_verify_init", "EVP_PKEY_verify", "EVP_PKEY_sign_init", "EVP_PKEY_sign", "EVP_PKEY_paramgen_init", "EVP_PKEY_paramgen", "EVP_PKEY_new", "EVP_PKEY_keygen_init", "EVP_PKEY_keygen", "EVP_PKEY_get1_RSA", "EVP_PKEY_get1_EC_KEY", "EVP_PKEY_GET1_ECDSA", "EVP_PKEY_get1_DSA", "EVP_PKEY_get1_DH", "EVP_PKEY_encrypt_old", "EVP_PKEY_encrypt_init", "EVP_PKEY_encrypt", "EVP_PKEY_derive_set_peer", "EVP_PKEY_derive_init", "EVP_PKEY_derive", "EVP_PKEY_decrypt_old", "EVP_PKEY_decrypt_init", "EVP_PKEY_decrypt", "EVP_PKEY_CTX_dup", "EVP_PKEY_CTX_ctrl_str", "EVP_PKEY_CTX_ctrl", "EVP_PKEY_copy_parameters", "EVP_PKEY2PKCS8_broken", "EVP_PKCS82PKEY_BROKEN", "EVP_PKCS82PKEY", "EVP_PBE_CipherInit", "EVP_PBE_alg_add_type", "EVP_PBE_alg_add", "EVP_OpenInit", "EVP_MD_size", "EVP_MD_CTX_copy_ex", "EVP_EncryptFinal_ex", "EVP_DigestInit_ex", "EVP_DecryptFinal_ex", "EVP_CIPHER_CTX_set_key_length", "EVP_CIPHER_CTX_ctrl", "EVP_CIPHER_CTX_copy", "EVP_CipherInit_ex", "ECKEY_PKEY2PKCS8", "ECDSA_PKEY2PKCS8", "DSA_PKEY2PKCS8", "DSAPKEY2PKCS8", "DO_SIGVER_INIT", "D2I_PKEY", "CMLL_T4_INIT_KEY", "CMAC_INIT", "CAMELLIA_INIT_KEY", "ALG_MODULE_INIT", "AES_XTS_CIPHER", "AES_XTS", "AES_T4_INIT_KEY", "AES_INIT_KEY", "AESNI_XTS_CIPHER", "AESNI_INIT_KEY", "unsupported", "version", "unsupported", "algorithm", "unacceptable", "policy", "datasign", "setup", "error", "untrusted", "mismatch", "token", "present", "token", "present", "syscall", "error", "there", "signer", "response", "setup", "error", "policy", "mismatch", "pkcs7", "failed", "pkcs7", "signed", "error", "stamp", "token", "nonce", "returned", "nonce", "mismatch", "message", "imprint", "mismatch", "invalid", "signer", "certificate", "purpose", "signing", "certificate", "error", "signing", "error", "detached", "content", "failed", "could", "could", "engine", "pkcs7", "TS_VERIFY_CTX_new", "TS_VERIFY_CERT", "TS_VERIFY", "TS_TST_INFO_set_tsa", "TS_TST_INFO_set_time", "TS_TST_INFO_set_serial", "TS_TST_INFO_set_policy_id", "TS_TST_INFO_set_nonce", "TS_TST_INFO_set_msg_imprint", "TS_TST_INFO_set_accuracy", "TS_RESP_verify_token", "TS_RESP_verify_signature", "TS_RESP_SIGN", "TS_RESP_set_tst_info", "TS_RESP_set_status_info", "TS_RESP_SET_GENTIME_WITH_PRECISION", "TS_RESP_GET_POLICY", "TS_RESP_CTX_set_status_info", "TS_RESP_CTX_set_signer_cert", "TS_RESP_CTX_set_def_policy", "TS_RESP_CTX_set_certs", "TS_RESP_CTX_set_accuracy", "TS_RESP_CTX_new", "TS_RESP_CTX_add_policy", "TS_RESP_CTX_add_md", "TS_RESP_CTX_add_failure_info", "TS_RESP_CREATE_TST_INFO", "TS_RESP_create_response", "TS_REQ_set_policy_id", "TS_REQ_set_nonce", "TS_REQ_set_msg_imprint", "TS_MSG_IMPRINT_set_algo", "TS_GET_STATUS_TEXT", "TS_CONF_set_default_engine", "TS_COMPUTE_IMPRINT", "TS_CHECK_STATUS_INFO", "TS_CHECK_SIGNING_CERTS", "TS_CHECK_POLICY", "TS_CHECK_NONCES", "TS_CHECK_IMPRINTS", "TS_ACCURACY_set_seconds", "TS_ACCURACY_set_millis", "TS_ACCURACY_set_micros", "PKCS7_to_TS_TST_INFO", "INT_TS_RESP_VERIFY_TOKEN", "ESS_SIGNING_CERT_NEW_INIT", "ESS_CERT_ID_NEW_INIT", "ESS_ADD_SIGNING_CERT", "DEF_TIME_CB", "DEF_SERIAL_CB", "d2i_TS_RESP", "unsupported", "pkcs12", "unknown", "digest", "algorithm", "pkcs12", "crypt", "error", "pkcs12", "cipherfinal", "error", "pkcs12", "algor", "cipherinit", "error", "parse", "error", "verify", "failure", "verify", "error", "string", "error", "setup", "error", "generation", "error", "absent", "error", "error", "invalid", "pkcs12", "pointer", "error", "setting", "encrypted", "encrypt", "error", "content", "structure", "PKCS8_encrypt", "PKCS8_add_keyusage", "PKCS12_verify_mac", "PKCS12_unpack_p7data", "PKCS12_unpack_authsafes", "PKCS12_set_mac", "PKCS12_setup_mac", "PKCS12_PBE_keyivgen", "PKCS12_pbe_crypt", "PKCS12_parse", "PKCS12_pack_p7encdata", "PKCS12_pack_p7data", "PKCS12_newpass", "PKCS12_MAKE_SHKEYBAG", "PKCS12_MAKE_KEYBAG", "PKCS12_key_gen_uni", "PKCS12_key_gen_asc", "PKCS12_item_pack_safebag", "PKCS12_item_i2d_encrypt", "PKCS12_item_decrypt_d2i", "PKCS12_init", "PKCS12_gen_mac", "PKCS12_create", "PKCS12_add_localkeyid", "PKCS12_add_friendlyname_uni", "PKCS12_add_friendlyname_asc", "PKCS12_ADD_FRIENDLYNAME", "PARSE_BAGS", "PARSE_BAG", "unsupported", "components", "unsupported", "encryption", "short", "header", "short", "short", "public", "problems", "getting", "password", "start", "encrypted", "keyblob", "short", "keyblob", "header", "parse", "error", "inconsistent", "header", "expecting", "public", "expecting", "private", "error", "converting", "private", "cipher", "write", "failure", "version", "number", "magic", "number", "chars", "base64", "decode", "PEM_X509_INFO_write_bio", "PEM_X509_INFO_read_bio", "PEM_X509_INFO_read", "PEM_WRITE_PRIVATEKEY", "PEM_write_bio", "PEM_write", "PEM_SignFinal", "PEM_SealInit", "PEM_SealFinal", "PEM_READ_PRIVATEKEY", "PEM_READ_DHPARAMS", "PEM_READ_BIO_PRIVATEKEY", "PEM_read_bio_Parameters", "PEM_READ_BIO_DHPARAMS", "PEM_read_bio", "PEM_read", "PEM_PK8PKEY", "PEM_get_EVP_CIPHER_INFO", "PEM_F_PEM_WRITE_PKCS8PRIVATEKEY", "PEM_do_header", "PEM_def_callback", "PEM_ASN1_write_bio", "PEM_ASN1_write", "PEM_ASN1_read_bio", "PEM_ASN1_read", "LOAD_IV", "i2b_PVK_bio", "I2B_PVK", "DO_PVK_HEADER", "DO_PVK_BODY", "DO_PK8PKEY_FP", "DO_PK8PKEY", "DO_BLOB_HEADER", "DO_B2I_BIO", "DO_B2I", "d2i_PKCS8PrivateKey_fp", "d2i_PKCS8PrivateKey_bio", "CHECK_BITLEN_RSA", "CHECK_BITLEN_DSA", "B2I_RSA", "b2i_PVK_bio", "B2I_DSS", "wrong", "signature", "length", "value", "missing", "unsupported", "signature", "unsupported", "parameter", "unsupported", "algorithm", "unsupported", "label", "source", "unsupported", "encryption", "unknown", "digest", "unknown", "padding", "unknown", "digest", "unknown", "algorithm", "sslv3", "rollback", "attack", "length", "recovery", "failed", "length", "check", "failed", "operations", "supported", "prime", "prime", "decoding", "error", "padding", "check", "failed", "operation", "allowed", "decoding", "error", "equal", "before", "block", "missing", "public", "exponent", "method", "octet", "invalid", "inverse", "invalid", "digest", "invalid", "trailer", "invalid", "length", "invalid", "saltlen", "invalid", "parameters", "invalid", "padding", "invalid", "padding", "invalid", "parameters", "invalid", "invalid", "message", "length", "invalid", "label", "invalid", "keybits", "invalid", "header", "invalid", "digest", "length", "illegal", "unsupported", "padding", "first", "octet", "invalid", "congruent", "congruent", "congruent", "digest", "digest", "match", "small", "small", "large", "modulus", "large", "greater", "block", "block", "count", "fixed", "header", "decrypt", "value", "algorithm", "mismatch", "RSA_verify_PKCS1_PSS_mgf1", "RSA_verify_PKCS1_PSS", "RSA_verify_ASN1_OCTET_STRING", "RSA_verify", "RSA_sign_ASN1_OCTET_STRING", "RSA_sign", "RSA_setup_blinding", "RSA_PUB_DECODE", "RSA_public_encrypt", "RSA_public_decrypt", "RSA_PSS_TO_CTX", "RSA_PRIV_ENCODE", "RSA_PRIV_DECODE", "RSA_private_encrypt", "RSA_private_decrypt", "RSA_print_fp", "RSA_print", "RSA_padding_check_X931", "RSA_padding_check_SSLv23", "RSA_padding_check_PKCS1_type_2", "RSA_padding_check_PKCS1_type_1", "RSA_padding_check_PKCS1_OAEP_mgf1", "RSA_padding_check_PKCS1_OAEP", "RSA_padding_check_none", "RSA_padding_add_X931", "RSA_padding_add_SSLv23", "RSA_padding_add_PKCS1_type_2", "RSA_padding_add_PKCS1_type_1", "RSA_padding_add_PKCS1_PSS_mgf1", "RSA_padding_add_PKCS1_PSS", "RSA_padding_add_PKCS1_OAEP_mgf1", "RSA_padding_add_PKCS1_OAEP", "RSA_padding_add_none", "RSA_NULL_PUBLIC_ENCRYPT", "RSA_NULL_PUBLIC_DECRYPT", "RSA_NULL_PRIVATE_ENCRYPT", "RSA_NULL_PRIVATE_DECRYPT", "RSA_NULL_MOD_EXP", "RSA_NULL", "RSA_new_method", "RSA_MGF1_TO_MD", "RSA_memory_lock", "RSA_ITEM_VERIFY", "RSA_generate_key_ex", "RSA_generate_key", "RSA_EAY_PUBLIC_ENCRYPT", "RSA_EAY_PUBLIC_DECRYPT", "RSA_EAY_PRIVATE_ENCRYPT", "RSA_EAY_PRIVATE_DECRYPT", "RSA_CMS_DECRYPT", "RSA_check_key", "RSA_BUILTIN_KEYGEN", "RSA_ALGOR_TO_MD", "PKEY_RSA_VERIFYRECOVER", "PKEY_RSA_VERIFY", "PKEY_RSA_SIGN", "PKEY_RSA_CTRL_STR", "PKEY_RSA_CTRL", "OLD_RSA_PRIV_DECODE", "MEMORY_LOCK", "INT_RSA_VERIFY", "DO_RSA_PRINT", "CHECK_PADDING_MD", "dynlock", "create", "callback", "INT_NEW_EX_DATA", "INT_FREE_EX_DATA", "INT_DUP_EX_DATA", "FIPS_mode_set", "DEF_GET_CLASS", "DEF_ADD_INDEX", "CRYPTO_set_ex_data", "CRYPTO_get_new_lockid", "CRYPTO_get_new_dynlockid", "CRYPTO_get_ex_new_index", "functionality", "supported", "could", "unload", "shared", "library", "could", "requested", "symbol", "meth_data", "stack", "corrupt", "filename", "failed", "shared", "library", "handle", "specification", "filename", "translation", "failed", "could", "shared", "library", "incorrect", "syntax", "cleanup", "method", "function", "failed", "filename", "failure", "empty", "structure", "already", "loaded", "control", "command", "failed", "WIN32_UNLOAD", "WIN32_SPLITTER", "WIN32_PATHBYADDR", "WIN32_NAME_CONVERTER", "WIN32_MERGER", "WIN32_LOAD", "WIN32_JOINER", "WIN32_GLOBALLOOKUP_FUNC", "WIN32_GLOBALLOOKUP", "WIN32_BIND_VAR", "WIN32_BIND_FUNC", "VMS_UNLOAD", "VMS_MERGER", "VMS_LOAD", "VMS_BIND_SYM", "PATHBYADDR", "GLOBAL_LOOKUP_FUNC", "DSO_up_ref", "DSO_set_name_converter", "DSO_set_filename", "DSO_pathbyaddr", "DSO_new_method", "DSO_merge", "DSO_load", "DSO_global_lookup", "DSO_get_loaded_filename", "DSO_get_filename", "DSO_free", "DSO_ctrl", "DSO_convert_filename", "DSO_bind_var", "DSO_bind_func", "DL_UNLOAD", "DL_NAME_CONVERTER", "DL_MERGER", "DL_LOAD", "DL_BIND_VAR", "DL_BIND_FUNC", "DLFCN_UNLOAD", "DLFCN_NAME_CONVERTER", "DLFCN_MERGER", "DLFCN_LOAD", "DLFCN_BIND_VAR", "DLFCN_BIND_FUNC", "BEOS_UNLOAD", "BEOS_NAME_CONVERTER", "BEOS_LOAD", "BEOS_BIND_VAR", "BEOS_BIND_FUNC", "method", "invalid", "parameters", "value", "SIG_CB", "PKEY_DSA_KEYGEN", "PKEY_DSA_CTRL", "OLD_DSA_PRIV_DECODE", "i2d_DSA_SIG", "DSA_verify", "DSA_SIG_PRINT", "DSA_SIG_new", "DSA_sign_setup", "DSA_sign", "DSA_PUB_ENCODE", "DSA_PUB_DECODE", "DSA_PRIV_ENCODE", "DSA_PRIV_DECODE", "DSA_print_fp", "DSA_PARAM_DECODE", "DSA_new_method", "DSA_generate_parameters_ex", "DSA_generate_key", "DSA_do_verify", "DSA_do_sign", "DSA_BUILTIN_PARAMGEN2", "DSAparams_print_fp", "DSAparams_print", "DO_DSA_PRINT", "d2i_DSA_SIG", "build27", "cpython", "externals", "openssl", "crypto", "evp_asn1", "build27", "cpython", "externals", "openssl", "crypto", "a_object", "INVALID", "build27", "cpython", "externals", "openssl", "crypto", "stack", "stack", "build27", "cpython", "externals", "openssl", "crypto", "engine", "tb_pkmeth", "build27", "cpython", "externals", "openssl", "crypto", "dh_pmeth", "dh_paramgen_prime_len", "dh_rfc5114", "dh_paramgen_generator", "dh_paramgen_subprime_len", "dh_paramgen_type", "build27", "cpython", "externals", "openssl", "crypto", "dsa_pmeth", "dsa_paramgen_bits", "dsa_paramgen_q_bits", "dsa_paramgen_md", "build27", "cpython", "externals", "openssl", "crypto", "hm_pmeth", "hexkey", "build27", "cpython", "externals", "openssl", "crypto", "ec_pmeth", "ec_paramgen_curve", "ec_param_enc", "explicit", "named_curve", "ecdh_kdf_md", "ecdh_cofactor_mode", "build27", "cpython", "externals", "openssl", "crypto", "rsa_pmeth", "rsa_padding_mode", "sslv23", "rsa_pss_saltlen", "rsa_keygen_bits", "rsa_keygen_pubexp", "rsa_mgf1_md", "rsa_oaep_md", "rsa_oaep_label", "cipher", "build27", "cpython", "externals", "openssl", "crypto", "p_lib", "algorithm", "unsupported", "Public", "Private", "Parameters", "build27", "cpython", "externals", "openssl", "crypto", "engine", "eng_table", "build27", "cpython", "externals", "openssl", "crypto", "engine", "eng_list", "OPENSSL_ENGINES", "local", "engines", "DIR_LOAD", "DIR_ADD", "LIST_ADD", "build27", "cpython", "externals", "openssl", "crypto", "engine", "eng_lib", "build27", "cpython", "externals", "openssl", "crypto", "bn_lib", "build27", "cpython", "externals", "openssl", "crypto", "asn1_lib", "offset", "address", "build27", "cpython", "externals", "openssl", "crypto", "bn_shift", "build27", "cpython", "externals", "openssl", "crypto", "bn_print", "build27", "cpython", "externals", "openssl", "crypto", "objects", "obj_lib", "build27", "cpython", "externals", "openssl", "crypto", "bio_lib", "build27", "cpython", "externals", "openssl", "crypto", "pkcs12", "p12_crpt", "build27", "cpython", "externals", "openssl", "crypto", "p5_crpt2", "keylen", "sizeof", "build27", "cpython", "externals", "openssl", "crypto", "p5_crpt", "EVP_CIPHER_key_length", "cipher", "sizeof", "md_tmp", "EVP_CIPHER_iv_length", "cipher", "pointer", "build27", "cpython", "externals", "openssl", "crypto", "bss_file", "fopen", "ASN1_SET_ANY", "ASN1_SEQUENCE_ANY", "ASN1_OCTET_STRING_NDEF", "ASN1_FBOOLEAN", "ASN1_TBOOLEAN", "ASN1_BOOLEAN", "DIRECTORYSTRING", "DISPLAYTEXT", "ASN1_PRINTABLE", "ASN1_SEQUENCE", "ASN1_ANY", "ASN1_BMPSTRING", "ASN1_UNIVERSALSTRING", "ASN1_VISIBLESTRING", "ASN1_GENERALIZEDTIME", "ASN1_UTCTIME", "ASN1_GENERALSTRING", "ASN1_IA5STRING", "ASN1_T61STRING", "ASN1_PRINTABLESTRING", "ASN1_UTF8STRING", "ASN1_OBJECT", "ASN1_NULL", "ASN1_OCTET_STRING", "ASN1_BIT_STRING", "ASN1_ENUMERATED", "ASN1_INTEGER", "build27", "cpython", "externals", "openssl", "crypto", "a_int", "build27", "cpython", "externals", "openssl", "crypto", "a_bytes", "build27", "cpython", "externals", "openssl", "crypto", "rsa_sign", "priv_key", "pub_key", "version", "DSA_SIG", "build27", "cpython", "externals", "openssl", "crypto", "dsa_asn1", "OpenSSL", "Method", "build27", "cpython", "externals", "openssl", "crypto", "dh_key", "build27", "cpython", "externals", "openssl", "crypto", "dsa_lib", "build27", "cpython", "externals", "openssl", "crypto", "dh_lib", "build27", "cpython", "externals", "openssl", "crypto", "pmeth_gn", "build27", "cpython", "externals", "openssl", "crypto", "dh_gen", "build27", "cpython", "externals", "openssl", "crypto", "dsa_gen", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "v3_utl", "FALSE", "false", "value", "section", "build27", "cpython", "externals", "openssl", "crypto", "ec_key", "curve", "prime", "field", "curve", "prime", "field", "curve", "prime", "field", "curve", "prime", "field", "curve", "prime", "field", "curve", "prime", "field", "curve", "prime", "field", "IPSec", "Oakley", "curve", "binary", "field", "suitable", "ECDSA", "Questionable", "extension", "field!", "IPSec", "Oakley", "curve", "binary", "field", "suitable", "ECDSA", "Questionable", "extension", "field!", "curvs", "prime", "field", "curve", "prime", "field", "curve", "prime", "field", "curve", "binary", "field", "curve", "binary", "field", "curve", "binary", "field", "curve", "binary", "field", "curve", "binary", "field", "curve", "binary", "field", "curve", "binary", "field", "curve", "binary", "field", "curve", "binary", "field", "curve", "binary", "field", "curve", "binary", "field", "curve", "binary", "field", "curve", "binary", "field", "curve", "binary", "field", "curve", "binary", "field", "curve", "binary", "field", "curve", "binary", "field", "curve", "binary", "field", "curve", "binary", "field", "curve", "binary", "field", "curve", "binary", "field", "curve", "binary", "field", "curve", "binary", "field", "curve", "prime", "field", "curve", "prime", "field", "curve", "prime", "field", "curve", "prime", "field", "curve", "prime", "field", "curve", "prime", "field", "curve", "prime", "field", "curve", "prime", "field", "curve", "prime", "field", "curve", "prime", "field", "curve", "prime", "field", "curve", "prime", "field", "curve", "prime", "field", "curve", "prime", "field", "curve", "prime", "field", "build27", "cpython", "externals", "openssl", "crypto", "ec_curve", "build27", "cpython", "externals", "openssl", "crypto", "ec_lib", "build27", "cpython", "externals", "openssl", "crypto", "ecdsa", "ecs_lib", "build27", "cpython", "externals", "openssl", "crypto", "rsa_crpt", "build27", "cpython", "externals", "openssl", "crypto", "rsa_gen", "build27", "cpython", "externals", "openssl", "crypto", "rsa_lib", "build27", "cpython", "externals", "openssl", "crypto", "rsa_pss", "build27", "cpython", "externals", "openssl", "crypto", "rsa_oaep", "build27", "cpython", "externals", "openssl", "crypto", "rsa_x931", "build27", "cpython", "externals", "openssl", "crypto", "rsa_saos", "build27", "cpython", "externals", "openssl", "crypto", "build27", "cpython", "externals", "openssl", "crypto", "ameth_lib", "object", "X509_ATTRIBUTE", "value", "single", "value", "build27", "cpython", "externals", "openssl", "crypto", "engine", "eng_ctrl", "build27", "cpython", "externals", "openssl", "crypto", "ex_data", "build27", "cpython", "externals", "openssl", "crypto", "engine", "tb_asnmth", "build27", "cpython", "externals", "openssl", "crypto", "pkcs12", "p12_key", "build27", "cpython", "externals", "openssl", "crypto", "evp_enc", "cipher", "block_size", "cipher", "block_size", "cipher", "block_size", "EVP_CIPHER_CTX_iv_length", "sizeof", "sizeof", "sizeof", "sizeof", "final", "PBEPARAM", "build27", "cpython", "externals", "openssl", "crypto", "p5_pbe", "PBKDF2PARAM", "keylength", "PBE2PARAM", "encryption", "keyfunc", "build27", "cpython", "externals", "openssl", "crypto", "p5_pbev2", "build27", "cpython", "externals", "openssl", "crypto", "tasn_dec", "Field", "build27", "cpython", "externals", "openssl", "crypto", "tasn_enc", "build27", "cpython", "externals", "openssl", "crypto", "tasn_new", "build27", "cpython", "externals", "openssl", "crypto", "buffer", "buffer", "build27", "cpython", "externals", "openssl", "crypto", "tasn_utl", "X509_SIG", "algor", "BIGNUM", "build27", "cpython", "externals", "openssl", "crypto", "dsa_sign", "ZLONG", "build27", "cpython", "externals", "openssl", "crypto", "x_long", "build27", "cpython", "externals", "openssl", "crypto", "a_dup", "ECDSA_SIG", "build27", "cpython", "externals", "openssl", "crypto", "bn_exp", "build27", "cpython", "externals", "openssl", "crypto", "bn_mont", "build27", "cpython", "externals", "openssl", "crypto", "bn_rand", "build27", "cpython", "externals", "openssl", "crypto", "bn_ctx", "OpenSSL", "method", "build27", "cpython", "externals", "openssl", "crypto", "dsa_ossl", "CMS_SharedInfo", "suppPubInfo", "entityUInfo", "keyInfo", "CMS_Receipt", "originatorSignatureValue", "CMS_ReceiptRequest", "receiptsTo", "receiptsFrom", "signedContentIdentifier", "CMS_ReceiptsFrom", "receiptList", "allOrFirstTier", "CMS_Attributes_Verify", "CMS_Attributes_Sign", "CMS_ATTRIBUTES", "CMS_ContentInfo", "compressedData", "authenticatedData", "encryptedData", "digestedData", "envelopedData", "signedData", "CMS_CompressedData", "compressionAlgorithm", "CMS_AuthenticatedData", "unauthAttrs", "authAttrs", "macAlgorithm", "CMS_EncryptedData", "CMS_DigestedData", "CMS_EnvelopedData", "unprotectedAttrs", "encryptedContentInfo", "recipientInfos", "originatorInfo", "CMS_RecipientInfo", "kekri", "CMS_OtherRecipientInfo", "oriValue", "oriType", "CMS_PasswordRecipientInfo", "keyDerivationAlgorithm", "CMS_KEKRecipientInfo", "kekid", "CMS_KEKIdentifier", "keyIdentifier", "CMS_KeyAgreeRecipientInfo", "recipientEncryptedKeys", "originator", "CMS_OriginatorIdentifierOrKey", "originatorKey", "CMS_OriginatorPublicKey", "publicKey", "CMS_RecipientEncryptedKey", "CMS_KeyAgreeRecipientIdentifier", "rKeyId", "CMS_RecipientKeyIdentifier", "other", "CMS_OtherKeyAttribute", "keyAttr", "keyAttrId", "CMS_KeyTransRecipientInfo", "encryptedKey", "keyEncryptionAlgorithm", "CMS_EncryptedContentInfo", "encryptedContent", "contentEncryptionAlgorithm", "CMS_OriginatorInfo", "CMS_SignedData", "signerInfos", "certificates", "encapContentInfo", "digestAlgorithms", "CMS_RevocationInfoChoice", "CMS_OtherRevocationInfoFormat", "otherRevInfo", "otherRevInfoFormat", "CMS_SignerInfo", "unsignedAttrs", "signature", "signatureAlgorithm", "signedAttrs", "digestAlgorithm", "CMS_EncapsulatedContentInfo", "eContent", "eContentType", "CMS_SignerIdentifier", "subjectKeyIdentifier", "issuerAndSerialNumber", "CMS_CertificateChoices", "other", "v2AttrCert", "v1AttrCert", "extendedCertificate", "certificate", "CMS_OtherCertificateFormat", "otherCert", "otherCertFormat", "CMS_IssuerAndSerialNumber", "issuer", "build27", "cpython", "externals", "openssl", "crypto", "bn_add", "build27", "cpython", "externals", "openssl", "crypto", "bn_div", "openssl_conf", "build27", "cpython", "externals", "openssl", "crypto", "conf_mod", "module", "retcode", "value", "OPENSSL_init", "OPENSSL_finish", "OPENSSL_CONF", "openssl", "build27", "cpython", "externals", "openssl", "crypto", "a_strex", "build27", "cpython", "externals", "openssl", "crypto", "x509name", "GENERAL_NAMES", "GeneralNames", "GENERAL_NAME", "registeredID", "iPAddress", "uniformResourceIdentifier", "ediPartyName", "directoryName", "x400Address", "dNSName", "rfc822Name", "otherName", "EDIPARTYNAME", "partyName", "nameAssigner", "OTHERNAME", "value", "type_id", "X509_EXTENSIONS", "Extension", "X509_EXTENSION", "critical", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "v3_lib", "AUTHORITY_INFO_ACCESS", "ACCESS_DESCRIPTION", "location", "method", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "v3_info", "value", "build27", "cpython", "externals", "openssl", "crypto", "x509_req", "build27", "cpython", "externals", "openssl", "crypto", "a_enum", "build27", "cpython", "externals", "openssl", "crypto", "x509_cmp", "build27", "cpython", "externals", "openssl", "crypto", "ech_lib", "build27", "cpython", "externals", "openssl", "crypto", "ec_mult", "OpenSSL", "ECDSA", "method", "build27", "cpython", "externals", "openssl", "crypto", "ecdsa", "ecs_ossl", "build27", "cpython", "externals", "openssl", "crypto", "bn_gcd", "build27", "cpython", "externals", "openssl", "crypto", "bn_blind", "Young", "build27", "cpython", "externals", "openssl", "crypto", "rsa_eay", "OpenSSL", "method", "build27", "cpython", "externals", "openssl", "crypto", "rsa_ameth", "Private", "modulus", "publicExponent", "Public", "Modulus", "Exponent", "privateExponent", "prime1", "prime2", "exponent1", "exponent2", "coefficient", "INVALID", "PARAMETERS", "Algorithm", "default", "Algorithm", "INVALID", "default", "Length", "default", "Trailer", "Field", "default", "OpenSSL", "method", "OpenSSL", "method", "build27", "cpython", "externals", "openssl", "crypto", "dh_ameth", "Private", "Public", "Parameters", "private", "public", "prime", "generator", "subgroup", "order", "subgroup", "factor", "counter", "recommended", "private", "length", "OpenSSL", "method", "build27", "cpython", "externals", "openssl", "crypto", "dsa_ameth", "Private", "Public", "Parameters", "OpenSSL", "algorithm", "build27", "cpython", "externals", "openssl", "crypto", "ec_ameth", "ECDSA", "Parameters", "OpenSSL", "method", "build27", "cpython", "externals", "openssl", "crypto", "hm_ameth", "build27", "cpython", "externals", "openssl", "crypto", "md_rand", "OpenSSL", "openssl", "support", "build27", "cpython", "externals", "openssl", "crypto", "pkcs12", "p12_utl", "build27", "cpython", "externals", "openssl", "crypto", "engine", "tb_cipher", "X509_ALGORS", "algorithms", "X509_ALGOR", "parameter", "build27", "cpython", "externals", "openssl", "crypto", "asn_pack", "build27", "cpython", "externals", "openssl", "crypto", "a_bitstr", "build27", "cpython", "externals", "openssl", "crypto", "bn_recp", "build27", "cpython", "externals", "openssl", "crypto", "bn_mod", "build27", "cpython", "externals", "openssl", "crypto", "bn_exp2", "X509_NAME", "X509_NAME_INTERNAL", "X509_NAME_ENTRIES", "X509_NAME_ENTRY", "build27", "cpython", "externals", "openssl", "crypto", "x_name", "build27", "cpython", "externals", "openssl", "crypto", "cms_lib", "X509_CRL", "X509_CRL_INFO", "revoked", "nextUpdate", "lastUpdate", "sig_alg", "X509_REVOKED", "extensions", "revocationDate", "build27", "cpython", "externals", "openssl", "crypto", "x_crl", "build27", "cpython", "externals", "openssl", "crypto", "cms_io", "cert_info", "X509_CINF", "subjectUID", "issuerUID", "subject", "validity", "build27", "cpython", "externals", "openssl", "crypto", "x_x509", "local", "private", "local", "local", "certs", "local", "SSL_CERT_DIR", "SSL_CERT_FILE", "build27", "cpython", "externals", "openssl", "crypto", "conf_lib", "group", "build27", "cpython", "externals", "openssl", "crypto", "dso_lib", "BMPSTRING", "UNIVERSALSTRING", "GENERALSTRING", "VISIBLESTRING", "GRAPHICSTRING", "GENERALIZEDTIME", "UTCTIME", "IA5STRING", "VIDEOTEXSTRING", "T61STRING", "PRINTABLESTRING", "NUMERICSTRING", "SEQUENCE", "UTF8STRING", "ENUMERATED", "EXTERNAL", "OBJECT", "DESCRIPTOR", "OBJECT", "OCTET", "STRING", "STRING", "INTEGER", "BOOLEAN", "RECURSION", "DEPTH", "Error", "encoding", "length", "greater", "OBJECT", "boolean", "INTEGER", "ENUMERATED", "unknown", "build27", "cpython", "externals", "openssl", "crypto", "a_mbstr", "minsize", "maxsize", "build27", "cpython", "externals", "openssl", "crypto", "t_x509", "Certificate", "8sVersion", "Serial", "Number", "Negative", "Issuer", "Validity", "Before", "After", "Subject", "Subject", "Public", "12sPublic", "Algorithm", "12sUnable", "Public", "8sIssuer", "Unique", "8sSubject", "Unique", "X509v3", "extensions", "Subject", "Public", "Signature", "Algorithm", "value", "nombstr", "utf8only", "default", "build27", "cpython", "externals", "openssl", "crypto", "a_strnid", "POLICY_MAPPINGS", "POLICY_MAPPING", "subjectDomainPolicy", "issuerDomainPolicy", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "v3_pmaps", "ISSUING_DIST_POINT", "onlyattr", "indirectCRL", "onlysomereasons", "onlyCA", "onlyuser", "CRL_DIST_POINTS", "CRLDistributionPoints", "DIST_POINT", "distpoint", "DIST_POINT_NAME", "relativename", "fullname", "unused", "AACompromise", "Compromise", "privilegeWithdrawn", "Privilege", "Withdrawn", "certificateHold", "Certificate", "cessationOfOperation", "Cessation", "Operation", "superseded", "Superseded", "affiliationChanged", "Affiliation", "Changed", "CACompromise", "Compromise", "keyCompromise", "Compromise", "Unused", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "v3_crld", "fullname", "relativename", "EMPTY", "reasons", "CRLissuer", "onlyAA", "sFull", "sRelative", "sOnly", "Certificates", "sOnly", "Certificates", "sIndirect", "Reasons", "sOnly", "Attribute", "Certificates", "EMPTY", "Reasons", "Issuer", "scrlUrl", "scrlNum", "scrlTime", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "v3_ocsp", "sIssuer", "build27", "cpython", "externals", "openssl", "crypto", "x509_v3", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "v3_scts", "sSigned", "Certificate", "Timestamp", "sVersion", "sTimestamp", "sExtensions", "sSignature", "unknown", "NOTICEREF", "noticenos", "organization", "USERNOTICE", "exptext", "noticeref", "POLICYQUALINFO", "pqualid", "usernotice", "cpsuri", "POLICYINFO", "qualifiers", "policyid", "CERTIFICATEPOLICIES", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "v3_cpols", "ia5org", "policyIdentifier", "userNotice", "explicitText", "noticeNumbers", "sPolicy", "sUser", "Notice", "sUnknown", "Qualifier", "sOrganization", "sNumber", "sExplicit", "Critical", "Critical", "Qualifiers", "decipherOnly", "Decipher", "encipherOnly", "Encipher", "cRLSign", "keyCertSign", "Certificate", "keyAgreement", "Agreement", "dataEncipherment", "Encipherment", "keyEncipherment", "Encipherment", "nonRepudiation", "Repudiation", "digitalSignature", "Digital", "Signature", "objCA", "Object", "Signing", "emailCA", "sslCA", "reserved", "objsign", "Object", "Signing", "email", "server", "Server", "client", "Client", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "v3_bitst", "removeFromCRL", "Remove", "unspecified", "Unspecified", "EXTENDED_KEY_USAGE", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "v3_extku", "POLICY_CONSTRAINTS", "inhibitPolicyMapping", "requireExplicitPolicy", "Require", "Explicit", "Policy", "Inhibit", "Policy", "Mapping", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "v3_pcons", "unsupported", "othername", "X400Name", "EdiPartyName", "DirName", "invalid", "Address", "Registered", "othername", "unsupported", "X400Name", "unsupported", "EdiPartyName", "unsupported", "email", "DirName", "Address", "Address", "invalid", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "v3_alt", "dirName", "otherName", "section", "BASIC_CONSTRAINTS", "pathlen", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "v3_bcons", "SXNET", "SXNETID", "sVersion", "sZone", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "v3_sxnet", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "v3_ia5", "keyid", "serial", "always", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "v3_akey", "sPath", "Length", "Constraint", "infinite", "sPolicy", "Language", "sPolicy", "language", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "v3_pci", "policy", "PKEY_USAGE_PERIOD", "notAfter", "notBefore", "Before", "After", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "v3_skey", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "v3_conf", "section", "critical", "NAME_CONSTRAINTS", "excludedSubtrees", "permittedSubtrees", "GENERAL_SUBTREE", "maximum", "minimum", "permitted", "excluded", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "v3_ncons", "Permitted", "Excluded", "build27", "cpython", "externals", "openssl", "crypto", "x509_att", "X509_REQ", "req_info", "X509_REQ_INFO", "attributes", "pubkey", "X509_PUBKEY", "public_key", "build27", "cpython", "externals", "openssl", "crypto", "x_pubkey", "X509_NAME", "build27", "cpython", "externals", "openssl", "crypto", "x509_obj", "timestampsign", "Stamp", "signing", "ocsphelper", "helper", "Purpose", "crlsign", "signing", "smimeencrypt", "encryption", "smimesign", "signing", "nssslserver", "Netscape", "server", "sslserver", "server", "sslclient", "client", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "v3_purp", "build27", "cpython", "externals", "openssl", "crypto", "ecp_mont", "build27", "cpython", "externals", "openssl", "crypto", "ec2_smpl", "OpenSSL", "method", "build27", "cpython", "externals", "openssl", "crypto", "ech_ossl", "build27", "cpython", "externals", "openssl", "crypto", "rsa_none", "build27", "cpython", "externals", "openssl", "crypto", "rsa_ssl", "build27", "cpython", "externals", "openssl", "crypto", "rsa_pk1", "build27", "cpython", "externals", "openssl", "crypto", "pkcs7", "pk7_lib", "build27", "cpython", "externals", "openssl", "crypto", "cms_env", "RSA_OAEP_PARAMS", "pSourceFunc", "maskGenFunc", "hashFunc", "RSA_PSS_PARAMS", "trailerField", "saltLength", "maskGenAlgorithm", "hashAlgorithm", "build27", "cpython", "externals", "openssl", "crypto", "f_int", "PKCS8_PRIV_KEY_INFO", "pkeyalg", "build27", "cpython", "externals", "openssl", "crypto", "cms_sd", "build27", "cpython", "externals", "openssl", "crypto", "m_sigver", "build27", "cpython", "externals", "openssl", "crypto", "cms_kari", "int_dhx942_dh", "vparams", "int_dhvparams", "counter", "length", "build27", "cpython", "externals", "openssl", "crypto", "pmeth_fn", "EC_PRIVATEKEY", "parameters", "privateKey", "ECPKPARAMETERS", "value", "implicitlyCA", "value", "parameters", "value", "named_curve", "ECPARAMETERS", "cofactor", "order", "curve", "fieldID", "X9_62_CURVE", "X9_62_FIELDID", "fieldType", "char_two", "prime", "X9_62_CHARACTERISTIC_TWO", "ppBasis", "tpBasis", "onBasis", "other", "X9_62_PENTANOMIAL", "build27", "cpython", "externals", "openssl", "crypto", "ec_asn1", "build27", "cpython", "externals", "openssl", "crypto", "ec_print", "Generator", "hybrid", "Generator", "uncompressed", "Generator", "compressed", "build27", "cpython", "externals", "openssl", "crypto", "eck_prn", "CURVE", "Field", "Basis", "Polynomial", "Prime", "Order", "Cofactor", "ADVAPI32", "KERNEL32", "NETAPI32", "NetStatisticsGet", "NetApiBufferFree", "CryptAcquireContextW", "CryptGenRandom", "CryptReleaseContext", "USER32", "GetForegroundWindow", "GetCursorInfo", "GetQueueStatus", "CreateToolhelp32Snapshot", "CloseToolhelp32Snapshot", "Heap32First", "Heap32Next", "Heap32ListFirst", "Heap32ListNext", "Process32First", "Process32Next", "Thread32First", "Thread32Next", "Module32First", "Module32Next", "build27", "cpython", "externals", "openssl", "crypto", "rand_win", "build27", "cpython", "externals", "openssl", "crypto", "pkcs12", "p12_add", "PKCS12_AUTHSAFES", "PKCS12_SAFEBAGS", "attrib", "PKCS12_SAFEBAG", "value", "value", "safes", "value", "shkeybag", "value", "keybag", "PKCS12_BAGS", "value", "sdsicert", "value", "x509crl", "value", "x509cert", "value", "other", "PKCS12_MAC_DATA", "dinfo", "PKCS12", "authsafes", "build27", "cpython", "externals", "openssl", "crypto", "a_d2i_fp", "build27", "cpython", "externals", "openssl", "crypto", "a_i2d_fp", "build27", "cpython", "externals", "openssl", "crypto", "a_set", "build27", "cpython", "externals", "openssl", "crypto", "tasn_prn", "ABSENT", "EXTERNAL", "ERROR", "selector", "invalid", "Unprocessed", "ABSENT", "unused", "build27", "cpython", "externals", "openssl", "crypto", "cms_dd", "memory", "buffer", "build27", "cpython", "externals", "openssl", "crypto", "bss_mem", "message", "digest", "build27", "cpython", "externals", "openssl", "crypto", "cms_enc", "build27", "cpython", "externals", "openssl", "crypto", "a_verify", "AUTHORITY_KEYID", "ASN1_TIME", "build27", "cpython", "externals", "openssl", "crypto", "a_time", "Enter", "phrase", "build27", "cpython", "externals", "openssl", "crypto", "pem_lib", "phrase", "short", "needs", "least", "chars", "ENCRYPTED", "CLEAR", "PRIVATE", "ENCRYPTED", "PRIVATE", "PRIVATE", "PARAMETERS", "PARAMETERS", "PARAMETERS", "CERTIFICATE", "CERTIFICATE", "CERTIFICATE", "REQUEST", "CERTIFICATE", "REQUEST", "TRUSTED", "CERTIFICATE", "PKCS7", "SIGNED", "Expecting", "iv_len", "sizeof", "strlen", "objstr", "iv_len", "sizeof", "BEGIN", "build27", "cpython", "externals", "openssl", "crypto", "asn_mime", "BEGIN", "gostr3411", "smime", "application", "pkcs7", "application", "pkcs7", "Version", "Content", "multipart", "signed", "protocol", "ssignature", "micalg", "boundary", "signed", "message", "Content", "ssignature", "smime", "Content", "Transfer", "Encoding", "base64", "Content", "Disposition", "attachment", "filename", "smime", "enveloped", "signed", "receipt", "signed", "certs", "compressed", "smime", "filename", "Content", "smime", "smime", "Content", "Transfer", "Encoding", "base64", "content", "multipart", "signed", "boundary", "application", "pkcs7", "signature", "application", "pkcs7", "signature", "application", "pkcs7", "application", "pkcs7", "Content", "plain", "plain", "build27", "cpython", "externals", "openssl", "crypto", "bio_ndef", "build27", "cpython", "externals", "openssl", "crypto", "pem_oth", "X509_CERT_PAIR", "reverse", "forward", "X509_CERT_AUX", "alias", "reject", "trust", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "pcy_cache", "X509_VAL", "build27", "cpython", "externals", "openssl", "crypto", "conf_api", "WIN32", "OpenSSL", "default", "build27", "cpython", "externals", "openssl", "crypto", "conf_def", "build27", "cpython", "externals", "openssl", "crypto", "a_bool", "SPACES", "Parse", "Error", "Supported", "sTrusted", "Trusted", "sRejected", "Rejected", "sAlias", "OCSP_SERVICELOC", "locator", "OCSP_CRLID", "crlTime", "crlNum", "crlUrl", "OCSP_BASICRESP", "tbsResponseData", "OCSP_RESPDATA", "responseExtensions", "responses", "producedAt", "responderId", "OCSP_SINGLERESP", "singleExtensions", "thisUpdate", "certStatus", "certId", "OCSP_CERTSTATUS", "value", "unknown", "value", "revoked", "value", "OCSP_REVOKEDINFO", "revocationReason", "revocationTime", "OCSP_RESPID", "value", "byKey", "value", "byName", "OCSP_RESPONSE", "responseBytes", "responseStatus", "OCSP_RESPBYTES", "response", "responseType", "OCSP_REQUEST", "optionalSignature", "tbsRequest", "OCSP_REQINFO", "requestExtensions", "requestList", "requestorName", "OCSP_ONEREQ", "singleRequestExtensions", "reqCert", "OCSP_CERTID", "issuerKeyHash", "issuerNameHash", "OCSP_SIGNATURE", "certs", "build27", "cpython", "externals", "openssl", "crypto", "f_string", "build27", "cpython", "externals", "openssl", "crypto", "a_gentm", "FORMAT", "BITWRAP", "SETWRAP", "SEQWRAP", "OCTWRAP", "IMPLICIT", "EXPLICIT", "NUMERIC", "GENSTR", "GeneralString", "TELETEXSTRING", "PRINTABLE", "VISIBLE", "UTF8String", "BITSTRING", "BITSTR", "OCTETSTRING", "GENTIME", "build27", "cpython", "externals", "openssl", "crypto", "asn1_gen", "ASCII", "BITLIST", "string", "PROXY_CERT_INFO_EXTENSION", "proxyPolicy", "pcPathLengthConstraint", "PROXY_POLICY", "policyLanguage", "PKCS7_ATTR_VERIFY", "PKCS7_ATTR_SIGN", "PKCS7_ATTRIBUTES", "PKCS7_DIGEST", "PKCS7_ENCRYPT", "PKCS7_SIGN_ENVELOPE", "PKCS7_ENC_CONTENT", "content_type", "PKCS7_RECIP_INFO", "enc_key", "key_enc_algor", "PKCS7_ENVELOPE", "enc_data", "recipientinfo", "PKCS7_ISSUER_AND_SERIAL", "PKCS7_SIGNER_INFO", "unauth_attr", "enc_digest", "digest_enc_alg", "auth_attr", "digest_alg", "issuer_and_serial", "PKCS7_SIGNED", "signer_info", "contents", "md_algs", "encrypted", "digest", "signed_and_enveloped", "enveloped", "build27", "cpython", "externals", "openssl", "crypto", "d2i_pr", "build27", "cpython", "externals", "openssl", "crypto", "evp_pkey", "build27", "cpython", "externals", "openssl", "crypto", "a_sign", "build27", "cpython", "externals", "openssl", "crypto", "ocsp_ht", "Reason", "NETSCAPE_SPKI", "sig_algor", "spkac", "NETSCAPE_SPKAC", "challenge", "build27", "cpython", "externals", "openssl", "crypto", "i2d_pr", "build27", "cpython", "externals", "openssl", "crypto", "a_digest", "build27", "cpython", "externals", "openssl", "crypto", "ecp_smpl", "build27", "cpython", "externals", "openssl", "crypto", "bn_gf2m", "build27", "cpython", "externals", "openssl", "crypto", "ec2_mult", "build27", "cpython", "externals", "openssl", "crypto", "cms_pwri", "partial", "build27", "cpython", "externals", "openssl", "crypto", "x509_vfy", "OPENSSL_ALLOW_PROXY_CERTS", "build27", "cpython", "externals", "openssl", "crypto", "p_sign", "build27", "cpython", "externals", "openssl", "crypto", "e_aes", "build27", "cpython", "externals", "openssl", "crypto", "ec_oct", "build27", "cpython", "externals", "openssl", "crypto", "pkcs12", "p12_decr", "build27", "cpython", "externals", "openssl", "crypto", "pkcs12", "p12_p8e", "build27", "cpython", "externals", "openssl", "crypto", "bio_enc", "build27", "cpython", "externals", "openssl", "crypto", "p_verify", "build27", "cpython", "externals", "openssl", "crypto", "a_utctm", "length", "sizeof", "enc_data", "build27", "cpython", "externals", "openssl", "crypto", "encode", "sizeof", "enc_data", "EVP_MAX_KEY_LENGTH", "build27", "cpython", "externals", "openssl", "crypto", "evp_key", "EVP_MAX_IV_LENGTH", "buffer", "build27", "cpython", "externals", "openssl", "crypto", "bf_buff", "base64", "encoding", "build27", "cpython", "externals", "openssl", "crypto", "bio_b64", "buf_len", "buf_off", "buf_off", "sizeof", "buf_off", "sizeof", "buf_len", "sizeof", "buf_off", "sizeof", "tmp_len", "build27", "cpython", "externals", "openssl", "crypto", "bio_asn1", "buflen", "bufsize", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "pcy_data", "OpenSSL", "win32", "shared", "library", "method", "build27", "cpython", "externals", "openssl", "crypto", "dso_win32", "filename", "symname", "build27", "cpython", "externals", "openssl", "crypto", "pkcs7", "pk7_doit", "build27", "cpython", "externals", "openssl", "crypto", "x509_lu", "ssl_server", "ssl_client", "smime_sign", "build27", "cpython", "externals", "openssl", "crypto", "x509_vpm", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "pcy_tree", "server", "request", "responder", "Object", "Signer", "email", "compatible", "build27", "cpython", "externals", "openssl", "crypto", "x509_trs", "build27", "cpython", "externals", "openssl", "crypto", "modes", "gcm128", "build27", "cpython", "externals", "openssl", "crypto", "ec2_oct", "build27", "cpython", "externals", "openssl", "crypto", "ecp_oct", "build27", "cpython", "externals", "openssl", "crypto", "ui_lib", "Enter", "characters", "build27", "cpython", "externals", "openssl", "crypto", "pkcs7", "pk7_attr", "build27", "cpython", "externals", "openssl", "crypto", "x509v3", "pcy_node", "build27", "cpython", "externals", "openssl", "crypto", "bn_sqrt", "OpenSSL", "default", "interface", "Verifying", "Verify", "failure", "build27", "cpython", "externals", "openssl", "crypto", "ui_openssl", "RSDSO", "build27", "cpython", "PCBuild", "_hashlib", "WriteFile", "MultiByteToWideChar", "GetStdHandle", "GetLastError", "GetProcAddress", "GetFileType", "GetModuleHandleA", "GetCurrentThreadId", "GetVersion", "GlobalMemoryStatus", "FreeLibrary", "QueryPerformanceCounter", "GetTickCount", "LoadLibraryA", "CloseHandle", "GetCurrentProcessId", "FlushConsoleInputBuffer", "KERNEL32", "GetUserObjectInformationW", "MessageBoxA", "GetProcessWindowStation", "ReleaseDC", "GetDC", "USER32", "GetObjectA", "CreateCompatibleBitmap", "DeleteObject", "GetDIBits", "GetDeviceCaps", "GDI32", "RegisterEventSourceA", "DeregisterEventSource", "ReportEventA", "ADVAPI32", "PyString_FromString", "_PyObject_New", "PyThread_free_lock", "PyBuffer_Release", "_PyArg_Parse_SizeT", "PyString_FromStringAndSize", "PyString_AsString", "PyThread_acquire_lock", "PyErr_NoMemory", "PySet_Add", "PyThread_allocate_lock", "PyType_Ready", "PyEval_RestoreThread", "PyExc_OverflowError", "_PyArg_ParseTuple_SizeT", "_Py_NoneStruct", "PyEval_SaveThread", "PyOS_snprintf", "PyExc_ValueError", "PyErr_Occurred", "PyObject_Free", "_PyArg_ParseTupleAndKeywords_SizeT", "PyErr_SetString", "PyLong_AsLong", "PyLong_FromLong", "PyFrozenSet_New", "PyType_Type", "PyErr_Format", "PyModule_AddObject", "PyExc_TypeError", "Py_InitModule4", "PyThread_release_lock", "python27", "strerror", "strchr", "strncpy", "qsort", "strcmp", "sscanf", "raise", "__iob_func", "_exit", "wcsstr", "_vsnprintf", "strtoul", "getenv", "malloc", "realloc", "isspace", "isalnum", "isdigit", "_localtime64", "_time64", "isxdigit", "fflush", "_wfopen", "_errno", "fgets", "fopen", "fread", "_fileno", "ferror", "fwrite", "_setmode", "ftell", "fseek", "fclose", "memmove", "_strnicmp", "strncmp", "memchr", "tolower", "isupper", "strtol", "strrchr", "_stricmp", "fprintf", "_gmtime64", "sprintf", "strstr", "fputs", "signal", "_getch", "_encode_pointer", "_malloc_crt", "_encoded_null", "_decode_pointer", "_initterm", "_initterm_e", "_amsg_exit", "_adjust_fdiv", "__CppXcptFilter", "MSVCR90", "_crt_debugger_hook", "__clean_type_info_names_internal", "_unlock", "__dllonexit", "_lock", "_onexit", "_except_handler4_common", "InterlockedExchange", "Sleep", "InterlockedCompareExchange", "TerminateProcess", "GetCurrentProcess", "UnhandledExceptionFilter", "SetUnhandledExceptionFilter", "IsDebuggerPresent", "DisableThreadLibraryCalls", "GetSystemTimeAsFileTime", "memcpy", "memset", "_hashlib", "init_hashlib", "Return", "object", "Return", "digest", "value", "string", "binary", "Return", "digest", "value", "string", "hexadecimal", "digits", "Update", "object", "state", "provided", "string", "represents", "object", "calculate", "checksum", "string", "information", "Methods", "update", "updates", "current", "digest", "additional", "string", "digest", "return", "current", "digest", "value", "hexdigest", "return", "current", "digest", "string", "hexadecimal", "digits", "return", "current", "object", "Attributes", "algorithm", "being", "object", "digest_size", "number", "bytes", "hashes", "output", "Return", "object", "using", "named", "algorithm", "optional", "string", "argument", "provided", "automatically", "hashed", "algorithms", "always", "supported", "pbkdf2_hmac", "hash_name", "password", "iterations", "dklen", "Password", "based", "derivation", "function", "pseudorandom", "function", "020M0", "2I2m2s2", "4&4V4", "4O5Y5", "636D6n6", "818B8H8O8V8", "9&9B9m9", "0!000", "21282K2", "3b3i3", "40454", "4U4Z4", "5J5o5w5", "6A6I6P6", "6p6z6", "7B8L8", "030n0", "424V4g4", "4a5p5v5", "7R7Z7h7s7", "9Q9_9j9t9", "!0N0S0e0", "121T1Z1a1", "4Q4V4", "4d4h4", "8j8r8", "9C9R9", "9c9t9", "393C3M3R3a3f3u3", "414C4M4W4a4k4", "5O5T5", "6$6F6U6", "6b6l6t6", "7&757", "979E9p9", "050D0d0q0", "5n5s5", "6E6O6W6b6t6", "8d8m8z8", "90959", "1D1J1N1T1Z1", "2E2N2W2", "2f2x2", "3&313F3O3a3", "424Q4d4i4", "6B6q6", "3P3j3", "466I6N6", "0E0d0", "4E4N4W4a4j4z4", "676M6", "797A7K7S7", "7k7s7z7", "3D3H3L3P3", "0!020H0L0P0T0k0x0", "2E2Y2g2w2", "3&363I3Q3X3k3", "4H4W4b4s4", "5l5z5", "6J6X6c6q6", "797V7z7", "8k8y8", "9X9e9s9", "232B2", "2d2q2", "3!3I3T3", "4C4R4n4t4", "5$515Y5d5", "6M6S6b6", "747A7i7t7", "8c8r8", "9D9Q9y9", "0$010Y0d0", "1M1S1b1", "242A2i2t2", "3c3r3", "4D4Q4", "5f5p6", "F0g0o0t0", "4!40484", "5K5m5s5", "6!626", "6D6L6W6j6r6y6", "252C2N2W2o2", "494A4F4P4X4", "4o4w4", "132q2", "4I5Q5V5", "5h5p5", "7L7_7d7", "8q8e9", "7!7&70787", "7O7W7", "909B9_9d9v9", "192U2", "354r4", "6H6n6", "797O7", "9a9q9", "0S1g1", "252M2", "4J4b4p4", "5&545Q5", "717f7l7z7", "8_8x8", "949D9W9", "0!0D0R0g0r0", "001C1H1", "222E2", "7O7c7h7", "0C0s0", "0O173U5", "6h6n6", "999N9z9", "0I1X1c1p1", "232L2a2", "3S3_3p3v3", "4P4d4", "5I5q5", "646J6", "7C8a8", "9A9e9", "0S0z0", "1J1z1", "3A3x3", "4H4s4", "636Z6", "7Z7q7", "8A8Q8a8q8", "889c9", "3$406C6H6", "0C0a0q0", "13191u1", "3!3&3", "3i5U6Q7a7j7o7", "9R9_9", "011A1J1O1", "2G2P2U2_2", "5!5E5e5", "0D0V0", "6e6n6", "7G7S7", "7f7s7", "8A8F8", "9q9w9", "414h4", "5Q5V5h5", "1!2U2", "424l4", "7D7I7r7", "3E4V4r4", "5E5W5f5", "9$969A9H9X9s9W", "30F0K0v0", "2W2q4z4", "5n5s5x5", "64696", "7V7m7v7", "7D8W8", "242D2W2p2", "2U3c3", "A1Q1Z1_1", "2F2i2u2z2", "5&5B5P5", "7o7t7", "162U2", "7D7e7P8", "989f9", "2c3k3", "505B5J5Q5d5", "8M8b8", "0$050", "0I0T0g0", "141K1P1", "2N2Z2", "333A3", "464P4", "5C5M5", "7!8h8v8", "050C0N0W0o0", "292V2", "4S5i5n5", "7&707D7", "383T3s3", "698q8", "465I5N5", "!080X0H1", "3!4_4", "7$747", "788G8_8k8", "1e1p1", "212L2S2", "3J3Q3b3i3", "5B5I5", "7X7_7", "7d8m8", "9I9P9v9", "R0g0l0", "11161", "1a1f1", "0$070", "1_1u1z1", "333k3", "555U5a5r5", "061_1", "5!5&5", "8H8s8", "9C9j9", "1!1F1", "2G3Y3", "94999C9K9S9b9j9q9", "0W1i1", "1J2T2", "797S7_7r7", "0O0W0", "0!222N2S2", "131I1N1", "2H2M2T2", "31363", "3a3f3", "6!6&6K6Q6V6s6", "9T9X9", "0C1y1", "4T5m5", "6B6I6", "2q2v2", "293V3", "5A5_5", "516i6p6", "7A7T7Y7", "152X2", "262M2g2", "142G2L2", "5d5h5l5p5t5", "7B7U7P8", "3a3w3", "4G4S4q4", "5E5V5", "7!777B7M7X7c7q7w7", "9B9l9", "0!0&0C0", "1a1s1", "2Q2b2r2", "3B3G3", "3A4Q4u4", "7C7U7", "4y435", "6P7W7", "114h4", "5!515h5", "6!6&60686C6U6", "6d6w6", "7T7i7n7", "3O3t3", "7R8r8", "333D3c3", "4a4q5", "6&6T6", "1f1y1", "2A2Q2", "525O5g5", "6C6j6", "1K1q1", "353H3V3a3w3", "3O4h4v4", "6A6o6", "8C8k8", "1V1y1", "8V8i8", "070S0m0", "3L3_3d3y3", "1N1a1f1", "344Q4d4i4", "495a5", "9B9g9t9z9", "3G4_4e4k4", "40585c5l5", "6B6t6z6", "8e8k8", "9k9q9", "676D6J6q6w6", "7!7O7c7l7", "838Z8", "0R0s0", "1g1n1", "3!3i3", "667U7", "3A3Z3", "5!595", "5E5n5", "6G6L6u6z6", "757r7", "7K8r8", "9E9J9", "021R1", "5054585", "5D5H5L5e5", "6A6d6", "939Z9", "4C5M5c5h5", "6!7V7", "0I0O0U0", "2!2W2", "3K3e3", "3!4X4", "4Q4a4z4", "7J7P7", "2m213", "6H6s6", "7C7j7", "S0c0s0", "484F4", "4j4u4", "5D5j5", "0Z0p0", "2T2j2o2", "293B3O3", "4H4M4", "2C3B4", "5J5y5", "9e9n9", "7L8P8T8X8h8", "4C4l4", "4k566", "9A9X9", "010A0", "314o4", "657r7", "8F9i9", "192h2", "1$2i2", "3!4e4", "415u5", "011x1", "5y6_7", "2N2m2", "506L6", "2M3f3o3", "5G6N6", "7D7K7Y7", "8$888F8", "9R9X9q9w9", "0F0O0W0", "171B1b1h1", "2J2_2q2w2", "323v3", "4E4d4", "6D6r6", "9J9z9", "7D7K7", "7x809_9", "11181", "2024282t2", "464H4L4", "h0!1W1", "5A6x6", "7!7X7", "1E1z1", "2N2S2", "2!3U3", "384J4O4c4x4", "727N7t7", "262I3P3O4", "7e8j8", "141n1", "3V3l3", "0!040B1", "2T2h2m2", "3k3r3", "4L4T4", "4k4y425", "828Q8", "272J2O2z2", "4d5z5", "9Q9r9", "0$0I0", "1F1L1g1", "2J2_2a3g3", "3N4S4Z4", "6$757F7U7", "8A8J8X8o8", "0Z0q0", "1A1x1", "2H2s2", "3C3j3", "6!6X6", "5I5r5", "6D6H6L6P6", "787U7", "80959", "0004080A0x0", "111A1x1", "112h2", "383c3", "434Z4", "535Z5", "6Z6q6", "7A7x7", "8H8s8", "2O2T2w2", "3F3Q3b3i3p3", "p0t0x0", "181c1", "232Z2", "4E4q427", "5L8a8f8", "O0a0t0y0", "3W3f3", "757W7n7s8", "2&3w3", "1T1Y1", "081m1", "1j1r122", "4a4t4", "727N7", "5!585", "5F5S5", "5$6I6U6g7", "1h1l1p1t1x1", "717K7w7b8k8r8", "3R4g4z4", "5J5i5", "7A7Y7a7f7p7x7", "8T8Y8", "1J1c1", "1F1P1Z1q1", "2B2R2_2n2", "7L8v8", "4E4O4Y4c4m4w4", "8!8&8l8", "1e1o1w1", "4B4G4", "5M5U5", "606a6", "7V8i8x8", "9Q9j9", "020a0", "181a1f1v1", "2C2J2", "3!3F3N3q3", "879o97", "9t9x9", "1W2D3", "4N4_4G5", "697L7Q7", "9R9Z9a9t9", "0N0V0", "1e1v1", "2K2h2", "4J4X4", "6C6V6", "7J7x7", "868A8T8", "020A0W0", "1!131", "1A1V1a1", "1T2j2o2", "5&6W6", "5Q5V5", "0C0i0", "3M3!4", "4C4T4", "0i0w0", "3I3V3e3o3", "5L5l5x5", "607R7", "7A7L7S7f7", "607m7", "6L6T6", "7B7G7Y7r7w7", "748B8S8i8n8", "9L9T9", "11191", "2C2K2P2Z2b2m2", "3d3k3t3", "6A7Q7Z7_7", "7Q8g8l8", "0d0i0s0", "1o1t1", "5P6W6", "0d0k0", "0J1X1d1o1", "2E2L2U2", "3B3U3g3w3", "4G4V4", "00060", "0B0H0N0T0Z0", "0f0l0r0x0", "10161", "1D1K1R1Y1", "1g1o1w1", "222F2", "5S5v5", "60666", "6B6R627N7W9", "X2d2h2", "7h7p7", "0H0L0", "1L1P1T1d1", "2$242P2T2X2h2", "3$383T3X3l3", "606D6", "6d6x6", "8084888", "8D8H8L8P8", "8d8h8l8p8t8x8", "0$000", "0H0T0", "0l0x0", "181D1P1", "1h1t1", "2D2T2X2h2l2x2", "383D3T3d3h3x3", "4P4T4", "50545", "6L6P6", "7H7X7", "8p8t8", "9$909", "9P9T9d9h9x9", "0$04080D0T0d0h0x0", "1H1P1X1l1", "2T2h2l2", "3D3P3", "3p3t3x3", "4D4H4L4P4T4X4", "4d4h4l4p4t4x4", "50585L5", "5d5l5", "686X6", "6t6x6", "7$7D7h7", "808D8H8h8", "0P0t0", "101T1h1", "20242", "2H2L2T2X2", "2d2l2p2", "3D3P3", "484L4p4", "585H5", "7074787", "7D7H7L7P7T7X7", "7d7h7l7p7t7x7", "8$84888H8L8", "8p8t8", "9P9d9h9x9", "0004080", "0D0H0L0P0T0X0", "0d0h0l0t0x0", "2L2P2", "3$34383H3L3", "3p3t3", "5$54585H5L5X5h5t5", "6P6T6", "7D7T7X7d7t7", "8$84888H8L8", "8p8t8", "9P9T9d9h9x9", "0L0P0", "1P1T1", "1h1p1", "2L2P2", "303D3H3X3", "3h3x3", "9L9P9", "0D0L0T0", "0d0l0t0", "1D1L1T1", "1d1l1t1", "2D2L2T2", "2d2l2t2", "3D3L3T3", "3d3l3t3", "4D4L4T4", "4d4l4t4", "000H0P0", "1$1014181H1d1h1", "2h2l2p2", "3H3L3P3", "4L4P4", "606h6l6p6", "707D7X7l7", "40444", "4H4L4X4", "4d4p4x4", "5$50585", "5H5P5T5", "5h5l5x5", "6D6P6X6", "6h6p6t6", "70747H7L7", "7d7p7x7", "8$80888", "8H8P8T8", "8h8l8x8", "9D9X9", "9p9t9", "00040", "0H0L0X0", "0d0p0x0", "1$10181", "1H1P1T1", "1h1l1x1", "2D2P2X2", "2h2p2t2", "30343", "3H3L3X3", "3d3p3x3", "4$40484", "4H4P4T4", "4h4l4x4", "5D5P5X5", "5h5p5t5", "60646", "6H6L6X6", "6d6p6x6", "7$70787", "7H7P7T7", "7h7l7x7", "8D8P8X8", "8h8p8t8", "90949", "9H9L9X9", "9d9p9x9", "0$00080", "0H0P0T0", "0h0l0x0", "1D1P1X1", "1h1p1t1", "20242", "2H2L2X2", "2d2p2x2", "3$30383", "3H3P3T3", "3h3l3x3", "4D4P4p4t4", "50545", "5H5L5X5", "5d5p5x5", "6$60686", "6H6P6T6", "6h6l6x6", "7D7P7X7", "7h7p7t7", "80848", "8H8L8X8", "8d8x8", "9$90989", "9H9P9T9", "9h9l9", "0D0P0X0", "0h0p0t0", "10141", "1H1L1X1", "1d1p1x1", "2$20282", "2H2P2T2", "2h2l2x2", "3D3P3X3", "40444", "4H4L4X4", "4d4p4x4", "5$50585", "5H5P5T5", "5h5l5x5", "6D6P6X6", "6h6p6t6", "70747", "7H7L7X7", "7d7p7x7", "8$80888", "8H8P8T8", "8h8l8x8", "9D9P9X9", "9h9p9t9", "00040", "0H0L0X0", "0d0p0x0", "1$181", "1P1T1h1l1x1", "2D2P2X2", "2h2p2t2", "30343", "3H3L3X3", "3d3p3x3", "4$40484", "4H4P4T4", "4h4l4x4", "5D5P5X5", "5h5p5t5", "60646", "6H6L6X6", "6d6p6x6", "7$70787", "7H7P7T7", "7h7l7x7", "8D8P8X8", "8h8p8t8", "90949", "9H9L9X9", "9d9p9x9", "0$00080", "0H0P0T0", "0h0l0x0", "1D1P1X1", "1h1p1t1", "20242", "2H2L2X2", "2d2p2x2", "3$30383", "3H3P3T3", "3h3l3x3", "4D4P4X4", "4h4p4t4", "50545", "5H5L5X5", "5d5p5x5", "6$60686", "6H6P6T6", "6h6l6x6", "7D7P7X7", "7p7t7", "80848", "8H8L8", "8d8x8", "9$989", "9P9T9h9l9", "9094989", "9D9H9L9P9T9X9", "9d9h9l9p9t9x9", "5H5d5h5", "0P0T0h0l0", "1014181", "1D1L1P1T1X1", "1d1h1l1t1x1", "60646", "6D6H6L6T6X6", "6d6h6l6p6", "7D7H7", "7d7x7", "84888", "8D8L8P8X8", "8d8h8p8t8", "90949", "9H9L9T9X9", "9d9l9p9", "0$040", "0L0T0", "0d0l0t0", "1D1L1T1", "1d1l1t1", "2L2T2", "2d2l2t2", "3D3L3T3", "3d3l3t3", "4D4L4T4", "4l4t4", "5D5L5T5", "5d5l5t5", "6D6L6T6", "6d6l6t6", "7D7L7T7", "7d7l7t7", "8D8L8", "8d8l8t8", "9D9L9T9", "9d9l9t9", "0D0L0", "0d0l0t0", "1D1L1T1", "1d1l1t1", "2D2L2T2", "2d2l2t2", "3D3L3T3", "3d3t3", "4D4L4T4", "4d4l4t4", "5D5L5T5", "5d5l5t5", "6D6L6T6", "6d6l6t6", "7D7L7T7", "7d7l7t7", "8D8L8T8", "8d8l8t8", "9D9L9T9", "9d9l9t9", "0D0L0T0", "0d0l0t0", "1D1L1T1", "1d1l1t1", "2D2L2T2", "2d2l2t2", "3D3L3T3", "3d3l3t3", "4D4L4T4", "4d4l4t4", "5D5L5T5", "5d5l5t5", "6D6L6T6", "6d6l6t6", "7D7L7T7", "7d7l7t7", "8D8L8T8", "8d8l8t8", "9D9L9T9d9l9t9", "0D0L0T0", "0d0l0t0", "1D1T1", "1d1l1t1", "2D2L2T2", "2d2l2t2", "3D3L3T3", "3d3l3t3", "4D4L4T4", "4d4l4t4", "5D5L5T5", "5d5l5t5", "6D6L6T6", "6d6l6t6", "7D7L7T7", "7d7l7t7", "8D8L8T8", "8d8l8t8", "9$949", "9D9T9", "9d9l9", "0$0P0l0p0t0x1", "2024282", "2H2L2T2X2", "2d2h2l2t2x2", "pydMZ", "!This", "program", "cannot", "KRich9", "rdata", "reloc", "T$8R3", "F49D$", "L$XQh", "PQRVh0", "tO9X8uF", "tO9X8uF", "VDPQRh", "$WQRPh", "PBRhD", "RPQSh", "C$VtTi", "uCWVS", "BZ2Decompressor", "decompress", "unused_data", "BZ2Compressor", "flush", "compress", "BZ2File", "compresslevel", "buffering", "filename", "indicating", "space", "needs", "printed", "print", "softspace", "convention", "newlines", "closed", "closed", "__exit__", "__enter__", "writelines", "write", "xreadlines", "readlines", "readline", "Mixing", "iteration", "methods", "would", "library", "compiled", "correctly", "library", "received", "wrong", "parameters", "invalid", "stream", "unknown", "error", "compressed", "ended", "before", "logical", "stream", "detected", "wrong", "sequence", "library", "commands", "Unable", "allocate", "buffer", "output", "large", "longer", "Python", "string", "operation", "closed", "ready", "reading", "requested", "number", "bytes", "Python", "string", "readline", "readlines", "write", "ready", "writing", "writelines", "requires", "iterable", "argument", "writelines", "argument", "sequence", "strings", "works", "while", "reading", "close", "Unknown", "newlines", "value", "BZ2File", "compresslevel", "between", "invalid", "unable", "allocate", "compress", "object", "already", "flushed", "object", "already", "flushed", "BZ2Compressor", "decompress", "stream", "already", "found", "BZ2Decompressor", "couldn", "stream", "__author__", "BZ2File", "BZ2Compressor", "BZ2Decompressor", "bucket", "sorting", "depth", "unresolved", "strings", "reconstructing", "block", "initialise", "qsort", "pointers", "sorted", "scanned", "block", "ratio", "repetitive", "using", "fallback", "sorting", "algorithm", "CONFIG_ERROR", "OUTBUFF_FULL", "UNEXPECTED_EOF", "IO_ERROR", "DATA_ERROR_MAGIC", "DATA_ERROR", "MEM_ERROR", "PARAM_ERROR", "SEQUENCE_ERROR", "bzip2", "libbzip2", "internal", "error", "number", "bzip2", "libbzip2", "Please", "report", "jseward", "happened", "using", "program", "which", "libbzip2", "component", "should", "report", "author", "program", "Please", "effort", "report", "timely", "accurate", "reports", "eventually", "higher", "quality", "software", "Thanks", "Julian", "Seward", "December", "special", "about", "internal", "error", "number", "Experience", "suggests", "common", "cause", "unreliable", "memory", "other", "hardware", "assertion", "happens", "cross", "check", "results", "numbers", "memory", "reads", "writes", "unintendedly", "stress", "memory", "system", "suggest", "following", "compressing", "again", "possibly", "monitoring", "progress", "detail", "error", "cannot", "reproduced", "happens", "different", "points", "compression", "flaky", "memory", "system", "memory", "program", "Memtest86", "memtest86", "writing", "Memtest86", "tests", "memory", "thorougly", "BIOSs", "power", "failures", "doesn", "error", "repeatably", "reproduced", "bzip2", "would", "about", "Please", "ideally", "causing", "problem", "without", "which", "unable", "investigate", "combined", "stored", "computed", "block", "after", "coding", "initial", "group", "bytes", "mapping", "selectors", "lengths", "codes", "block", "combined", "final", "combined", "build27", "cpython", "PCBuild", "PyString_FromString", "PyThread_free_lock", "PyExc_IOError", "PyString_Concat", "PyInt_FromLong", "PyExc_SystemError", "PyBuffer_Release", "Py_BuildValue", "PyString_FromStringAndSize", "PyInt_AsLong", "PyObject_GenericGetAttr", "PyObject_GenericSetAttr", "PyThread_acquire_lock", "PyErr_NoMemory", "PyThread_allocate_lock", "PyType_Ready", "PyObject_CallFunction", "PyList_GetSlice", "PyEval_RestoreThread", "PyList_SetItem", "PyIter_Next", "PyLong_FromLongLong", "PyExc_OverflowError", "PyFile_IncUseCount", "_Py_NoneStruct", "PyMem_Free", "PyEval_SaveThread", "PyArg_ParseTuple", "PyExc_MemoryError", "PyExc_ValueError", "PyErr_Occurred", "PyExc_EOFError", "PyObject_GetIter", "PyObject_Free", "PyErr_SetString", "PyObject_CallMethod", "PyType_GenericAlloc", "PyArg_ParseTupleAndKeywords", "PyFile_Type", "PyFile_DecUseCount", "PyObject_AsCharBuffer", "PyLong_AsLongLong", "_PyString_Resize", "PyList_New", "PyType_GenericNew", "PyExc_RuntimeError", "PyMem_Malloc", "PyErr_Format", "PyModule_AddObject", "PyExc_TypeError", "PyFile_AsFile", "PyObject_GetAttrString", "Py_InitModule4", "PyThread_release_lock", "PyList_Append", "python27", "memmove", "memchr", "__iob_func", "fprintf", "malloc", "ungetc", "fflush", "fgetc", "fopen", "fread", "isdigit", "ferror", "fwrite", "fclose", "MSVCR90", "_encode_pointer", "_malloc_crt", "_encoded_null", "_decode_pointer", "_initterm", "_initterm_e", "_amsg_exit", "_adjust_fdiv", "__CppXcptFilter", "_crt_debugger_hook", "__clean_type_info_names_internal", "_unlock", "__dllonexit", "_lock", "_onexit", "_except_handler4_common", "InterlockedExchange", "Sleep", "InterlockedCompareExchange", "TerminateProcess", "GetCurrentProcess", "UnhandledExceptionFilter", "SetUnhandledExceptionFilter", "IsDebuggerPresent", "DisableThreadLibraryCalls", "QueryPerformanceCounter", "GetTickCount", "GetCurrentThreadId", "GetCurrentProcessId", "GetSystemTimeAsFileTime", "KERNEL32", "_fileno", "_fdopen", "_setmode", "memset", "memcpy", "initbz2", "python", "module", "written", "Gustavo", "Niemeyer", "niemeyer", "conectiva", "string", "uncompressed", "bytes", "returned", "string", "argument", "negative", "omitted", "until", "reached", "readline", "string", "Return", "string", "retaining", "newline", "negative", "argument", "limit", "maximum", "number", "bytes", "return", "incomplete", "returned", "Return", "empty", "string", "readlines", "readline", "repeatedly", "return", "lines", "optional", "argument", "given", "approximate", "bound", "total", "number", "bytes", "lines", "returned", "xreadlines", "backward", "compatibility", "BZ2File", "objects", "include", "performance", "optimizations", "previously", "implemented", "xreadlines", "module", "write", "Write", "string", "buffering", "close", "needed", "before", "reflects", "written", "writelines", "sequence_of_strings", "Write", "sequence", "strings", "newlines", "added", "sequence", "iterable", "object", "producing", "strings", "equivalent", "calling", "write", "string", "offset", "whence", "position", "Argument", "offset", "count", "Optional", "argument", "whence", "defaults", "offset", "start", "offset", "should", "other", "values", "relative", "current", "position", "positive", "negative", "relative", "usually", "negative", "although", "platforms", "allow", "seeking", "beyond", "seeking", "files", "emulated", "depending", "parameters", "operation", "extremely", "Return", "current", "position", "integer", "integer", "close", "perhaps", "integer", "Close", "attribute", "closed", "closed", "cannot", "further", "operations", "close", "called", "without", "error", "__enter__", "__exit__", "excinfo", "Closes", "BZ2File", "buffering", "compresslevel", "object", "reading", "default", "writing", "opened", "writing", "created", "doesn", "exist", "truncated", "otherwise", "buffering", "argument", "given", "means", "unbuffered", "larger", "numbers", "specify", "buffer", "compresslevel", "given", "number", "between", "input", "universal", "newline", "support", "ending", "input", "Python", "opened", "gains", "attribute", "newlines", "value", "attribute", "newline", "tuple", "containing", "newline", "types", "Universal", "newlines", "available", "reading", "compress", "string", "Provide", "compressor", "object", "return", "chunks", "compressed", "whenever", "possible", "finished", "providing", "compress", "flush", "method", "finish", "compression", "process", "return", "internal", "buffers", "flush", "string", "Finish", "compression", "process", "return", "internal", "buffers", "compressor", "object", "after", "calling", "method", "BZ2Compressor", "compresslevel", "compressor", "object", "Create", "compressor", "object", "object", "compress", "sequentially", "compress", "compress", "function", "instead", "compresslevel", "parameter", "given", "number", "between", "decompress", "string", "Provide", "decompressor", "object", "return", "chunks", "decompressed", "whenever", "possible", "decompress", "after", "stream", "found", "EOFError", "raised", "found", "after", "stream", "ignored", "saved", "unused_data", "attribute", "BZ2Decompressor", "decompressor", "object", "Create", "decompressor", "object", "object", "decompress", "sequentially", "decompress", "decompress", "function", "instead", "compress", "compresslevel", "string", "Compress", "compress", "sequentially", "instance", "BZ2Compressor", "instead", "compresslevel", "parameter", "given", "number", "between", "decompress", "decompressed", "Decompress", "decompress", "sequentially", "instance", "BZ2Decompressor", "instead", "python", "module", "provides", "comprehensive", "interface", "compression", "library", "implements", "complete", "interface", "compression", "functions", "types", "sequential", "compression", "0Q0V0", "0d0s0z0", "101f1p1w1", "565T5", "7P7o7v7", "8G8X8", "9C9U9o9", "0Z0_0", "20272D2U2", "2h2m2v2", "3P3X3j3x3", "5V5u5", "8U8f8", "&060P0U0", "3E3m3", "4B4I4d4x4", "5$51565x5", "6I6P6_6f6m6", "6F7q7", "828G8Q8", "9M9Y9", "0A0F0K0Q0", "0f0l0r0", "1j1p1z1", "2f2p2", "1C2V2", "7L7P7T7X7", "8L9n9", "495C5I5S5", "5U6j6p6z6", "b4h4r4", "6E7K7U7", "W4a4g4q4", "5g8q8w8", "0L0Q0a0f0l0r0", "1$1a1f1", "1h2m2", "323C3O3", "4_4g4r4x4", "3D3H3", "54585", "5D5H5L5T5X5", "5d5h5l5t5x5", "64686", "select", "pydMZ", "!This", "program", "cannot", "zRich", "rdata", "reloc", "uCWVS", "arguments", "sequences", "descriptors", "select", "select", "timeout", "float", "timeout", "period", "select", "error", "error", "build27", "cpython", "PCBuild", "select", "WS2_32", "PyEval_RestoreThread", "PyList_SetItem", "PySequence_Fast", "PyExc_OverflowError", "_Py_NoneStruct", "PyEval_SaveThread", "PyExc_ValueError", "PyErr_Occurred", "PyErr_SetString", "PyErr_NewException", "PyTuple_Pack", "PyFloat_AsDouble", "PyNumber_Check", "PyObject_AsFileDescriptor", "PyList_New", "PyErr_SetExcFromWindowsErr", "PyModule_AddObject", "PyExc_TypeError", "Py_InitModule4", "PyArg_UnpackTuple", "python27", "_encode_pointer", "_malloc_crt", "_encoded_null", "_decode_pointer", "_initterm", "_initterm_e", "_amsg_exit", "_adjust_fdiv", "__CppXcptFilter", "_crt_debugger_hook", "__clean_type_info_names_internal", "_unlock", "__dllonexit", "_lock", "_onexit", "MSVCR90", "_except_handler4_common", "InterlockedExchange", "Sleep", "InterlockedCompareExchange", "TerminateProcess", "GetCurrentProcess", "UnhandledExceptionFilter", "SetUnhandledExceptionFilter", "IsDebuggerPresent", "DisableThreadLibraryCalls", "QueryPerformanceCounter", "GetTickCount", "GetCurrentThreadId", "GetCurrentProcessId", "GetSystemTimeAsFileTime", "KERNEL32", "select", "initselect", "select", "rlist", "wlist", "xlist", "timeout", "rlist", "wlist", "xlist", "until", "descriptors", "ready", "first", "three", "arguments", "sequences", "descriptors", "waited", "rlist", "until", "ready", "reading", "wlist", "until", "ready", "writing", "xlist", "exceptional", "condition", "condition", "required", "other", "lists", "descriptor", "either", "socket", "object", "small", "integer", "gotten", "fileno", "method", "those", "optional", "argument", "specifies", "timeout", "seconds", "floating", "point", "number", "specify", "fractions", "seconds", "absent", "never", "return", "value", "tuple", "three", "lists", "corresponding", "first", "three", "arguments", "contains", "subset", "corresponding", "descriptors", "ready", "IMPORTANT", "NOTICE", "Windows", "OpenVMS", "sockets", "supported", "descriptors", "module", "supports", "asynchronous", "multiple", "descriptors", "IMPORTANT", "NOTICE", "Windows", "OpenVMS", "sockets", "supported", "descriptors", "1Q2x2", "5C5I5", "5a5i5o5u5", "6G6e6m6w6", "7Q7W7x7", "8H8O8T8Y8", "1$14282", "unicodedata", "pydMZ", "!This", "program", "cannot", "rdata", "reloc", "QRhtO", "uCWVS", "unicodedata", "normalize", "lookup", "decomposition", "east_asian_width", "mirrored", "combining", "bidirectional", "category", "numeric", "digit", "decimal", "unidata_version", "narrow", "small", "medial", "initial", "final", "isolated", "square", "vertical", "circle", "fraction", "super", "compat", "noBreak", "single", "Unicode", "character", "parameter", "decimal", "decimal", "digit", "digit", "numeric", "numeric", "character", "category", "bidirectional", "combining", "mirrored", "east_asian_width", "decomposition", "normalize", "invalid", "normalization", "HANGUL", "SYLLABLE", "UNIFIED", "IDEOGRAPH", "UNIFIED", "IDEOGRAPH", "lookup", "undefined", "character", "unicodedata", "ucd_3_2_0", "unicodedata", "ucnhash_CAPI", "ucnhash_CAPI", "build27", "cpython", "PCBuild", "unicodedata", "PyString_FromString", "PyUnicodeUCS2_FromUnicode", "PyFloat_FromDouble", "_PyObject_New", "_PyUnicodeUCS2_ToDecimalDigit", "PyInt_FromLong", "Py_BuildValue", "PyObject_GenericGetAttr", "PyCapsule_New", "PyUnicode_Type", "PyExc_KeyError", "_PyUnicodeUCS2_ToDigit", "PyArg_ParseTuple", "PyOS_snprintf", "PyExc_ValueError", "PyObject_Free", "PyUnicodeUCS2_GetSize", "PyErr_SetString", "PyUnicodeUCS2_Resize", "_PyUnicodeUCS2_ToNumeric", "_Py_ctype_toupper", "PyType_Type", "PyModule_AddStringConstant", "PyErr_Format", "PyModule_AddObject", "PyExc_TypeError", "Py_InitModule4", "python27", "sprintf", "strncmp", "MSVCR90", "_encode_pointer", "_malloc_crt", "_encoded_null", "_decode_pointer", "_initterm", "_initterm_e", "_amsg_exit", "_adjust_fdiv", "__CppXcptFilter", "_crt_debugger_hook", "__clean_type_info_names_internal", "_unlock", "__dllonexit", "_lock", "_onexit", "_except_handler4_common", "InterlockedExchange", "Sleep", "InterlockedCompareExchange", "TerminateProcess", "GetCurrentProcess", "UnhandledExceptionFilter", "SetUnhandledExceptionFilter", "IsDebuggerPresent", "DisableThreadLibraryCalls", "QueryPerformanceCounter", "GetTickCount", "GetCurrentThreadId", "GetCurrentProcessId", "GetSystemTimeAsFileTime", "KERNEL32", "memcpy", "unicodedata", "initunicodedata", "0123456789", "ABCDEFGHIJKLMNNOPQRS", "TUVWXYZ", "abcdddddddddddddddddddddddddddddddddddddddddddddddddddedddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddfgddddddddh", "ijklmnopqr", "stttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttuvvvvvvvvvvvvvvvvwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwxxyz", "ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd", "dddddddddddddddddddddddddddddddd", "wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww", "wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww", "!2!5!8!", "!A!D!G!J!M!P!S!V!Y!", "!_!b!e!h!k!n!q!t!w!z!", "$2$6$", "$B$F$J$N$R$V$Z$", "$b$f$j$n$r$v$z$", "&$&&&", "&0&2&4&6&8&", "&B&D&F&H&J&L&N&P&R&T&V&X&Z&", "&b&d&f&h&j&l&n&p&r&t&v&x&z&", "0$0&0", "00020406080", "0B0D0F0H0J0L0N0P0R0T0V0X0Z0", "0b0d0f0h0j0l0n0p0r0t0v0x0z0", "111315181", "E1H1K1N1Q1", "1_1a1c1e1g1i1k1m1o1q1s1u1w1y1", "21232527292", "2A2C2E2G2I2K2M2O2Q2S2U2W2Y2", "2_2a2c2e2g2i2k2m2o2q2s2u2w2y2", "31333537393", "3A3C3E3G3I3K3M3O3Q3S3U3W3Y3", "3_3a3c3e3g3i3k3m3o3q3s3u3w3y3", "41434547494", "4A4C4E4G4I4K4M4O4Q4S4U4W4Y4", "4_4a4c4e4g4i4k4m4o4q4s4u4w4y4", "51535557595", "5A5C5E5G5I5K5M5O5Q5S5U5W5Y5", "5_5a5c5e5g5i5k5m5o5q5s5u5w5y5", "34567", "ABCDE", "FGHIJKLMN", "abcdef", "ijklm", "pqrstu", "vwxyz", "000000", "00000000", "00000000000000000000000000000000", "decimal", "unichr", "default", "Returns", "decimal", "value", "assigned", "Unicode", "character", "unichr", "integer", "value", "defined", "default", "returned", "given", "ValueError", "raised", "digit", "unichr", "default", "Returns", "digit", "value", "assigned", "Unicode", "character", "unichr", "integer", "value", "defined", "default", "returned", "given", "ValueError", "raised", "numeric", "unichr", "default", "Returns", "numeric", "value", "assigned", "Unicode", "character", "unichr", "float", "value", "defined", "default", "returned", "given", "ValueError", "raised", "category", "unichr", "Returns", "general", "category", "assigned", "Unicode", "character", "unichr", "string", "bidirectional", "unichr", "Returns", "bidirectional", "class", "assigned", "Unicode", "character", "unichr", "string", "value", "defined", "empty", "string", "returned", "combining", "unichr", "Returns", "canonical", "combining", "class", "assigned", "Unicode", "character", "unichr", "integer", "Returns", "combining", "class", "defined", "mirrored", "unichr", "Returns", "mirrored", "property", "assigned", "Unicode", "character", "unichr", "integer", "Returns", "character", "identified", "mirrored", "character", "bidirectional", "otherwise", "east_asian_width", "unichr", "Returns", "asian", "width", "assigned", "Unicode", "character", "unichr", "string", "decomposition", "unichr", "Returns", "character", "decomposition", "mapping", "assigned", "Unicode", "character", "unichr", "string", "empty", "string", "returned", "mapping", "defined", "normalize", "unistr", "Return", "normal", "Unicode", "string", "unistr", "Valid", "values", "LETTE", "SYLLABL", "CAPITA", "EGYPTIA", "HIEROGLYP", "ARABI", "COMPATIBILIT", "MATHEMATICA", "CUNEIFOR", "SYMBO", "CANADIA", "SYLLABIC", "HANGU", "LIGATUR", "MUSICA", "ETHIOPI", "ITALI", "CYRILLI", "RADICA", "CIRCLE", "COMBININ", "SQUAR", "VARIATIO", "BRAILL", "PATTER", "BYZANTIN", "ISOLATE", "ABOVE", "DOUBL", "KATAKAN", "KANGX", "NUMBE", "BELOW", "LINEA", "MODIFIE", "TIBETA", "MYANMA", "CARRIE", "ARROW", "INITIA", "VERTICA", "COPTI", "MONGOLIA", "DEVANAGAR", "PARENTHESIZE", "JONGSEON", "HEBRE", "DRAWING", "RIGHTWARD", "CHOSEON", "STROKE", "HALFWIDT", "BALINES", "GEORGIA", "IDEOGRA", "IDEOGRAPHI", "SYMBOL", "SCRIP", "FULLWIDT", "BRACKET", "DOMIN", "NUMERI", "FRAKTU", "JUNGSEON", "MALAYALA", "GLAGOLITI", "CHARACTE", "LEFTWARD", "MEDIA", "TELUG", "BENGAL", "ARMENIA", "JAVANES", "HIRAGAN", "IDEOGRAP", "KANNAD", "CHEROKE", "GUJARAT", "SAURASHTR", "TETRAGRA", "THREE", "DESERE", "SINHAL", "GURMUKH", "NOTATIO", "SYRIA", "VOCALI", "ACUTE", "LEPCH", "TURKI", "DOUBLE", "STRUC", "FUNCTIONA", "TELEGRAP", "EIGHT", "HORIZONTA", "SEVEN", "KAITH", "MAKSUR", "BOPOMOF", "KHAROSHTH", "SQUARE", "HEXAGRA", "REVERSE", "MONOSPAC", "SAMARITA", "STROK", "TURNE", "ZZYRX", "ZZURX", "ZZIEX", "ZZIET", "ZZIEP", "ZYGOS", "ZWARAKAY", "ZUBUR", "ZQAPH", "ZIQAA", "ZINOR", "ZILDE", "ZIGZA", "ZHYRX", "ZHURX", "ZHUOX", "ZHUOP", "ZHIVETE", "ZHAIN", "ZEMLYA", "ZEMLJA", "ZAYIN", "ZAVIYANI", "ZARQA", "Z016H", "Z016G", "Z016F", "Z016E", "Z016D", "Z016C", "Z016B", "Z016A", "Z015I", "Z015H", "Z015G", "Z015F", "Z015E", "Z015D", "Z015C", "Z015B", "Z015A", "Z005A", "Z004A", "Z003B", "Z003A", "Z002D", "Z002C", "Z002B", "Z002A", "YUUKALEAPINTU", "YPSILI", "YPORROI", "YPOKRISIS", "YPOKRISI", "YPOGEGRAMMENI", "YOUTHFULNESS", "YOUTHFU", "YIZET", "YIDDIS", "YFESIS", "YFESI", "YETIV", "YESTU", "YESIEUNG", "YESIEUNG", "PANSIOS", "YESIEUNG", "MIEUM", "YESIEUNG", "HIEUH", "YESIEUNG", "YEORINHIEUH", "YENISE", "YENAP", "YELLOW", "YAYANNA", "YAMOK", "YAMAKKAN", "YAKHH", "YAKASH", "YAJURVEDI", "YAGHH", "YADDH", "YAARU", "YAADO", "Y001A", "XSHAAYATHIYA", "XESTE", "X008A", "X006A", "X004B", "X004A", "WRONG", "WRITIN", "WREAT", "WORDSPACE", "WOODS", "WOMAN", "WOLOSO", "WITHOU", "WINTER", "WINJA", "WINDU", "WIGNYAN", "WIGGL", "HEADE", "WIANGWAAK", "WIANG", "WHITE", "FEATHERE", "WHITE", "WHEELE", "WHEELCHAI", "WHEEL", "WHEAT", "WESTER", "WEIGH", "WEDGE", "TAILE", "WEAPON", "WATTO", "WATER", "WATCH", "WASTING", "WASSALLAM", "WASLA", "WASALLAM", "WASALLA", "WARNIN", "WANDERER", "WAITING", "WAAVU", "W024A", "W018A", "W017A", "W014A", "W010A", "W009A", "W003A", "VZMET", "VULGA", "VRACHY", "VOWEL", "CARRIE", "VOLUM", "VOLTAG", "VOICING", "VOICELES", "VOICE", "VISIGOTHI", "VISARGAYA", "VISARGA", "VISARG", "VIRIAM", "VIRGO", "VIRGA", "VIRAMA", "VILLAGE", "VIEWDAT", "VICTOR", "VESTA", "VESSE", "VERTICALLY", "VERTICALL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERTICAL", "VERSICLE", "VERGE", "VECTO", "VAYANNA", "VATHY", "VASTNES", "VASIS", "VARIKA", "VARIAN", "VARIA", "VAREIA", "VAREI", "VAMAGOMUKHA", "VAMAGOMUKH", "VALLEY", "VAAVU", "V040A", "V037A", "V033A", "V031A", "V030A", "V029A", "V028A", "V023A", "V020L", "V020K", "V020J", "V020I", "V020H", "V020G", "V020F", "V020E", "V020D", "V020C", "V020B", "V020A", "V012B", "V012A", "V011C", "V011B", "V011A", "V007B", "V007A", "V002A", "V001I", "V001H", "V001G", "V001F", "V001E", "V001D", "V001C", "V001B", "V001A", "UYANNA", "UUYANNA", "UTUKI", "USSU3", "USHUMX", "URUDA", "URANUS", "UPWARDS", "UPWARD", "UPWARD", "UPWAR", "UPTURN", "UPSILON", "UPSILO", "UPRIGH", "UPADHMANIYA", "POINTIN", "UNMARRIE", "UNIVERSA", "UNITY", "UNION", "UNIFIE", "UNDERTIE", "UNDERLIN", "UNDERDOT", "UNDERBAR", "UNASPIRATED", "UMBRELLA", "UMBRELL", "UMBIN", "UKRAINIA", "UKARA", "UILLEANN", "UIGHU", "UGARITI", "UDATTA", "UDATT", "UDAAT", "UBUFILI", "UBHAYAT", "UBADAMA", "U032A", "U029A", "U023A", "U006B", "U006A", "HEADE", "TWENTY", "TWENTY", "THREE", "TWENTY", "TWENTY", "SEVEN", "TWENTY", "TWENTY", "TWENTY", "TWENTY", "TWENTY", "EIGHT", "TWENTY", "EIGHT", "TWENTY", "TWENT", "TWELVE", "TWELV", "TVRIDO", "TVIMADU", "TUUMU", "TUTEYASAT", "TURTLE", "TURO2", "TURNSTILE", "TURBAN", "TUNNY", "TUMETES", "TUKWENTIS", "TUGRI", "TUARE", "TTUDDAG", "TTUDDAAG", "TTTHA", "TTSEE", "TTHWE", "TTHOO", "TTHAA", "TTEHEH", "TTEHE", "TTAYANNA", "TSHUGS", "TSHOOK", "TSHOO", "TSHES", "TSHEG", "TSERE", "TSADI", "TSAADIY", "TRYBLIO", "TRUTH", "TRUNK", "TRUNCATE", "TRUCK", "TROMIKOSYNAGMA", "TROMIKOPSIFISTON", "TROMIKOPARAKALESMA", "TROMIKON", "TROMIKO", "TROMIKOLYGISMA", "TROKUTAST", "TROEZENIA", "TRITO", "TRITIMORION", "TRISIMOU", "TRISEME", "TRIPOD", "TRIPLI", "TRIPL", "TRIISAP", "TRIGRAMMO", "TRIGRA", "TRIGORGON", "TRIFONIAS", "TRIFOLIAT", "TRICOLON", "TRIANGULA", "TRIANGLE", "TRIANGLE", "HEADE", "TRIANGLE", "TRIANGL", "TRESILLO", "TREMOLO", "TREMOLO", "TREMOLO", "TREADING", "TRAPEZIUM", "TRANSVERSA", "TRANSPOSITIO", "TRANSMISSION", "TRANSMISSIO", "TRAFFIC", "TRACK", "TOURNOI", "TORTOIS", "TORCULUS", "TORCULU", "TOPBAR", "LIGHTE", "TOOTH", "TONOS", "TONGUE", "TOLONG", "TOGETHER", "TOANDAKHIAT", "TLHWE", "TLHOO", "TLHEE", "TITLO", "TIRYAK", "TIRONIA", "TIPPI", "TIPEHA", "TINNE", "TINAGMA", "TIMES", "TILDE", "TIKEUT", "THIEUTH", "TIKEUT", "KIYEOK", "TIKEUT", "TIKEUT", "RIEUL", "TIKEUT", "PIEUP", "TIKEUT", "MIEUM", "TIKEUT", "KIYEOK", "TIKEUT", "CIEUC", "TIKEUT", "CHIEUCH", "TIKEUT", "TIKEU", "TIGER", "TIFINAG", "TIARA", "THYOO", "THWOO", "THWII", "THWEE", "THWAA", "THURISA", "THUNG", "THUNDERSTORM", "THUNDER", "THUNDE", "THROUGH", "THROUG", "THREE", "THREE", "THREE", "THREAD", "THOUSAND", "THOUSAND", "THOUSAN", "THORN", "THONG", "THIUTH", "THITA", "THIRTY", "SECON", "THIRTY", "THIRTY", "THIRT", "THIRTEEN", "THIRTEE", "THIRDS", "THIRD", "THIRD", "THIGH", "THIEUT", "THETHE", "THETH", "THETA", "THESPIA", "THESEOS", "THESEO", "THERMODYNAMIC", "THEREFORE", "THEMATISMO", "THEMA", "THANTHAKHAT", "THANNA", "THAHAN", "THAAN", "THAALU", "TEVIR", "TETRASIMOU", "TETRASEME", "TETRAPLI", "TETRAFONIAS", "TETARTO", "TETARTIMORION", "TESSERA", "TESSER", "TESSARO", "TERMINATOR", "TENUTO", "TENTH", "TEMPU", "TELOU", "TELISH", "TELEPHONE", "TELEPHON", "TELEIA", "TEIWS", "TEGEH", "TEDUNG", "TEARDROP", "SPOKE", "TEARDROP", "SHANKE", "TEARDROP", "BARBE", "TCHEHEH", "TCHEHE", "TCHEH", "TAWELLEME", "TAVIYANI", "TAURUS", "TATWEEL", "TATWEE", "TATTOOE", "TARUNG", "TAPER", "TANNE", "TAMING", "TALING", "TALIN", "TALENTS", "TALEN", "TAKHALLUS", "TAISYOU", "TAILLES", "TAGBANW", "TAGALO", "TABULATION", "TABLE", "TAALUJ", "T033A", "T032A", "T016A", "T011A", "T009A", "T008A", "T007A", "T003A", "SYRMATIKI", "SYRMA", "SYOUWA", "SYNEVMA", "SYNDESMO", "SYNCHRONOU", "SYNAGM", "SYNAFI", "SYMMETRY", "SYMMETRI", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYMBOL", "SYLOT", "SWORDS", "SWORD", "SWEET", "SWAPPING", "SVAST", "SVARITA", "SVARIT", "SUSPENSIO", "SURROUND", "SURROUN", "SURFAC", "SURANG", "SUPRALINEA", "SUPERVISE", "SUPERSET", "SUPERSE", "SUPERSCRIP", "SUPERIMPOSE", "SUPERFIXE", "SUNDANES", "SUMMER", "SUMMATION", "SUMMATIO", "SUMASH", "SUKUN", "SUITABLE", "SUHUR", "SUCCEEDS", "SUCCEED", "SUCCEED", "SUCCEE", "SUBUNIT", "SUBSTITUTIO", "SUBSTITUTE", "SUBSTITUT", "SUBSET", "SUBSE", "SUBSCRIP", "SUBPUNCTIS", "SUBLINEA", "SUBJOINE", "SUBJECT", "SUBITO", "SUBGROUP", "SUBGROU", "STUDY", "STROKES", "STROKE", "STROKE", "STROKE", "STROKE", "STROKE", "STROKE", "STROKE", "STROKE", "STROKE", "STROKE", "STROKE", "STROKE", "STRIPE", "STRIKETHROUGH", "STRIDE", "STRICTL", "STRETCHE", "STRES", "STRENGTH", "STRATIA", "STRAINER", "STRAIGHTNESS", "STRAIGH", "STRAIF", "STRAGGISMATA", "STOVE", "STOPPING", "STOPPAGE", "STONE", "STOCK", "STIMME", "STIGMA", "STEAM", "STAVROU", "STAVROS", "STAVRO", "STAUROS", "STATERS", "STARK", "STANDSTILL", "STANDAR", "STAND", "STALLION", "STAFF", "STACCATO", "STACCATISSIMO", "SSYRX", "SSIEX", "SSIEP", "SSANGYEORINHIEUH", "SSANGTIKEUT", "PIEUP", "SSANGTIKEUT", "SSANGTHIEUTH", "SSANGSIOS", "TIKEUT", "SSANGSIOS", "PIEUP", "SSANGSIOS", "KIYEOK", "SSANGSIOS", "SSANGRIEUL", "KHIEUKH", "SSANGRIEUL", "SSANGPIEUP", "SSANGNIEUN", "SSANGMIEUM", "SSANGKIYEOK", "SSANGIEUNG", "SSANGHIEUH", "SSANGCIEUC", "HIEUH", "SSANGCIEUC", "SSANGARAEA", "SQUIS", "SQUIRRE", "SQUIGGL", "SQUARES", "SQUARED", "SQUARE", "SPUNG", "SPROUT", "SPRINGS", "SPRING", "SPRECHGESAN", "SPOON", "SPLITTIN", "SPIRITU", "SPIRIT", "SPIRI", "SPIRANT", "SPIRAL", "SPIDER", "SPICE", "SPHERICA", "SPESMIL", "SPEECH", "SPECIAL", "SPEAR", "SPATHI", "SPARKLE", "SPACIN", "SOWIL", "SOUTH", "SLAVE", "SOURCE", "SOUND", "SOUNAP", "SOLIDUS", "SOLIDU", "SOGDIA", "SOFTWARE", "FUNCTIO", "SOCIETY", "SOCCE", "SNOWMAN", "SNOWMA", "SNOWFLAKE", "SNOUT", "SNAKE", "SMILIN", "SMILE", "SMEAR", "SMALLE", "SMALL", "SLOWLY", "SLOVO", "SLOPIN", "SLOPE", "SLING", "SLIDING", "SLICE", "SLAVONI", "SLAVE", "SLASH", "SLANTE", "SKLIRO", "SKIER", "SKEWE", "SKATE", "SIXTY", "FOURT", "SIXTY", "SIXTHS", "SIXTH", "SIXTH", "SIXTEENTHS", "SIXTEENTH", "SIXTEENT", "SIXTEEN", "SIXTEE", "STRIN", "SIRINGU", "THIEUTH", "SSANGSIOS", "RIEUL", "PIEUP", "KIYEOK", "PHIEUPH", "PANSIOS", "NIEUN", "MIEUM", "KHIEUKH", "KAPYEOUNPIEUP", "IEUNG", "HIEUH", "CIEUC", "CHIEUCH", "SINKING", "SINGLE", "SINGLE", "SINGL", "SINGAAT", "SINDH", "SIMPLIFIE", "SIMILAR", "SIMILA", "SIMANSI", "SILIQU", "SILA3", "SIGNS", "SIGMA", "SIDEWAY", "SICKNESS", "SICKLE", "SHYRX", "SHWOY", "SHWOO", "SHWII", "SHWAA", "SHURX", "SHUOX", "SHUOP", "SHUFFL", "SHUBUR", "SHTAPIC", "SHRINE", "SHOULDERE", "SHORTS", "SHORT", "SHORTENER", "SHORT", "SHORT", "SHORT", "SHORT", "SHORT", "SHORT", "SHORT", "HAGAL", "SHORT", "BJARKA", "SHORT", "SHORT", "SHOOT", "SHIYYAALAA", "SHITA", "SHINT", "SHINIG", "SHIMA", "SHIIN", "SHIELD", "SHEVA", "SHEUX", "SHESHLAM", "SHESHIG", "SHESHI", "SHESH2", "SHESH", "SHEQE", "SHELL", "SHELF", "SHEG9", "SHEEP", "SHEENU", "SHEEN", "SHCHA", "SHAVIYANI", "SHAVIA", "SHARU", "SHARP", "SHARA", "SHAR2", "SHAPING", "SHAPES", "SHANG", "SHAMROCK", "SHALSHELET", "SHAKTI", "SHADOWE", "SHADE", "SHADDA", "SHADD", "SHAB6", "SEXTUL", "SEXTILE", "SEXTAN", "SEVERANCE", "SEVENTY", "SEVENT", "SEVENTH", "SEVENTEEN", "SEVENTEE", "SESTERTIU", "SESQUIQUADRATE", "SESAM", "SERVIC", "SERIFS", "SERIF", "SEPTEMBER", "SEPARATOR", "SEPARATO", "SENTO", "SENTI", "SEMUNCI", "SEMKATH", "SEMIVOWE", "SEMISOF", "SEMISEXTILE", "SEMIMINIM", "SEMIDIREC", "SEMICOLON", "SEMICOLO", "SEMICIRCULA", "SEMICIRCL", "SEMIBREVI", "VOICE", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTOR", "SELECTO", "SEISMA", "SEISM", "SEGOL", "SEGNO", "SEGMENT", "SEENU", "SECTOR", "SECTION", "SECTIO", "SECRET", "SECOND", "SEBATBEI", "SEAGUL", "SCRUPLE", "SCRIPT", "SCREEN", "SCREE", "SCORPIUS", "SCISSORS", "SCHWA", "SCHROEDER", "SCHOOL", "SCHOLAR", "SCHEM", "SCANDICUS", "SCANDICU", "SCALES", "SAYIS", "SAYANNA", "SAXIMATA", "SAWAN", "SAUIL", "SATURN", "SATKAANKUU", "SATKAAN", "SASAK", "SANYOOG", "SANYAK", "SANTIIMU", "SANNYA", "SANGA2", "SANAH", "SAMYO", "SAMPI", "SAMPHAO", "SAMKA", "SAMEKH", "SAMEK", "SAMBA", "SALTIRE", "SALTILLO", "SALLALLAHO", "SAKOT", "SAJDAH", "SAILBOAT", "SAIKURU", "SAGITTARIUS", "SAFHA", "SADHE", "SACRIFICIA", "SAADHU", "S035A", "S026B", "S026A", "S017A", "S014B", "S014A", "S006A", "S002A", "SHAPE", "RWAHA", "RUUBURU", "RUPII", "RUNOUT", "DELAYED", "RUKKAKHA", "RTHAN", "RTAGS", "RRYRX", "RRURX", "RRUOX", "ROUNDE", "ROUND", "TIPPE", "ROTUNDA", "ROTATE", "ROSETTE", "ROBAT", "RNYIN", "RNOON", "RIVER", "RITUAL", "RITTORU", "RITSI", "RISIN", "RINFORZANDO", "RIKRIK", "RIGVEDI", "RIGHTWARDS", "RIGHTHAN", "RIGHT", "RIGHT", "RIGHT", "SHADOWE", "RIGHT", "SHADE", "RIGHT", "POINTIN", "RIGHT", "RIGHT", "FACIN", "RIGHT", "RIEUL", "YESIEUNG", "RIEUL", "YEORINHIEUH", "HIEUH", "RIEUL", "YEORINHIEUH", "RIEUL", "TIKEUT", "HIEUH", "RIEUL", "TIKEUT", "RIEUL", "THIEUTH", "RIEUL", "SSANGTIKEUT", "RIEUL", "SSANGSIOS", "RIEUL", "SSANGPIEUP", "RIEUL", "SSANGKIYEOK", "RIEUL", "RIEUL", "PIEUP", "TIKEUT", "RIEUL", "PIEUP", "RIEUL", "PIEUP", "PHIEUPH", "RIEUL", "PIEUP", "HIEUH", "RIEUL", "PIEUP", "RIEUL", "PHIEUPH", "RIEUL", "PANSIOS", "RIEUL", "NIEUN", "RIEUL", "MIEUM", "RIEUL", "MIEUM", "KIYEOK", "RIEUL", "MIEUM", "HIEUH", "RIEUL", "MIEUM", "RIEUL", "KIYEOK", "RIEUL", "KIYEOK", "HIEUH", "RIEUL", "KIYEOK", "RIEUL", "KAPYEOUNPIEUP", "RIEUL", "HIEUH", "RIEUL", "CIEUC", "RICEM", "RHOTI", "RGYINGS", "RGYAN", "REVOLUTION", "REVMA", "REVIA", "REVERSED", "REVERS", "RETURN", "RETUR", "RETROFLE", "RETREAT", "RESUPINUS", "RESTRICTE", "RESPONSE", "RESOURCE", "RESOLUTION", "RESISTANCE", "RESIDENCE", "RERENGGAN", "REREKAN", "REPRESENT", "REPLACEMEN", "REPEATE", "REPEAT", "REPEA", "RENTOGEN", "RELIGION", "RELEASE", "RELATIONA", "RELATION", "RELAA", "REJAN", "REGISTERE", "REFERENC", "REDUPLICATION", "RECYCLIN", "RECYCLE", "RECTILINEA", "RECTANGULA", "RECTANGLE", "RECTANGL", "RECORDIN", "RECORDER", "RECOR", "RECEPTIV", "REAHMUK", "REACH", "RAYANNA", "RATIO", "RATHA", "RASWADI", "RASOU", "RASHA", "RAPISMA", "RAMBAT", "RAKHANG", "RAISE", "RAIDA", "RAHMATULLA", "RADIOACTIV", "R016A", "R010A", "R003B", "R003A", "R002A", "QUSHSHAYA", "QUOTATIO", "QUINDICESIM", "QUINCUNX", "QUINARIU", "QUILL", "QUESTIONE", "QUESTION", "QUESTIO", "QUEEN", "QUBUTS", "QUATERNIO", "QUARTERS", "QUARTER", "QUARTER", "QUARTE", "QUANTIT", "QUADRUPL", "QUADRANT", "QUADRAN", "QITSA", "QHWEE", "QHWAA", "QETANA", "QATAN", "QARNE", "QAMATS", "QAMAT", "QAIRTHRA", "QADMA", "QAAFU", "PUSHPIKA", "PUSHIN", "PURITY", "PUNCTUATION", "PUNCTUATIO", "PTHAH", "PSIFISTOSYNAGMA", "PSIFISTOPARAKALESMA", "PSIFISTO", "PSIFISTOLYGISMA", "PROVE", "PROTOVARY", "PROTO", "PROSGEGRAMMENI", "PROPORTIONA", "PROPORTION", "PROPERT", "PROPELLE", "PROOF", "PROLONGE", "PROLATION", "PROJECTIVE", "PROJECTION", "PROGRESS", "PROFOUND", "PRODUCT", "PRODUC", "PRIVATE", "PRISHTHAMATR", "PRINT", "PRIME", "PREVIOU", "PRESENTATIO", "PRESCRIPTIO", "PREPONDERANCE", "PRENKHA", "PREFAC", "PRECEDIN", "PRECEDES", "PRECEDE", "PRECEDE", "PRECEDE", "PRECED", "POWER", "POWER", "POSTPOSITIO", "POSTA", "POSSESSION", "PORRECTUS", "PORRECTU", "PONDO", "POKRYTIE", "POKOJI", "POINTO", "POINTER", "POINTE", "POINT", "POETR", "POETI", "PODATUS", "PNEUMATA", "PLUTO", "PLUME", "PLOPHU", "PLETHRON", "PLASTICS", "PLANE", "PLANC", "PLAGIO", "PLACEHOLDE", "PIZZICATO", "PITCHFORK", "PITCHFOR", "PISELEH", "PISCES", "PIRIG", "PIPING", "PINWHEE", "PILCRO", "PIKURU", "PIEUP", "THIEUTH", "PIEUP", "SSANGSIOS", "PIEUP", "TIKEUT", "PIEUP", "THIEUTH", "PIEUP", "PIEUP", "PIEUP", "KIYEOK", "PIEUP", "CIEUC", "PIEUP", "RIEUL", "PHIEUPH", "PIEUP", "RIEUL", "PIEUP", "NIEUN", "PIEUP", "MIEUM", "PIEUP", "KHIEUKH", "PIEUP", "CIEUC", "PIEUP", "CHIEUCH", "PIECE", "PIASUTORU", "PIASM", "PIANO", "PHUTHAO", "PHUNG", "PHRASE", "PHOENICIA", "PHNAE", "PHINTHU", "PHILIPPIN", "PHIEUPH", "THIEUTH", "PHIEUPH", "PHIEUPH", "PIEUP", "PHIEUPH", "HIEUH", "PHIEUP", "PHARYNGEA", "PHAISTO", "PHAGS", "PHAARKAA", "PETASTOKOUFISMA", "PETASTI", "PETASMA", "PETALLE", "PESH2", "PESET", "PERTH", "PERSPECTIVE", "PERSON", "PERSO", "PERSIA", "PERPENDICULAR", "PERPENDICULA", "PERMANEN", "PERISPOMENI", "PERISPOMEN", "PERFECTU", "PERFECTA", "PERFECT", "PERCUSSIVE", "PERCEN", "PEPET", "PEORT", "PENTASEME", "PENTAGON", "PENSU", "PENIHI", "PENGKAL", "PENETRATION", "PENCIL", "PELASTON", "PELASTO", "PEITH", "PEHEH", "PEEZI", "PEDESTRIAN", "PEDESTAL", "PEDESTA", "PEACE", "PAZER", "PAYEROK", "PAYANNA", "PAVIYANI", "PATTERN", "PATHAMASAT", "PATAK", "PATAH", "PASUQ", "PASSIVE", "OUTPU", "PASSIVE", "OUTPU", "PASHTA", "PASEQ", "PARTNERSHI", "PARTIALLY", "RECYCLE", "PARTIA", "PARTHIA", "PARICHON", "PARESTIGMENO", "PAREREN", "PARENTHESIS", "PARENTHESI", "PARAPHRAS", "PARALLELOGRAM", "PARALLEL", "PARALLE", "PARAKLITIKI", "PARAKLITIK", "PARAKALESM", "PARAGRAPHOS", "PARAGRAPH", "PARAGRAP", "PAPYRUS", "PANYUKU", "PANYIKU", "PANYECEK", "PANYANGGA", "PANYAKRA", "PANTI", "PANSIOS", "PIEUP", "PANSIOS", "KAPYEOUNPIEUP", "PANOLONG", "PANGWISAD", "PANGRANGKEP", "PANGLAYAR", "PANGKON", "PANGKAT", "PANGHULU", "PANEULEUNG", "PANAELAENG", "PAMUNGKAH", "PAMUDPOD", "PAMPHYLIA", "PAMINGKAL", "PAMEPET", "PAMENENG", "PAMADA", "PAMAAEH", "PALUTA", "PALOCHKA", "PALLAWA", "PALLAS", "PALAUN", "PALATALIZE", "PALATALIZATION", "PALATA", "PAIYANNOI", "PAIRTHRA", "PAIRE", "PAHLAV", "PACKING", "PAATU", "PAASENTO", "PILLA", "P003A", "P001A", "OYRANISM", "OYANNA", "OXEIA", "OVERRIDE", "OVERLON", "OVERLINE", "OVERLAY", "OVERLAPPIN", "OVERLAID", "OVERBAR", "OUTLINE", "OUTLINE", "OUNKI", "OTTAV", "OTHALA", "OTHAL", "OSMANY", "ORTHOGONA", "ORTHODO", "ORNAT", "ORNAMENT", "ORNAMEN", "ORKHO", "ORIGINA", "ORIGIN", "ORDINA", "ORCHID", "OPTIO", "OPPRESSION", "OPPOSITION", "OPPOSIN", "OPPOSE", "OPERATOR", "OPERATO", "OPENIN", "OUTLINE", "HEADE", "CIRCUIT", "OUTPU", "OOYANNA", "OOBOOFILI", "ONKAR", "ONESELF", "OMISSIO", "OMICRON", "OMICRO", "OMEGA", "OMALON", "OLIVE", "OLIGO", "OKARA", "OJIBWA", "OJEON", "OGONEK", "OGONE", "OCTOBER", "OCCLUSION", "OBSTRUCTION", "OBOFILI", "OBLIQU", "OBJEC", "OBELUS", "OBELOS", "OABOAFILI", "O050B", "O050A", "O036D", "O036C", "O036B", "O036A", "O033A", "O030A", "O029A", "O025A", "O024A", "O020A", "O019A", "O010C", "O010B", "O010A", "O006F", "O006E", "O006D", "O006C", "O006B", "O006A", "O005A", "O001A", "NZYRX", "NZURX", "NZUOX", "NZIEX", "NZIEP", "NYUOX", "NYUOP", "NYIEX", "NYIET", "NYIEP", "NUTILLU", "NUNUZ", "NUNAVU", "NUNAVI", "NUMER", "NUMERATO", "NUMERA", "NUMBER", "NUKTA", "NUENG", "NUBIA", "NU022A", "NU022", "NU021", "NU020", "NU019", "NU018A", "NU018", "NU017", "NU016", "NU015", "NU014", "NU013", "NU012", "NU011A", "NU011", "NU010A", "NU010", "NU009", "NU008", "NU007", "NU006", "NU005", "NU004", "NU003", "NU002", "NU001", "NRYRX", "NRURX", "NOVEMBER", "NOTTO", "NOTES", "NOTEHEAD", "NOTEHEA", "NOTCHE", "NOTCH", "NORTHWES", "NORMA", "NOONU", "NONFORKING", "JOINER", "BREAKIN", "NOMINA", "NOKHUK", "NNGOO", "NNGII", "NNGAA", "NL020", "NL019", "NL018", "NL017A", "NL017", "NL016", "NL015", "NL014", "NL013", "NL012", "NL011", "NL010", "NL009", "NL008", "NL007", "NL006", "NL005A", "NL005", "NL004", "NL003", "NL002", "NL001", "NJYRX", "NJURX", "NJUOX", "NJUAE", "NJIEX", "NJIET", "NJIEP", "NJAEMLI", "NJAEM", "NISAG", "NIRUGU", "NINTH", "NINETY", "NINET", "NINETEEN", "NINETEE", "NINDA2", "NINDA", "NIKHAHIT", "NIKAHIT", "NIHSHVASA", "NIGIDAMIN", "NIGIDAESH", "NIGHT", "NIGGAHITA", "NIEUN", "TIKEUT", "NIEUN", "THIEUTH", "NIEUN", "NIEUN", "RIEUL", "NIEUN", "PIEUP", "NIEUN", "PANSIOS", "NIEUN", "KIYEOK", "NIEUN", "HIEUH", "NIEUN", "CIEUC", "NIEUN", "CHIEUCH", "NGUOX", "NGUOT", "NGOEH", "NGKWAEN", "NGIEX", "NGIEP", "NGGOO", "NGGEN", "NGGEE", "NGEADAL", "NGAAI", "NEWLINE", "NEUTRA", "NEUTER", "NESTE", "NEQUDAA", "NEPTUNE", "NENANO", "NEITHE", "NEGATIV", "NEGATIO", "NEGATE", "NEBENSTIMME", "NDURX", "NDIEX", "NBYRX", "NBURX", "NBIEX", "NBIEP", "NAYANNA", "NAXIA", "NAUTHS", "NAUDI", "NATURA", "NATIONA", "NASKAP", "NASHI", "NASALIZATIO", "NARRO", "NANGMONTHO", "NAGAR", "NABLA", "NAASIKYAYA", "NAAKSIKYAYA", "N037A", "N035A", "N034A", "N033A", "N025A", "N018B", "N018A", "MYSLITE", "MUUSIKATOAN", "MUURDHAJ", "MUSIC", "MUSH3", "MURGU2", "MURDA", "MUQDAM", "MUNSUB", "MUNAH", "MULTISET", "MULTISE", "MULTIPLICATION", "MULTIPLICATIO", "MULTIPL", "MULTIOCULA", "MULTIMAP", "MUKPHRENG", "MUCAAD", "GAAHLA", "MOUTH", "MOUNTAIN", "MOUND", "MOTHER", "MORTAR", "MORPHOLOGICA", "MORNING", "MOOSE", "MONTH", "MONOSTABL", "MONOGRAP", "MONOGRAMMO", "MONOGRA", "MONOFONIAS", "MONOCULA", "MOHAMMA", "MODUL", "MODESTY", "MODELS", "MODEL", "MISRA", "MIRIBAARU", "MIRED", "MINUS", "MINUS", "MINISTER", "MINIMA", "MILLION", "MILLET", "MIKURON", "MIKRO", "MIKRI", "MIEUM", "TIKEUT", "MIEUM", "SSANGSIOS", "MIEUM", "SSANGNIEUN", "MIEUM", "RIEUL", "MIEUM", "PIEUP", "MIEUM", "PIEUP", "MIEUM", "PANSIOS", "MIEUM", "NIEUN", "MIEUM", "CIEUC", "MIEUM", "CHIEUCH", "MIDLIN", "MIDDLE", "MIDDL", "MGURX", "MGUOX", "MGUOP", "MGIEX", "MGBOO", "MGBEE", "MEZZO", "METRICA", "METRIA", "METRETE", "METOBELUS", "METEG", "METAL", "MESSENIA", "MERKHA", "MERKH", "MERGE", "MERCURY", "MENDUT", "MEMBERSHIP", "MEMBER", "MEMBE", "MELON", "MELODI", "MELIK", "MEIZI", "MEGATON", "MEGALI", "MEETORU", "MEETE", "MEEMU", "MEEEE", "MEDIUM", "MEDIU", "MEDICINE", "MEASURE", "MEASURE", "MEASUR", "MAYANNA", "MAXIMA", "MATTOCK", "MATRIX", "MATERIALS", "MASSING", "MASOR", "MASHFAAT", "MASH2", "MASCULIN", "MARUKU", "MARTYRI", "MARRYIN", "MARRIAG", "MARKER", "MARCH", "MARCATO", "STACCATO", "MARCATO", "MARBUTA", "MARBUT", "MAQAF", "MAPIQ", "MANSYON", "MANNA", "MANNA", "MANGALAM", "MANCH", "MANACLES", "MALTES", "MALAKO", "MAKSURA", "MAIYAMOK", "MAITAIKHU", "MAIRU", "MAIMUAN", "MAIMALAI", "MAIKURO", "MAIDEN", "MAHJON", "MAHHA", "MAHAPRANA", "MAHAPAKH", "MAHAAPRAAN", "MADYA", "MADDA", "MADDA", "MACRON", "GRAVE", "MACRON", "BREVE", "MACRON", "ACUTE", "MACRON", "MACRO", "M040A", "M033B", "M033A", "M031A", "M028A", "M024A", "M022A", "M017A", "M016A", "M015A", "M012H", "M012G", "M012F", "M012E", "M012D", "M012C", "M012B", "M012A", "M010A", "M003A", "M001B", "M001A", "LYDIA", "LYCIA", "LUNGSI", "LUNAT", "LUHUR", "LUGAL", "LOZENGE", "LOZENG", "LOURE", "LOTUS", "LORRAINE", "LONSUM", "LONGA", "BRANCH", "BRANCH", "BRANCH", "BRANCH", "BRANCH", "HAGAL", "BRANCH", "LOGOTYP", "LOGOGRA", "LOCATIVE", "LOCATIO", "LJUDIJE", "LITTL", "LIQUI", "LINKIN", "LINGSA", "LINES", "LIMMU4", "LIMMU2", "LIMMU", "LIMITE", "LIMITATION", "LIMIT", "LILITH", "LIGHTNING", "LIGHTHOUSE", "LIGHT", "LIBRA", "LIABILIT", "LHAVIYANI", "LETTER", "LESSE", "LENTICULA", "LENIS", "LENGTHENER", "LENGT", "LENGA", "LEMOI", "LELET", "LEIMMA", "LEIMM", "LEGION", "LEGETO", "LEFTWARDS", "SHADE", "POINTIN", "FACIN", "LEEEE", "LEATHER", "LEADER", "LAYANNA", "LAULA", "LAUKA", "LATINAT", "LATIK", "LATERA", "LARYNGEA", "LARGE", "LANGUAG", "LANES", "LAMEDH", "LAMED", "LAMDA", "LAMBD", "LAMADH", "LAKKHANGYAO", "LAJANYALAN", "LAHSHU", "LAGUS", "LAGAR", "LAGAB", "LABOURING", "LABOR", "LABIALIZATIO", "LABAT", "LAAMU", "L006A", "L002A", "SHAPE", "KYURII", "KYLISMA", "KYATHO", "KXWEE", "KXWAA", "KWU318", "KUSMA", "KUSHU2", "KURUZEIRO", "KUROONE", "KUNDDALIYA", "KREMASTI", "KRATIMOYPORROON", "KRATIMOKOUFISMA", "KRATIMATA", "KRATIM", "KOVUU", "KORUNA", "KORONIS", "KOREA", "KORANI", "KOQNDON", "KOPPA", "KOOPO", "KOOMUUT", "KONTEVMA", "KONTEVM", "KOMBUVA", "KOMBUV", "KOGHOM", "KNIGHT", "KNIFE", "KLITON", "KLASMA", "KLASM", "KIYEOK", "TIKEUT", "KIYEOK", "KIYEOK", "KIYEOK", "RIEUL", "KIYEOK", "PIEUP", "KIYEOK", "NIEUN", "KIYEOK", "KHIEUKH", "KIYEOK", "CHIEUCH", "KIYEO", "KISIM5", "KISIM", "KISAL", "KIROWATTO", "KIROMEETORU", "KIROGURAMU", "KIRGHI", "KINSHIP", "KINDERGARTEN", "KHWAI", "KHUEN", "KHUAT", "KHOMUT", "KHIEUK", "KHETH", "KHAPH", "KHAND", "KHAMT", "KHAKASSIA", "KEYCAP", "KEYBOARD", "KESH2", "KERET", "KENTIMATA", "KENTIMAT", "KENTIM", "KENAT", "KEMPUL", "KEMPU", "KEMPLI", "KEMPL", "KEMPHRENG", "KEMBANG", "KELVI", "KEHEH", "KEFULA", "KEESU", "KEEPIN", "KEENG", "KAZAK", "KAYANNA", "KAVYKA", "KAUNA", "KATHISTI", "KATHAK", "KATAVASMA", "KATAV", "KATAKANA", "HIRAGAN", "KASRATAN", "KASRATA", "KASRA", "KASKAL", "KASKA", "KASHMIR", "KARSHANA", "KARORII", "KARATTO", "KARAN", "KAPYEOUNSSANGPIEUP", "KAPYEOUNRIEUL", "KAPYEOUNPHIEUPH", "KAPYEOUNMIEUM", "KAPPA", "KAPAL", "KANTAJ", "KANAKO", "KAKABAT", "KAIRI", "KAAFU", "JUPITER", "JUEUI", "JUDGE", "JUDEO", "SPANIS", "JOYOU", "JOKER", "JOINED", "JJURX", "JJUOX", "JJUOP", "JJIEX", "JJIET", "JJIEP", "JIHVAMULIYA", "JERUSALEM", "JEGOGAN", "JAYANNA", "JAVIYANI", "JAPANES", "JANUARY", "JALLAJALALOUHOU", "SIMPLIFIE", "IZHITSA", "IZHITS", "IYANNA", "ITERATIO", "ISSHAR", "ISAKI", "PILLA", "IRUYANNA", "IRUUYANNA", "IOTIFIE", "IOTATE", "IODHADH", "INVISIBL", "INVERTED", "INVERTE", "INVERS", "INTERSYLLABI", "INTERSECTION", "INTERSECTIO", "INTERSECTIN", "INTERROBANG", "INTERPOLATIO", "INTERLOCKE", "INTERLINEA", "INTERIO", "INTERES", "INTERCALATE", "INTEGRATION", "INTEGRATIO", "INTEGRAL", "INTEGRA", "INSULA", "INSTRUMENTA", "INSIDE", "INSERTIO", "INSECT", "INSCRIPTIONA", "INNOCENCE", "INNER", "ININGU", "INHIBI", "INHEREN", "INGWAZ", "INFORMATIO", "INFLUENCE", "INFINITY", "INFINIT", "INDUSTRIA", "INDIREC", "INDICATOR", "INDEX", "INDEPENDEN", "INCREMENT", "INCREASE", "INCREASE", "INCOMPLET", "INCLUDIN", "IMPERIA", "IMPERFECTU", "IMPERFECTA", "IMPERFECT", "IMISEO", "IMIN3", "IMIFTHORON", "IMIFTHORA", "IMIFONON", "IMIDIARGON", "ILUYANNA", "ILUUYANNA", "ILIMMU4", "ILIMMU3", "ILIMMU", "ILIMM", "IKARA", "IIYANNA", "IGGWS", "IEUNG", "TIKEUT", "IEUNG", "THIEUTH", "IEUNG", "SSANGKIYEOK", "IEUNG", "RIEUL", "IEUNG", "PIEUP", "IEUNG", "PHIEUPH", "IEUNG", "KIYEOK", "IEUNG", "KHIEUKH", "IEUNG", "CIEUC", "IEUNG", "CHIEUCH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "IDEOGRAPH", "2FA1D", "IDEOGRAPH", "2FA1C", "IDEOGRAPH", "2FA1B", "IDEOGRAPH", "2FA1A", "IDEOGRAPH", "2FA19", "IDEOGRAPH", "2FA18", "IDEOGRAPH", "2FA17", "IDEOGRAPH", "2FA16", "IDEOGRAPH", "2FA15", "IDEOGRAPH", "2FA14", "IDEOGRAPH", "2FA13", "IDEOGRAPH", "2FA12", "IDEOGRAPH", "2FA11", "IDEOGRAPH", "2FA10", "IDEOGRAPH", "2FA0F", "IDEOGRAPH", "2FA0E", "IDEOGRAPH", "2FA0D", "IDEOGRAPH", "2FA0C", "IDEOGRAPH", "2FA0B", "IDEOGRAPH", "2FA0A", "IDEOGRAPH", "2FA09", "IDEOGRAPH", "2FA08", "IDEOGRAPH", "2FA07", "IDEOGRAPH", "2FA06", "IDEOGRAPH", "2FA05", "IDEOGRAPH", "2FA04", "IDEOGRAPH", "2FA03", "IDEOGRAPH", "2FA02", "IDEOGRAPH", "2FA01", "IDEOGRAPH", "2FA00", "IDEOGRAPH", "2F9FF", "IDEOGRAPH", "2F9FE", "IDEOGRAPH", "2F9FD", "IDEOGRAPH", "2F9FC", "IDEOGRAPH", "2F9FB", "IDEOGRAPH", "2F9FA", "IDEOGRAPH", "2F9F9", "IDEOGRAPH", "2F9F8", "IDEOGRAPH", "2F9F7", "IDEOGRAPH", "2F9F6", "IDEOGRAPH", "2F9F5", "IDEOGRAPH", "2F9F4", "IDEOGRAPH", "2F9F3", "IDEOGRAPH", "2F9F2", "IDEOGRAPH", "2F9F1", "IDEOGRAPH", "2F9F0", "IDEOGRAPH", "2F9EF", "IDEOGRAPH", "2F9EE", "IDEOGRAPH", "2F9ED", "IDEOGRAPH", "2F9EC", "IDEOGRAPH", "2F9EB", "IDEOGRAPH", "2F9EA", "IDEOGRAPH", "2F9E9", "IDEOGRAPH", "2F9E8", "IDEOGRAPH", "2F9E7", "IDEOGRAPH", "2F9E6", "IDEOGRAPH", "2F9E5", "IDEOGRAPH", "2F9E4", "IDEOGRAPH", "2F9E3", "IDEOGRAPH", "2F9E2", "IDEOGRAPH", "2F9E1", "IDEOGRAPH", "2F9E0", "IDEOGRAPH", "2F9DF", "IDEOGRAPH", "2F9DE", "IDEOGRAPH", "2F9DD", "IDEOGRAPH", "2F9DC", "IDEOGRAPH", "2F9DB", "IDEOGRAPH", "2F9DA", "IDEOGRAPH", "2F9D9", "IDEOGRAPH", "2F9D8", "IDEOGRAPH", "2F9D7", "IDEOGRAPH", "2F9D6", "IDEOGRAPH", "2F9D5", "IDEOGRAPH", "2F9D4", "IDEOGRAPH", "2F9D3", "IDEOGRAPH", "2F9D2", "IDEOGRAPH", "2F9D1", "IDEOGRAPH", "2F9D0", "IDEOGRAPH", "2F9CF", "IDEOGRAPH", "2F9CE", "IDEOGRAPH", "2F9CD", "IDEOGRAPH", "2F9CC", "IDEOGRAPH", "2F9CB", "IDEOGRAPH", "2F9CA", "IDEOGRAPH", "2F9C9", "IDEOGRAPH", "2F9C8", "IDEOGRAPH", "2F9C7", "IDEOGRAPH", "2F9C6", "IDEOGRAPH", "2F9C5", "IDEOGRAPH", "2F9C4", "IDEOGRAPH", "2F9C3", "IDEOGRAPH", "2F9C2", "IDEOGRAPH", "2F9C1", "IDEOGRAPH", "2F9C0", "IDEOGRAPH", "2F9BF", "IDEOGRAPH", "2F9BE", "IDEOGRAPH", "2F9BD", "IDEOGRAPH", "2F9BC", "IDEOGRAPH", "2F9BB", "IDEOGRAPH", "2F9BA", "IDEOGRAPH", "2F9B9", "IDEOGRAPH", "2F9B8", "IDEOGRAPH", "2F9B7", "IDEOGRAPH", "2F9B6", "IDEOGRAPH", "2F9B5", "IDEOGRAPH", "2F9B4", "IDEOGRAPH", "2F9B3", "IDEOGRAPH", "2F9B2", "IDEOGRAPH", "2F9B1", "IDEOGRAPH", "2F9B0", "IDEOGRAPH", "2F9AF", "IDEOGRAPH", "2F9AE", "IDEOGRAPH", "2F9AD", "IDEOGRAPH", "2F9AC", "IDEOGRAPH", "2F9AB", "IDEOGRAPH", "2F9AA", "IDEOGRAPH", "2F9A9", "IDEOGRAPH", "2F9A8", "IDEOGRAPH", "2F9A7", "IDEOGRAPH", "2F9A6", "IDEOGRAPH", "2F9A5", "IDEOGRAPH", "2F9A4", "IDEOGRAPH", "2F9A3", "IDEOGRAPH", "2F9A2", "IDEOGRAPH", "2F9A1", "IDEOGRAPH", "2F9A0", "IDEOGRAPH", "2F99F", "IDEOGRAPH", "2F99E", "IDEOGRAPH", "2F99D", "IDEOGRAPH", "2F99C", "IDEOGRAPH", "2F99B", "IDEOGRAPH", "2F99A", "IDEOGRAPH", "2F999", "IDEOGRAPH", "2F998", "IDEOGRAPH", "2F997", "IDEOGRAPH", "2F996", "IDEOGRAPH", "2F995", "IDEOGRAPH", "2F994", "IDEOGRAPH", "2F993", "IDEOGRAPH", "2F992", "IDEOGRAPH", "2F991", "IDEOGRAPH", "2F990", "IDEOGRAPH", "2F98F", "IDEOGRAPH", "2F98E", "IDEOGRAPH", "2F98D", "IDEOGRAPH", "2F98C", "IDEOGRAPH", "2F98B", "IDEOGRAPH", "2F98A", "IDEOGRAPH", "2F989", "IDEOGRAPH", "2F988", "IDEOGRAPH", "2F987", "IDEOGRAPH", "2F986", "IDEOGRAPH", "2F985", "IDEOGRAPH", "2F984", "IDEOGRAPH", "2F983", "IDEOGRAPH", "2F982", "IDEOGRAPH", "2F981", "IDEOGRAPH", "2F980", "IDEOGRAPH", "2F97F", "IDEOGRAPH", "2F97E", "IDEOGRAPH", "2F97D", "IDEOGRAPH", "2F97C", "IDEOGRAPH", "2F97B", "IDEOGRAPH", "2F97A", "IDEOGRAPH", "2F979", "IDEOGRAPH", "2F978", "IDEOGRAPH", "2F977", "IDEOGRAPH", "2F976", "IDEOGRAPH", "2F975", "IDEOGRAPH", "2F974", "IDEOGRAPH", "2F973", "IDEOGRAPH", "2F972", "IDEOGRAPH", "2F971", "IDEOGRAPH", "2F970", "IDEOGRAPH", "2F96F", "IDEOGRAPH", "2F96E", "IDEOGRAPH", "2F96D", "IDEOGRAPH", "2F96C", "IDEOGRAPH", "2F96B", "IDEOGRAPH", "2F96A", "IDEOGRAPH", "2F969", "IDEOGRAPH", "2F968", "IDEOGRAPH", "2F967", "IDEOGRAPH", "2F966", "IDEOGRAPH", "2F965", "IDEOGRAPH", "2F964", "IDEOGRAPH", "2F963", "IDEOGRAPH", "2F962", "IDEOGRAPH", "2F961", "IDEOGRAPH", "2F960", "IDEOGRAPH", "2F95F", "IDEOGRAPH", "2F95E", "IDEOGRAPH", "2F95D", "IDEOGRAPH", "2F95C", "IDEOGRAPH", "2F95B", "IDEOGRAPH", "2F95A", "IDEOGRAPH", "2F959", "IDEOGRAPH", "2F958", "IDEOGRAPH", "2F957", "IDEOGRAPH", "2F956", "IDEOGRAPH", "2F955", "IDEOGRAPH", "2F954", "IDEOGRAPH", "2F953", "IDEOGRAPH", "2F952", "IDEOGRAPH", "2F951", "IDEOGRAPH", "2F950", "IDEOGRAPH", "2F94F", "IDEOGRAPH", "2F94E", "IDEOGRAPH", "2F94D", "IDEOGRAPH", "2F94C", "IDEOGRAPH", "2F94B", "IDEOGRAPH", "2F94A", "IDEOGRAPH", "2F949", "IDEOGRAPH", "2F948", "IDEOGRAPH", "2F947", "IDEOGRAPH", "2F946", "IDEOGRAPH", "2F945", "IDEOGRAPH", "2F944", "IDEOGRAPH", "2F943", "IDEOGRAPH", "2F942", "IDEOGRAPH", "2F941", "IDEOGRAPH", "2F940", "IDEOGRAPH", "2F93F", "IDEOGRAPH", "2F93E", "IDEOGRAPH", "2F93D", "IDEOGRAPH", "2F93C", "IDEOGRAPH", "2F93B", "IDEOGRAPH", "2F93A", "IDEOGRAPH", "2F939", "IDEOGRAPH", "2F938", "IDEOGRAPH", "2F937", "IDEOGRAPH", "2F936", "IDEOGRAPH", "2F935", "IDEOGRAPH", "2F934", "IDEOGRAPH", "2F933", "IDEOGRAPH", "2F932", "IDEOGRAPH", "2F931", "IDEOGRAPH", "2F930", "IDEOGRAPH", "2F92F", "IDEOGRAPH", "2F92E", "IDEOGRAPH", "2F92D", "IDEOGRAPH", "2F92C", "IDEOGRAPH", "2F92B", "IDEOGRAPH", "2F92A", "IDEOGRAPH", "2F929", "IDEOGRAPH", "2F928", "IDEOGRAPH", "2F927", "IDEOGRAPH", "2F926", "IDEOGRAPH", "2F925", "IDEOGRAPH", "2F924", "IDEOGRAPH", "2F923", "IDEOGRAPH", "2F922", "IDEOGRAPH", "2F921", "IDEOGRAPH", "2F920", "IDEOGRAPH", "2F91F", "IDEOGRAPH", "2F91E", "IDEOGRAPH", "2F91D", "IDEOGRAPH", "2F91C", "IDEOGRAPH", "2F91B", "IDEOGRAPH", "2F91A", "IDEOGRAPH", "2F919", "IDEOGRAPH", "2F918", "IDEOGRAPH", "2F917", "IDEOGRAPH", "2F916", "IDEOGRAPH", "2F915", "IDEOGRAPH", "2F914", "IDEOGRAPH", "2F913", "IDEOGRAPH", "2F912", "IDEOGRAPH", "2F911", "IDEOGRAPH", "2F910", "IDEOGRAPH", "2F90F", "IDEOGRAPH", "2F90E", "IDEOGRAPH", "2F90D", "IDEOGRAPH", "2F90C", "IDEOGRAPH", "2F90B", "IDEOGRAPH", "2F90A", "IDEOGRAPH", "2F909", "IDEOGRAPH", "2F908", "IDEOGRAPH", "2F907", "IDEOGRAPH", "2F906", "IDEOGRAPH", "2F905", "IDEOGRAPH", "2F904", "IDEOGRAPH", "2F903", "IDEOGRAPH", "2F902", "IDEOGRAPH", "2F901", "IDEOGRAPH", "2F900", "IDEOGRAPH", "2F8FF", "IDEOGRAPH", "2F8FE", "IDEOGRAPH", "2F8FD", "IDEOGRAPH", "2F8FC", "IDEOGRAPH", "2F8FB", "IDEOGRAPH", "2F8FA", "IDEOGRAPH", "2F8F9", "IDEOGRAPH", "2F8F8", "IDEOGRAPH", "2F8F7", "IDEOGRAPH", "2F8F6", "IDEOGRAPH", "2F8F5", "IDEOGRAPH", "2F8F4", "IDEOGRAPH", "2F8F3", "IDEOGRAPH", "2F8F2", "IDEOGRAPH", "2F8F1", "IDEOGRAPH", "2F8F0", "IDEOGRAPH", "2F8EF", "IDEOGRAPH", "2F8EE", "IDEOGRAPH", "2F8ED", "IDEOGRAPH", "2F8EC", "IDEOGRAPH", "2F8EB", "IDEOGRAPH", "2F8EA", "IDEOGRAPH", "2F8E9", "IDEOGRAPH", "2F8E8", "IDEOGRAPH", "2F8E7", "IDEOGRAPH", "2F8E6", "IDEOGRAPH", "2F8E5", "IDEOGRAPH", "2F8E4", "IDEOGRAPH", "2F8E3", "IDEOGRAPH", "2F8E2", "IDEOGRAPH", "2F8E1", "IDEOGRAPH", "2F8E0", "IDEOGRAPH", "2F8DF", "IDEOGRAPH", "2F8DE", "IDEOGRAPH", "2F8DD", "IDEOGRAPH", "2F8DC", "IDEOGRAPH", "2F8DB", "IDEOGRAPH", "2F8DA", "IDEOGRAPH", "2F8D9", "IDEOGRAPH", "2F8D8", "IDEOGRAPH", "2F8D7", "IDEOGRAPH", "2F8D6", "IDEOGRAPH", "2F8D5", "IDEOGRAPH", "2F8D4", "IDEOGRAPH", "2F8D3", "IDEOGRAPH", "2F8D2", "IDEOGRAPH", "2F8D1", "IDEOGRAPH", "2F8D0", "IDEOGRAPH", "2F8CF", "IDEOGRAPH", "2F8CE", "IDEOGRAPH", "2F8CD", "IDEOGRAPH", "2F8CC", "IDEOGRAPH", "2F8CB", "IDEOGRAPH", "2F8CA", "IDEOGRAPH", "2F8C9", "IDEOGRAPH", "2F8C8", "IDEOGRAPH", "2F8C7", "IDEOGRAPH", "2F8C6", "IDEOGRAPH", "2F8C5", "IDEOGRAPH", "2F8C4", "IDEOGRAPH", "2F8C3", "IDEOGRAPH", "2F8C2", "IDEOGRAPH", "2F8C1", "IDEOGRAPH", "2F8C0", "IDEOGRAPH", "2F8BF", "IDEOGRAPH", "2F8BE", "IDEOGRAPH", "2F8BD", "IDEOGRAPH", "2F8BC", "IDEOGRAPH", "2F8BB", "IDEOGRAPH", "2F8BA", "IDEOGRAPH", "2F8B9", "IDEOGRAPH", "2F8B8", "IDEOGRAPH", "2F8B7", "IDEOGRAPH", "2F8B6", "IDEOGRAPH", "2F8B5", "IDEOGRAPH", "2F8B4", "IDEOGRAPH", "2F8B3", "IDEOGRAPH", "2F8B2", "IDEOGRAPH", "2F8B1", "IDEOGRAPH", "2F8B0", "IDEOGRAPH", "2F8AF", "IDEOGRAPH", "2F8AE", "IDEOGRAPH", "2F8AD", "IDEOGRAPH", "2F8AC", "IDEOGRAPH", "2F8AB", "IDEOGRAPH", "2F8AA", "IDEOGRAPH", "2F8A9", "IDEOGRAPH", "2F8A8", "IDEOGRAPH", "2F8A7", "IDEOGRAPH", "2F8A6", "IDEOGRAPH", "2F8A5", "IDEOGRAPH", "2F8A4", "IDEOGRAPH", "2F8A3", "IDEOGRAPH", "2F8A2", "IDEOGRAPH", "2F8A1", "IDEOGRAPH", "2F8A0", "IDEOGRAPH", "2F89F", "IDEOGRAPH", "2F89E", "IDEOGRAPH", "2F89D", "IDEOGRAPH", "2F89C", "IDEOGRAPH", "2F89B", "IDEOGRAPH", "2F89A", "IDEOGRAPH", "2F899", "IDEOGRAPH", "2F898", "IDEOGRAPH", "2F897", "IDEOGRAPH", "2F896", "IDEOGRAPH", "2F895", "IDEOGRAPH", "2F894", "IDEOGRAPH", "2F893", "IDEOGRAPH", "2F892", "IDEOGRAPH", "2F891", "IDEOGRAPH", "2F890", "IDEOGRAPH", "2F88F", "IDEOGRAPH", "2F88E", "IDEOGRAPH", "2F88D", "IDEOGRAPH", "2F88C", "IDEOGRAPH", "2F88B", "IDEOGRAPH", "2F88A", "IDEOGRAPH", "2F889", "IDEOGRAPH", "2F888", "IDEOGRAPH", "2F887", "IDEOGRAPH", "2F886", "IDEOGRAPH", "2F885", "IDEOGRAPH", "2F884", "IDEOGRAPH", "2F883", "IDEOGRAPH", "2F882", "IDEOGRAPH", "2F881", "IDEOGRAPH", "2F880", "IDEOGRAPH", "2F87F", "IDEOGRAPH", "2F87E", "IDEOGRAPH", "2F87D", "IDEOGRAPH", "2F87C", "IDEOGRAPH", "2F87B", "IDEOGRAPH", "2F87A", "IDEOGRAPH", "2F879", "IDEOGRAPH", "2F878", "IDEOGRAPH", "2F877", "IDEOGRAPH", "2F876", "IDEOGRAPH", "2F875", "IDEOGRAPH", "2F874", "IDEOGRAPH", "2F873", "IDEOGRAPH", "2F872", "IDEOGRAPH", "2F871", "IDEOGRAPH", "2F870", "IDEOGRAPH", "2F86F", "IDEOGRAPH", "2F86E", "IDEOGRAPH", "2F86D", "IDEOGRAPH", "2F86C", "IDEOGRAPH", "2F86B", "IDEOGRAPH", "2F86A", "IDEOGRAPH", "2F869", "IDEOGRAPH", "2F868", "IDEOGRAPH", "2F867", "IDEOGRAPH", "2F866", "IDEOGRAPH", "2F865", "IDEOGRAPH", "2F864", "IDEOGRAPH", "2F863", "IDEOGRAPH", "2F862", "IDEOGRAPH", "2F861", "IDEOGRAPH", "2F860", "IDEOGRAPH", "2F85F", "IDEOGRAPH", "2F85E", "IDEOGRAPH", "2F85D", "IDEOGRAPH", "2F85C", "IDEOGRAPH", "2F85B", "IDEOGRAPH", "2F85A", "IDEOGRAPH", "2F859", "IDEOGRAPH", "2F858", "IDEOGRAPH", "2F857", "IDEOGRAPH", "2F856", "IDEOGRAPH", "2F855", "IDEOGRAPH", "2F854", "IDEOGRAPH", "2F853", "IDEOGRAPH", "2F852", "IDEOGRAPH", "2F851", "IDEOGRAPH", "2F850", "IDEOGRAPH", "2F84F", "IDEOGRAPH", "2F84E", "IDEOGRAPH", "2F84D", "IDEOGRAPH", "2F84C", "IDEOGRAPH", "2F84B", "IDEOGRAPH", "2F84A", "IDEOGRAPH", "2F849", "IDEOGRAPH", "2F848", "IDEOGRAPH", "2F847", "IDEOGRAPH", "2F846", "IDEOGRAPH", "2F845", "IDEOGRAPH", "2F844", "IDEOGRAPH", "2F843", "IDEOGRAPH", "2F842", "IDEOGRAPH", "2F841", "IDEOGRAPH", "2F840", "IDEOGRAPH", "2F83F", "IDEOGRAPH", "2F83E", "IDEOGRAPH", "2F83D", "IDEOGRAPH", "2F83C", "IDEOGRAPH", "2F83B", "IDEOGRAPH", "2F83A", "IDEOGRAPH", "2F839", "IDEOGRAPH", "2F838", "IDEOGRAPH", "2F837", "IDEOGRAPH", "2F836", "IDEOGRAPH", "2F835", "IDEOGRAPH", "2F834", "IDEOGRAPH", "2F833", "IDEOGRAPH", "2F832", "IDEOGRAPH", "2F831", "IDEOGRAPH", "2F830", "IDEOGRAPH", "2F82F", "IDEOGRAPH", "2F82E", "IDEOGRAPH", "2F82D", "IDEOGRAPH", "2F82C", "IDEOGRAPH", "2F82B", "IDEOGRAPH", "2F82A", "IDEOGRAPH", "2F829", "IDEOGRAPH", "2F828", "IDEOGRAPH", "2F827", "IDEOGRAPH", "2F826", "IDEOGRAPH", "2F825", "IDEOGRAPH", "2F824", "IDEOGRAPH", "2F823", "IDEOGRAPH", "2F822", "IDEOGRAPH", "2F821", "IDEOGRAPH", "2F820", "IDEOGRAPH", "2F81F", "IDEOGRAPH", "2F81E", "IDEOGRAPH", "2F81D", "IDEOGRAPH", "2F81C", "IDEOGRAPH", "2F81B", "IDEOGRAPH", "2F81A", "IDEOGRAPH", "2F819", "IDEOGRAPH", "2F818", "IDEOGRAPH", "2F817", "IDEOGRAPH", "2F816", "IDEOGRAPH", "2F815", "IDEOGRAPH", "2F814", "IDEOGRAPH", "2F813", "IDEOGRAPH", "2F812", "IDEOGRAPH", "2F811", "IDEOGRAPH", "2F810", "IDEOGRAPH", "2F80F", "IDEOGRAPH", "2F80E", "IDEOGRAPH", "2F80D", "IDEOGRAPH", "2F80C", "IDEOGRAPH", "2F80B", "IDEOGRAPH", "2F80A", "IDEOGRAPH", "2F809", "IDEOGRAPH", "2F808", "IDEOGRAPH", "2F807", "IDEOGRAPH", "2F806", "IDEOGRAPH", "2F805", "IDEOGRAPH", "2F804", "IDEOGRAPH", "2F803", "IDEOGRAPH", "2F802", "IDEOGRAPH", "2F801", "IDEOGRAPH", "2F800", "IDENTIFICATION", "IDENTICA", "ICHOU", "ICHOS", "ICHIMATOS", "ICHADIN", "ICELANDIC", "IBIFILI", "IAUDA", "I011A", "I010A", "I009A", "I005A", "ARAEA", "HZZZG", "HYSTERESI", "HYPODIASTOLE", "HYPHENATIO", "HYPHEN", "MINUS", "HYPHEN", "HYPHE", "HXUOX", "HXUOT", "HXUOP", "HXIEX", "HXIET", "HXIEP", "HWAIR", "HURAN", "HUNDRED", "HUNDRE", "HUMAN", "HUIITO", "HUARADDO", "HRYVNI", "HOURGLASS", "HORSE", "HORIZONTALL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HORIZONTAL", "HOORU", "HOMOTHETIC", "HOMOTHETI", "HOLDIN", "HOLAM", "HNUOX", "HNIEX", "HNIET", "HNIEP", "HMYRX", "HMURX", "HMUOX", "HMUOP", "HMIEX", "HMIEP", "HLYRX", "HLURX", "HLUOX", "HLUOP", "HLIEX", "HLIEP", "HISTORI", "HIRIQ", "REVERSED", "HIEUH", "HIEUH", "RIEUL", "HIEUH", "PIEUP", "HIEUH", "NIEUN", "HIEUH", "MIEUM", "HIDIN", "HIDET", "HEXIFOR", "HEXAGON", "HERUTU", "HERMITIA", "HERMIONIA", "HERMES", "HERAEU", "HELMET", "HELME", "HEKUTAARU", "HEISEI", "HEAVY", "HEAVENL", "HEAVEN", "HEAVE", "HEART", "HEADSTROKE", "HEADSTON", "HEADING", "HBASA", "HAYANNA", "HAUPTSTIMME", "HATHI", "HASANTA", "HARPOON", "HARPOO", "HARMONIC", "HARKLEA", "HARDNESS", "HANUNO", "HANGZHO", "HANDS", "HANDLES", "HAMZA", "HAMME", "HALBERD", "HALANTA", "HAITU", "HAGLA", "HAFUKHA", "HAFUKH", "HAARU", "H006A", "GURUSH", "GURUN", "GURAMUTON", "GUARDEDNESS", "GUARAN", "GROUND", "GRONTHISMATA", "GREGORIA", "GREATNESS", "GREATER", "GREATER", "GREATE", "GRAVEYAR", "GRAVE", "MACRON", "GRAVE", "ACUTE", "GRAVE", "GRATER", "GRASS", "GRAPHEM", "GRAMM", "GRAIN", "GRACE", "GORTHMIKO", "GORGOTERI", "GORGOSYNTHETON", "GORGO", "GORGI", "GNYIS", "GNAVIYANI", "GLOTTA", "GLISSAND", "GLEIC", "GLAGOLI", "GISAL", "GIRUDAA", "GINII", "GIMEL", "GIDIM", "GHUNNA", "GHUNN", "GHOST", "GHAYN", "GHAMAL", "GHAINU", "GHAIN", "GGWEE", "GGWAA", "GGURX", "GGUOX", "GGUOT", "GGUOP", "GGIEX", "GGIEP", "GESHU", "GESHTIN", "GESHTI", "GESH2", "GERSHAYIM", "GERMA", "GERESH", "GERES", "GEOMETRICALL", "GEOMETRI", "GENTL", "GENITIVE", "GENIK", "GENERI", "GEMINI", "GEMINATIO", "GEDOLA", "GBAKURUNEN", "GAYANUKITTA", "GAYANNA", "GAUNTLET", "GATHERING", "GATHERIN", "GASHAN", "GARSHUNI", "GARON", "GARMENT", "GAPPE", "GANMA", "GANGIA", "GAMMA", "GAMLA", "GAMAN", "GAMAL", "GAETTA", "PILLA", "GADOL", "GAAFU", "G045A", "G043A", "G037A", "G036A", "G026A", "G020A", "G011A", "G007B", "G007A", "G006A", "FUNERA", "FUNCTION", "FULLNESS", "FTHOR", "FROWNIN", "FROWN", "FRONT", "TILTE", "FRITU", "FRICATIVE", "FRETBOARD", "FRENC", "FRAME", "FRAGRANT", "FRAGMENT", "FRACTIO", "FOURTEEN", "FOURTEE", "STRIN", "FOUNTAIN", "FOSTERING", "FORTY", "FORTE", "FORMATTING", "FORKE", "FORCES", "FORCE", "FOOTSTOOL", "FOOTNOT", "FONGMAN", "FOLLY", "FOLLOWING", "FLUTE", "FLOWER", "FLOWE", "FLOURISH", "FLORETTE", "FLORA", "FLOOR", "FLIGHT", "FLEXUS", "FLEUR", "FLATTENE", "FLATNESS", "FIXED", "FISHHOOK", "FISHHOO", "FISHEYE", "FINIT", "FINGERNAILS", "FINGERE", "FINANCIAL", "FILLER", "FILLE", "FIGURE", "FIGURE", "FIGURE", "FIGUR", "FIGHT", "FIFTY", "FIFTHS", "FIFTH", "FIFTEEN", "FIFTEE", "FIELD", "FHTOR", "FESTIVAL", "FERRY", "FERMATA", "FERMAT", "FENCE", "FEMININ", "FEMALE", "FEMAL", "FELLOWSHIP", "FEENG", "FEBRUARY", "FEATHER", "FEATHE", "FEARN", "FAYANNA", "FATHER", "FATHATAN", "FATHATA", "FATHA", "FANEROSI", "FAMILY", "FALLIN", "FAILURE", "FAIHU", "FAHRENHEIT", "FACTO", "FACSIMIL", "FAAMAE", "FAAFU", "F051C", "F051B", "F051A", "F047A", "F046A", "F045A", "F038A", "F037A", "F031A", "F021A", "F013A", "F001A", "EYBEYFILI", "EYANNA", "EXTRA", "EXTRA", "EXTENSION", "EXTENDE", "EXPONEN", "EXISTS", "EXIST", "EXHAUSTION", "EXCLAMATION", "EXCLAMATIO", "EXCESS", "EXCELLENT", "EVENING", "CURRENC", "ETNAHTA", "ETERO", "ETERNITY", "ESUKUUDO", "ESTIMATES", "ESTIMATE", "ESHE3", "ESH21", "ESH16", "ESCAPE", "ERROR", "BARRE", "ERIN2", "EQUIVALEN", "EQUID", "EQUIANGULA", "EQUALS", "EQUAL", "EQUAL", "EPSILON", "EPSILO", "EPIGRAPHI", "EPIDAUREA", "EPENTHETI", "EPEGERMA", "EOLHX", "ENVELOPE", "ENUMERATIO", "ENTRY", "ENTRY", "ENTRY", "ENTHUSIASM", "ENTERPRISE", "ENTERIN", "ENTER", "ENQUIRY", "ENLARGEMENT", "ENDOFONON", "ENDIN", "ENDEP", "ENDEAVOUR", "ENCOUNTERS", "ENCLOSURE", "ENCLOSIN", "ENARXI", "ENARMONIO", "EMPHATI", "EMPHASI", "EMBROIDERY", "EMBELLISHMENT", "EMBEDDING", "ELLIPSIS", "ELLIPSE", "ELIFI", "ELEVEN", "ELEVE", "ELEMEN", "ELECTRICA", "ELECTRI", "ELAFRON", "EKSTREPTON", "EKFONITIKON", "EKARA", "EIGHTY", "EIGHT", "EIGHTHS", "EIGHTH", "EIGHTH", "EIGHTEEN", "EIGHTEE", "EGYPTOLOGICA", "EEYANNA", "EEKAA", "EEBEEFILI", "EDITORIA", "EBEFILI", "EASTER", "EARTHL", "EARTH", "EAMHANCHOLL", "EAGLE", "EADHADH", "EABHADH", "E034A", "E028A", "E020A", "E017A", "E016A", "E009A", "E008A", "DZELO", "DVISVARA", "DUTIES", "DURATION", "DUPONDIU", "DUGUD", "DROPS", "SHADOWE", "DRIVE", "DRAUGHT", "DRAGON", "DRAFTIN", "DRACHMAS", "DRACHMA", "DRACHM", "DOWNWARDS", "DOWNWARD", "POINTIN", "DOUBT", "DOUBLE", "DOUBLE", "DOUBLE", "DOUBLE", "DOTTED", "DOTTED", "DOTTED", "DOTTED", "DOTTE", "45678", "35678", "34678", "34578", "34568", "345678", "34567", "25678", "24678", "24578", "24568", "245678", "24567", "23678", "23578", "23568", "235678", "23567", "23478", "23468", "234678", "23467", "23458", "234578", "23457", "234568", "2345678", "234567", "23456", "15678", "14678", "14578", "14568", "145678", "14567", "13678", "13578", "13568", "135678", "13567", "13478", "13468", "134678", "13467", "13458", "134578", "13457", "134568", "1345678", "134567", "13456", "12678", "12578", "12568", "125678", "12567", "12478", "12468", "124678", "12467", "12458", "124578", "12457", "124568", "1245678", "124567", "12456", "12378", "12368", "123678", "12367", "12358", "123578", "12357", "123568", "1235678", "123567", "12356", "12348", "123478", "12347", "123468", "1234678", "123467", "12346", "123458", "1234578", "123457", "1234568", "12345678", "1234567", "123456", "12345", "DOTLES", "DOONG", "DOMAI", "DOLLA", "DOLIUM", "DOKMAI", "DODEKATA", "DOBRO", "DOACHASHMEE", "DOACHASHME", "DJERVI", "DJERV", "DIVORC", "DIVISION", "DIVISIO", "DIVINATION", "DIVIDES", "DIVIDER", "DIVIDE", "DIVIDE", "DIVID", "DIVERGENCE", "DISTORTION", "DISTINGUISH", "DISPERSION", "DISIMOU", "DISCONTINUOU", "DISABLE", "DIRECTL", "DIRECTIONA", "DIPTE", "DIPPER", "DIPLOUN", "DIPLI", "DINGBA", "DIMMING", "DIMINUTION", "DIMINUTION", "DIMINUTION", "DIMINISHMENT", "DIMIDI", "DIMENSIONA", "DIMENSIO", "DIGRAPH", "DIGRAP", "DIGRAMMO", "DIGRAMM", "DIGRA", "DIGORGON", "DIGORGO", "DIGAMMA", "DIFTOGGO", "DIFONIAS", "DIFFICULT", "DIFFICULTIES", "DIFFERENTIAL", "DIFFERENC", "DIFAT", "DIESIS", "DIESI", "DIATONO", "DIATONIK", "DIASTOL", "DIAMOND", "DIAMON", "DIAMETE", "DIALYTIKA", "DIALYTIK", "DIALECT", "DIAGONAL", "DIAGONA", "DIAERESIZE", "DIAERESIS", "DIAERESI", "DHHOO", "DHHEE", "DHARMA", "DHALETH", "DHALATH", "DHADHE", "DHAALU", "DEYTERO", "DEYTERO", "DEXIA", "DEVIC", "DEVELOPMENT", "DEUNG", "DESCRIPTIO", "DESCENDIN", "DESCENDER", "DERET", "HIDET", "DERET", "DEPARTURE", "DEPARTIN", "DENTISTR", "DENTA", "DENOMINATOR", "DENOMINATO", "DENNEN", "DENARIU", "DELTA", "DELPHI", "DELIVERANCE", "DELIMITER", "DELIMITE", "DELETE", "DELET", "DEGRE", "DEFINITION", "DEFECTIVENES", "DECRESCENDO", "DECREASE", "DECISIVENESS", "DECIMA", "DECEMBER", "DECAYED", "DEATH", "DDURX", "DDUOX", "DDUOP", "DDIEX", "DDIEP", "DDDHA", "DDAYANNA", "DDAHAL", "DDAHA", "DAVIYANI", "DAVID", "DASIA", "DASHE", "DASEIA", "DARKENING", "DARKENIN", "DARGA", "DARA4", "DARA3", "DANTAJ", "DANDA", "DAMMATAN", "DAMMATA", "DAMMA", "DAMARU", "DALETH", "DALET", "DALDA", "DALATH", "DALAT", "DALAT", "DAING", "DAHYAAUSH", "DAHYAAUSH", "DAGGER", "DAGESH", "DAGES", "DAGBASINNA", "DAGALGA", "DAENG", "DAASU", "DAADHU", "D067H", "D067G", "D067F", "D067E", "D067D", "D067C", "D067B", "D067A", "D054A", "D052A", "D050I", "D050H", "D050G", "D050F", "D050E", "D050D", "D050C", "D050B", "D050A", "D048A", "D046A", "D034A", "D031A", "D027A", "D008A", "CYRENAI", "CYPRIO", "CYPERUS", "CYLINDRICITY", "CWEORTH", "CUSTOME", "CURVIN", "CURVE", "CURVE", "CURRENT", "CURREN", "CUBED", "CUATRILLO", "CUATRILL", "CRYPTOGRAMMI", "CRUZEIR", "CROSSIN", "CROSSHATC", "CROSSED", "CROSSE", "CROSSBONES", "CROSS", "CROIX", "CRESCENT", "CRESCEN", "CREDI", "CREATIV", "COVER", "COUNTIN", "COUNTERSINK", "COUNTERBORE", "COUNCI", "CORRESPOND", "CORRECT", "CORPSE", "CORPORATION", "CORONIS", "CORNERS", "CORNER", "CORNE", "COPYRIGHT", "COPYRIGH", "COPRODUCT", "CONVERGIN", "CONTRO", "CONTRARIETY", "CONTRACTION", "CONTOURE", "CONTOU", "CONTENTION", "CONTEMPLATION", "CONTAIN", "CONTAININ", "CONTAI", "CONTACT", "CONSTANT", "CONSTAN", "CONSTANCY", "CONSONAN", "CONSECUTIV", "CONJUNCTION", "CONJUGAT", "CONJOININ", "CONICA", "CONGRUEN", "CONGRATULATION", "CONFLICT", "CONCAVE", "CONCAVE", "POINTE", "COMPOSITION", "COMPOSITIO", "COMPLIANCE", "COMPLETION", "COMPLETED", "COMPLEMENT", "COMPARE", "COMMO", "COMMERCIA", "COMMA", "COMIN", "COMET", "COLUMN", "COLOR", "COFFIN", "COENG", "CLUSTE", "SPOKE", "CLOUD", "CLOTHES", "CLOTH", "CLOSENESS", "CLOSED", "CLOSE", "CLOCKWIS", "CLIVIS", "CLINGIN", "CLIMACUS", "CLIFF", "CLICK", "CIVILIAN", "CIRCUMFLEX", "CIRCUMFLE", "CIRCULATIO", "CIRCLES", "CIRCLE", "CIEUC", "SSANGPIEUP", "CIEUC", "PIEUP", "CIEUC", "IEUNG", "CHYRX", "CHURX", "CHURCH", "CHUOX", "CHUOT", "CHUOP", "CHULA", "CHRYSANTHEMUM", "CHRONOU", "CHRONON", "CHROM", "CHRIVI", "CHOREVM", "CHOKE", "CHITUEUMSSANGSIOS", "CHITUEUMSSANGCIEUC", "CHITUEUMSIOS", "CHITUEUMCIEUC", "CHITUEUMCHIEUCH", "CHIRON", "CHIRET", "CHING", "CHINES", "CHILL", "CHILD", "CHIEUCH", "KHIEUKH", "CHIEUCH", "HIEUH", "CHIEUC", "CHEVRO", "CHEINAP", "CHEIKHEI", "CHECK", "CHAVIYANI", "CHATTAWA", "CHARIOT", "CHARIO", "CHARACTERS", "CHARACTER", "CHANGE", "CHANG", "CHAMKO", "CHAMILON", "CHAMILI", "CHAIR", "CHAINS", "CHADA", "CERES", "CEREK", "CEONGCHIEUMSSANGSIOS", "CEONGCHIEUMSSANGCIEUC", "CEONGCHIEUMSIOS", "CEONGCHIEUMCIEUC", "CEONGCHIEUMCHIEUCH", "CENTURIA", "CENTRELIN", "CENTRE", "CENTRE", "CENTR", "CELSIUS", "CEIRT", "CEILING", "CEDILLA", "CEDILL", "CECEK", "CECAK", "CEALC", "CCHEE", "CCHAA", "CAYANNA", "CAUTIO", "CAULDRON", "CAUDA", "CATAWA", "CASTLE", "CARYSTIA", "CARRIAG", "CARPENTR", "CARON", "CARIA", "CARET", "CAPTIVE", "CAPRICORN", "CAPITAL", "CANTILLATIO", "CANDRABINDU", "CANDRABIND", "CANDRA", "CANDR", "CANCER", "CANCELLATIO", "CANCEL", "CANCE", "CAMNU", "CALYA", "CAKRA", "CAESURA", "CADUCEUS", "CAANG", "C010A", "C002C", "C002B", "C002A", "SIMPLIFIE", "BYELORUSSIAN", "UKRAINIA", "BUUMISH", "BUSSYERU", "BULUG", "BULLSEYE", "BULLET", "BULLE", "BUGINES", "BUCKLE", "BSTAR", "BRUSH", "BRONZE", "BROKE", "BRISTLE", "BRIDG", "BREVIS", "BREVE", "MACRON", "BREAT", "BREAKTHROUGH", "BRANCHIN", "BRANCH", "BRANC", "BRAKCET", "BRACKETE", "BRACKE", "BRACE", "BOWTIE", "BOWTI", "BOUNDAR", "BOTTOM", "LIGHTE", "BOTTOM", "BOTTO", "BORUTO", "BOOMERANG", "BLOOD", "BLOCK", "BLENDE", "BLANK", "BLACKFOO", "BLACK", "LETTE", "BLACK", "FEATHERE", "BLACK", "BITTER", "BITIN", "BISMILLA", "BISHOP", "BISECTIN", "BISAH", "BIRGA", "BIOHAZAR", "BINOCULA", "BINDIN", "BINDI", "BINAR", "BILABIA", "BIDENTA", "BIBLE", "BHETH", "BEYYAL", "BEVERAGE", "BETWEEN", "BETWEE", "BESID", "BERKANA", "BERBE", "BENZEN", "BENDE", "BELGTHO", "BEITH", "BEHIN", "BEHEH", "BEGINNING", "BEFOR", "BEETA", "BEEHIVE", "BECAUSE", "BEAVE", "BEAME", "BBURX", "BBUOX", "BBUOP", "BBIEX", "BBIET", "BBIEP", "BAYANNA", "BATHTUB", "BATHAMASAT", "BASSA", "BASHKI", "BASEBALL", "BARRIER", "BARREKH", "BARREE", "BARRE", "BARLINE", "BARLEY", "BARIYOOSAN", "BARA2", "BANTOC", "BAMBOOS", "BAMBOO", "BALUDA", "BALLO", "BALLOON", "SPOKE", "BALAG", "BAIRKAN", "BAIMAI", "BAHIRGOMUKHA", "BAHAR2", "BADGER", "BACKSPACE", "BACKSLASH", "BACKSLAS", "TILTE", "BAARERU", "B005A", "AVESTA", "AVERAG", "AVAKRAHASANYA", "AVAGRAHA", "AUYANNA", "AUTUMN", "AUSTRA", "AURAMAZDAAHA", "AURAMAZDAA", "AURAMAZDAA", "AUGUST", "AUGMENTATIO", "ATTHACAN", "ATTENTION", "ATMAAU", "ATIYA", "ATHARVAVEDI", "ATHAPASCA", "ASYUR", "ASYMPTOTICALL", "ASTROLOGICA", "ASTERISM", "ASTERISK", "ASTERISK", "ASTERIS", "ASTERISCUS", "ASSYRIA", "ASSERTION", "ASPIRATE", "ASPER", "ASHGAB", "ASCENT", "ASCENDIN", "ASAL2", "ARUHUA", "ARTAB", "ARSEOS", "ARSEO", "ARROWS", "ARROWHEAD", "ARROWHEA", "ARROW", "ARRIVE", "ARRAY", "ARPEGGIAT", "AROUSIN", "AROUR", "AROUND", "PROFILE", "AROUN", "ARMOUR", "ARLAU", "ARKTIK", "ARKAB", "ARKAANU", "ARISTERA", "ARISTER", "ARIES", "ARGOTERI", "ARGOSYNTHETON", "AREPA", "ARDHAVISARGA", "ARCHAION", "ARCHAIO", "ARCHAI", "ARAMAI", "ARAEAE", "ARAEA", "ARAEA", "ARAEA", "ARAEA", "ARAEA", "ARABIC", "ARABIA", "RAHMA", "RAHEEM", "AQUARIUS", "APRIL", "APPROXIMATEL", "APPROXIMATE", "APPROACHE", "APPROACH", "APPLICATION", "APOTHES", "APOTHEMA", "APOSTROPHE", "APOSTROFOS", "APOSTROFO", "APOSTROFO", "APODEXIA", "APODERM", "APLOUN", "APART", "APAATO", "ANUSVARAYA", "ANUSVARA", "ANUSVAR", "ANUDATTA", "ANUDATT", "ANTIRESTRICTION", "ANTIKENOMA", "ANTIKENOKYLISMA", "ANTIFONIA", "ANTICLOCKWISE", "ROTATE", "ANTICLOCKWIS", "ANTARGOMUKHA", "ANSHE", "ANPEA", "ANNUIT", "ANNOTATIO", "ANNAAU", "ANGULAR", "ANGSTRO", "ANGKHANKHU", "ANGED", "ANDAP", "ANCORA", "ANCHOR", "ANATRICHISMA", "AMPERSAND", "AMOUN", "AMALGAMATIO", "ALVEOLA", "ALTERNATIV", "ALTERNATIO", "ALTERNAT", "ALPHA", "ALPAPRANA", "ALPAPRAAN", "ALMOS", "ALLIANCE", "ALIGNE", "ALIFU", "ALEPH", "ALEMBIC", "ALAYHE", "ALAYH", "ALAPH", "LAKUNA", "AKTIESELSKAB", "AKHMIMI", "AKARA", "AIYANNA", "AIVILI", "AIRPLANE", "AIKARA", "AIHVUS", "AHSDA", "AHAGGA", "AGUNG", "AGGRAVATION", "AGGRAVATE", "AGAIN", "AFSAAQ", "AFRICA", "AFOREMENTIONED", "AFGHAN", "AEYANNA", "AESCULAPIUS", "PILLA", "AEGEA", "AEEYANNA", "PILLA", "ADVANCE", "ADDRESSE", "ADDAK", "ACUTE", "MACRON", "ACUTE", "GRAVE", "ACUTE", "ACTUALL", "ACTIVAT", "ACROPHONI", "ACKNOWLEDGE", "ACCUMULATION", "ACCOUN", "ACCENT", "STACCATO", "ACCENT", "ACCEN", "ACADEM", "ABYSMA", "ABUNDANCE", "ABKHASIA", "ABBREVIATIO", "ABAFILI", "AAYANNA", "AABAAFILI", "AA032", "AA031", "AA030", "AA029", "AA028", "AA027", "AA026", "AA025", "AA024", "AA023", "AA022", "AA021", "AA020", "AA019", "AA018", "AA017", "AA016", "AA015", "AA014", "AA013", "AA012", "AA011", "AA010", "AA009", "AA008", "AA007B", "AA007A", "AA007", "AA006", "AA005", "AA004", "AA003", "AA002", "AA001", "A045A", "A043A", "A042A", "A040A", "A032A", "A017A", "A014A", "A006B", "A006A", "A005A", "KHYIL", "$3ZL8$", "53AZ3A", "3Alq3A", "5CAZCA", "lVY3q", "lVY3q", "lVY3l", "lVY3l", "lVY3E", "lVY3E", "lVY3q", "lVY3l", "lVY3E", "mVYjl", "AjZAj", "YZATZA", "hCZAj", "TAlqTAZL", "qGZAZLG", "ENn67n", "iXiXD", "iXiXD", "iXiXD", "iXiXi", "ENv67v", "0123456789", "ABCDEFGHIJKLMNOPQRSTUV", "abcdef", "hijklmnopqrstuvwxyz", "unichr", "default", "Returns", "assigned", "Unicode", "character", "unichr", "string", "defined", "default", "returned", "given", "ValueError", "raised", "lookup", "character", "character", "given", "found", "return", "corresponding", "Unicode", "character", "found", "KeyError", "raised", "module", "provides", "access", "Unicode", "Character", "Database", "which", "defines", "character", "properties", "Unicode", "characters", "database", "based", "UnicodeData", "version", "which", "publically", "available", "unicode", "module", "names", "symbols", "defined", "UnicodeData", "Format", "unicode", "reports", "0Z1a1h1", "2H2Y2g2", "2F3O3g3n3u3", "4A4V4c4j4", "6A6V6c6j6", "7s7y7", "051I1P1e1", "5X5m5", "6U6Z6", "181A1F1L1V1_1j1v1", "2A2N2", "3P4V4", "4b4s4", "565C5O5W5_5k5", "2D2H2", "8084888", "8D8H8L8P8T8X8", "8d8h8l8p8t8x8", "3034383", "3D3H3L3P3T3X3", "3d3h3l3p3x3", "5D5L5P5T5", "5d5l5p5t5", "StringIO", "pycPK", "UserDict", "pycPK", "__future__", "pycPK", "_abcoll", "pycPK", "_strptime", "pycPK", "_threading_local", "pycPK", "_weakrefset", "pycPK", "pycPK", "atexit", "pycPK", "base64", "pycPK", "pycPK", "calendar", "pycPK", "lkk35", "pycPK", "codecs", "pycPK", "collections", "pycPK", "pycPK", "copy_reg", "pycPK", "difflib", "pycPK", "pycPK", "doctest", "pycPK", "dummy_thread", "pycPK", "encodings", "__init__", "pycPK", "encodings", "aliases", "pycPK", "encodings", "ascii", "pycPK", "encodings", "base64_codec", "pycPK", "encodings", "pycPK", "encodings", "big5hkscs", "pycPK", "encodings", "bz2_codec", "pycPK", "encodings", "charmap", "pycPK", "encodings", "cp037", "pycPK", "encodings", "cp1006", "pycPK", "encodings", "cp1026", "pycPK", "encodings", "cp1140", "pycPK", "encodings", "cp1250", "pycPK", "encodings", "cp1251", "pycPK", "encodings", "cp1252", "pycPK", "encodings", "cp1253", "pycPK", "encodings", "cp1254", "pycPK", "encodings", "cp1255", "pycPK", "encodings", "cp1256", "pycPK", "encodings", "cp1257", "pycPK", "encodings", "cp1258", "pycPK", "encodings", "cp424", "pycPK", "encodings", "cp437", "pycPK", "encodings", "cp500", "pycPK", "encodings", "cp720", "pycPK", "encodings", "cp737", "pycPK", "encodings", "cp775", "pycPK", "encodings", "cp850", "pycPK", "encodings", "cp852", "pycPK", "encodings", "cp855", "pycPK", "encodings", "cp856", "pycPK", "encodings", "cp857", "pycPK", "encodings", "cp858", "pycPK", "encodings", "cp860", "pycPK", "encodings", "cp861", "pycPK", "encodings", "cp862", "pycPK", "encodings", "cp863", "pycPK", "encodings", "cp864", "pycPK", "encodings", "cp865", "pycPK", "encodings", "cp866", "pycPK", "encodings", "cp869", "pycPK", "encodings", "cp874", "pycPK", "encodings", "cp875", "pycPK", "encodings", "cp932", "pycPK", "encodings", "cp949", "pycPK", "encodings", "cp950", "pycPK", "encodings", "euc_jis_2004", "pycPK", "encodings", "euc_jisx0213", "pycPK", "encodings", "euc_jp", "pycPK", "encodings", "euc_kr", "pycPK", "encodings", "gb18030", "pycPK", "encodings", "gb2312", "pycPK", "encodings", "pycPK", "encodings", "hex_codec", "pycPK", "encodings", "hp_roman8", "pycPK", "encodings", "pycPK", "encodings", "pycPK", "encodings", "iso2022_jp", "pycPK", "encodings", "iso2022_jp_1", "pycPK", "encodings", "iso2022_jp_2", "pycPK", "encodings", "iso2022_jp_2004", "pycPK", "encodings", "iso2022_jp_3", "pycPK", "encodings", "iso2022_jp_ext", "pycPK", "encodings", "iso2022_kr", "pycPK", "encodings", "iso8859_1", "pycPK", "encodings", "iso8859_10", "pycPK", "encodings", "iso8859_11", "pycPK", "encodings", "iso8859_13", "pycPK", "encodings", "iso8859_14", "pycPK", "encodings", "iso8859_15", "pycPK", "encodings", "iso8859_16", "pycPK", "encodings", "iso8859_2", "pycPK", "encodings", "iso8859_3", "pycPK", "encodings", "iso8859_4", "pycPK", "encodings", "iso8859_5", "pycPK", "encodings", "iso8859_6", "pycPK", "encodings", "iso8859_7", "pycPK", "encodings", "iso8859_8", "pycPK", "encodings", "iso8859_9", "pycPK", "encodings", "johab", "pycPK", "encodings", "koi8_r", "pycPK", "encodings", "koi8_u", "pycPK", "encodings", "latin_1", "pycPK", "encodings", "mac_arabic", "pycPK", "encodings", "mac_centeuro", "pycPK", "encodings", "mac_croatian", "pycPK", "encodings", "mac_cyrillic", "pycPK", "encodings", "mac_farsi", "pycPK", "encodings", "mac_greek", "pycPK", "encodings", "mac_iceland", "pycPK", "encodings", "mac_latin2", "pycPK", "encodings", "mac_roman", "pycPK", "encodings", "mac_romanian", "pycPK", "encodings", "mac_turkish", "pycPK", "encodings", "pycPK", "encodings", "palmos", "pycPK", "encodings", "ptcp154", "pycPK", "encodings", "punycode", "pycPK", "encodings", "quopri_codec", "pycPK", "encodings", "raw_unicode_escape", "pycPK", "encodings", "rot_13", "pycPK", "encodings", "shift_jis", "pycPK", "encodings", "shift_jis_2004", "pycPK", "encodings", "shift_jisx0213", "pycPK", "encodings", "string_escape", "pycPK", "encodings", "tis_620", "pycPK", "encodings", "undefined", "pycPK", "encodings", "unicode_escape", "pycPK", "encodings", "unicode_internal", "pycPK", "encodings", "utf_16", "pycPK", "encodings", "utf_16_be", "pycPK", "encodings", "utf_16_le", "pycPK", "encodings", "utf_32", "pycPK", "encodings", "utf_32_be", "pycPK", "encodings", "utf_32_le", "pycPK", "encodings", "utf_7", "pycPK", "encodings", "utf_8", "pycPK", "encodings", "utf_8_sig", "pycPK", "encodings", "uu_codec", "pycPK", "encodings", "zlib_codec", "pycPK", "fnmatch", "pycPK", "functools", "pycPK", "genericpath", "pycPK", "getopt", "pycPK", "gettext", "pycPK", "hashlib", "pycPK", "heapq", "pycPK", "inspect", "pycPK", "pycPK", "keyword", "pycPK", "linecache", "pycPK", "locale", "pycPK", "logging", "__init__", "pycPK", "ntpath", "pycPK", "opcode", "pycPK", "optparse", "pycPK", "pycPK", "os2emxpath", "pycPK", "pycPK", "pickle", "pycPK", "posixpath", "pycPK", "pprint", "pycPK", "quopri", "pycPK", "random", "pycPK", "pycPK", "pycPK", "shlex", "pycPK", "zipextimporter", "pycPK", "pycPK", "sre_compile", "pycPK", "sre_constants", "pycPK", "sre_parse", "pycPK", "pycPK", "string", "pycPK", "stringprep", "pycPK", "struct", "pycPK", "subprocess", "pycPK", "tempfile", "pycPK", "textwrap", "pycPK", "threading", "pycPK", "token", "pycPK", "tokenize", "pycPK", "traceback", "pycPK", "types", "pycPK", "unittest", "__init__", "pycPK", "unittest", "pycPK", "unittest", "loader", "pycPK", "unittest", "pycPK", "unittest", "result", "pycPK", "unittest", "runner", "pycPK", "unittest", "signals", "pycPK", "unittest", "suite", "pycPK", "unittest", "pycPK", "warnings", "pycPK", "weakref", "pycPK", "_hashlib", "pydPK", "pydPK", "select", "pydPK", "unicodedata", "pydPK"], "avg_length": 8.15935917268855, "paths_count": 276, "paths": ["R:\\", "R:\\Sg", "O:\\d", "I:\\6\\S", "Z:\\", "C:\\build27\\cpython\\PCBuild\\python27.pdb", "W:\\", "W:\\", "X:\\", "V:\\", "X:\\", "D:\\", "D:\\", "D:\\", "X:\\", "X:\\", "H:\\", "T:\\", "X:\\", "T:\\", "T:\\", "X:\\", "X:\\", "L:\\", "T:\\", "X:\\", "C:\\Python27\\lib\\site", "C:\\Python27\\lib\\site", "C:\\Python27\\lib\\site", "C:\\Python27\\lib\\site", "C:\\Python27\\lib\\site", "C:\\Python27\\lib\\site", "C:\\Python27\\lib\\site", "C:\\Python27\\lib\\site", "C:\\bint", "C:\\bint", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\externals\\openssl", "C:\\build27\\cpython\\PCBuild\\_hashlib.pdb", "X:\\", "E:\\", "H:\\", "L:\\", "P:\\", "H:\\", "X:\\", "X:\\", "X:\\", "X:\\", "T:\\", "T:\\", "T:\\", "T:\\", "C:\\build27\\cpython\\PCBuild\\bz2.pdb", "C:\\build27\\cpython\\PCBuild\\select.pdb", "C:\\build27\\cpython\\PCBuild\\unicodedata.pdb"], "registry_count": 0, "MZ": 1}